//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_a "bufio";_c "bytes";_bg "crypto/md5";_gf "crypto/rand";_de "crypto/sha1";_bf "crypto/x509";_ed "encoding/binary";_eee "encoding/hex";_fa "errors";_e "fmt";_faf "github.com/gabriel-vasile/mimetype";_bb "github.com/unidoc/freetype";
_bd "github.com/unidoc/freetype/truetype";_da "github.com/unidoc/pkcs7";_dda "github.com/unidoc/unipdf/v3/common";_df "github.com/unidoc/unipdf/v3/core";_gfa "github.com/unidoc/unipdf/v3/core/security";_gbg "github.com/unidoc/unipdf/v3/core/security/crypt";
_ce "github.com/unidoc/unipdf/v3/internal/cmap";_ae "github.com/unidoc/unipdf/v3/internal/imageutil";_ede "github.com/unidoc/unipdf/v3/internal/license";_bgb "github.com/unidoc/unipdf/v3/internal/sampling";_aff "github.com/unidoc/unipdf/v3/internal/textencoding";
_fb "github.com/unidoc/unipdf/v3/internal/timeutils";_ff "github.com/unidoc/unipdf/v3/internal/transform";_aab "github.com/unidoc/unipdf/v3/internal/uuid";_af "github.com/unidoc/unipdf/v3/model/internal/docutil";_fc "github.com/unidoc/unipdf/v3/model/internal/fonts";
_aae "github.com/unidoc/unipdf/v3/model/mdp";_edf "github.com/unidoc/unipdf/v3/model/sigutil";_be "github.com/unidoc/unipdf/v3/ps";_ge "github.com/unidoc/unitype";_ag "golang.org/x/image/font";_abb "golang.org/x/xerrors";_ee "hash";_ab "image";_d "image/color";
_ga "image/draw";_ "image/gif";_f "image/png";_bc "io";_fe "math";_ec "math/rand";_bgd "os";_gcb "path/filepath";_ba "regexp";_dc "sort";_dg "strconv";_eb "strings";_gc "sync";_dd "time";_b "unicode";_aa "unicode/utf8";);func (_eebe *PdfReader )newPdfAnnotationMovieFromDict (_acgd *_df .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_geef :=PdfAnnotationMovie {};
_geef .T =_acgd .Get ("\u0054");_geef .Movie =_acgd .Get ("\u004d\u006f\u0076i\u0065");_geef .A =_acgd .Get ("\u0041");return &_geef ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_ccde *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_ddfb :=func (_gcfdf float64 )float64 {if _gcfdf >=6.0/29{return _gcfdf *_gcfdf *_gcfdf ;};return 108.0/841*(_gcfdf -4.0/29.0);};_becb :=img ._gdfe ;if len (_becb )!=6{_dda .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_becb =_ccde .DecodeArray ();};_affg :=_bgb .NewReader (img .getBase ());_egfc :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._bggcb ,img ._gdfe );_caca :=_bgb .NewWriter (_egfc );_eebf :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;
_adfgf :=make ([]uint32 ,3);var (_bbcfd error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_decf ,_agef ,_fegca float64 ;);for {_bbcfd =_affg .ReadSamples (_adfgf );if _bbcfd ==_bc .EOF {break ;}else if _bbcfd !=nil {return img ,_bbcfd ;};Ls =float64 (_adfgf [0])/_eebf ;
As =float64 (_adfgf [1])/_eebf ;Bs =float64 (_adfgf [2])/_eebf ;Ls =_ae .LinearInterpolate (Ls ,0.0,1.0,_becb [0],_becb [1]);As =_ae .LinearInterpolate (As ,0.0,1.0,_becb [2],_becb [3]);Bs =_ae .LinearInterpolate (Bs ,0.0,1.0,_becb [4],_becb [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_ccde .WhitePoint [0]*_ddfb (L );Y =_ccde .WhitePoint [1]*_ddfb (M );Z =_ccde .WhitePoint [2]*_ddfb (N );_decf =3.240479*X +-1.537150*Y +-0.498535*Z ;_agef =-0.969256*X +1.875992*Y +0.041556*Z ;_fegca =0.055648*X +-0.204043*Y +1.057311*Z ;
_decf =_fe .Min (_fe .Max (_decf ,0),1.0);_agef =_fe .Min (_fe .Max (_agef ,0),1.0);_fegca =_fe .Min (_fe .Max (_fegca ,0),1.0);_adfgf [0]=uint32 (_decf *_eebf );_adfgf [1]=uint32 (_agef *_eebf );_adfgf [2]=uint32 (_fegca *_eebf );if _bbcfd =_caca .WriteSamples (_adfgf );
_bbcfd !=nil {return img ,_bbcfd ;};};return _fdaa (&_egfc ),nil ;};

// GetNumComponents returns the number of color components.
func (_bbbga *PdfColorspaceICCBased )GetNumComponents ()int {return _bbbga .N };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_edb *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agge :=vals [0];if _agge < 0.0||_agge > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_agge );
return nil ,ErrColorOutOfRange ;};_cafaa :=NewPdfColorCalGray (_agge );return _cafaa ,nil ;};

// Encoder returns the font's text encoder.
func (_abdfg pdfFontType3 )Encoder ()_aff .TextEncoder {return _abdfg ._dddf };

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_bbagc *_df .PdfIndirectObject ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dffgeb *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_degd :=_bgb .NewReader (img .getBase ());_ebff :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dffgeb .AlternateSpace .GetNumComponents (),nil ,img ._bggcb ,nil );
_ccbc :=_bgb .NewWriter (_ebff );_ededc :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;_dda .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_dda .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dffgeb .TintTransform );_bcgf :=_dffgeb .AlternateSpace .DecodeArray ();var (_dccce uint32 ;_ecafe error ;);for {_dccce ,_ecafe =_degd .ReadSample ();
if _ecafe ==_bc .EOF {break ;};if _ecafe !=nil {return img ,_ecafe ;};_gdab :=float64 (_dccce )/_ededc ;_cabgd ,_cebg :=_dffgeb .TintTransform .Evaluate ([]float64 {_gdab });if _cebg !=nil {return img ,_cebg ;};for _dcdb ,_cfge :=range _cabgd {_ebdfa :=_ae .LinearInterpolate (_cfge ,_bcgf [_dcdb *2],_bcgf [_dcdb *2+1],0,1);
if _cebg =_ccbc .WriteSample (uint32 (_ebdfa *_ededc ));_cebg !=nil {return img ,_cebg ;};};};return _dffgeb .AlternateSpace .ImageToRGB (_fdaa (&_ebff ));};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_eaeaf *DSS )GetContainingPdfObject ()_df .PdfObject {return _eaeaf ._cfae };func (_agcfg *LTV )getCRLs (_edgbd []*_bf .Certificate )([][]byte ,error ){_aceea :=make ([][]byte ,0,len (_edgbd ));for _ ,_gade :=range _edgbd {for _ ,_ggddb :=range _gade .CRLDistributionPoints {if _agcfg .CertClient .IsCA (_gade ){continue ;
};_efcfb ,_deege :=_agcfg .CRLClient .MakeRequest (_ggddb ,_gade );if _deege !=nil {_dda .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_deege );continue ;
};_aceea =append (_aceea ,_efcfb );};};return _aceea ,nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_bcefd []_df .PdfObject )([]_df .PdfObject ,error );};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_beb :=NewPdfAnnotation ();_agc :=&PdfAnnotationRichMedia {};_agc .PdfAnnotation =_beb ;_beb .SetContext (_agc );return _agc ;};

// SetDecode sets the decode image float slice.
func (_fegce *Image )SetDecode (decode []float64 ){_fegce ._gdfe =decode };func _bafbd (_feegf *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_feegf }};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_bcbb ,_gcgbe :=_edagd (basefont );if _gcgbe !=nil {return nil ,_gcgbe ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_bcbb ._babff =_aff .NewWinAnsiEncoder ();};return &PdfFont {_bbeb :&_bcbb },nil ;
};

// B returns the value of the blue component of the color.
func (_ddcbd *PdfColorDeviceRGB )B ()float64 {return _ddcbd [2]};func (_agcd *PdfAppender )addNewObject (_badd _df .PdfObject ){if _ ,_dbf :=_agcd ._cfdd [_badd ];!_dbf {_agcd ._efgc =append (_agcd ._efgc ,_badd );_agcd ._cfdd [_badd ]=struct{}{};};};func (_ccefa *PdfReader )lookupPageByObject (_ceeg _df .PdfObject )(*PdfPage ,error ){return nil ,_fa .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func (_afbb *PdfAppender )replaceObject (_bac ,_bedc _df .PdfObject ){switch _fgba :=_bac .(type ){case *_df .PdfIndirectObject :_afbb ._dcea [_bedc ]=_fgba .ObjectNumber ;case *_df .PdfObjectStream :_afbb ._dcea [_bedc ]=_fgba .ObjectNumber ;};};

// ToPdfObject converts the font to a PDF representation.
func (_abag *pdfFontType3 )ToPdfObject ()_df .PdfObject {if _abag ._dgcdd ==nil {_abag ._dgcdd =&_df .PdfIndirectObject {};};_gdgba :=_abag .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_abag ._dgcdd .PdfObject =_gdgba ;if _abag .FirstChar !=nil {_gdgba .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_abag .FirstChar );
};if _abag .LastChar !=nil {_gdgba .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_abag .LastChar );};if _abag .Widths !=nil {_gdgba .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_abag .Widths );};if _abag .Encoding !=nil {_gdgba .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_abag .Encoding );
}else if _abag ._dddf !=nil {_fbea :=_abag ._dddf .ToPdfObject ();if _fbea !=nil {_gdgba .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fbea );};};if _abag .FontBBox !=nil {_gdgba .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_abag .FontBBox );
};if _abag .FontMatrix !=nil {_gdgba .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_abag .FontMatrix );};if _abag .CharProcs !=nil {_gdgba .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_abag .CharProcs );};if _abag .Resources !=nil {_gdgba .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_abag .Resources );
};return _abag ._dgcdd ;};var (TabOrderRow TabOrderType ="\u0052";TabOrderColumn TabOrderType ="\u0043";TabOrderStructure TabOrderType ="\u0053";);

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_df .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_df .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_df .PdfObjectBool ;_adfab PdfModel ;_gfded _df .PdfObject ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_bcaf PdfModel ;Rect _df .PdfObject ;Contents _df .PdfObject ;P _df .PdfObject ;NM _df .PdfObject ;M _df .PdfObject ;F _df .PdfObject ;AP _df .PdfObject ;AS _df .PdfObject ;Border _df .PdfObject ;C _df .PdfObject ;StructParent _df .PdfObject ;
OC _df .PdfObject ;_cdd *_df .PdfIndirectObject ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_df .PdfObjectArray ;ExtGState _df .PdfObject ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func _cbge (_fbecf _df .PdfObject )(*_df .PdfObjectDictionary ,*fontCommon ,error ){_dfff :=&fontCommon {};if _cgdfa ,_cffcc :=_fbecf .(*_df .PdfIndirectObject );_cffcc {_dfff ._ccdga =_cgdfa .ObjectNumber ;
};_eacd ,_baaa :=_df .GetDict (_fbecf );if !_baaa {_dda .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fbecf );
return nil ,nil ,ErrFontNotSupported ;};_fgbf ,_baaa :=_df .GetNameVal (_eacd .Get ("\u0054\u0079\u0070\u0065"));if !_baaa {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _fgbf !="\u0046\u006f\u006e\u0074"{_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fgbf ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_df .ErrTypeError ;};_afcf ,_baaa :=_df .GetNameVal (_eacd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_baaa {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_dfff ._adgg =_afcf ;_ffegc ,_baaa :=_df .GetNameVal (_eacd .Get ("\u004e\u0061\u006d\u0065"));if _baaa {_dfff ._fdggd =_ffegc ;};_acda :=_eacd .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _acda !=nil {_dfff ._ccef =_df .TraceToDirectObject (_acda );
_ecef ,_fcedbc :=_baadc (_dfff ._ccef ,_dfff );if _fcedbc !=nil {return _eacd ,_dfff ,_fcedbc ;};_dfff ._babga =_ecef ;}else if _afcf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_afcf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_adae ,_fdfa :=_ce .NewCIDSystemInfo (_eacd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _fdfa !=nil {return _eacd ,_dfff ,_fdfa ;};_bddea :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_adae .Registry ,_adae .Ordering );if _ce .IsPredefinedCMap (_bddea ){_dfff ._babga ,_fdfa =_ce .LoadPredefinedCMap (_bddea );
if _fdfa !=nil {_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bddea ,_fdfa );
};};};_facdd :=_eacd .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _facdd !=nil {_caac ,_bbcc :=_dcbd (_facdd );if _bbcc !=nil {_dda .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbcc );
return _eacd ,_dfff ,_bbcc ;};_dfff ._fedff =_caac ;};if _afcf !="\u0054\u0079\u0070e\u0033"{_efgga ,_ebfc :=_df .GetNameVal (_eacd .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_ebfc {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _eacd ,_dfff ,ErrRequiredAttributeMissing ;};_dfff ._eefad =_efgga ;};return _eacd ,_dfff ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_aafb *PdfFont )CharcodesToUnicode (charcodes []_aff .CharCode )[]rune {_addd ,_ ,_ :=_aafb .CharcodesToUnicodeWithStats (charcodes );return _addd ;};func _edagd (_ddedd StdFontName )(pdfFontSimple ,error ){_ffcbg ,_ddgbe :=_fc .NewStdFontByName (_ddedd );
if !_ddgbe {return pdfFontSimple {},ErrFontNotSupported ;};_aaaga :=_cfaab (_ffcbg );return _aaaga ,nil ;};func (_dcg *PdfReader )newPdfActionJavaScriptFromDict (_fgdf *_df .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_fgdf .Get ("\u004a\u0053")},nil ;
};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _df .PdfObject ;Movie _df .PdfObject ;A _df .PdfObject ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _df .StreamEncoder ;FormType _df .PdfObject ;BBox _df .PdfObject ;Matrix _df .PdfObject ;Resources *PdfPageResources ;Group _df .PdfObject ;Ref _df .PdfObject ;MetaData _df .PdfObject ;PieceInfo _df .PdfObject ;LastModified _df .PdfObject ;
StructParent _df .PdfObject ;StructParents _df .PdfObject ;OPI _df .PdfObject ;OC _df .PdfObject ;Name _df .PdfObject ;

// Stream data.
Stream []byte ;_gggdf *_df .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_cdc *PdfActionGoTo )ToPdfObject ()_df .PdfObject {_cdc .PdfAction .ToPdfObject ();_fab :=_cdc ._dfc ;_dga :=_fab .PdfObject .(*_df .PdfObjectDictionary );_dga .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeGoTo )));_dga .SetIfNotNil ("\u0044",_cdc .D );
return _fab ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_bdfb *Outline )ToPdfObject ()_df .PdfObject {return _bdfb .ToPdfOutline ().ToPdfObject ()};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_cfcfd *PdfReader )CheckAccessRights (password []byte )(bool ,_gfa .Permissions ,error ){return _cfcfd ._fcaac .CheckAccessRights (password );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_eaeb *PdfColorspaceLab )GetNumComponents ()int {return 3};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dafb *PdfField )ToPdfObject ()_df .PdfObject {_bbce :=_dafb ._eabc ;_fbba :=_bbce .PdfObject .(*_df .PdfObjectDictionary );_deeg :=_df .MakeArray ();for _ ,_cebc :=range _dafb .Kids {_deeg .Append (_cebc .ToPdfObject ());};for _ ,_bcbdg :=range _dafb .Annotations {if _bcbdg ._cdd !=_dafb ._eabc {_deeg .Append (_bcbdg .GetContext ().ToPdfObject ());
};};if _dafb .Parent !=nil {_fbba .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dafb .Parent .GetContainingPdfObject ());};if _deeg .Len ()> 0{_fbba .Set ("\u004b\u0069\u0064\u0073",_deeg );};_fbba .SetIfNotNil ("\u0046\u0054",_dafb .FT );_fbba .SetIfNotNil ("\u0054",_dafb .T );
_fbba .SetIfNotNil ("\u0054\u0055",_dafb .TU );_fbba .SetIfNotNil ("\u0054\u004d",_dafb .TM );_fbba .SetIfNotNil ("\u0046\u0066",_dafb .Ff );_fbba .SetIfNotNil ("\u0056",_dafb .V );_fbba .SetIfNotNil ("\u0044\u0056",_dafb .DV );_fbba .SetIfNotNil ("\u0041\u0041",_dafb .AA );
if _dafb .VariableText !=nil {_fbba .SetIfNotNil ("\u0044\u0041",_dafb .VariableText .DA );_fbba .SetIfNotNil ("\u0051",_dafb .VariableText .Q );_fbba .SetIfNotNil ("\u0044\u0053",_dafb .VariableText .DS );_fbba .SetIfNotNil ("\u0052\u0056",_dafb .VariableText .RV );
};return _bbce ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _df .PdfObject ;Flags _df .PdfObject ;};

// ToPdfObject returns the PDF representation of the function.
func (_fcegb *PdfFunctionType2 )ToPdfObject ()_df .PdfObject {_cggbg :=_df .MakeDict ();_cggbg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (2));_fadg :=&_df .PdfObjectArray {};for _ ,_cgabb :=range _fcegb .Domain {_fadg .Append (_df .MakeFloat (_cgabb ));
};_cggbg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fadg );if _fcegb .Range !=nil {_ddfg :=&_df .PdfObjectArray {};for _ ,_aaacd :=range _fcegb .Range {_ddfg .Append (_df .MakeFloat (_aaacd ));};_cggbg .Set ("\u0052\u0061\u006eg\u0065",_ddfg );};if _fcegb .C0 !=nil {_cabb :=&_df .PdfObjectArray {};
for _ ,_fcdbbf :=range _fcegb .C0 {_cabb .Append (_df .MakeFloat (_fcdbbf ));};_cggbg .Set ("\u0043\u0030",_cabb );};if _fcegb .C1 !=nil {_fedge :=&_df .PdfObjectArray {};for _ ,_dbecd :=range _fcegb .C1 {_fedge .Append (_df .MakeFloat (_dbecd ));};_cggbg .Set ("\u0043\u0031",_fedge );
};_cggbg .Set ("\u004e",_df .MakeFloat (_fcegb .N ));if _fcegb ._dbfbe !=nil {_fcegb ._dbfbe .PdfObject =_cggbg ;return _fcegb ._dbfbe ;};return _cggbg ;};func _aagab ()string {_effdf .Lock ();defer _effdf .Unlock ();return _gbedda };func _fbegf (_ggece _df .PdfObject )(*PdfColorspaceCalRGB ,error ){_cefgg :=NewPdfColorspaceCalRGB ();
if _fcba ,_cgdg :=_ggece .(*_df .PdfIndirectObject );_cgdg {_cefgg ._ggbge =_fcba ;};_ggece =_df .TraceToDirectObject (_ggece );_ceag ,_bcedc :=_ggece .(*_df .PdfObjectArray );if !_bcedc {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ceag .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_ggece =_df .TraceToDirectObject (_ceag .Get (0));_bdgbb ,_bcedc :=_ggece .(*_df .PdfObjectName );
if !_bcedc {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_bdgbb !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_ggece =_df .TraceToDirectObject (_ceag .Get (1));_dgf ,_bcedc :=_ggece .(*_df .PdfObjectDictionary );if !_bcedc {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_ggece =_dgf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ggece =_df .TraceToDirectObject (_ggece );_bdee ,_bcedc :=_ggece .(*_df .PdfObjectArray );if !_bcedc {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _bdee .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_aafa ,_bbag :=_bdee .GetAsFloat64Slice ();
if _bbag !=nil {return nil ,_bbag ;};_cefgg .WhitePoint =_aafa ;_ggece =_dgf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ggece !=nil {_ggece =_df .TraceToDirectObject (_ggece );_fedf ,_dddb :=_ggece .(*_df .PdfObjectArray );
if !_dddb {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _fedf .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_ccdg ,_ebbd :=_fedf .GetAsFloat64Slice ();if _ebbd !=nil {return nil ,_ebbd ;};_cefgg .BlackPoint =_ccdg ;};_ggece =_dgf .Get ("\u0047\u0061\u006dm\u0061");if _ggece !=nil {_ggece =_df .TraceToDirectObject (_ggece );_bbae ,_bgbfb :=_ggece .(*_df .PdfObjectArray );
if !_bgbfb {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _bbae .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_fbfc ,_bbcgd :=_bbae .GetAsFloat64Slice ();if _bbcgd !=nil {return nil ,_bbcgd ;};_cefgg .Gamma =_fbfc ;};_ggece =_dgf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _ggece !=nil {_ggece =_df .TraceToDirectObject (_ggece );_adfg ,_efbd :=_ggece .(*_df .PdfObjectArray );
if !_efbd {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _adfg .Len ()!=9{_dda .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_adfg .String ());
return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fgdb ,_ffgb :=_adfg .GetAsFloat64Slice ();if _ffgb !=nil {return nil ,_ffgb ;
};_cefgg .Matrix =_fgdb ;};return _cefgg ,nil ;};func (_cag *PdfReader )newPdfAnnotationPolyLineFromDict (_ebae *_df .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_geed :=PdfAnnotationPolyLine {};_ceea ,_bgbf :=_cag .newPdfAnnotationMarkupFromDict (_ebae );
if _bgbf !=nil {return nil ,_bgbf ;};_geed .PdfAnnotationMarkup =_ceea ;_geed .Vertices =_ebae .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_geed .LE =_ebae .Get ("\u004c\u0045");_geed .BS =_ebae .Get ("\u0042\u0053");_geed .IC =_ebae .Get ("\u0049\u0043");
_geed .BE =_ebae .Get ("\u0042\u0045");_geed .IT =_ebae .Get ("\u0049\u0054");_geed .Measure =_ebae .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_geed ,nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_ceg *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_cceg :=range pages {_cceg =_cceg .Duplicate ();_gafea (_cceg );_ceg ._fdbe =append (_ceg ._fdbe ,_cceg );};};func (_dbce *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};func (_eccf *pdfFontType0 )subsetRegistered ()error {_afag ,_bgcdc :=_eccf .DescendantFont ._bbeb .(*pdfCIDFontType2 );if !_bgcdc {_dda .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_eccf .DescendantFont );
return nil ;};if _afag ==nil {return nil ;};if _afag ._fedff ==nil {_dda .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _eccf ._agae ==nil {_dda .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_caade ,_bgcdc :=_df .GetStream (_afag ._fedff .FontFile2 );if !_bgcdc {_dda .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _fa .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bdcde ,_dbbe :=_df .DecodeStream (_caade );if _dbbe !=nil {_dda .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dbbe );
return _dbbe ;};_bbbgc ,_dbbe :=_ge .Parse (_c .NewReader (_bdcde ));if _dbbe !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_caade .Stream ));
return _dbbe ;};var _dbfcd []rune ;var _faad *_ge .Font ;switch _bgfd :=_eccf ._agae .(type ){case *_aff .TrueTypeFontEncoder :_dbfcd =_bgfd .RegisteredRunes ();_faad ,_dbbe =_bbbgc .SubsetKeepRunes (_dbfcd );if _dbbe !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbbe );
return _dbbe ;};_bgfd .SubsetRegistered ();case *_aff .IdentityEncoder :_dbfcd =_bgfd .RegisteredRunes ();_cfde :=make ([]_ge .GlyphIndex ,len (_dbfcd ));for _gbdegb ,_eeac :=range _dbfcd {_cfde [_gbdegb ]=_ge .GlyphIndex (_eeac );};_faad ,_dbbe =_bbbgc .SubsetKeepIndices (_cfde );
if _dbbe !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbbe );return _dbbe ;};case _aff .SimpleEncoder :_gageaf :=_bgfd .Charcodes ();for _ ,_edge :=range _gageaf {_bggf ,_efad :=_bgfd .CharcodeToRune (_edge );if !_efad {_dda .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_edge );
continue ;};_dbfcd =append (_dbfcd ,_bggf );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_eccf ._agae );
};var _bgca _c .Buffer ;_dbbe =_faad .Write (&_bgca );if _dbbe !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbbe );return _dbbe ;};if _eccf ._babga !=nil {_fcfd :=make (map[_ce .CharCode ]rune ,len (_dbfcd ));for _ ,_edebb :=range _dbfcd {_fcbd ,_bfda :=_eccf ._agae .RuneToCharcode (_edebb );
if !_bfda {continue ;};_fcfd [_ce .CharCode (_fcbd )]=_edebb ;};_eccf ._babga =_ce .NewToUnicodeCMap (_fcfd );};_caade ,_dbbe =_df .MakeStream (_bgca .Bytes (),_df .NewFlateEncoder ());if _dbbe !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbbe );
return _dbbe ;};_caade .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_df .MakeInteger (int64 (_bgca .Len ())));if _eccfg ,_dadbf :=_df .GetStream (_afag ._fedff .FontFile2 );_dadbf {*_eccfg =*_caade ;}else {_afag ._fedff .FontFile2 =_caade ;};_eeebe :=_cefff ();
if len (_eccf ._eefad )> 0{_eccf ._eefad =_ddbgb (_eccf ._eefad ,_eeebe );};if len (_afag ._eefad )> 0{_afag ._eefad =_ddbgb (_afag ._eefad ,_eeebe );};if len (_eccf ._fdggd )> 0{_eccf ._fdggd =_ddbgb (_eccf ._fdggd ,_eeebe );};if _afag ._fedff !=nil {_adaaf ,_debe :=_df .GetName (_afag ._fedff .FontName );
if _debe &&len (_adaaf .String ())> 0{_cafeb :=_ddbgb (_adaaf .String (),_eeebe );_afag ._fedff .FontName =_df .MakeName (_cafeb );};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dff *PdfAction )ToPdfObject ()_df .PdfObject {_bgf :=_dff ._dfc ;_aac :=_bgf .PdfObject .(*_df .PdfObjectDictionary );_aac .Clear ();_aac .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_aac .SetIfNotNil ("\u0053",_dff .S );
_aac .SetIfNotNil ("\u004e\u0065\u0078\u0074",_dff .Next );return _bgf ;};func _bceca (_efff *PdfField ,_gecag _df .PdfObject ){for _ ,_ccee :=range _efff .Annotations {_ccee .AS =_gecag ;_ccee .ToPdfObject ();};};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_gef :=NewPdfAnnotation ();_ece :=&PdfAnnotationUnderline {};_ece .PdfAnnotation =_gef ;_ece .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gef .SetContext (_ece );return _ece ;};

// ToPdfObject implements interface PdfModel.
func (_feda *PdfActionSubmitForm )ToPdfObject ()_df .PdfObject {_feda .PdfAction .ToPdfObject ();_afd :=_feda ._dfc ;_aaa :=_afd .PdfObject .(*_df .PdfObjectDictionary );_aaa .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeSubmitForm )));if _feda .F !=nil {_aaa .Set ("\u0046",_feda .F .ToPdfObject ());
};_aaa .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_feda .Fields );_aaa .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_feda .Flags );return _afd ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_afbe *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_acgb ,_deaa :=color .(*PdfColorDeviceGray );if !_deaa {_dda .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_acgb ),float64 (*_acgb ),float64 (*_acgb )),nil ;};

// Direction represents the predominant reading order for text.
type Direction string ;

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_fdd :=PdfColorCalRGB {a ,b ,c };return &_fdd ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fgef *PdfField )Flags ()FieldFlag {var _fecf FieldFlag ;_bgbfc ,_daeg :=_fgef .inherit (func (_fbcda *PdfField )bool {if _fbcda .Ff !=nil {_fecf =FieldFlag (*_fbcda .Ff );return true ;};return false ;});if _daeg !=nil {_dda .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_daeg );
};if !_bgbfc {_dda .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _fecf ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_gbfa *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _df .GetNumberAsFloat (_gbfa .XHeight );};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_aaag PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_df .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_aca []_df .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_ceeb []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};const (_bebc =0x00001;_acdd =0x00002;_ddef =0x00004;_fbdbd =0x00008;_ffab =0x00020;_eaaa =0x00040;_bddcg =0x10000;_gbbc =0x20000;_bdfc =0x40000;);

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_agabb *PdfOutlineTreeNode )GetContainingPdfObject ()_df .PdfObject {return _agabb .GetContext ().GetContainingPdfObject ();};func _daca (_edab _df .PdfObject )(*PdfFilespec ,error ){if _edab ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_edab );
};func _bdbe (_cfbad *_df .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cadf :=&PdfTilingPattern {};_dbde :=_cfbad .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _dbde ==nil {_dda .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbfca ,_feddef :=_dbde .(*_df .PdfObjectInteger );if !_feddef {_dda .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dbde );
return nil ,_df .ErrTypeError ;};_cadf .PaintType =_dbfca ;_dbde =_cfbad .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dbde ==nil {_dda .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddgfd ,_feddef :=_dbde .(*_df .PdfObjectInteger );if !_feddef {_dda .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbde );
return nil ,_df .ErrTypeError ;};_cadf .TilingType =_ddgfd ;_dbde =_cfbad .Get ("\u0042\u0042\u006f\u0078");if _dbde ==nil {_dda .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_dbde =_df .TraceToDirectObject (_dbde );_gfggf ,_feddef :=_dbde .(*_df .PdfObjectArray );if !_feddef {_dda .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbde );
return nil ,_df .ErrTypeError ;};_ecbd ,_cabab :=NewPdfRectangle (*_gfggf );if _cabab !=nil {_dda .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cabab );return nil ,_cabab ;};_cadf .BBox =_ecbd ;_dbde =_cfbad .Get ("\u0058\u0053\u0074e\u0070");
if _dbde ==nil {_dda .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gfggbd ,_cabab :=_df .GetNumberAsFloat (_dbde );if _cabab !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gfggbd );
return nil ,_cabab ;};_cadf .XStep =_df .MakeFloat (_gfggbd );_dbde =_cfbad .Get ("\u0059\u0053\u0074e\u0070");if _dbde ==nil {_dda .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ddabb ,_cabab :=_df .GetNumberAsFloat (_dbde );if _cabab !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ddabb );
return nil ,_cabab ;};_cadf .YStep =_df .MakeFloat (_ddabb );_dbde =_cfbad .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _dbde ==nil {_dda .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cfbad ,_feddef =_df .TraceToDirectObject (_dbde ).(*_df .PdfObjectDictionary );if !_feddef {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dbde );
};_cedb ,_cabab :=NewPdfPageResourcesFromDict (_cfbad );if _cabab !=nil {return nil ,_cabab ;};_cadf .Resources =_cedb ;if _cefd :=_cfbad .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cefd !=nil {_ddffe ,_faffb :=_cefd .(*_df .PdfObjectArray );if !_faffb {_dda .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cefd );
return nil ,_df .ErrTypeError ;};_cadf .Matrix =_ddffe ;};return _cadf ,nil ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_bfegf *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_bffa :=_bfegf .GetContentStreamObjs ();wrapContents =wrapContents &&len (_bffa )> 0;_edded :=_df .NewFlateEncoder ();_geafc :=_df .MakeArray ();if wrapContents {_ecafee ,_dffcb :=_df .MakeStream ([]byte ("\u0071\u000a"),_edded );
if _dffcb !=nil {return _dffcb ;};_geafc .Append (_ecafee );};_geafc .Append (_bffa ...);if wrapContents {_gccbe ,_fdccb :=_df .MakeStream ([]byte ("\u000a\u0051\u000a"),_edded );if _fdccb !=nil {return _fdccb ;};_geafc .Append (_gccbe );};_bdgfd ,_bcdf :=_df .MakeStream (cs ,_edded );
if _bcdf !=nil {return _bcdf ;};_geafc .Append (_bdgfd );_bfegf .Contents =_geafc ;return nil ;};func (_bgfc *PdfReader )newPdfAnnotationPolygonFromDict (_ccae *_df .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_fceaa :=PdfAnnotationPolygon {};
_bba ,_eeg :=_bgfc .newPdfAnnotationMarkupFromDict (_ccae );if _eeg !=nil {return nil ,_eeg ;};_fceaa .PdfAnnotationMarkup =_bba ;_fceaa .Vertices =_ccae .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fceaa .LE =_ccae .Get ("\u004c\u0045");
_fceaa .BS =_ccae .Get ("\u0042\u0053");_fceaa .IC =_ccae .Get ("\u0049\u0043");_fceaa .BE =_ccae .Get ("\u0042\u0045");_fceaa .IT =_ccae .Get ("\u0049\u0054");_fceaa .Measure =_ccae .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fceaa ,nil ;};
func (_adced *PdfPage )getParentResources ()(*PdfPageResources ,error ){_ccda :=_adced .Parent ;for _ccda !=nil {_aggad ,_fagaa :=_df .GetDict (_ccda );if !_fagaa {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_fa .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _caeg :=_aggad .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_caeg !=nil {_daabc ,_bcegd :=_df .GetDict (_caeg );
if !_bcegd {return nil ,_fa .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_cbead ,_egegf :=NewPdfPageResourcesFromDict (_daabc );if _egegf !=nil {return nil ,_egegf ;};return _cbead ,nil ;
};_ccda =_aggad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _dd .Time ;ModTime _dd .Time ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_aegd *PdfField )IsTerminal ()bool {return len (_aegd .Kids )==0};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_aceg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eaec ,_addf :=_df .GetNumbersAsFloat (objects );
if _addf !=nil {return nil ,_addf ;};return _aceg .ColorFromFloats (_eaec );};func (_eec *PdfReader )newPdfAnnotationCircleFromDict (_cgb *_df .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_adba :=PdfAnnotationCircle {};_efga ,_acg :=_eec .newPdfAnnotationMarkupFromDict (_cgb );
if _acg !=nil {return nil ,_acg ;};_adba .PdfAnnotationMarkup =_efga ;_adba .BS =_cgb .Get ("\u0042\u0053");_adba .IC =_cgb .Get ("\u0049\u0043");_adba .BE =_cgb .Get ("\u0042\u0045");_adba .RD =_cgb .Get ("\u0052\u0044");return &_adba ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_gbde :=NewPdfAnnotation ();_adea :=&PdfAnnotationWidget {};_adea .PdfAnnotation =_gbde ;_gbde .SetContext (_adea );return _adea ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_adef *PdfFont )CharcodesToStrings (charcodes []_aff .CharCode ,replacementText string )([]string ,int ,int ){_aeae :=_adef .baseFields ();_gcbe :=make ([]string ,0,len (charcodes ));_bafbf :=0;_ecabg :=_adef .Encoder ();_dcegc :=_aeae ._babga !=nil &&_adef .IsSimple ()&&_adef .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_eb .Contains (_aeae ._babga .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_dcegc &&_ecabg !=nil {switch _cdgg :=_ecabg .(type ){case _aff .SimpleEncoder :_bdcbe :=_cdgg .BaseName ();if _ ,_cbeg :=_degc [_bdcbe ];_cbeg {for _ ,_afgd :=range charcodes {if _dfgb ,_fded :=_ecabg .CharcodeToRune (_afgd );_fded {_gcbe =append (_gcbe ,string (_dfgb ));
}else {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_afgd ,charcodes ,_aeae .isCIDFont (),_adef ,_ecabg );
_bafbf ++;_gcbe =append (_gcbe ,_ce .MissingCodeString );};};return _gcbe ,len (_gcbe ),_bafbf ;};};};for _ ,_fcgf :=range charcodes {if _aeae ._babga !=nil {if _fcbaa ,_daagb :=_aeae ._babga .CharcodeToUnicode (_ce .CharCode (_fcgf ));_daagb {_acacf ,_ :=_aa .DecodeLastRuneInString (_fcbaa );
_ffea :=_faabb (_acacf );if !(_ffea =="\u0043\u006f"){_gcbe =append (_gcbe ,_fcbaa );continue ;};_dda .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_fcgf ,_fcbaa );
};};if _ecabg !=nil {if _aaecg ,_dgcba :=_ecabg .CharcodeToRune (_fcgf );_dgcba {_dgabd :=_faabb (_aaecg );if !(_dgabd =="\u0043\u006f"){_gcbe =append (_gcbe ,string (_aaecg ));continue ;};_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_fcgf ,string (_aaecg ));
};};if replacementText !=""{_gcbe =append (_gcbe ,replacementText );}else {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fcgf ,charcodes ,_aeae .isCIDFont (),_adef ,_ecabg );
_bafbf ++;_gcbe =append (_gcbe ,_ce .MissingCodeString );};};if _bafbf !=0{_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_bafbf ,_adef );
};return _gcbe ,len (_gcbe ),_bafbf ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_beaf *PdfShading )GetContext ()PdfModel {return _beaf ._adfab };func _cede (_gca *PdfPage )map[_df .PdfObjectName ]_df .PdfObject {_decc :=make (map[_df .PdfObjectName ]_df .PdfObject );if _gca .Resources ==nil {return _decc ;};if _gca .Resources .Font !=nil {if _cgbg ,_febe :=_df .GetDict (_gca .Resources .Font );
_febe {for _ ,_gcfd :=range _cgbg .Keys (){_decc [_gcfd ]=_cgbg .Get (_gcfd );};};};if _gca .Resources .ExtGState !=nil {if _cada ,_dccd :=_df .GetDict (_gca .Resources .ExtGState );_dccd {for _ ,_gfc :=range _cada .Keys (){_decc [_gfc ]=_cada .Get (_gfc );
};};};if _gca .Resources .XObject !=nil {if _aebb ,_caa :=_df .GetDict (_gca .Resources .XObject );_caa {for _ ,_abbef :=range _aebb .Keys (){_decc [_abbef ]=_aebb .Get (_abbef );};};};if _gca .Resources .Pattern !=nil {if _dbb ,_ebc :=_df .GetDict (_gca .Resources .Pattern );
_ebc {for _ ,_cfee :=range _dbb .Keys (){_decc [_cfee ]=_dbb .Get (_cfee );};};};if _gca .Resources .Shading !=nil {if _egbb ,_cgbb :=_df .GetDict (_gca .Resources .Shading );_cgbb {for _ ,_decca :=range _egbb .Keys (){_decc [_decca ]=_egbb .Get (_decca );
};};};if _gca .Resources .ProcSet !=nil {if _gabb ,_dbba :=_df .GetDict (_gca .Resources .ProcSet );_dbba {for _ ,_cgcf :=range _gabb .Keys (){_decc [_cgcf ]=_gabb .Get (_cgcf );};};};if _gca .Resources .Properties !=nil {if _agcc ,_eegb :=_df .GetDict (_gca .Resources .Properties );
_eegb {for _ ,_ggbg :=range _agcc .Keys (){_decc [_ggbg ]=_agcc .Get (_ggbg );};};};return _decc ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_ffeb *PdfInfo )GetCustomInfo (name string )*_df .PdfObjectString {var _gage *_df .PdfObjectString ;if _ffeb ._fcac ==nil {return _gage ;};if _ggdd ,_fbge :=_ffeb ._fcac .Get (*_df .MakeName (name )).(*_df .PdfObjectString );_fbge {_gage =_ggdd ;
};return _gage ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ffag ,_aefa :=NewStandard14Font (basefont );if _aefa !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _ffag ;};func (_faag *PdfReader )newPdfActionTransFromDict (_dfa *_df .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dfa .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gadd *PdfAppender )UpdateObject (obj _df .PdfObject ){_gadd .replaceObject (obj ,obj );if _ ,_bff :=_gadd ._cfdd [obj ];!_bff {_gadd ._efgc =append (_gadd ._efgc ,obj );_gadd ._cfdd [obj ]=struct{}{};};};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _df .PdfObject ;Open _df .PdfObject ;};

// SetFitWindow sets the value of the fitWindow flag.
func (_accdc *ViewerPreferences )SetFitWindow (fitWindow bool ){_accdc ._bcffa =&fitWindow };

// RemoveStructParentsKey removes the StructParents key.
func (_gcbd *PdfPage )RemoveStructParentsKey (){_gcbd .StructParents =nil };

// ToPdfObject returns a stream object.
func (_defab *XObjectImage )ToPdfObject ()_df .PdfObject {_afeb :=_defab ._gafba ;if _defab ._ggdde {return _afeb ;};_adcd :=_afeb .PdfObjectDictionary ;if _defab .Filter !=nil {_adcd =_defab .Filter .MakeStreamDict ();_afeb .PdfObjectDictionary =_adcd ;
};_adcd .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_adcd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0049\u006d\u0061g\u0065"));_adcd .Set ("\u0057\u0069\u0064t\u0068",_df .MakeInteger (*(_defab .Width )));
_adcd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_df .MakeInteger (*(_defab .Height )));if _defab .BitsPerComponent !=nil {_adcd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_df .MakeInteger (*(_defab .BitsPerComponent )));
};if _defab .ColorSpace !=nil {_adcd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_defab .ColorSpace .ToPdfObject ());};_adcd .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_defab .Intent );_adcd .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_defab .ImageMask );
_adcd .SetIfNotNil ("\u004d\u0061\u0073\u006b",_defab .Mask );_gfcde :=_adcd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _defab .Decode ==nil &&_gfcde {_adcd .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _defab .Decode !=nil {_adcd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_defab .Decode );
};_adcd .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_defab .Interpolate );_adcd .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_defab .Alternatives );_adcd .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_defab .SMask );
_adcd .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_defab .SMaskInData );_adcd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_defab .Matte );_adcd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_defab .Name );_adcd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_defab .StructParent );
_adcd .SetIfNotNil ("\u0049\u0044",_defab .ID );_adcd .SetIfNotNil ("\u004f\u0050\u0049",_defab .OPI );_adcd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_defab .Metadata );_adcd .SetIfNotNil ("\u004f\u0043",_defab .OC );_adcd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_defab .Stream ))));
_afeb .Stream =_defab .Stream ;_defab ._ggdde =true ;return _afeb ;};

// PrintPageRange returns the value of the printPageRange.
func (_adgac *ViewerPreferences )PrintPageRange ()[]int {return _adgac ._fecbe };func (_dcbgc *PdfWriter )writeString (_acgfa string ){if _dcbgc ._debgc !=nil {return ;};_deegb ,_ddabf :=_dcbgc ._cgccf .WriteString (_acgfa );_dcbgc ._eedgc +=int64 (_deegb );
_dcbgc ._debgc =_ddabf ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_gfcfc *PdfFont )BytesToCharcodes (data []byte )[]_aff .CharCode {_dda .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _gcdc ,_fbgf :=_gfcfc ._bbeb .(*pdfFontType0 );_fbgf &&_gcdc ._ggbdb !=nil {if _cdafc ,_ggabe :=_gcdc .bytesToCharcodes (data );_ggabe {return _cdafc ;};};var (_eegg =make ([]_aff .CharCode ,0,len (data )+len (data )%2);_cagd =_gfcfc .baseFields ();
);if _cagd ._babga !=nil {if _degdb ,_beefa :=_cagd ._babga .BytesToCharcodes (data );_beefa {for _ ,_ebceg :=range _degdb {_eegg =append (_eegg ,_aff .CharCode (_ebceg ));};return _eegg ;};};if _cagd .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _gbcae :=0;_gbcae < len (data );_gbcae +=2{_ffcdb :=uint16 (data [_gbcae ])<<8|uint16 (data [_gbcae +1]);_eegg =append (_eegg ,_aff .CharCode (_ffcdb ));};}else {for _ ,_bcdc :=range data {_eegg =append (_eegg ,_aff .CharCode (_bcdc ));
};};return _eegg ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_fceaf *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _cedbb []*PdfField ;_ddffee :=map[*_df .PdfIndirectObject ]struct{}{};for _ ,_ffggf :=range _fceaf .PageList {_dcbedf ,_gebcaa :=_ffggf .GetAnnotations ();if _gebcaa !=nil {return _gebcaa ;
};for _ ,_degde :=range _dcbedf {var _fecdc *PdfField ;switch _fcagf :=_degde .GetContext ().(type ){case *PdfAnnotationWidget :if _fcagf ._cff !=nil {_fecdc =_fcagf ._cff ;break ;};if _ffcc ,_egdf :=_df .GetIndirect (_fcagf .Parent );_egdf {_fecdc ,_gebcaa =_fceaf .newPdfFieldFromIndirectObject (_ffcc ,nil );
if _gebcaa ==nil {break ;};_dda .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ffcc ,_gebcaa );
};if _fcagf ._cdd !=nil {_fecdc ,_gebcaa =_fceaf .newPdfFieldFromIndirectObject (_fcagf ._cdd ,nil );if _gebcaa ==nil {break ;};_dda .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fcagf ._cdd ,_gebcaa );
};};if _fecdc ==nil {continue ;};if _ ,_feeag :=_ddffee [_fecdc ._eabc ];_feeag {continue ;};_ddffee [_fecdc ._eabc ]=struct{}{};_cedbb =append (_cedbb ,_fecdc );};};if len (_cedbb )==0{return nil ;};if _fceaf .AcroForm ==nil {_fceaf .AcroForm =NewPdfAcroForm ();
};_fceaf .AcroForm .Fields =&_cedbb ;return nil ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};func (_fege *PdfReader )newPdfFieldSignatureFromDict (_fcga *_df .PdfObjectDictionary )(*PdfFieldSignature ,error ){_agaf :=&PdfFieldSignature {};_dcbb ,_dbaee :=_df .GetIndirect (_fcga .Get ("\u0056"));
if _dbaee {var _cfeec error ;_agaf .V ,_cfeec =_fege .newPdfSignatureFromIndirect (_dcbb );if _cfeec !=nil {return nil ,_cfeec ;};};_agaf .Lock ,_ =_df .GetIndirect (_fcga .Get ("\u004c\u006f\u0063\u006b"));_agaf .SV ,_ =_df .GetIndirect (_fcga .Get ("\u0053\u0056"));
return _agaf ,nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_fcef :=NewPdfAnnotation ();_ega :=&PdfAnnotationLink {};_ega .PdfAnnotation =_fcef ;_fcef .SetContext (_ega );return _ega ;};

// SetForms sets the Acroform for a PDF file.
func (_cffeg *PdfWriter )SetForms (form *PdfAcroForm )error {_cffeg ._ccdfd =form ;return nil };

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_dbda *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _dbda .baseFields ()._fedff !=nil {return _dbda .baseFields ()._fedff ;};if _gadcec :=_dbda ._bbeb .getFontDescriptor ();_gadcec !=nil {return _gadcec ;};_dda .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_dbda );
return nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_cfae *_df .PdfIndirectObject ;Certs []*_df .PdfObjectStream ;OCSPs []*_df .PdfObjectStream ;CRLs []*_df .PdfObjectStream ;VRI map[string ]*VRI ;_afbbd map[string ]*_df .PdfObjectStream ;_bccf map[string ]*_df .PdfObjectStream ;_gcaa map[string ]*_df .PdfObjectStream ;
};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_agcce *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_agcce .HiVal )};};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};type fontCommon struct{_eefad string ;_adgg string ;_fdggd string ;_ccef _df .PdfObject ;_babga *_ce .CMap ;_fedff *PdfFontDescriptor ;
_ccdga int64 ;};func (_cgae *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};var _efac =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func _caaa (_cebeb *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_cebeb }};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_df .PdfParser ;DiffPolicy _aae .DiffPolicy ;};

// ToPdfObject implements interface PdfModel.
func (_cbfgc *PdfAnnotationSquare )ToPdfObject ()_df .PdfObject {_cbfgc .PdfAnnotation .ToPdfObject ();_fade :=_cbfgc ._cdd ;_dgad :=_fade .PdfObject .(*_df .PdfObjectDictionary );if _cbfgc .PdfAnnotationMarkup !=nil {_cbfgc .PdfAnnotationMarkup .appendToPdfDictionary (_dgad );
};_dgad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_dgad .SetIfNotNil ("\u0042\u0053",_cbfgc .BS );_dgad .SetIfNotNil ("\u0049\u0043",_cbfgc .IC );_dgad .SetIfNotNil ("\u0042\u0045",_cbfgc .BE );
_dgad .SetIfNotNil ("\u0052\u0044",_cbfgc .RD );return _fade ;};func (_dbc *PdfReader )newPdfActionSoundFromDict (_gdc *_df .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_gdc .Get ("\u0053\u006f\u0075n\u0064"),Volume :_gdc .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_gdc .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_gdc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_gdc .Get ("\u004d\u0069\u0078")},nil ;
};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_df .PdfObjectString ;Q *_df .PdfObjectInteger ;DS *_df .PdfObjectString ;RV _df .PdfObject ;MaxLen *_df .PdfObjectInteger ;};func _fdaa (_decbf *_ae .ImageBase )(_dbagd Image ){_dbagd .Width =int64 (_decbf .Width );
_dbagd .Height =int64 (_decbf .Height );_dbagd .BitsPerComponent =int64 (_decbf .BitsPerComponent );_dbagd .ColorComponents =_decbf .ColorComponents ;_dbagd .Data =_decbf .Data ;_dbagd ._gdfe =_decbf .Decode ;_dbagd ._bggcb =_decbf .Alpha ;return _dbagd ;
};

// ToPdfObject implements interface PdfModel.
func (_ecedf *PdfAnnotationFileAttachment )ToPdfObject ()_df .PdfObject {_ecedf .PdfAnnotation .ToPdfObject ();_afac :=_ecedf ._cdd ;_daad :=_afac .PdfObject .(*_df .PdfObjectDictionary );_ecedf .PdfAnnotationMarkup .appendToPdfDictionary (_daad );_daad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_daad .SetIfNotNil ("\u0046\u0053",_ecedf .FS );_daad .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ecedf .Name );return _afac ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_dgeae PdfOutputIntentType )String ()string {switch _dgeae {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// B returns the value of the B component of the color.
func (_aafg *PdfColorLab )B ()float64 {return _aafg [2]};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_df .PdfObjectStream )(*XObjectForm ,error ){_ececeb :=&XObjectForm {};_ececeb ._gggdf =stream ;_bfdfe :=*(stream .PdfObjectDictionary );_fgfef ,_cfbgeb :=_df .NewEncoderFromStream (stream );if _cfbgeb !=nil {return nil ,_cfbgeb ;
};_ececeb .Filter =_fgfef ;if _cfbefa :=_bfdfe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cfbefa !=nil {_ffaec ,_dbccg :=_cfbefa .(*_df .PdfObjectName );if !_dbccg {return nil ,_fa .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_ffaec !="\u0046\u006f\u0072\u006d"{_dda .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fa .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _gfgad :=_bfdfe .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_gfgad !=nil {_ececeb .FormType =_gfgad ;};if _dcbec :=_bfdfe .Get ("\u0042\u0042\u006f\u0078");_dcbec !=nil {_ececeb .BBox =_dcbec ;};if _bedba :=_bfdfe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_bedba !=nil {_ececeb .Matrix =_bedba ;};if _afadb :=_bfdfe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_afadb !=nil {_afadb =_df .TraceToDirectObject (_afadb );_aeggg ,_ddgdg :=_afadb .(*_df .PdfObjectDictionary );if !_ddgdg {_dda .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_df .ErrTypeError ;};_ddege ,_gecagb :=NewPdfPageResourcesFromDict (_aeggg );if _gecagb !=nil {_dda .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_gecagb ;};_ececeb .Resources =_ddege ;_dda .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ececeb .Resources );};_ececeb .Group =_bfdfe .Get ("\u0047\u0072\u006fu\u0070");
_ececeb .Ref =_bfdfe .Get ("\u0052\u0065\u0066");_ececeb .MetaData =_bfdfe .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ececeb .PieceInfo =_bfdfe .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ececeb .LastModified =_bfdfe .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ececeb .StructParent =_bfdfe .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ececeb .StructParents =_bfdfe .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ececeb .OPI =_bfdfe .Get ("\u004f\u0050\u0049");
_ececeb .OC =_bfdfe .Get ("\u004f\u0043");_ececeb .Name =_bfdfe .Get ("\u004e\u0061\u006d\u0065");_ececeb .Stream =stream .Stream ;return _ececeb ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_ggfdc *PdfFunctionType3 )ToPdfObject ()_df .PdfObject {_fedce :=_df .MakeDict ();_fedce .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (3));_egece :=&_df .PdfObjectArray {};for _ ,_eeeaf :=range _ggfdc .Domain {_egece .Append (_df .MakeFloat (_eeeaf ));
};_fedce .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egece );if _ggfdc .Range !=nil {_cfaec :=&_df .PdfObjectArray {};for _ ,_dgea :=range _ggfdc .Range {_cfaec .Append (_df .MakeFloat (_dgea ));};_fedce .Set ("\u0052\u0061\u006eg\u0065",_cfaec );};if _ggfdc .Functions !=nil {_bdaa :=&_df .PdfObjectArray {};
for _ ,_affdf :=range _ggfdc .Functions {_bdaa .Append (_affdf .ToPdfObject ());};_fedce .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bdaa );};if _ggfdc .Bounds !=nil {_aabfg :=&_df .PdfObjectArray {};for _ ,_cecg :=range _ggfdc .Bounds {_aabfg .Append (_df .MakeFloat (_cecg ));
};_fedce .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_aabfg );};if _ggfdc .Encode !=nil {_gbfgc :=&_df .PdfObjectArray {};for _ ,_gdaa :=range _ggfdc .Encode {_gbfgc .Append (_df .MakeFloat (_gdaa ));};_fedce .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_gbfgc );
};if _ggfdc ._afaac !=nil {_ggfdc ._afaac .PdfObject =_fedce ;return _ggfdc ._afaac ;};return _fedce ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gagg *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dda .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_fa .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gegaa *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccf :=vals [0];if _ccf < 0.0||_ccf > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ccf );
return nil ,ErrColorOutOfRange ;};_afdd :=vals [1];if _afdd < 0.0||_afdd > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afdd );return nil ,ErrColorOutOfRange ;
};_geca :=vals [2];if _geca < 0.0||_geca > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_geca );return nil ,ErrColorOutOfRange ;};_bccc :=NewPdfColorCalRGB (_ccf ,_afdd ,_geca );
return _bccc ,nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_bcefdd *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _bcefdd ._fcaac .GetCrypter ()!=nil &&!_bcefdd ._fcaac .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_bcefdd ._gaded )< pageNumber {return nil ,_fa .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_beabc :=pageNumber -1;if _beabc < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_fddbe :=_bcefdd .PageList [_beabc ];
return _fddbe ,nil ;};func (_egfa *PdfReader )newPdfAnnotationPrinterMarkFromDict (_begd *_df .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_caf :=PdfAnnotationPrinterMark {};_caf .MN =_begd .Get ("\u004d\u004e");return &_caf ,nil ;};func (_afddd *PdfWriter )writeDocumentVersion (){if _afddd ._ddga {_afddd .writeString ("\u000a");
}else {_afddd .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_afddd ._bbagfg .Major ,_afddd ._bbagfg .Minor ));_afddd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_cdaed *PdfTilingPattern )ToPdfObject ()_df .PdfObject {_cdaed .PdfPattern .ToPdfObject ();_acgdgc :=_cdaed .getDict ();if _cdaed .PaintType !=nil {_acgdgc .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_cdaed .PaintType );};if _cdaed .TilingType !=nil {_acgdgc .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cdaed .TilingType );
};if _cdaed .BBox !=nil {_acgdgc .Set ("\u0042\u0042\u006f\u0078",_cdaed .BBox .ToPdfObject ());};if _cdaed .XStep !=nil {_acgdgc .Set ("\u0058\u0053\u0074e\u0070",_cdaed .XStep );};if _cdaed .YStep !=nil {_acgdgc .Set ("\u0059\u0053\u0074e\u0070",_cdaed .YStep );
};if _cdaed .Resources !=nil {_acgdgc .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cdaed .Resources .ToPdfObject ());};if _cdaed .Matrix !=nil {_acgdgc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cdaed .Matrix );};return _cdaed ._cbde ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_aggfe ,_gfeaf :=_bgd .Open (filePath );if _gfeaf !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gfeaf );
return nil ,_gfeaf ;};defer _aggfe .Close ();return NewPdfFontFromTTF (_aggfe );};

// SetFontByName sets the font specified by keyName to the given object.
func (_bfgdg *PdfPageResources )SetFontByName (keyName _df .PdfObjectName ,obj _df .PdfObject )error {if _bfgdg .Font ==nil {_bfgdg .Font =_df .MakeDict ();};_baca ,_aaecd :=_df .TraceToDirectObject (_bfgdg .Font ).(*_df .PdfObjectDictionary );if !_aaecd {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_df .TraceToDirectObject (_bfgdg .Font ));
return _df .ErrTypeError ;};_baca .Set (keyName ,obj );return nil ;};

// SetDate sets the `M` field of the signature.
func (_bbdcf *PdfSignature )SetDate (date _dd .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_bbdcf .M =_df .MakeString (date .Format (format ));
};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_gfag *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_df .PdfIndirectObject ;SV *_df .PdfIndirectObject ;};func _ceab (_fdbeb _df .PdfObject )(*PdfColorspaceLab ,error ){_afefc :=NewPdfColorspaceLab ();if _febdb ,_afbf :=_fdbeb .(*_df .PdfIndirectObject );
_afbf {_afefc ._daccf =_febdb ;};_fdbeb =_df .TraceToDirectObject (_fdbeb );_dbabc ,_deea :=_fdbeb .(*_df .PdfObjectArray );if !_deea {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbabc .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_fdbeb =_df .TraceToDirectObject (_dbabc .Get (0));_abcc ,_deea :=_fdbeb .(*_df .PdfObjectName );if !_deea {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_abcc !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_fdbeb =_df .TraceToDirectObject (_dbabc .Get (1));_aagg ,_deea :=_fdbeb .(*_df .PdfObjectDictionary );
if !_deea {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_fdbeb =_aagg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_fdbeb =_df .TraceToDirectObject (_fdbeb );_gbaea ,_deea :=_fdbeb .(*_df .PdfObjectArray );if !_deea {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _gbaea .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_ecca ,_fbeb :=_gbaea .GetAsFloat64Slice ();if _fbeb !=nil {return nil ,_fbeb ;};_afefc .WhitePoint =_ecca ;_fdbeb =_aagg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fdbeb !=nil {_fdbeb =_df .TraceToDirectObject (_fdbeb );
_aeef ,_gece :=_fdbeb .(*_df .PdfObjectArray );if !_gece {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _aeef .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_befg ,_badg :=_aeef .GetAsFloat64Slice ();if _badg !=nil {return nil ,_badg ;};_afefc .BlackPoint =_befg ;};_fdbeb =_aagg .Get ("\u0052\u0061\u006eg\u0065");if _fdbeb !=nil {_fdbeb =_df .TraceToDirectObject (_fdbeb );_geaa ,_fccd :=_fdbeb .(*_df .PdfObjectArray );
if !_fccd {_dda .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _geaa .Len ()!=4{_dda .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dadc ,_fcae :=_geaa .GetAsFloat64Slice ();if _fcae !=nil {return nil ,_fcae ;};_afefc .Range =_dadc ;};return _afefc ,nil ;};func (_abdf *pdfFontSimple )baseFields ()*fontCommon {return &_abdf .fontCommon };


// ToPdfObject implements interface PdfModel.
func (_ddcb *PdfActionImportData )ToPdfObject ()_df .PdfObject {_ddcb .PdfAction .ToPdfObject ();_cbc :=_ddcb ._dfc ;_beg :=_cbc .PdfObject .(*_df .PdfObjectDictionary );_beg .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeImportData )));if _ddcb .F !=nil {_beg .Set ("\u0046",_ddcb .F .ToPdfObject ());
};return _cbc ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_cddec *PdfField )SetContext (ctx PdfModel ){_cddec ._baac =ctx };

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _df .PdfObjectName ;};

// IsCenterWindow returns the value of the centerWindow flag.
func (_cceac *ViewerPreferences )IsCenterWindow ()bool {if _cceac ._gcggf ==nil {return false ;};return *_cceac ._gcggf ;};

// GetPageIndirectObject returns the indirect object of page for the specified page number.
func (_adbcg *PdfWriter )GetPageIndirectObject (pageNum int )(*_df .PdfIndirectObject ,error ){if pageNum < 0||pageNum >=len (_adbcg ._cbef ){return nil ,_fa .New ("\u0070a\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006fu\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065");
};return _adbcg ._cbef [pageNum ],nil ;};

// SetNumCopies sets the value of the numCopies.
func (_acgfcg *ViewerPreferences )SetNumCopies (numCopies int ){_acgfcg ._gccfe =numCopies };var _feeff =false ;func (_fcgcb *PdfReader )newPdfAnnotationTextFromDict (_cdde *_df .PdfObjectDictionary )(*PdfAnnotationText ,error ){_agcg :=PdfAnnotationText {};
_ddcdf ,_fedb :=_fcgcb .newPdfAnnotationMarkupFromDict (_cdde );if _fedb !=nil {return nil ,_fedb ;};_agcg .PdfAnnotationMarkup =_ddcdf ;_agcg .Open =_cdde .Get ("\u004f\u0070\u0065\u006e");_agcg .Name =_cdde .Get ("\u004e\u0061\u006d\u0065");_agcg .State =_cdde .Get ("\u0053\u0074\u0061t\u0065");
_agcg .StateModel =_cdde .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_agcg ,nil ;};

// GetFillImage get attached model.Image in push button.
func (_edgf *PdfFieldButton )GetFillImage ()*Image {if _edgf .IsPush (){return _edgf ._aebf ;};return nil ;};func _bfbdc (_aacgc *_df .PdfObjectDictionary )bool {for _ ,_ccge :=range _aacgc .Keys (){if _ ,_bbagff :=_efac [_ccge .String ()];_bbagff {return true ;
};};return false ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_bggcb []byte ;_gdfe []float64 ;};

// ToPdfObject returns the PDF representation of the function.
func (_bbaff *PdfFunctionType4 )ToPdfObject ()_df .PdfObject {_aafd :=_bbaff ._caccg ;if _aafd ==nil {_bbaff ._caccg =&_df .PdfObjectStream {};_aafd =_bbaff ._caccg ;};_afda :=_df .MakeDict ();_afda .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (4));
_ecffe :=&_df .PdfObjectArray {};for _ ,_ccaa :=range _bbaff .Domain {_ecffe .Append (_df .MakeFloat (_ccaa ));};_afda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ecffe );_gdcef :=&_df .PdfObjectArray {};for _ ,_deaca :=range _bbaff .Range {_gdcef .Append (_df .MakeFloat (_deaca ));
};_afda .Set ("\u0052\u0061\u006eg\u0065",_gdcef );if _bbaff ._efdf ==nil &&_bbaff .Program !=nil {_bbaff ._efdf =[]byte (_bbaff .Program .String ());};_afda .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_bbaff ._efdf ))));
_aafd .Stream =_bbaff ._efdf ;_aafd .PdfObjectDictionary =_afda ;return _aafd ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_cfdgf *PdfReader )GetCatalogStructTreeRoot ()(_df .PdfObject ,bool ){_agee :=_df .ResolveReference (_cfdgf ._aeeb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _agee ==nil {return nil ,false ;};if !_cfdgf ._caabc {_efgce :=_cfdgf .traverseObjectData (_agee );
if _efgce !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_efgce );
return nil ,false ;};};return _agee ,true ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_df .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cdbb :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_cdbb .N =N ;return _cdbb ,nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _df .PdfObject )(*PdfFont ,error ){return _ecad (fontObj ,true )};func (_efcg *PdfReader )newPdfAnnotationTrapNetFromDict (_bfe *_df .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_agb :=PdfAnnotationTrapNet {};
return &_agb ,nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_dbcfa *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_dcccaa ,_bdbab :=_df .GetDict (_dbcfa ._afacf .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_bdbab {_dcccaa =_df .MakeDict ();_dbcfa ._afacf .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_dcccaa );
};_cggbga ,_bdbab :=_df .GetDict (_dcccaa .Get (_df .PdfObjectName (extName )));if !_bdbab {_cggbga =_df .MakeDict ();_dcccaa .Set (_df .PdfObjectName (extName ),_cggbga );};if _bbbff ,_ :=_df .GetNameVal (_cggbga .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_bbbff !=baseVersion {_cggbga .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_df .MakeName (baseVersion ));};if _ebgabg ,_ :=_df .GetIntVal (_cggbga .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_ebgabg !=extLevel {_cggbga .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_df .MakeInteger (int64 (extLevel )));};};func (_afade *PdfWriter )addObject (_effff _df .PdfObject )bool {_cfgda :=_afade .hasObject (_effff );
if !_cfgda {_edfac :=_df .ResolveReferencesDeep (_effff ,_afade ._affdc );if _edfac !=nil {_dda .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_edfac );};_afade ._bbedb =append (_afade ._bbedb ,_effff );
_afade ._bfaf [_effff ]=struct{}{};return true ;};return false ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bbg :=PdfColorDeviceGray (grayVal );return &_bbg ;};

// ToPdfObject converts the ID tree to a PDF object.
func (_cggfe *IDTree )ToPdfObject ()_df .PdfObject {_efdgc :=_df .MakeDict ();if _cggfe .Names !=nil &&_cggfe .Names .Len ()> 0{_efdgc .Set ("\u004e\u0061\u006de\u0073",_cggfe .Names );_efdgc .Set ("\u004c\u0069\u006d\u0069\u0074\u0073",_cggfe .Limits );
};if len (_cggfe .Kids )> 0{_afgfc :=_df .MakeArray ();for _ ,_gecfff :=range _cggfe .Kids {_afgfc .Append (_gecfff .ToPdfObject ());};_cbggg :=_df .MakeDict ();_cbggg .Set ("\u004b\u0069\u0064\u0073",_afgfc );_efdgc .Set ("\u004b\u0069\u0064\u0073",_cbggg );
};return _efdgc ;};func (_geaf *pdfFontSimple )getFontEncoding ()(_ddgbcb string ,_gcfdgg map[_aff .CharCode ]_aff .GlyphName ,_eceec error ){_ddgbcb ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _ceece ,_ffdd :=_babfg [_geaf ._eefad ];
_ffdd {_ddgbcb =_ceece ;}else if _geaf .fontFlags ()&_ddef !=0{for _acgfc ,_aeda :=range _babfg {if _eb .Contains (_geaf ._eefad ,_acgfc ){_ddgbcb =_aeda ;break ;};};};if _geaf .Encoding ==nil {return _ddgbcb ,nil ,nil ;};switch _decd :=_geaf .Encoding .(type ){case *_df .PdfObjectName :return string (*_decd ),nil ,nil ;
case *_df .PdfObjectDictionary :_adacc ,_effbf :=_df .GetName (_decd .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _effbf {_ddgbcb =_adacc .String ();};if _cdaa :=_decd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_cdaa !=nil {_gcaed ,_feab :=_df .GetArray (_cdaa );if !_feab {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_decd ,_decd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_df .ErrTypeError ;};_gcfdgg ,_eceec =_aff .FromFontDifferences (_gcaed );};return _ddgbcb ,_gcfdgg ,_eceec ;default:_dda .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_geaf .Encoding ,_geaf .Encoding );
return "",nil ,_df .ErrTypeError ;};};func (_bgefa fontCommon )fontFlags ()int {if _bgefa ._fedff ==nil {return 0;};return _bgefa ._fedff ._adagba ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_fggef int ,_bbaeg *PdfPage )error ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ffdec *PdfShadingType5 )ToPdfObject ()_df .PdfObject {_ffdec .PdfShading .ToPdfObject ();_faded ,_fccbb :=_ffdec .getShadingDict ();if _fccbb !=nil {_dda .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ffdec .BitsPerCoordinate !=nil {_faded .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ffdec .BitsPerCoordinate );};if _ffdec .BitsPerComponent !=nil {_faded .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ffdec .BitsPerComponent );
};if _ffdec .VerticesPerRow !=nil {_faded .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_ffdec .VerticesPerRow );};if _ffdec .Decode !=nil {_faded .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ffdec .Decode );};
if _ffdec .Function !=nil {if len (_ffdec .Function )==1{_faded .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffdec .Function [0].ToPdfObject ());}else {_agdee :=_df .MakeArray ();for _ ,_aageb :=range _ffdec .Function {_agdee .Append (_aageb .ToPdfObject ());
};_faded .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agdee );};};return _ffdec ._gfded ;};

// ToPdfObject implements interface PdfModel.
func (_agab *PdfAnnotationFreeText )ToPdfObject ()_df .PdfObject {_agab .PdfAnnotation .ToPdfObject ();_fbf :=_agab ._cdd ;_acb :=_fbf .PdfObject .(*_df .PdfObjectDictionary );_agab .PdfAnnotationMarkup .appendToPdfDictionary (_acb );_acb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_acb .SetIfNotNil ("\u0044\u0041",_agab .DA );_acb .SetIfNotNil ("\u0051",_agab .Q );_acb .SetIfNotNil ("\u0052\u0043",_agab .RC );_acb .SetIfNotNil ("\u0044\u0053",_agab .DS );_acb .SetIfNotNil ("\u0043\u004c",_agab .CL );_acb .SetIfNotNil ("\u0049\u0054",_agab .IT );
_acb .SetIfNotNil ("\u0042\u0045",_agab .BE );_acb .SetIfNotNil ("\u0052\u0044",_agab .RD );_acb .SetIfNotNil ("\u0042\u0053",_agab .BS );_acb .SetIfNotNil ("\u004c\u0045",_agab .LE );return _fbf ;};func (_ggc *PdfReader )newPdfActionNamedFromDict (_abbd *_df .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_abbd .Get ("\u004e")},nil ;
};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_egffb :=Permissions {};_egffb .DocMDP =docMdp ;_dagc :=_df .MakeDict ();_dagc .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_egffb ._ecagb =_dagc ;return &_egffb ;};

// WriteToFile writes the Appender output to file specified by path.
func (_bfcc *PdfAppender )WriteToFile (outputPath string )error {_aadgc ,_bcfg :=_bgd .Create (outputPath );if _bcfg !=nil {return _bcfg ;};defer _aadgc .Close ();return _bfcc .Write (_aadgc );};

// ToPdfObject implements interface PdfModel.
func (_cbcb *PdfAnnotationPrinterMark )ToPdfObject ()_df .PdfObject {_cbcb .PdfAnnotation .ToPdfObject ();_ceee :=_cbcb ._cdd ;_agaa :=_ceee .PdfObject .(*_df .PdfObjectDictionary );_agaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_agaa .SetIfNotNil ("\u004d\u004e",_cbcb .MN );return _ceee ;};

// A returns the value of the A component of the color.
func (_bbbg *PdfColorLab )A ()float64 {return _bbbg [1]};

// PdfVersion returns version of the PDF file.
func (_bdbcd *PdfReader )PdfVersion ()_df .Version {return _bdbcd ._fcaac .PdfVersion ()};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _df .PdfObject ;V _df .PdfObject ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_effdf .Lock ();defer _effdf .Unlock ();_eeaad =author };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_gebe *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gabd :=vals [0];if _gabd < 0.0||_gabd > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gabd );
return nil ,ErrColorOutOfRange ;};_cdag :=vals [1];if _cdag < 0.0||_cdag > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gabd );return nil ,ErrColorOutOfRange ;
};_bddg :=vals [2];if _bddg < 0.0||_bddg > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gabd );return nil ,ErrColorOutOfRange ;};_cbdd :=NewPdfColorDeviceRGB (_gabd ,_cdag ,_bddg );
return _cbdd ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_df .PdfObjectString ;Author *_df .PdfObjectString ;Subject *_df .PdfObjectString ;Keywords *_df .PdfObjectString ;Creator *_df .PdfObjectString ;Producer *_df .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_df .PdfObjectName ;
_fcac *_df .PdfObjectDictionary ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_eeggc *PdfReader )PageFromIndirectObject (ind *_df .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_eeggc .PageList )!=len (_eeggc ._gaded ){return nil ,0,_fa .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _dbgd ,_aeebc :=range _eeggc ._gaded {if _aeebc ==ind {return _eeggc .PageList [_dbgd ],_dbgd +1,nil ;};};return nil ,0,_fa .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// SetFlag sets the flag for the field.
func (_ebdad *PdfField )SetFlag (flag FieldFlag ){_ebdad .Ff =_df .MakeInteger (int64 (flag ))};

// ParsePdfObject parses input pdf object into given output intent.
func (_cgacc *PdfOutputIntent )ParsePdfObject (object _df .PdfObject )error {_efebe ,_bccd :=_df .GetDict (object );if !_bccd {_dda .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _fa .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_cgacc ._ebcg =_efebe ;_cgacc .Type ,_ =_efebe .GetString ("\u0054\u0079\u0070\u0065");_aabgd ,_bccd :=_efebe .GetString ("\u0053");if _bccd {switch _aabgd {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_cgacc .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_cgacc .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_cgacc .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_cgacc .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_cgacc .S =PdfOutputIntentTypeX ;
};};_cgacc .OutputCondition ,_ =_efebe .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_cgacc .OutputConditionIdentifier ,_ =_efebe .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_cgacc .RegistryName ,_ =_efebe .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_cgacc .Info ,_ =_efebe .GetString ("\u0049\u006e\u0066\u006f");if _baffa ,_bccfd :=_df .GetStream (_efebe .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_bccfd {_cgacc .ColorComponents ,_ =_df .GetIntVal (_baffa .Get ("\u004e"));_fccae ,_acdbfa :=_df .DecodeStream (_baffa );if _acdbfa !=nil {return _acdbfa ;};_cgacc .DestOutputProfile =_fccae ;};return nil ;};

// RemovePage removes a page by number.
func (_egfg *PdfAppender )RemovePage (pageNum int ){_gbgg :=pageNum -1;_egfg ._fdbe =append (_egfg ._fdbe [0:_gbgg ],_egfg ._fdbe [pageNum :]...);};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_effdf .Lock ();defer _effdf .Unlock ();_ebfaf =title };

// GetCharMetrics returns the char metrics for character code `code`.
func (_ffdaaf pdfFontType3 )GetCharMetrics (code _aff .CharCode )(_fc .CharMetrics ,bool ){if _gbgbf ,_eefd :=_ffdaaf ._cdbc [code ];_eefd {return _fc .CharMetrics {Wx :_gbgbf },true ;};if _fc .IsStdFont (_fc .StdFontName (_ffdaaf ._eefad )){return _fc .CharMetrics {Wx :250},true ;
};return _fc .CharMetrics {},false ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_daf :=NewPdfAnnotation ();_ebf :=&PdfAnnotationPopup {};_ebf .PdfAnnotation =_daf ;_daf .SetContext (_ebf );return _ebf ;};func (_cbff *Image )samplesTrimPadding (_abbba []uint32 )[]uint32 {_fdggbb :=_cbff .ColorComponents *int (_cbff .Width )*int (_cbff .Height );
if len (_abbba )==_fdggbb {return _abbba ;};_gdcfce :=make ([]uint32 ,_fdggbb );_ebeeb :=int (_cbff .Width )*_cbff .ColorComponents ;var _fcec ,_gdedg ,_gbfce ,_dgcfg int ;_aagae :=_ae .BytesPerLine (int (_cbff .Width ),int (_cbff .BitsPerComponent ),_cbff .ColorComponents );
for _fcec =0;_fcec < int (_cbff .Height );_fcec ++{_gdedg =_fcec *int (_cbff .Width );_gbfce =_fcec *_aagae ;for _dgcfg =0;_dgcfg < _ebeeb ;_dgcfg ++{_gdcfce [_gdedg +_dgcfg ]=_abbba [_gbfce +_dgcfg ];};};return _gdcfce ;};func (_befaa *PdfWriter )setWriter (_bccgd _bc .Writer ){_befaa ._eedgc =_befaa ._aaafd ;
_befaa ._cgccf =_a .NewWriter (_bccgd );};

// GetPageNumber returns the page number that has been assigned to the K object.
func (_gaddg *KDict )GetPageNumber ()int64 {return _gaddg ._efgaf };

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ReplacePage replaces the original page to a new page.
func (_cabe *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_ceeca :=pageNum -1;for _dded :=range _cabe ._fdbe {if _dded ==_ceeca {_dgc :=page .Duplicate ();_gafea (_dgc );_cabe ._fdbe [_dded ]=_dgc ;};};};func (_effg *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_ceafd *Outline )Insert (index uint ,item *OutlineItem ){_afgea :=uint (len (_ceafd .Entries ));if index > _afgea {index =_afgea ;};_ceafd .Entries =append (_ceafd .Entries [:index ],append ([]*OutlineItem {item },_ceafd .Entries [index :]...)...);
};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_cegb *PdfColorspaceDeviceNAttributes )ToPdfObject ()_df .PdfObject {_egdd :=_df .MakeDict ();if _cegb .Subtype !=nil {_egdd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cegb .Subtype );};_egdd .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_cegb .Colorants );
_egdd .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_cegb .Process );_egdd .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_cegb .MixingHints );if _cegb ._cecbb !=nil {_cegb ._cecbb .PdfObject =_egdd ;return _cegb ._cecbb ;
};return _egdd ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_bfdef :=&PdfPageResources {};_bfdef ._bcgbd =_df .MakeDict ();return _bfdef ;};func (_bef *PdfReader )newPdfActionThreadFromDict (_cbf *_df .PdfObjectDictionary )(*PdfActionThread ,error ){_adaf ,_dfd :=_daca (_cbf .Get ("\u0046"));
if _dfd !=nil {return nil ,_dfd ;};return &PdfActionThread {D :_cbf .Get ("\u0044"),B :_cbf .Get ("\u0042"),F :_adaf },nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_egaa *PdfOutlineItem )GetContainingPdfObject ()_df .PdfObject {return _egaa ._ceda };func (_gggfc *PdfWriter )hasObject (_ggfce _df .PdfObject )bool {_ ,_fcbfb :=_gggfc ._bfaf [_ggfce ];return _fcbfb ;};

// IsCID returns true if the underlying font is CID.
func (_eebfg *PdfFont )IsCID ()bool {return _eebfg .baseFields ().isCIDFont ()};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _df .PdfObject ;FontFamily _df .PdfObject ;FontStretch _df .PdfObject ;FontWeight _df .PdfObject ;Flags _df .PdfObject ;FontBBox _df .PdfObject ;ItalicAngle _df .PdfObject ;Ascent _df .PdfObject ;Descent _df .PdfObject ;
Leading _df .PdfObject ;CapHeight _df .PdfObject ;XHeight _df .PdfObject ;StemV _df .PdfObject ;StemH _df .PdfObject ;AvgWidth _df .PdfObject ;MaxWidth _df .PdfObject ;MissingWidth _df .PdfObject ;FontFile _df .PdfObject ;FontFile2 _df .PdfObject ;FontFile3 _df .PdfObject ;
CharSet _df .PdfObject ;_adagba int ;_fgffb float64 ;*fontFile ;_bbgg *_fc .TtfType ;

// Additional entries for CIDFonts
Style _df .PdfObject ;Lang _df .PdfObject ;FD _df .PdfObject ;CIDSet _df .PdfObject ;_defeg *_df .PdfIndirectObject ;};

// GetAction returns the PDF action for the annotation link.
func (_fac *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _fac ._dadd !=nil {return _fac ._dadd ,nil ;};if _fac .A ==nil {return nil ,nil ;};if _fac ._efe ==nil {return nil ,nil ;};_eca ,_fabe :=_fac ._efe .loadAction (_fac .A );if _fabe !=nil {return nil ,_fabe ;
};_fac ._dadd =_eca ;return _fac ._dadd ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_bcfde *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _bcfde ._afaba ==nil {_bcfde .GetAnnotations ();};_bcfde ._afaba =append (_bcfde ._afaba ,annot );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dgdg pdfCIDFontType2 )GetCharMetrics (code _aff .CharCode )(_fc .CharMetrics ,bool ){if _ebcd ,_dfdag :=_dgdg ._bada [code ];_dfdag {return _fc .CharMetrics {Wx :_ebcd },true ;};_gecf :=rune (code );_cbeae ,_dabd :=_dgdg ._fdcd [_gecf ];if !_dabd {_cbeae =int (_dgdg ._dfbb );
};return _fc .CharMetrics {Wx :float64 (_cbeae )},true ;};func (_cdcdd *DSS )generateHashMap (_bagec []*_df .PdfObjectStream )(map[string ]*_df .PdfObjectStream ,error ){_cgca :=map[string ]*_df .PdfObjectStream {};for _ ,_fbeea :=range _bagec {_bbgb ,_ddfa :=_df .DecodeStream (_fbeea );
if _ddfa !=nil {return nil ,_ddfa ;};_aaaed ,_ddfa :=_edeac (_bbgb );if _ddfa !=nil {return nil ,_ddfa ;};_cgca [string (_aaaed )]=_fbeea ;};return _cgca ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_fg *PdfAction )GetContext ()PdfModel {if _fg ==nil {return nil ;};return _fg ._agf ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bbdd *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbce ,_gcgb :=color .(*PdfColorCalRGB );if !_gcgb {_dda .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_afga :=_cbce .A ();_dgee :=_cbce .B ();_acaf :=_cbce .C ();X :=_bbdd .Matrix [0]*_fe .Pow (_afga ,_bbdd .Gamma [0])+_bbdd .Matrix [3]*_fe .Pow (_dgee ,_bbdd .Gamma [1])+_bbdd .Matrix [6]*_fe .Pow (_acaf ,_bbdd .Gamma [2]);
Y :=_bbdd .Matrix [1]*_fe .Pow (_afga ,_bbdd .Gamma [0])+_bbdd .Matrix [4]*_fe .Pow (_dgee ,_bbdd .Gamma [1])+_bbdd .Matrix [7]*_fe .Pow (_acaf ,_bbdd .Gamma [2]);Z :=_bbdd .Matrix [2]*_fe .Pow (_afga ,_bbdd .Gamma [0])+_bbdd .Matrix [5]*_fe .Pow (_dgee ,_bbdd .Gamma [1])+_bbdd .Matrix [8]*_fe .Pow (_acaf ,_bbdd .Gamma [2]);
_gdca :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cgag :=-0.969256*X +1.875992*Y +0.041556*Z ;_gefde :=0.055648*X +-0.204043*Y +1.057311*Z ;_gdca =_fe .Min (_fe .Max (_gdca ,0),1.0);_cgag =_fe .Min (_fe .Max (_cgag ,0),1.0);_gefde =_fe .Min (_fe .Max (_gefde ,0),1.0);
return NewPdfColorDeviceRGB (_gdca ,_cgag ,_gefde ),nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_bbagf *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bbagf .Base ==nil {return nil ,_fa .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bbagf .Base .ColorToRGB (color );};func (_gcgfe *PdfPage )generateImage (_aafbg string ,_gbcea float64 ,_ecede string ,_gfbb _d .Color )([]byte ,error ){_dcfgc ,_dfddd ,_ceccb ,_ :=_gfbb .RGBA ();_afcg :=_d .RGBA {uint8 (_dcfgc >>8),uint8 (_dfddd >>8),uint8 (_ceccb >>8),255};
_ceabe :=_d .RGBA {0xff,0xff,0xff,0x00};_ffabe ,_gdada :=_gcgfe .loadFont (_ecede );if _gdada !=nil {return nil ,_gdada ;};_dbfcb :=_eb .Replace (_aafbg ,"\u0009","\u0020\u0020\u0020\u0020",-1);_aefgg :=_eb .Split (_dbfcb ,"\u000a");_gbef :=1.0;for _ ,_abfd :=range _aefgg {if float64 (len (_abfd ))*_gbcea > _gbef {_gbef =float64 (len (_abfd ))*_gbcea ;
};};if _gbef > _gcgfe .MediaBox .Width (){_gbef =_gcgfe .MediaBox .Width ();};_cdbeg :=_ab .NewUniform (_afcg );_fegg :=_ab .NewUniform (_ceabe );_gccad :=_ab .NewRGBA (_ab .Rect (0,0,int (_gbef ),int (_gbcea *1.5*float64 (len (_aefgg )))));_ga .Draw (_gccad ,_gccad .Bounds (),_fegg ,_ab .Pt (0,0),_ga .Src );
_gdbde :=_bb .NewContext ();_gdbde .SetDPI (72);_gdbde .SetFont (_ffabe );_gdbde .SetFontSize (_gbcea );_gdbde .SetHinting (_ag .HintingNone );_gdbde .SetClip (_gccad .Bounds ());_gdbde .SetDst (_gccad );_gdbde .SetSrc (_cdbeg );_decg :=50;_dfaed :=10+int (_gdbde .PointToFixed (_gbcea )>>6);
_ababd :=_bb .Pt (_decg ,_dfaed );for _ ,_egedb :=range _aefgg {_ ,_gdada =_gdbde .DrawString (_eb .Replace (_egedb ,"\u000d","",-1),_ababd );if _gdada !=nil {return nil ,_gdada ;};_ababd .Y +=_gdbde .PointToFixed (_gbcea *1.5);};_daadd :=new (_c .Buffer );
if _gafe :=_f .Encode (_daadd ,_gccad );_gafe !=nil {return nil ,_gafe ;};return _daadd .Bytes (),nil ;};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_efcbe *_df .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_df .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_df .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_df .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_df .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_df .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_df .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_df .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_df .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_df .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_df .PdfObjectDictionary ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_abeee *PdfPageResources )HasXObjectByName (keyName _df .PdfObjectName )bool {_febege ,_ :=_abeee .GetXObjectByName (keyName );return _febege !=nil ;};

// Encoder returns the font's text encoder.
func (_bebg pdfCIDFontType0 )Encoder ()_aff .TextEncoder {return _bebg ._bfcdd };

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_cfec _df .PdfObject ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_edfb *PdfPageResources )GetPatternByName (keyName _df .PdfObjectName )(*PdfPattern ,bool ){if _edfb .Pattern ==nil {return nil ,false ;};_ccad ,_fffbg :=_df .TraceToDirectObject (_edfb .Pattern ).(*_df .PdfObjectDictionary );if !_fffbg {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edfb .Pattern );
return nil ,false ;};if _aeeabc :=_ccad .Get (keyName );_aeeabc !=nil {_agcceb ,_ebedb :=_gbea (_aeeabc );if _ebedb !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_ebedb );
return nil ,false ;};return _agcceb ,true ;};return nil ,false ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_eddbe *PdfPage )GetPageAsIndirectObject ()*_df .PdfIndirectObject {return _eddbe ._edccc };

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bfc *PdfAnnotationWidget )Field ()*PdfField {return _bfc ._cff };

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_daag :=NewPdfAnnotation ();_abg :=&PdfAnnotationRedact {};_abg .PdfAnnotation =_daag ;_abg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_daag .SetContext (_abg );return _abg ;};

// String returns a string describing the font descriptor.
func (_feaa *PdfFontDescriptor )String ()string {var _egff []string ;if _feaa .FontName !=nil {_egff =append (_egff ,_feaa .FontName .String ());};if _feaa .FontFamily !=nil {_egff =append (_egff ,_feaa .FontFamily .String ());};if _feaa .fontFile !=nil {_egff =append (_egff ,_feaa .fontFile .String ());
};if _feaa ._bbgg !=nil {_egff =append (_egff ,_feaa ._bbgg .String ());};_egff =append (_egff ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_feaa .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_eb .Join (_egff ,"\u002c\u0020"));
};

// CustomKeys returns all custom info keys as list.
func (_aadga *PdfInfo )CustomKeys ()[]string {if _aadga ._fcac ==nil {return nil ;};_ebfdb :=make ([]string ,len (_aadga ._fcac .Keys ()));for _ ,_fbgg :=range _aadga ._fcac .Keys (){_ebfdb =append (_ebfdb ,_fbgg .String ());};return _ebfdb ;};

// KValue is a wrapper object to hold various type of K's children objects.
type KValue struct{_dccg *KDict ;_dffeb _df .PdfObject ;_agabbd *int ;};func _ecfc (_cdfa []byte )(_bdbbd ,_ggbef string ,_cgbbb error ){_dda .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cdfa ));
_bfdeg :=_ebced .FindIndex (_cdfa );if _bfdeg ==nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_df .ErrTypeError ;};_efagb :=_bfdeg [1];_eeea :=_eb .Index (string (_cdfa [_efagb :]),_agbg );if _eeea < 0{_bdbbd =string (_cdfa [_efagb :]);return _bdbbd ,"",nil ;};_bcfbg :=_efagb +_eeea ;_bdbbd =string (_cdfa [_efagb :_bcfbg ]);_dgagf :=_bcfbg ;
_eeea =_eb .Index (string (_cdfa [_dgagf :]),_ggeg );if _eeea < 0{_dda .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cgbbb );
return "","",_df .ErrTypeError ;};_egfggc :=_dgagf +_eeea ;_ggbef =string (_cdfa [_dgagf :_egfggc ]);return _bdbbd ,_ggbef ,nil ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_bbafa *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_edcce :=_bbafa ._fcaac .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _edcce {return nil ,_fa .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_edcce {return _bbafa ,nil ;};if _bbafa ._agfcg [revisionNumber ]!=nil {return _bbafa ._agfcg [revisionNumber ],nil ;};_bdga :=_bbafa ;for _ffebf :=_edcce -1;_ffebf >=revisionNumber ;_ffebf --{_ecgb ,_gdgde :=_bdga .GetPreviousRevision ();
if _gdgde !=nil {return nil ,_gdgde ;};_bbafa ._agfcg [_ffebf ]=_ecgb ;_bdga =_ecgb ;};return _bdga ,nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_gdgg *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_ffdda *PdfTransformParamsDocMDP )ToPdfObject ()_df .PdfObject {_fgfg :=_df .MakeDict ();_fgfg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ffdda .Type );_fgfg .SetIfNotNil ("\u0056",_ffdda .V );_fgfg .SetIfNotNil ("\u0050",_ffdda .P );return _fgfg ;
};

// PrintArea returns the value of the printArea.
func (_fbca *ViewerPreferences )PrintArea ()PageBoundary {return _fbca ._bggda };

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_adbab :=&PdfColorspaceCalRGB {};_adbab .BlackPoint =[]float64 {0.0,0.0,0.0};_adbab .Gamma =[]float64 {1.0,1.0,1.0};_adbab .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _adbab ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;func (_ceacb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_ceacb .fontCommon };

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_faadc *PdfReader )GetEncryptionMethod ()string {_dbecdg :=_faadc ._fcaac .GetCrypter ();return _dbecdg .String ();};func (_acfg *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_afdf *PdfColorspaceCalRGB )ToPdfObject ()_df .PdfObject {_defca :=&_df .PdfObjectArray {};_defca .Append (_df .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_bfdc :=_df .MakeDict ();if _afdf .WhitePoint !=nil {_ecdd :=_df .MakeArray (_df .MakeFloat (_afdf .WhitePoint [0]),_df .MakeFloat (_afdf .WhitePoint [1]),_df .MakeFloat (_afdf .WhitePoint [2]));
_bfdc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ecdd );}else {_dda .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _afdf .BlackPoint !=nil {_abab :=_df .MakeArray (_df .MakeFloat (_afdf .BlackPoint [0]),_df .MakeFloat (_afdf .BlackPoint [1]),_df .MakeFloat (_afdf .BlackPoint [2]));_bfdc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_abab );
};if _afdf .Gamma !=nil {_efbba :=_df .MakeArray (_df .MakeFloat (_afdf .Gamma [0]),_df .MakeFloat (_afdf .Gamma [1]),_df .MakeFloat (_afdf .Gamma [2]));_bfdc .Set ("\u0047\u0061\u006dm\u0061",_efbba );};if _afdf .Matrix !=nil {_dbdfa :=_df .MakeArray (_df .MakeFloat (_afdf .Matrix [0]),_df .MakeFloat (_afdf .Matrix [1]),_df .MakeFloat (_afdf .Matrix [2]),_df .MakeFloat (_afdf .Matrix [3]),_df .MakeFloat (_afdf .Matrix [4]),_df .MakeFloat (_afdf .Matrix [5]),_df .MakeFloat (_afdf .Matrix [6]),_df .MakeFloat (_afdf .Matrix [7]),_df .MakeFloat (_afdf .Matrix [8]));
_bfdc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dbdfa );};_defca .Append (_bfdc );if _afdf ._ggbge !=nil {_afdf ._ggbge .PdfObject =_defca ;return _afdf ._ggbge ;};return _defca ;};func (_adgd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// ToPdfObject implements interface PdfModel.
func (_eefgb *PdfAnnotationProjection )ToPdfObject ()_df .PdfObject {_eefgb .PdfAnnotation .ToPdfObject ();_fbfe :=_eefgb ._cdd ;_eab :=_fbfe .PdfObject .(*_df .PdfObjectDictionary );_eefgb .PdfAnnotationMarkup .appendToPdfDictionary (_eab );return _fbfe ;
};func (_gdgdc *PdfReader )newPdfSignatureFromIndirect (_ggbcb *_df .PdfIndirectObject )(*PdfSignature ,error ){_eeaafd ,_adgeg :=_ggbcb .PdfObject .(*_df .PdfObjectDictionary );if !_adgeg {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _fdgde ,_dfbde :=_gdgdc ._fgdef .GetModelFromPrimitive (_ggbcb ).(*PdfSignature );_dfbde {return _fdgde ,nil ;};_ggaaf :=&PdfSignature {};_ggaaf ._aecge =_ggbcb ;_ggaaf .Type ,_ =_df .GetName (_eeaafd .Get ("\u0054\u0079\u0070\u0065"));
_ggaaf .Filter ,_adgeg =_df .GetName (_eeaafd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_adgeg {_dda .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ggaaf .SubFilter ,_ =_df .GetName (_eeaafd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_ggaaf .Contents ,_adgeg =_df .GetString (_eeaafd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_adgeg {_dda .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _adacg ,_afgc :=_df .GetArray (_eeaafd .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_afgc {_ggaaf .Reference =_df .MakeArray ();for _ ,_eagc :=range _adacg .Elements (){_abgagf ,_aeaa :=_df .GetDict (_eagc );
if !_aeaa {_dda .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_abdef ,_dbdee :=_gdgdc .newPdfSignatureReferenceFromDict (_abgagf );if _dbdee !=nil {return nil ,_dbdee ;};_ggaaf .Reference .Append (_abdef .ToPdfObject ());};};_ggaaf .Cert =_eeaafd .Get ("\u0043\u0065\u0072\u0074");_ggaaf .ByteRange ,_ =_df .GetArray (_eeaafd .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_ggaaf .Changes ,_ =_df .GetArray (_eeaafd .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_ggaaf .Name ,_ =_df .GetString (_eeaafd .Get ("\u004e\u0061\u006d\u0065"));_ggaaf .M ,_ =_df .GetString (_eeaafd .Get ("\u004d"));_ggaaf .Location ,_ =_df .GetString (_eeaafd .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_ggaaf .Reason ,_ =_df .GetString (_eeaafd .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_ggaaf .ContactInfo ,_ =_df .GetString (_eeaafd .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_ggaaf .R ,_ =_df .GetInt (_eeaafd .Get ("\u0052"));
_ggaaf .V ,_ =_df .GetInt (_eeaafd .Get ("\u0056"));_ggaaf .PropBuild ,_ =_df .GetDict (_eeaafd .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_ggaaf .PropAuthTime ,_ =_df .GetInt (_eeaafd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_ggaaf .PropAuthType ,_ =_df .GetName (_eeaafd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_gdgdc ._fgdef .Register (_ggbcb ,_ggaaf );return _ggaaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcd *PdfActionNamed )ToPdfObject ()_df .PdfObject {_gcd .PdfAction .ToPdfObject ();_fce :=_gcd ._dfc ;_gee :=_fce .PdfObject .(*_df .PdfObjectDictionary );_gee .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeNamed )));_gee .SetIfNotNil ("\u004e",_gcd .N );
return _fce ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _df .PdfObject ;Popup *PdfAnnotationPopup ;CA _df .PdfObject ;RC _df .PdfObject ;CreationDate _df .PdfObject ;IRT _df .PdfObject ;Subj _df .PdfObject ;RT _df .PdfObject ;IT _df .PdfObject ;ExData _df .PdfObject ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_abade *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_cfbdc :=RC4_128bit ;if options !=nil {_cfbdc =options .Algorithm ;};_dgbea :=_gfa .PermOwner ;if options !=nil {_dgbea =options .Permissions ;};var _edbad _gbg .Filter ;
switch _cfbdc {case RC4_128bit :_edbad =_gbg .NewFilterV2 (16);case AES_128bit :_edbad =_gbg .NewFilterAESV2 ();case AES_256bit :_edbad =_gbg .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_ebgfb ,_dbbgg ,_ccdeab :=_df .PdfCryptNewEncrypt (_edbad ,userPass ,ownerPass ,_dgbea );if _ccdeab !=nil {return _ccdeab ;};_abade ._geefe =_ebgfb ;if _dbbgg .Major !=0{_abade .SetVersion (_dbbgg .Major ,_dbbgg .Minor );};_abade ._gbfaag =_dbbgg .Encrypt ;
_abade ._ddedfd ,_abade ._abbbdg =_dbbgg .ID0 ,_dbbgg .ID1 ;_gdbf :=_df .MakeIndirectObject (_dbbgg .Encrypt );_abade ._dfbcc =_gdbf ;_abade .addObject (_gdbf );return nil ;};func (_fgbc fontCommon )asPdfObjectDictionary (_bgcff string )*_df .PdfObjectDictionary {if _bgcff !=""&&_fgbc ._adgg !=""&&_bgcff !=_fgbc ._adgg {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_bgcff ,_fgbc );
}else if _bgcff ==""&&_fgbc ._adgg ==""{_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fgbc );
}else if _fgbc ._adgg ==""{_fgbc ._adgg =_bgcff ;};_abgbg :=_df .MakeDict ();_abgbg .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0046\u006f\u006e\u0074"));_abgbg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_df .MakeName (_fgbc ._eefad ));
_abgbg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName (_fgbc ._adgg ));if _fgbc ._fedff !=nil {_abgbg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_fgbc ._fedff .ToPdfObject ());};if _fgbc ._ccef !=nil {_abgbg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fgbc ._ccef );
}else if _fgbc ._babga !=nil {_gabab ,_dgef :=_fgbc ._babga .Stream ();if _dgef !=nil {_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_dgef );
}else {_abgbg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gabab );};};return _abgbg ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gdcg *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_eaefc ,_bdgc :=color .(*PdfColorPattern );if !_bdgc {_dda .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _eaefc .Color ==nil {return color ,nil ;};if _gdcg .UnderlyingCS ==nil {return nil ,_fa .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gdcg .UnderlyingCS .ColorToRGB (_eaefc .Color );
};var _ pdfFont =(*pdfFontType3 )(nil );

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _df .PdfObjectName ;};func (_dadac *PdfReader )buildNameNodes (_dcgf *_df .PdfIndirectObject ,_efcac map[_df .PdfObject ]struct{})error {if _dcgf ==nil {return nil ;};if _ ,_aefbc :=_efcac [_dcgf ];
_aefbc {_dda .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_dcgf .ObjectNumber );return nil ;};_efcac [_dcgf ]=struct{}{};
_fgbd ,_fafdd :=_dcgf .PdfObject .(*_df .PdfObjectDictionary );if !_fafdd {return _fa .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _eccg ,_cdcdf :=_df .GetDict (_fgbd .Get ("\u0044\u0065\u0073t\u0073"));
_cdcdf {_fgbgd ,_ccaecb :=_df .GetArray (_eccg .Get ("\u004b\u0069\u0064\u0073"));if !_ccaecb {return _fa .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_dda .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_fgbgd );
for _gbge ,_fgbdg :=range _fgbgd .Elements (){_ffgebf ,_abbcg :=_df .GetIndirect (_fgbdg );if !_abbcg {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_ffgebf );
return _fa .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_fgbgd .Set (_gbge ,_ffgebf );_cdfe :=_dadac .buildNameNodes (_ffgebf ,_efcac );if _cdfe !=nil {return _cdfe ;
};};};if _bedgb ,_cbca :=_df .GetDict (_fgbd );_cbca {if !_df .IsNullObject (_bedgb .Get ("\u004b\u0069\u0064\u0073")){if _fcecd ,_aggfeg :=_df .GetArray (_bedgb .Get ("\u004b\u0069\u0064\u0073"));_aggfeg {for _aggeda ,_gfcad :=range _fcecd .Elements (){if _gaffb ,_eagab :=_df .GetIndirect (_gfcad );
_eagab {_fcecd .Set (_aggeda ,_gaffb );_efefb :=_dadac .buildNameNodes (_gaffb ,_efcac );if _efefb !=nil {return _efefb ;};};};};};};return nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _df .PdfObject ;LE _df .PdfObject ;BS _df .PdfObject ;IC _df .PdfObject ;BE _df .PdfObject ;IT _df .PdfObject ;Measure _df .PdfObject ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_gdcfe :=&PdfAppender {_gega :reader ._afccd ,Reader :reader ,_cedf :reader ._fcaac ,_cda :reader ._ggebf };_bdgf ,_fcaf :=_gdcfe ._gega .Seek (0,_bc .SeekEnd );
if _fcaf !=nil {return nil ,_fcaf ;};_gdcfe ._bdeb =_bdgf ;if _ ,_fcaf =_gdcfe ._gega .Seek (0,_bc .SeekStart );_fcaf !=nil {return nil ,_fcaf ;};_gdcfe ._acee ,_fcaf =NewPdfReaderWithOpts (_gdcfe ._gega ,opts );if _fcaf !=nil {return nil ,_fcaf ;};for _ ,_gdd :=range _gdcfe .Reader .GetObjectNums (){if _gdcfe ._cfef < _gdd {_gdcfe ._cfef =_gdd ;
};};_gdcfe ._dacc =_gdcfe ._cedf .GetXrefTable ();_gdcfe ._cbdg =_gdcfe ._cedf .GetXrefOffset ();_gdcfe ._fdbe =append (_gdcfe ._fdbe ,_gdcfe ._acee .PageList ...);_gdcfe ._cfdd =make (map[_df .PdfObject ]struct{});_gdcfe ._dcea =make (map[_df .PdfObject ]int64 );
_gdcfe ._dbedd =make (map[_df .PdfObject ]struct{});_gdcfe ._efae =_gdcfe ._acee .AcroForm ;_gdcfe ._acde =_gdcfe ._acee .DSS ;if opts !=nil {_gdcfe ._bcfa =opts .Password ;};if encryptOptions !=nil {_gdcfe ._ffg =encryptOptions ;};return _gdcfe ,nil ;
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_gdf *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// Encoder returns the font's text encoder.
func (_gadaf *pdfFontSimple )Encoder ()_aff .TextEncoder {if _gadaf ._babff !=nil {return _gadaf ._babff ;};if _gadaf ._fdbbd !=nil {return _gadaf ._fdbbd ;};_efbee ,_ :=_aff .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _efbee ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_beacb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bddce []float64 ;for _feef :=0;_feef < _beacb .GetNumComponents ();_feef ++{_bddce =append (_bddce ,0.0,1.0);};return _bddce ;};func _ecdgf ()string {_effdf .Lock ();defer _effdf .Unlock ();
return _eeaad };

// GetCharMetrics returns the char metrics for character code `code`.
func (_adfdd pdfFontType0 )GetCharMetrics (code _aff .CharCode )(_fc .CharMetrics ,bool ){if _adfdd .DescendantFont ==nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_adfdd );
return _fc .CharMetrics {},false ;};return _adfdd .DescendantFont .GetCharMetrics (code );};

// GetSubFilter returns SubFilter value or empty string.
func (_ecece *pdfSignDictionary )GetSubFilter ()string {_cfegdf :=_ecece .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _cfegdf ==nil {return "";};if _bcdbg ,_aadfe :=_df .GetNameVal (_cfegdf );_aadfe {return _bcdbg ;};return "";};

// WatermarkImageOptions contains options for configuring the image watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;Angle float64 ;};func (_beeg *PdfReader )newPdfAnnotationRichMediaFromDict (_bbdb *_df .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_dccc :=&PdfAnnotationRichMedia {};
_dccc .RichMediaSettings =_bbdb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_dccc .RichMediaContent =_bbdb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _dccc ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_gccg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fa .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_ecfd ,_eabg :=_ae .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bggcb ,img ._gdfe );if _eabg !=nil {return img ,_eabg ;};_eedc ,_eabg :=_ae .GrayConverter .Convert (_ecfd );if _eabg !=nil {return img ,_eabg ;
};return _fdaa (_eedc .Base ()),nil ;};

// ToInteger convert to an integer format.
func (_gcab *PdfColorLab )ToInteger (bits int )[3]uint32 {_ccac :=_fe .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ccac *_gcab .L ()),uint32 (_ccac *_gcab .A ()),uint32 (_ccac *_gcab .B ())};};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_eccac *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_cgda *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_bfcde ,_ ,_aaaf :=_cgda .CharcodesToUnicodeWithStats (_cgda .BytesToCharcodes (data ));_egfad :=_aff .ExpandLigatures (_bfcde );return _egfad ,_aa .RuneCountInString (_egfad ),_aaaf ;
};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_fecc *PdfPageResources )HasShadingByName (keyName _df .PdfObjectName )bool {_ ,_bfbgb :=_fecc .GetShadingByName (keyName );return _bfbgb ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_badab *fontFile )loadFromSegments (_ccefd ,_bfdf []byte )error {_dda .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_ccefd ),len (_bfdf ));
_badce :=_badab .parseASCIIPart (_ccefd );if _badce !=nil {return _badce ;};_dda .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_badab );if len (_bfdf )==0{return nil ;};_dda .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_badab );
return nil ;};func (_dgeec *Image )getSuitableEncoder ()(_df .StreamEncoder ,error ){var (_ggbf ,_cdfc =int (_dgeec .Width ),int (_dgeec .Height );_ebca =make (map[string ]bool );_dfce =true ;_ggecfc =false ;_cgfeg =func ()*_df .DCTEncoder {return _df .NewDCTEncoder ()};
_bcbf =func ()*_df .DCTEncoder {_ecebe :=_df .NewDCTEncoder ();_ecebe .BitsPerComponent =16;return _ecebe };);for _ebccc :=0;_ebccc < _cdfc ;_ebccc ++{for _bgecc :=0;_bgecc < _ggbf ;_bgecc ++{_ggde ,_ffee :=_dgeec .ColorAt (_bgecc ,_ebccc );if _ffee !=nil {return nil ,_ffee ;
};_dfbbg ,_dfgga ,_bagf ,_ccegf :=_ggde .RGBA ();if _dfce &&(_dfbbg !=_dfgga ||_dfbbg !=_bagf ||_dfgga !=_bagf ){_dfce =false ;};if !_ggecfc {switch _ggde .(type ){case _d .NRGBA :_ggecfc =_ccegf > 0;};};_ebca [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_dfbbg ,_dfgga ,_bagf )]=true ;
if len (_ebca )> 2&&_ggecfc {return _bcbf (),nil ;};};};if _ggecfc ||len (_dgeec ._bggcb )> 0{return _df .NewFlateEncoder (),nil ;};if len (_ebca )<=2{_bcee :=_dgeec .ConvertToBinary ();if _bcee !=nil {return nil ,_bcee ;};return _df .NewJBIG2Encoder (),nil ;
};if _dfce {return _cgfeg (),nil ;};if _dgeec .ColorComponents ==1{if _dgeec .BitsPerComponent ==1{return _df .NewJBIG2Encoder (),nil ;}else if _dgeec .BitsPerComponent ==8{_cfad :=_df .NewDCTEncoder ();_cfad .ColorComponents =1;return _cfad ,nil ;};}else if _dgeec .ColorComponents ==3{if _dgeec .BitsPerComponent ==8{return _cgfeg (),nil ;
}else if _dgeec .BitsPerComponent ==16{return _bcbf (),nil ;};}else if _dgeec .ColorComponents ==4{_ffbe :=_bcbf ();_ffbe .ColorComponents =4;return _ffbe ,nil ;};return _bcbf (),nil ;};func (_dcag *PdfReader )newPdfAnnotationSoundFromDict (_cadb *_df .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_geb :=PdfAnnotationSound {};
_cbg ,_ccaec :=_dcag .newPdfAnnotationMarkupFromDict (_cadb );if _ccaec !=nil {return nil ,_ccaec ;};_geb .PdfAnnotationMarkup =_cbg ;_geb .Name =_cadb .Get ("\u004e\u0061\u006d\u0065");_geb .Sound =_cadb .Get ("\u0053\u006f\u0075n\u0064");return &_geb ,nil ;
};func (_bfa *PdfAnnotation )String ()string {_efgb :="";_efc ,_fgg :=_bfa .ToPdfObject ().(*_df .PdfIndirectObject );if _fgg {_efgb =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bfa ._bcaf ,_efc .PdfObject .String ());};return _efgb ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_dfbbc *OutlineItem )ToPdfObject ()_df .PdfObject {_aafbfc ,_ :=_dfbbc .ToPdfOutlineItem ();return _aafbfc .ToPdfObject ();};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gffe pdfFontType0 )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){if _gffe .DescendantFont ==nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gffe );
return _fc .CharMetrics {},false ;};return _gffe .DescendantFont .GetRuneMetrics (r );};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_ebgd *LTV )EnableChain (chain []*_bf .Certificate )error {return _ebgd .enable (nil ,chain ,"")};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_df .PdfObjectString ;Q *_df .PdfObjectInteger ;DS *_df .PdfObjectString ;RV _df .PdfObject ;};

// IDTree represents the ID tree dictionary where the format of the content
// is using Name Trees as described in chapter 7.9.6.
type IDTree struct{

// Limits shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array.
Limits *_df .PdfObjectArray ;

// Names shall be an array of the form
//
// [ key1 value1 key2 value2 … keyn valuen]
//
// where each keyi shall be a string and the corresponding valuei shall be the object
// associated with that key. The keys shall be sorted in lexical order, as described below.
Names *_df .PdfObjectArray ;

// Kids Shall be an array of indirect references to the immediate children of this node.
Kids []*IDTree ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_fdfg *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_adbfc :=_fdfg .actualFont ();if _adbfc ==nil {_dda .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_fdfg ._bbeb );
return _fc .CharMetrics {},false ;};if _bcfbd ,_fddf :=_adbfc .GetRuneMetrics (r );_fddf {return _bcfbd ,true ;};if _eccd ,_facd :=_fdfg .GetFontDescriptor ();_facd ==nil &&_eccd !=nil {return _fc .CharMetrics {Wx :_eccd ._fgffb },true ;};_dda .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fdfg );
return _fc .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_dafd *PdfAnnotationPopup )ToPdfObject ()_df .PdfObject {_dafd .PdfAnnotation .ToPdfObject ();_eced :=_dafd ._cdd ;_fede :=_eced .PdfObject .(*_df .PdfObjectDictionary );_fede .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0050\u006f\u0070u\u0070"));
_fede .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dafd .Parent );_fede .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dafd .Open );return _eced ;};

// String returns a string representation of the field.
func (_effb *PdfField )String ()string {if _bfff ,_bfde :=_effb .ToPdfObject ().(*_df .PdfIndirectObject );_bfde {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_effb ._baac ,_bfff .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_cgdf *PdfAnnotationRedact )ToPdfObject ()_df .PdfObject {_cgdf .PdfAnnotation .ToPdfObject ();_bedad :=_cgdf ._cdd ;_gbgc :=_bedad .PdfObject .(*_df .PdfObjectDictionary );_cgdf .PdfAnnotationMarkup .appendToPdfDictionary (_gbgc );_gbgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_gbgc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgdf .QuadPoints );_gbgc .SetIfNotNil ("\u0049\u0043",_cgdf .IC );_gbgc .SetIfNotNil ("\u0052\u004f",_cgdf .RO );_gbgc .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_cgdf .OverlayText );
_gbgc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_cgdf .Repeat );_gbgc .SetIfNotNil ("\u0044\u0041",_cgdf .DA );_gbgc .SetIfNotNil ("\u0051",_cgdf .Q );return _bedad ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_cfcdg *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_edfg :=_bgb .NewReader (img .getBase ());_gfbd :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bfae :=_bgb .NewWriter (_gfbd );
_ddcbg :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;_dgag :=make ([]uint32 ,3);var (_bbaa error ;_ffc ,_gcffa ,_gffa ,_cgcc ,_deeda ,_acaa float64 ;);for {_bbaa =_edfg .ReadSamples (_dgag );if _bbaa ==_bc .EOF {break ;}else if _bbaa !=nil {return img ,_bbaa ;
};_ffc =float64 (_dgag [0])/_ddcbg ;_gcffa =float64 (_dgag [1])/_ddcbg ;_gffa =float64 (_dgag [2])/_ddcbg ;_cgcc =_cfcdg .Matrix [0]*_fe .Pow (_ffc ,_cfcdg .Gamma [0])+_cfcdg .Matrix [3]*_fe .Pow (_gcffa ,_cfcdg .Gamma [1])+_cfcdg .Matrix [6]*_fe .Pow (_gffa ,_cfcdg .Gamma [2]);
_deeda =_cfcdg .Matrix [1]*_fe .Pow (_ffc ,_cfcdg .Gamma [0])+_cfcdg .Matrix [4]*_fe .Pow (_gcffa ,_cfcdg .Gamma [1])+_cfcdg .Matrix [7]*_fe .Pow (_gffa ,_cfcdg .Gamma [2]);_acaa =_cfcdg .Matrix [2]*_fe .Pow (_ffc ,_cfcdg .Gamma [0])+_cfcdg .Matrix [5]*_fe .Pow (_gcffa ,_cfcdg .Gamma [1])+_cfcdg .Matrix [8]*_fe .Pow (_gffa ,_cfcdg .Gamma [2]);
_ffc =3.240479*_cgcc +-1.537150*_deeda +-0.498535*_acaa ;_gcffa =-0.969256*_cgcc +1.875992*_deeda +0.041556*_acaa ;_gffa =0.055648*_cgcc +-0.204043*_deeda +1.057311*_acaa ;_ffc =_fe .Min (_fe .Max (_ffc ,0),1.0);_gcffa =_fe .Min (_fe .Max (_gcffa ,0),1.0);
_gffa =_fe .Min (_fe .Max (_gffa ,0),1.0);_dgag [0]=uint32 (_ffc *_ddcbg );_dgag [1]=uint32 (_gcffa *_ddcbg );_dgag [2]=uint32 (_gffa *_ddcbg );if _bbaa =_bfae .WriteSamples (_dgag );_bbaa !=nil {return img ,_bbaa ;};};return _fdaa (&_gfbd ),nil ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_aabab :=&PdfShadingType2 {};_aabab .PdfShading =&PdfShading {};_aabab .PdfShading ._gfded =_df .MakeIndirectObject (_df .MakeDict ());_aabab .PdfShading ._adfab =_aabab ;return _aabab ;};func (_ffe *PdfReader )newPdfAnnotationHighlightFromDict (_dfe *_df .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_bbb :=PdfAnnotationHighlight {};
_ddcc ,_ggd :=_ffe .newPdfAnnotationMarkupFromDict (_dfe );if _ggd !=nil {return nil ,_ggd ;};_bbb .PdfAnnotationMarkup =_ddcc ;_bbb .QuadPoints =_dfe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bbb ,nil ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_ffgbc :=&PdfShadingPatternType3 {};_ffgbc .Matrix =_df .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_ffgbc .PdfPattern =&PdfPattern {};_ffgbc .PdfPattern .PatternType =int64 (*_df .MakeInteger (2));
_ffgbc .PdfPattern ._ggcbe =_ffgbc ;_ffgbc .PdfPattern ._cbde =_df .MakeIndirectObject (_df .MakeDict ());return _ffgbc ;};

// Tab order types.
type TabOrderType string ;

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_aff .SimpleEncoder ,error ){_fafdb ,_cggd :=_edagd (basefont );if _cggd !=nil {return nil ,nil ,_cggd ;};_bfdb ,_baaec :=_fafdb .Encoder ().(_aff .SimpleEncoder );
if !_baaec {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_fafdb .Encoder ());
};_dbbc :=make (map[rune ]_aff .GlyphName );for _egaca :=range alphabet {if _ ,_dabb :=_bfdb .RuneToCharcode (_egaca );!_dabb {_ ,_fgabg :=_fafdb ._eadd .Read (_egaca );if !_fgabg {_dda .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_egaca ,_egaca );
continue ;};_eaca ,_fgabg :=_aff .RuneToGlyph (_egaca );if !_fgabg {_dda .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_egaca ,_egaca );continue ;};
if len (_dbbc )>=255{return nil ,nil ,_fa .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_dbbc [_egaca ]=_eaca ;};};var (_bcfd []_aff .CharCode ;_dagb []_aff .CharCode ;);for _fbed :=_aff .CharCode (1);_fbed <=0xff;_fbed ++{_gecc ,_fcfb :=_bfdb .CharcodeToRune (_fbed );if !_fcfb {_bcfd =append (_bcfd ,_fbed );continue ;};if _ ,_fcfb =alphabet [_gecc ];
!_fcfb {_dagb =append (_dagb ,_fbed );};};_acgag :=append (_bcfd ,_dagb ...);if len (_acgag )< len (_dbbc ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_dbbc ),len (_acgag ));
};_gcbb :=make ([]rune ,0,len (_dbbc ));for _eedcf :=range _dbbc {_gcbb =append (_gcbb ,_eedcf );};_dc .Slice (_gcbb ,func (_ecfa ,_bbgba int )bool {return _gcbb [_ecfa ]< _gcbb [_bbgba ]});_eadg :=make (map[_aff .CharCode ]_aff .GlyphName ,len (_gcbb ));
for _ ,_gdggc :=range _gcbb {_fcfe :=_acgag [0];_acgag =_acgag [1:];_eadg [_fcfe ]=_dbbc [_gdggc ];};_bfdb =_aff .ApplyDifferences (_bfdb ,_eadg );_fafdb .SetEncoder (_bfdb );return &PdfFont {_bbeb :&_fafdb },_bfdb ,nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _df .PdfObject ;Sy _df .PdfObject ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bcef *Image )ToJBIG2Image ()(*_df .JBIG2Image ,error ){_efggad ,_ggdda :=_bcef .ToGoImage ();if _ggdda !=nil {return nil ,_ggdda ;};return _df .GoImageToJBIG2 (_efggad ,_df .JB2ImageAutoThreshold );};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_gcfg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_gcfg .Mask ()|fl .Mask ())};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_fcaba *pdfFontSimple )ToPdfObject ()_df .PdfObject {if _fcaba ._abgf ==nil {_fcaba ._abgf =&_df .PdfIndirectObject {};};_eebc :=_fcaba .baseFields ().asPdfObjectDictionary ("");_fcaba ._abgf .PdfObject =_eebc ;if _fcaba .FirstChar !=nil {_eebc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fcaba .FirstChar );
};if _fcaba .LastChar !=nil {_eebc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fcaba .LastChar );};if _fcaba .Widths !=nil {_eebc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fcaba .Widths );};if _fcaba .Encoding !=nil {_eebc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fcaba .Encoding );
}else if _fcaba ._babff !=nil {_cggc :=_fcaba ._babff .ToPdfObject ();if _cggc !=nil {_eebc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cggc );};};return _fcaba ._abgf ;};func (_badgc *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _badgc ._fedff ==nil &&_badgc .DescendantFont !=nil {return _badgc .DescendantFont .FontDescriptor ();
};return _badgc ._fedff ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_fdbdd :=NewPdfAnnotation ();_abeg :=&PdfAnnotationFileAttachment {};_abeg .PdfAnnotation =_fdbdd ;_abeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdbdd .SetContext (_abeg );return _abeg ;
};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_edfcc *PdfRectangle )Normalize (){if _edfcc .Llx > _edfcc .Urx {_edfcc .Llx ,_edfcc .Urx =_edfcc .Urx ,_edfcc .Llx ;};if _edfcc .Lly > _edfcc .Ury {_edfcc .Lly ,_edfcc .Ury =_edfcc .Ury ,_edfcc .Lly ;};};func _afecg (_fdfeb _df .PdfObject )(PdfFunction ,error ){_fdfeb =_df .ResolveReference (_fdfeb );
if _cbbd ,_bfccf :=_fdfeb .(*_df .PdfObjectStream );_bfccf {_eafcbd :=_cbbd .PdfObjectDictionary ;_caeed ,_faaab :=_eafcbd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_df .PdfObjectInteger );if !_faaab {_dda .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fa .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_caeed ==0{return _dfcfd (_cbbd );}else if *_caeed ==4{return _ceead (_cbbd );
}else {return nil ,_fa .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _geee ,_egcg :=_fdfeb .(*_df .PdfIndirectObject );_egcg {_gfgdc ,_cgcda :=_geee .PdfObject .(*_df .PdfObjectDictionary );
if !_cgcda {_dda .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fa .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_cgefe ,_cgcda :=_gfgdc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_df .PdfObjectInteger );
if !_cgcda {_dda .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fa .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_cgefe ==2{return _dbggc (_geee );}else if *_cgefe ==3{return _cfebag (_geee );}else {return nil ,_fa .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dbdb ,_agcb :=_fdfeb .(*_df .PdfObjectDictionary );
_agcb {_aafaa ,_cedd :=_dbdb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_df .PdfObjectInteger );if !_cedd {_dda .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fa .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_aafaa ==2{return _dbggc (_dbdb );}else if *_aafaa ==3{return _cfebag (_dbdb );
}else {return nil ,_fa .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_dda .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_fdfeb );
return nil ,_fa .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_fcdb *PdfColorCalRGB )GetNumComponents ()int {return 3};

// String returns a string that describes `base`.
func (_ecdf fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_ecdf .coreString ());};

// SetAction sets the PDF action for the annotation link.
func (_bdge *PdfAnnotationLink )SetAction (action *PdfAction ){_bdge ._dadd =action ;if action ==nil {_bdge .A =nil ;};};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _df .PdfObject ;Name _df .PdfObject ;State _df .PdfObject ;StateModel _df .PdfObject ;};func _eggf (_ffgaa _df .PdfObject )(*PdfShading ,error ){_bfed :=&PdfShading {};var _fcgac *_df .PdfObjectDictionary ;
if _efafc ,_daeec :=_df .GetIndirect (_ffgaa );_daeec {_bfed ._gfded =_efafc ;_deec ,_ffba :=_efafc .PdfObject .(*_df .PdfObjectDictionary );if !_ffba {_dda .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_df .ErrTypeError ;};_fcgac =_deec ;}else if _eade ,_ggfb :=_df .GetStream (_ffgaa );_ggfb {_bfed ._gfded =_eade ;_fcgac =_eade .PdfObjectDictionary ;}else if _ccdda ,_agdabad :=_df .GetDict (_ffgaa );_agdabad {_bfed ._gfded =_ccdda ;_fcgac =_ccdda ;
}else {_dda .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_ffgaa );return nil ,_df .ErrTypeError ;};if _fcgac ==nil {_dda .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fa .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ffgaa =_fcgac .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ffgaa ==nil {_dda .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ffgaa =_df .TraceToDirectObject (_ffgaa );_efgbc ,_cdbef :=_ffgaa .(*_df .PdfObjectInteger );if !_cdbef {_dda .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ffgaa );
return nil ,_df .ErrTypeError ;};if *_efgbc < 1||*_efgbc > 7{_dda .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_efgbc );
return nil ,_df .ErrTypeError ;};_bfed .ShadingType =_efgbc ;_ffgaa =_fcgac .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _ffgaa ==nil {_dda .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gdabg ,_efbg :=NewPdfColorspaceFromPdfObject (_ffgaa );if _efbg !=nil {_dda .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_efbg );
return nil ,_efbg ;};_bfed .ColorSpace =_gdabg ;_ffgaa =_fcgac .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _ffgaa !=nil {_ffgaa =_df .TraceToDirectObject (_ffgaa );_bbfc ,_dddcf :=_ffgaa .(*_df .PdfObjectArray );if !_dddcf {_dda .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ffgaa );
return nil ,_df .ErrTypeError ;};_bfed .Background =_bbfc ;};_ffgaa =_fcgac .Get ("\u0042\u0042\u006f\u0078");if _ffgaa !=nil {_ffgaa =_df .TraceToDirectObject (_ffgaa );_dgbbd ,_bggdff :=_ffgaa .(*_df .PdfObjectArray );if !_bggdff {_dda .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ffgaa );
return nil ,_df .ErrTypeError ;};_dagg ,_cdefg :=NewPdfRectangle (*_dgbbd );if _cdefg !=nil {_dda .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cdefg );return nil ,_cdefg ;};_bfed .BBox =_dagg ;};_ffgaa =_fcgac .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _ffgaa !=nil {_ffgaa =_df .TraceToDirectObject (_ffgaa );_gefa ,_dgacc :=_ffgaa .(*_df .PdfObjectBool );if !_dgacc {_dda .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffgaa );
return nil ,_df .ErrTypeError ;};_bfed .AntiAlias =_gefa ;};switch *_efgbc {case 1:_caddd ,_bcac :=_dfgbf (_fcgac );if _bcac !=nil {return nil ,_bcac ;};_caddd .PdfShading =_bfed ;_bfed ._adfab =_caddd ;return _bfed ,nil ;case 2:_agaeac ,_effbb :=_aabbfd (_fcgac );
if _effbb !=nil {return nil ,_effbb ;};_agaeac .PdfShading =_bfed ;_bfed ._adfab =_agaeac ;return _bfed ,nil ;case 3:_cfdcg ,_faefab :=_dafac (_fcgac );if _faefab !=nil {return nil ,_faefab ;};_cfdcg .PdfShading =_bfed ;_bfed ._adfab =_cfdcg ;return _bfed ,nil ;
case 4:_eadbf ,_aaad :=_aagb (_fcgac );if _aaad !=nil {return nil ,_aaad ;};_eadbf .PdfShading =_bfed ;_bfed ._adfab =_eadbf ;return _bfed ,nil ;case 5:_deecd ,_bbefc :=_bbcdg (_fcgac );if _bbefc !=nil {return nil ,_bbefc ;};_deecd .PdfShading =_bfed ;
_bfed ._adfab =_deecd ;return _bfed ,nil ;case 6:_dede ,_cdcfe :=_afedab (_fcgac );if _cdcfe !=nil {return nil ,_cdcfe ;};_dede .PdfShading =_bfed ;_bfed ._adfab =_dede ;return _bfed ,nil ;case 7:_bbbaa ,_gadceb :=_cecfg (_fcgac );if _gadceb !=nil {return nil ,_gadceb ;
};_bbbaa .PdfShading =_bfed ;_bfed ._adfab =_bbbaa ;return _bfed ,nil ;};return nil ,_fa .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func _afage (_fbfaa map[_fc .GID ]int ,_cfbf uint16 )*_df .PdfObjectArray {_eaecd :=&_df .PdfObjectArray {};
_bfec :=_fc .GID (_cfbf );for _agcf :=_fc .GID (0);_agcf < _bfec ;{_agdcf ,_ebbcc :=_fbfaa [_agcf ];if !_ebbcc {_agcf ++;continue ;};_abbga :=_agcf ;for _ebec :=_abbga +1;_ebec < _bfec ;_ebec ++{if _dabeb ,_gccag :=_fbfaa [_ebec ];!_gccag ||_agdcf !=_dabeb {break ;
};_abbga =_ebec ;};_eaecd .Append (_df .MakeInteger (int64 (_agcf )));_eaecd .Append (_df .MakeInteger (int64 (_abbga )));_eaecd .Append (_df .MakeInteger (int64 (_agdcf )));_agcf =_abbga +1;};return _eaecd ;};func (_bbaab *PdfReader )newPdfOutlineItemFromIndirectObject (_fbbec *_df .PdfIndirectObject )(*PdfOutlineItem ,error ){_fdfbe ,_aabgf :=_fbbec .PdfObject .(*_df .PdfObjectDictionary );
if !_aabgf {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dagbe :=NewPdfOutlineItem ();_aaffa :=_fdfbe .Get ("\u0054\u0069\u0074l\u0065");
if _aaffa ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_deafa ,_ddedec :=_df .GetString (_aaffa );if !_ddedec {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_aaffa );};_dagbe .Title =_deafa ;if _ffdce :=_fdfbe .Get ("\u0043\u006f\u0075n\u0074");
_ffdce !=nil {_bcaff ,_bgcaf :=_ffdce .(*_df .PdfObjectInteger );if !_bgcaf {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_ffdce );};_dfea :=int64 (*_bcaff );
_dagbe .Count =&_dfea ;};if _dabdg :=_fdfbe .Get ("\u0044\u0065\u0073\u0074");_dabdg !=nil {_dagbe .Dest =_df .ResolveReference (_dabdg );if !_bbaab ._caabc {_ecbfa :=_bbaab .traverseObjectData (_dagbe .Dest );if _ecbfa !=nil {return nil ,_ecbfa ;};};};
if _fdfge :=_fdfbe .Get ("\u0041");_fdfge !=nil {_dagbe .A =_df .ResolveReference (_fdfge );if !_bbaab ._caabc {_efcgg :=_bbaab .traverseObjectData (_dagbe .A );if _efcgg !=nil {return nil ,_efcgg ;};};};if _dfaag :=_fdfbe .Get ("\u0053\u0045");_dfaag !=nil {_dagbe .SE =nil ;
};if _gdccb :=_fdfbe .Get ("\u0043");_gdccb !=nil {_dagbe .C =_df .ResolveReference (_gdccb );};if _afffb :=_fdfbe .Get ("\u0046");_afffb !=nil {_dagbe .F =_df .ResolveReference (_afffb );};return _dagbe ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_fgegg *PdfPattern )GetContainingPdfObject ()_df .PdfObject {return _fgegg ._cbde };

// GetContentStream returns the pattern cell's content stream
func (_cacaa *PdfTilingPattern )GetContentStream ()([]byte ,error ){_ggcab ,_ ,_aaecb :=_cacaa .GetContentStreamWithEncoder ();return _ggcab ,_aaecb ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_faae :=PdfColorDeviceRGB {r ,g ,b };return &_faae ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_ddbd :=&PdfAppender {_gega :reader ._afccd ,Reader :reader ,_cedf :reader ._fcaac ,_cda :reader ._ggebf };_bgfcf ,_fdce :=_ddbd ._gega .Seek (0,_bc .SeekEnd );if _fdce !=nil {return nil ,_fdce ;
};_ddbd ._bdeb =_bgfcf ;if _ ,_fdce =_ddbd ._gega .Seek (0,_bc .SeekStart );_fdce !=nil {return nil ,_fdce ;};_ddbd ._acee ,_fdce =NewPdfReader (_ddbd ._gega );if _fdce !=nil {return nil ,_fdce ;};for _ ,_ddde :=range _ddbd .Reader .GetObjectNums (){if _ddbd ._cfef < _ddde {_ddbd ._cfef =_ddde ;
};};_ddbd ._dacc =_ddbd ._cedf .GetXrefTable ();_ddbd ._cbdg =_ddbd ._cedf .GetXrefOffset ();_ddbd ._fdbe =append (_ddbd ._fdbe ,_ddbd ._acee .PageList ...);_ddbd ._cfdd =make (map[_df .PdfObject ]struct{});_ddbd ._dcea =make (map[_df .PdfObject ]int64 );
_ddbd ._dbedd =make (map[_df .PdfObject ]struct{});_ddbd ._efae =_ddbd ._acee .AcroForm ;_ddbd ._acde =_ddbd ._acee .DSS ;return _ddbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fgbb *PdfActionJavaScript )ToPdfObject ()_df .PdfObject {_fgbb .PdfAction .ToPdfObject ();_fbbe :=_fgbb ._dfc ;_bbf :=_fbbe .PdfObject .(*_df .PdfObjectDictionary );_bbf .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeJavaScript )));_bbf .SetIfNotNil ("\u004a\u0053",_fgbb .JS );
return _fbbe ;};

// WriteString outputs the object as it is to be written to file.
func (_cgabcg *PdfTransformParamsDocMDP )WriteString ()string {return _cgabcg .ToPdfObject ().WriteString ();};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_aeedg *PdfWriter )SetOptimizer (optimizer Optimizer ){_aeedg ._cbcgf =optimizer };

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_adab DefaultImageHandler )NewImageFromGoImage (goimg _ab .Image )(*Image ,error ){_deeaf ,_gacef :=_ae .FromGoImage (goimg );if _gacef !=nil {return nil ,_gacef ;};_ffae :=_fdaa (_deeaf .Base ());return &_ffae ,nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_eegbg *PdfPageResources )ToPdfObject ()_df .PdfObject {_fabaa :=_eegbg ._bcgbd ;_fabaa .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_eegbg .ExtGState );if _eegbg ._fbeee !=nil {_eegbg .ColorSpace =_eegbg ._fbeee .ToPdfObject ();};
_fabaa .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eegbg .ColorSpace );_fabaa .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_eegbg .Pattern );_fabaa .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_eegbg .Shading );
_fabaa .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_eegbg .XObject );_fabaa .SetIfNotNil ("\u0046\u006f\u006e\u0074",_eegbg .Font );_fabaa .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_eegbg .ProcSet );_fabaa .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_eegbg .Properties );
return _fabaa ;};func _gbdbg ()string {_effdf .Lock ();defer _effdf .Unlock ();return _ebfaf };func (_gfef *PdfAppender )updateObjectsDeep (_bge _df .PdfObject ,_cfcd map[_df .PdfObject ]struct{}){if _cfcd ==nil {_cfcd =map[_df .PdfObject ]struct{}{};};
if _ ,_fadbb :=_cfcd [_bge ];_fadbb ||_bge ==nil {return ;};_cfcd [_bge ]=struct{}{};_dcec :=_df .ResolveReferencesDeep (_bge ,_gfef ._cda );if _dcec !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcec );};switch _dcd :=_bge .(type ){case *_df .PdfIndirectObject :switch {case _dcd .GetParser ()==_gfef ._acee ._fcaac :return ;
case _dcd .GetParser ()==_gfef .Reader ._fcaac :_dffge ,_ :=_gfef ._acee .GetIndirectObjectByNumber (int (_dcd .ObjectNumber ));_gaga ,_ddgf :=_dffge .(*_df .PdfIndirectObject );if _ddgf &&_gaga !=nil {if _gaga .PdfObject !=_dcd .PdfObject &&_gaga .PdfObject .WriteString ()!=_dcd .PdfObject .WriteString (){if _eb .Contains (_dcd .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_eb .Contains (_dcd .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_gfef .addNewObject (_bge );_gfef ._dcea [_bge ]=_dcd .ObjectNumber ;};};default:_gfef .addNewObject (_bge );};_gfef .updateObjectsDeep (_dcd .PdfObject ,_cfcd );case *_df .PdfObjectArray :for _ ,_fdbg :=range _dcd .Elements (){_gfef .updateObjectsDeep (_fdbg ,_cfcd );
};case *_df .PdfObjectDictionary :for _ ,_eega :=range _dcd .Keys (){_gfef .updateObjectsDeep (_dcd .Get (_eega ),_cfcd );};case *_df .PdfObjectStreams :if _dcd .GetParser ()!=_gfef ._acee ._fcaac {for _ ,_fbfa :=range _dcd .Elements (){_gfef .updateObjectsDeep (_fbfa ,_cfcd );
};};case *_df .PdfObjectStream :switch {case _dcd .GetParser ()==_gfef ._acee ._fcaac :return ;case _dcd .GetParser ()==_gfef .Reader ._fcaac :if _cdb ,_bec :=_gfef ._acee ._fcaac .LookupByReference (_dcd .PdfObjectReference );_bec ==nil {var _gcce bool ;
if _daaf ,_bbcd :=_df .GetStream (_cdb );_bbcd &&_c .Equal (_daaf .Stream ,_dcd .Stream ){_gcce =true ;};if _eeec ,_dcgb :=_df .GetDict (_cdb );_gcce &&_dcgb {_gcce =_eeec .WriteString ()==_dcd .PdfObjectDictionary .WriteString ();};if _gcce {return ;};
};if _dcd .ObjectNumber !=0{_gfef ._dcea [_bge ]=_dcd .ObjectNumber ;};default:if _ ,_gbdgf :=_gfef ._cfdd [_bge ];!_gbdgf {_gfef .addNewObject (_bge );};};_gfef .updateObjectsDeep (_dcd .PdfObjectDictionary ,_cfcd );};};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_ebabd *Image )AlphaMap (mapFunc AlphaMapFunc ){for _fgfeg ,_dbcc :=range _ebabd ._bggcb {_ebabd ._bggcb [_fgfeg ]=mapFunc (_dbcc );};};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cgg :=NewPdfAnnotation ();_gbcb :=&PdfAnnotationPolygon {};_gbcb .PdfAnnotation =_cgg ;_gbcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgg .SetContext (_gbcb );return _gbcb ;};func _aaged (_bbgd []byte )bool {if len (_bbgd )< 4{return true ;
};for _cbda :=range _bbgd [:4]{_cfdfc :=rune (_cbda );if !_b .Is (_b .ASCII_Hex_Digit ,_cfdfc )&&!_b .IsSpace (_cfdfc ){return true ;};};return false ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_aeec FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_aeec .Mask ()&^fl .Mask ())};const (NonFullScreenPageModeUseNone NonFullScreenPageMode ="\u0055s\u0065\u004e\u006f\u006e\u0065";NonFullScreenPageModeUseOutlines NonFullScreenPageMode ="U\u0073\u0065\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073";
NonFullScreenPageModeUseThumbs NonFullScreenPageMode ="\u0055s\u0065\u0054\u0068\u0075\u006d\u0062s";NonFullScreenPageModeUseOC NonFullScreenPageMode ="\u0055\u0073\u0065O\u0043";DirectionL2R Direction ="\u004c\u0032\u0052";DirectionR2L Direction ="\u0052\u0032\u004c";
PageBoundaryMediaBox PageBoundary ="\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078";PageBoundaryCropBox PageBoundary ="\u0043r\u006f\u0070\u0042\u006f\u0078";PageBoundaryBleedBox PageBoundary ="\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078";PageBoundaryTrimBox PageBoundary ="\u0054r\u0069\u006d\u0042\u006f\u0078";
PageBoundaryArtBox PageBoundary ="\u0041\u0072\u0074\u0042\u006f\u0078";PrintScalingNone PrintScaling ="\u004e\u006f\u006e\u0065";PrintScalingAppDefault PrintScaling ="\u0041\u0070\u0070\u0044\u0065\u0066\u0061\u0075\u006c\u0074";DuplexNone Duplex ="\u006e\u006f\u006e\u0065";
DuplexSimplex Duplex ="\u0053i\u006d\u0070\u006c\u0065\u0078";DuplexFlipShortEdge Duplex ="\u0044\u0075\u0070\u006cex\u0046\u006c\u0069\u0070\u0053\u0068\u006f\u0072\u0074\u0045\u0064\u0067\u0065";DuplexFlipLongEdge Duplex ="\u0044u\u0070l\u0065\u0078\u0046\u006c\u0069p\u004c\u006fn\u0067\u0045\u0064\u0067\u0065";
);

// ToPdfObject implements interface PdfModel.
func (_dba *PdfActionMovie )ToPdfObject ()_df .PdfObject {_dba .PdfAction .ToPdfObject ();_cde :=_dba ._dfc ;_baa :=_cde .PdfObject .(*_df .PdfObjectDictionary );_baa .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeMovie )));_baa .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_dba .Annotation );
_baa .SetIfNotNil ("\u0054",_dba .T );_baa .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_dba .Operation );return _cde ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_ebce *PdfFieldButton )GetType ()ButtonType {_decb :=ButtonTypeCheckbox ;if _ebce .Ff !=nil {if (uint32 (*_ebce .Ff )&FieldFlagPushbutton .Mask ())> 0{_decb =ButtonTypePush ;}else if (uint32 (*_ebce .Ff )&FieldFlagRadio .Mask ())> 0{_decb =ButtonTypeRadio ;
};};return _decb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bcegc *PdfShadingType1 )ToPdfObject ()_df .PdfObject {_bcegc .PdfShading .ToPdfObject ();_edbe ,_dfac :=_bcegc .getShadingDict ();if _dfac !=nil {_dda .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bcegc .Domain !=nil {_edbe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bcegc .Domain );};if _bcegc .Matrix !=nil {_edbe .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bcegc .Matrix );};if _bcegc .Function !=nil {if len (_bcegc .Function )==1{_edbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcegc .Function [0].ToPdfObject ());
}else {_ddfge :=_df .MakeArray ();for _ ,_bgedd :=range _bcegc .Function {_ddfge .Append (_bgedd .ToPdfObject ());};_edbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddfge );};};return _bcegc ._gfded ;};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;func _cbcd (_dacd *_df .PdfObjectDictionary )(*PdfFieldChoice ,error ){_cgde :=&PdfFieldChoice {};_cgde .Opt ,_ =_df .GetArray (_dacd .Get ("\u004f\u0070\u0074"));_cgde .TI ,_ =_df .GetInt (_dacd .Get ("\u0054\u0049"));_cgde .I ,_ =_df .GetArray (_dacd .Get ("\u0049"));
return _cgde ,nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_dgeff :=PdfWriter {};_dgeff ._bfaf =map[_df .PdfObject ]struct{}{};_dgeff ._bbedb =[]_df .PdfObject {};_dgeff ._bfaag =map[_df .PdfObject ][]*_df .PdfObjectDictionary {};_dgeff ._affdc =map[_df .PdfObject ]struct{}{};_dgeff ._bbagfg .Major =1;
_dgeff ._bbagfg .Minor =3;_cfbb :=_df .MakeDict ();_ceebg :=[]struct{_dfcfa _df .PdfObjectName ;_fegcgd string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_feaeg ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cgdfg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_ecdgf ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_caega ()},{"\u0054\u0069\u0074l\u0065",_gbdbg ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_aagab ()}};
for _ ,_gcgdd :=range _ceebg {if _gcgdd ._fegcgd !=""{_cfbb .Set (_gcgdd ._dfcfa ,_df .MakeString (_gcgdd ._fegcgd ));};};if _ffecg :=_gabce ();!_ffecg .IsZero (){if _ffgca ,_cbeff :=NewPdfDateFromTime (_ffecg );_cbeff ==nil {_cfbb .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ffgca .ToPdfObject ());
};};if _ebbcd :=_gdead ();!_ebbcd .IsZero (){if _ccbgb ,_bdcbce :=NewPdfDateFromTime (_ebbcd );_bdcbce ==nil {_cfbb .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ccbgb .ToPdfObject ());};};_bgggb :=_df .PdfIndirectObject {};_bgggb .PdfObject =_cfbb ;_dgeff ._edaec =&_bgggb ;
_dgeff .addObject (&_bgggb );_ebbcb :=_df .PdfIndirectObject {};_ggbee :=_df .MakeDict ();_ggbee .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ebbcb .PdfObject =_ggbee ;_dgeff ._dgdge =&_ebbcb ;_dgeff .addObject (_dgeff ._dgdge );
_edadf ,_bdfga :=_eaddc ("\u0077");if _bdfga !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdfga );};_dgeff ._gceae =_edadf ;_ccbdb :=_df .PdfIndirectObject {};_gfggae :=_df .MakeDict ();_gfggae .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0050\u0061\u0067e\u0073"));
_fdgbf :=_df .PdfObjectArray {};_gfggae .Set ("\u004b\u0069\u0064\u0073",&_fdgbf );_gfggae .Set ("\u0043\u006f\u0075n\u0074",_df .MakeInteger (0));_ccbdb .PdfObject =_gfggae ;_dgeff ._daddb =&_ccbdb ;_dgeff ._cfda =map[_df .PdfObject ]struct{}{};_dgeff ._cbef =[]*_df .PdfIndirectObject {};
_dgeff .addObject (_dgeff ._daddb );_ggbee .Set ("\u0050\u0061\u0067e\u0073",&_ccbdb );_dgeff ._afacf =_ggbee ;_dda .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ebbcb );return _dgeff ;};func (_acacfc fontCommon )isCIDFont ()bool {if _acacfc ._adgg ==""{_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_acacfc );
};_eeeb :=false ;switch _acacfc ._adgg {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_eeeb =true ;};_dda .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_eeeb ,_acacfc );
return _eeeb ;};func (_egcgf *PdfReader )loadAnnotations (_gdceb _df .PdfObject )([]*PdfAnnotation ,error ){_deaag ,_bgcgg :=_df .GetArray (_gdceb );if !_bgcgg {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _fdgbg []*PdfAnnotation ;for _ ,_dfffd :=range _deaag .Elements (){_dfffd =_df .ResolveReference (_dfffd );if _ ,_gcdeb :=_dfffd .(*_df .PdfObjectNull );_gcdeb {continue ;};_gdea ,_ccbd :=_dfffd .(*_df .PdfObjectDictionary );_gedb ,_bbcde :=_dfffd .(*_df .PdfIndirectObject );
if _ccbd {_gedb =&_df .PdfIndirectObject {};_gedb .PdfObject =_gdea ;}else {if !_bbcde {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_cefee ,_bbdad :=_egcgf .newPdfAnnotationFromIndirectObject (_gedb );if _bbdad !=nil {return nil ,_bbdad ;};switch _feedb :=_cefee .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_ceecd :=range _egcgf .AcroForm .AllFields (){if _ceecd ._eabc ==_feedb .Parent {_feedb ._cff =_ceecd ;
break ;};};};if _cefee !=nil {_fdgbg =append (_fdgbg ,_cefee );};};return _fdgbg ,nil ;};

// AddOCSPs adds OCSPs to DSS.
func (_fggf *DSS )AddOCSPs (ocsps [][]byte )([]*_df .PdfObjectStream ,error ){return _fggf .add (&_fggf .OCSPs ,_fggf ._bccf ,ocsps );};func (_ggaag PdfFont )actualFont ()pdfFont {if _ggaag ._bbeb ==nil {_dda .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ggaag );
};return _ggaag ._bbeb ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_dcdf :=PdfPage {};_dcdf ._becggd =_df .MakeDict ();_dcdf .Resources =NewPdfPageResources ();_eccce :=_df .PdfIndirectObject {};_eccce .PdfObject =_dcdf ._becggd ;_dcdf ._edccc =&_eccce ;_dcdf ._bbbde =*_dcdf ._becggd ;return &_dcdf ;
};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_aedcg *_df .PdfIndirectObject ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_df .PdfObjectArray ;TI *_df .PdfObjectInteger ;I *_df .PdfObjectArray ;};var (ErrRequiredAttributeMissing =_fa .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fa .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_gggff =_fa .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_fa .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fa .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_abb .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_df .ErrNotSupported );ErrType1CFontNotSupported =_abb .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_df .ErrNotSupported );
ErrType3FontNotSupported =_abb .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_df .ErrNotSupported );
ErrTTCmapNotSupported =_abb .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_df .ErrNotSupported );
ErrSignNotEnoughSpace =_abb .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_abb .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func _caega ()string {_effdf .Lock ();defer _effdf .Unlock ();
return _bddgb };

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fbdb :=&PdfColorspaceSpecialSeparation {};return _fbdb ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_cfaee *PdfFieldText )ToPdfObject ()_df .PdfObject {_cfaee .PdfField .ToPdfObject ();_bded :=_cfaee ._eabc ;_ebbdf :=_bded .PdfObject .(*_df .PdfObjectDictionary );_ebbdf .Set ("\u0046\u0054",_df .MakeName ("\u0054\u0078"));if _cfaee .DA !=nil {_ebbdf .Set ("\u0044\u0041",_cfaee .DA );
};if _cfaee .Q !=nil {_ebbdf .Set ("\u0051",_cfaee .Q );};if _cfaee .DS !=nil {_ebbdf .Set ("\u0044\u0053",_cfaee .DS );};if _cfaee .RV !=nil {_ebbdf .Set ("\u0052\u0056",_cfaee .RV );};if _cfaee .MaxLen !=nil {_ebbdf .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_cfaee .MaxLen );
};return _bded ;};func (_bafbc *PdfReader )buildPageList (_adfea *_df .PdfIndirectObject ,_gcbee *_df .PdfIndirectObject ,_ffgdce map[_df .PdfObject ]struct{})error {if _adfea ==nil {return nil ;};if _ ,_bfeb :=_ffgdce [_adfea ];_bfeb {_dda .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_adfea .ObjectNumber );
return nil ;};_ffgdce [_adfea ]=struct{}{};_adggf ,_acbg :=_adfea .PdfObject .(*_df .PdfObjectDictionary );if !_acbg {return _fa .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_gafggc ,_acbg :=(*_adggf ).Get ("\u0054\u0079\u0070\u0065").(*_df .PdfObjectName );
if !_acbg {if _adggf .Get ("\u004b\u0069\u0064\u0073")==nil {return _fa .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_dda .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_gafggc =_df .MakeName ("\u0050\u0061\u0067e\u0073");_adggf .Set ("\u0054\u0079\u0070\u0065",_gafggc );};_dda .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_gafggc ,_adfea );
if *_gafggc =="\u0050\u0061\u0067\u0065"{_ccece ,_bfab :=_bafbc .newPdfPageFromDict (_adggf );if _bfab !=nil {return _bfab ;};_ccece .setContainer (_adfea );if _gcbee !=nil {_adggf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcbee );};_bafbc ._gaded =append (_bafbc ._gaded ,_adfea );
_bafbc .PageList =append (_bafbc .PageList ,_ccece );return nil ;};if *_gafggc !="\u0050\u0061\u0067e\u0073"{_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_gafggc );
return _fa .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _gcbee !=nil {_adggf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcbee );};if !_bafbc ._caabc {_gaecc :=_bafbc .traverseObjectData (_adfea );if _gaecc !=nil {return _gaecc ;};};_abcd ,_ffccf :=_bafbc ._fcaac .Resolve (_adggf .Get ("\u004b\u0069\u0064\u0073"));
if _ffccf !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _ffccf ;};var _ababe *_df .PdfObjectArray ;
_ababe ,_acbg =_abcd .(*_df .PdfObjectArray );if !_acbg {_edgge ,_fcbdb :=_abcd .(*_df .PdfIndirectObject );if !_fcbdb {return _fa .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ababe ,_acbg =_edgge .PdfObject .(*_df .PdfObjectArray );
if !_acbg {return _fa .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_dda .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ababe );
for _cddg ,_aaeba :=range _ababe .Elements (){_dfdcg ,_gcea :=_df .GetIndirect (_aaeba );if !_gcea {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dfdcg );
return _fa .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ababe .Set (_cddg ,_dfdcg );_ffccf =_bafbc .buildPageList (_dfdcg ,_adfea ,_ffgdce );if _ffccf !=nil {return _ffccf ;
};};return nil ;};

// GetStructRoot gets the StructTreeRoot object
func (_beged *PdfPage )GetStructTreeRoot ()(*_df .PdfObject ,bool ){_ffbg ,_aebc :=_beged ._aebbc .GetCatalogStructTreeRoot ();return &_ffbg ,_aebc ;};

// K returns the value of the key component of the color.
func (_dabfe *PdfColorDeviceCMYK )K ()float64 {return _dabfe [3]};func (_cdbe *pdfFontSimple )addEncoding ()error {var (_eebgf string ;_aefde map[_aff .CharCode ]_aff .GlyphName ;_ggfc _aff .SimpleEncoder ;);if _cdbe .Encoder ()!=nil {_egab ,_bgdac :=_cdbe .Encoder ().(_aff .SimpleEncoder );
if _bgdac &&_egab !=nil {_eebgf =_egab .BaseName ();};};if _cdbe .Encoding !=nil {_cacdc ,_ggce ,_bbbfb :=_cdbe .getFontEncoding ();if _bbbfb !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdbe ._eefad ,_cdbe ._adgg ,_cdbe .Encoding ,_cdbe .Encoding ,_bbbfb );
return _bbbfb ;};if _cacdc !=""{_eebgf =_cacdc ;};_aefde =_ggce ;_ggfc ,_bbbfb =_aff .NewSimpleTextEncoder (_eebgf ,_aefde );if _bbbfb !=nil {return _bbbfb ;};};if _ggfc ==nil {_gfggd :=_cdbe ._fedff ;if _gfggd !=nil {switch _cdbe ._adgg {case "\u0054\u0079\u0070e\u0031":if _gfggd .fontFile !=nil &&_gfggd .fontFile ._eaba !=nil {_dda .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_ggfc =_gfggd .fontFile ._eaba ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _gfggd ._bbgg !=nil {_dda .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_ccfc ,_cfddd :=_gfggd ._bbgg .MakeEncoder ();
if _cfddd ==nil {_ggfc =_ccfc ;};if _cdbe ._babga ==nil {_cdbe ._babga =_gfggd ._bbgg .MakeToUnicode ();};};};};};if _ggfc !=nil {if _aefde !=nil {_dda .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aefde ,_cdbe .baseFields ());
_ggfc =_aff .ApplyDifferences (_ggfc ,_aefde );};_cdbe .SetEncoder (_ggfc );};return nil ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_aefc :=&PdfColorPatternType2 {};return _aefc };

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_dbcgd *PdfPage )AppendContentStream (contentStr string )error {_debc ,_faceg :=_dbcgd .GetContentStreams ();if _faceg !=nil {return _faceg ;};if len (_debc )==0{_debc =[]string {contentStr };return _dbcgd .SetContentStreams (_debc ,_df .NewFlateEncoder ());
};var _eefef _c .Buffer ;_eefef .WriteString (_debc [len (_debc )-1]);_eefef .WriteString ("\u000a");_eefef .WriteString (contentStr );_debc [len (_debc )-1]=_eefef .String ();return _dbcgd .SetContentStreams (_debc ,_df .NewFlateEncoder ());};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_afbd *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eebb :=vals [0];if _eebb < 0.0||_eebb > 1.0{_dda .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _eebb < 0.0{_eebb =0.0;}else if _eebb > 1.0{_eebb =1.0;};return NewPdfColorDeviceGray (_eebb ),nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_abc *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// GetAttachedFiles retrieves all the attached files info and content.
func (_ffgac *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_dcaee :=[]*EmbeddedFile {};_dfbc ,_dcbf :=_ffgac .GetNameDictionary ();if _dcbf !=nil {return nil ,_dcbf ;};if _dfbc ==nil {return _dcaee ,nil ;};_beebd :=_cebcf (_dfbc );if _beebd .EmbeddedFiles ==nil {return nil ,nil ;
};_gdeb :=_beebd .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_bcbbb ,_dfbca :=_gdeb .(*_df .PdfObjectArray );if !_dfbca {return nil ,_fa .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};for _bafga :=1;_bafga < len (_bcbbb .Elements ());_bafga +=2{if _bafga %2!=0{_dagef :=_bcbbb .Get (_bafga );_adda ,_afcgg :=NewPdfFilespecFromObj (_dagef );if _afcgg !=nil {return nil ,_afcgg ;};_bdefe ,_afcgg :=NewEmbeddedFileFromObject (_adda .EF );
if _afcgg !=nil {return nil ,_afcgg ;};_cccdg ,_ccffg :=_adda .F .(*_df .PdfObjectString );if _ccffg {_bdefe .Name =_cccdg .Str ();};_bdefe .Description =_adda .Desc .WriteString ();_bdefe .Relationship =RelationshipUnspecified ;if _adda .AFRelationship !=nil {switch _adda .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_bdefe .Relationship =RelationshipSource ;
case "\u0044\u0061\u0074\u0061":_bdefe .Relationship =RelationshipData ;case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_bdefe .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_bdefe .Relationship =RelationshipSupplement ;
default:_bdefe .Relationship =RelationshipUnspecified ;};};_dcaee =append (_dcaee ,_bdefe );};};return _dcaee ,nil ;};

// GetKDict returns the KDict of the KValue.
func (_bfdd *KValue )GetKDict ()*KDict {return _bfdd ._dccg };func _dbad (_dggcc *_df .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gacbd :=&PdfShadingPattern {};_ccgea :=_dggcc .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _ccgea ==nil {_dda .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cfecf ,_gaff :=_eggf (_ccgea );if _gaff !=nil {_dda .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_gaff );return nil ,_gaff ;
};_gacbd .Shading =_cfecf ;if _faeed :=_dggcc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_faeed !=nil {_gabad ,_baeb :=_faeed .(*_df .PdfObjectArray );if !_baeb {_dda .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_faeed );
return nil ,_df .ErrTypeError ;};_gacbd .Matrix =_gabad ;};if _gccde :=_dggcc .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gccde !=nil {_gacbd .ExtGState =_gccde ;};return _gacbd ,nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;
XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_gcgc *PdfAppender )SetDocInfo (info *PdfInfo ){_gcgc ._bebed =info };

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_fc .CharMetrics ;func (_efadc *PdfWriter )setCatalogVersion (){_efadc ._afacf .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_df .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_efadc ._bbagfg .Major ,_efadc ._bbagfg .Minor )));};


// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_beagg _df .ParserMetadata ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_effdf .Lock ();defer _effdf .Unlock ();_bdcbc =producer };

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_dddc *PdfField )GetContainingPdfObject ()_df .PdfObject {return _dddc ._eabc };func _gcdb (_gdcgd _df .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_dcef :=NewPdfColorspaceSpecialIndexed ();if _gfbg ,_efdg :=_gdcgd .(*_df .PdfIndirectObject );
_efdg {_dcef ._gffg =_gfbg ;};_gdcgd =_df .TraceToDirectObject (_gdcgd );_ffcb ,_ccff :=_gdcgd .(*_df .PdfObjectArray );if !_ccff {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffcb .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_gdcgd =_ffcb .Get (0);_gfcf ,_ccff :=_gdcgd .(*_df .PdfObjectName );if !_ccff {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_gfcf !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_gdcgd =_ffcb .Get (1);_abfe ,_eeag :=DetermineColorspaceNameFromPdfObject (_gdcgd );if _eeag !=nil {return nil ,_eeag ;};if _abfe =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_abfe =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dda .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_abfe );
return nil ,_gggff ;};_gcfdg ,_eeag :=NewPdfColorspaceFromPdfObject (_gdcgd );if _eeag !=nil {return nil ,_eeag ;};_dcef .Base =_gcfdg ;_gdcgd =_ffcb .Get (2);_bged ,_eeag :=_df .GetNumberAsInt64 (_gdcgd );if _eeag !=nil {return nil ,_eeag ;};if _bged > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_dcef .HiVal =int (_bged );_gdcgd =_ffcb .Get (3);_dcef .Lookup =_gdcgd ;_gdcgd =_df .TraceToDirectObject (_gdcgd );var _faede []byte ;if _abga ,_eddd :=_gdcgd .(*_df .PdfObjectString );_eddd {_faede =_abga .Bytes ();_dda .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_faede );
}else if _ecff ,_edaa :=_gdcgd .(*_df .PdfObjectStream );_edaa {_dda .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_gdcgd .String ());_dda .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_ecff .Stream ),_ecff .Stream );
_afbg ,_bfdcc :=_df .DecodeStream (_ecff );if _bfdcc !=nil {return nil ,_bfdcc ;};_dda .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_afbg ),_afbg );_faede =_afbg ;}else {_dda .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gdcgd );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_faede )< _dcef .Base .GetNumComponents ()*(_dcef .HiVal +1){_dda .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_dda .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_faede ),_dcef .Base .GetNumComponents (),_dcef .HiVal );
}else {_faede =_faede [:_dcef .Base .GetNumComponents ()*(_dcef .HiVal +1)];};_dcef ._beag =_faede ;return _dcef ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_agf PdfModel ;Type _df .PdfObject ;S _df .PdfObject ;Next _df .PdfObject ;_dfc *_df .PdfIndirectObject ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_df .PdfObjectStream ;Data []byte ;_efef *_df .PdfIndirectObject ;_bdaf *_df .PdfObjectStream ;};

// WriteString outputs the object as it is to be written to file.
func (_dgebg *pdfSignDictionary )WriteString ()string {_dgebg ._badda =0;_dgebg ._bfeef =0;_dgebg ._afbfg =0;_dgebg ._ffaf =0;_efdgf :=_c .NewBuffer (nil );_efdgf .WriteString ("\u003c\u003c");for _ ,_ffce :=range _dgebg .Keys (){_bbdg :=_dgebg .Get (_ffce );
switch _ffce {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_efdgf .WriteString (_ffce .WriteString ());_efdgf .WriteString ("\u0020");_dgebg ._afbfg =_efdgf .Len ();_efdgf .WriteString (_bbdg .WriteString ());_efdgf .WriteString ("\u0020");_dgebg ._ffaf =_efdgf .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_efdgf .WriteString (_ffce .WriteString ());_efdgf .WriteString ("\u0020");_dgebg ._badda =_efdgf .Len ();_efdgf .WriteString (_bbdg .WriteString ());_efdgf .WriteString ("\u0020");_dgebg ._bfeef =_efdgf .Len ()-1;
default:_efdgf .WriteString (_ffce .WriteString ());_efdgf .WriteString ("\u0020");_efdgf .WriteString (_bbdg .WriteString ());};};_efdgf .WriteString ("\u003e\u003e");return _efdgf .String ();};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_ebfa *Outline )ToPdfOutline ()*PdfOutline {_bgdd :=NewPdfOutline ();var _aadc []*PdfOutlineItem ;var _dedc int64 ;var _cacfa *PdfOutlineItem ;for _ ,_dgdde :=range _ebfa .Entries {_afdgb ,_cgfg :=_dgdde .ToPdfOutlineItem ();_afdgb .Parent =&_bgdd .PdfOutlineTreeNode ;
if _cacfa !=nil {_cacfa .Next =&_afdgb .PdfOutlineTreeNode ;_afdgb .Prev =&_cacfa .PdfOutlineTreeNode ;};_aadc =append (_aadc ,_afdgb );_dedc +=_cgfg ;_cacfa =_afdgb ;};_dacbd :=int64 (len (_aadc ));_dedc +=_dacbd ;if _dacbd > 0{_bgdd .First =&_aadc [0].PdfOutlineTreeNode ;
_bgdd .Last =&_aadc [_dacbd -1].PdfOutlineTreeNode ;_bgdd .Count =&_dedc ;};return _bgdd ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_gbaae *XObjectImage )SetFilter (encoder _df .StreamEncoder )error {_egcda :=_gbaae .Stream ;_faaaf ,_bbedd :=_gbaae .Filter .DecodeBytes (_egcda );if _bbedd !=nil {return _bbedd ;};_gbaae .Filter =encoder ;encoder .UpdateParams (_gbaae .getParamsDict ());
_egcda ,_bbedd =encoder .EncodeBytes (_faaaf );if _bbedd !=nil {return _bbedd ;};_gbaae .Stream =_egcda ;return nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_be .PSProgram ;_cccf *_be .PSExecutor ;_efdf []byte ;_caccg *_df .PdfObjectStream ;};func _acae (_dcac _df .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_abad :=&PdfColorspaceDeviceNAttributes {};
var _ddad *_df .PdfObjectDictionary ;switch _bdcf :=_dcac .(type ){case *_df .PdfIndirectObject :_abad ._cecbb =_bdcf ;var _eacbc bool ;_ddad ,_eacbc =_bdcf .PdfObject .(*_df .PdfObjectDictionary );if !_eacbc {_dda .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fa .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_df .PdfObjectDictionary :_ddad =_bdcf ;case *_df .PdfObjectReference :_abbgg :=_bdcf .Resolve ();return _acae (_abbgg );default:_dda .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fa .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _abbf :=_ddad .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_abbf !=nil {_babac ,_efcdf :=_df .TraceToDirectObject (_abbf ).(*_df .PdfObjectName );if !_efcdf {_dda .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_fa .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_abad .Subtype =_babac ;};if _cfed :=_ddad .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_cfed !=nil {_abad .Colorants =_cfed ;};if _dfcb :=_ddad .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_dfcb !=nil {_abad .Process =_dfcb ;};if _ggcb :=_ddad .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_ggcb !=nil {_abad .MixingHints =_ggcb ;};return _abad ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_egdbd *PdfFieldButton )ToPdfObject ()_df .PdfObject {_egdbd .PdfField .ToPdfObject ();_dbac :=_egdbd ._eabc ;_eeaaf :=_dbac .PdfObject .(*_df .PdfObjectDictionary );_eeaaf .Set ("\u0046\u0054",_df .MakeName ("\u0042\u0074\u006e"));if _egdbd .Opt !=nil {_eeaaf .Set ("\u004f\u0070\u0074",_egdbd .Opt );
};return _dbac ;};func _aedfa (_ecge _df .PdfObject )(*PdfColorspaceDeviceN ,error ){_deee :=NewPdfColorspaceDeviceN ();if _dcaa ,_ebgg :=_ecge .(*_df .PdfIndirectObject );_ebgg {_deee ._ddddf =_dcaa ;};_ecge =_df .TraceToDirectObject (_ecge );_aegea ,_aecf :=_ecge .(*_df .PdfObjectArray );
if !_aecf {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _aegea .Len ()!=4&&_aegea .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_ecge =_aegea .Get (0);_afec ,_aecf :=_ecge .(*_df .PdfObjectName );if !_aecf {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_afec !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_ecge =_aegea .Get (1);
_ecge =_df .TraceToDirectObject (_ecge );_edaed ,_aecf :=_ecge .(*_df .PdfObjectArray );if !_aecf {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_deee .ColorantNames =_edaed ;_ecge =_aegea .Get (2);_ededg ,_fceda :=NewPdfColorspaceFromPdfObject (_ecge );if _fceda !=nil {return nil ,_fceda ;};_deee .AlternateSpace =_ededg ;_dgcd ,_fceda :=_afecg (_aegea .Get (3));if _fceda !=nil {return nil ,_fceda ;
};_deee .TintTransform =_dgcd ;if _aegea .Len ()==5{_dbfb ,_gbfe :=_acae (_aegea .Get (4));if _gbfe !=nil {return nil ,_gbfe ;};_deee .Attributes =_dbfb ;};return _deee ,nil ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _bc .ReadSeeker )(*CompliancePdfReader ,error ){const _gcbcg ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_egdc ,_cggb :=_bbgdd (rs ,&ReaderOpts {ComplianceMode :true },false ,_gcbcg );
if _cggb !=nil {return nil ,_cggb ;};return &CompliancePdfReader {PdfReader :_egdc },nil ;};func _gdead ()_dd .Time {_effdf .Lock ();defer _effdf .Unlock ();return _cgfga };

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_ccffa ,_cdbg :=_fb .ParsePdfTime (dateStr );if _cdbg !=nil {return PdfDate {},_cdbg ;};return NewPdfDateFromTime (_ccffa );};func (_dcaf *DSS )add (_ccec *[]*_df .PdfObjectStream ,_eecc map[string ]*_df .PdfObjectStream ,_bfbe [][]byte )([]*_df .PdfObjectStream ,error ){_dbae :=make ([]*_df .PdfObjectStream ,0,len (_bfbe ));
for _ ,_facfd :=range _bfbe {_ebcb ,_gfege :=_edeac (_facfd );if _gfege !=nil {return nil ,_gfege ;};_bggb ,_ecdgd :=_eecc [string (_ebcb )];if !_ecdgd {_bggb ,_gfege =_df .MakeStream (_facfd ,_df .NewRawEncoder ());if _gfege !=nil {return nil ,_gfege ;
};_eecc [string (_ebcb )]=_bggb ;*_ccec =append (*_ccec ,_bggb );};_dbae =append (_dbae ,_bggb );};return _dbae ,nil ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_fegdd *PdfPage )GetAllContentStreams ()(string ,error ){_bcabg ,_efgac :=_fegdd .GetContentStreams ();if _efgac !=nil {return "",_efgac ;};return _eb .Join (_bcabg ,"\u0020"),nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_efeb pdfCIDFontType0 )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){return _fc .CharMetrics {Wx :_efeb ._gbbfc },true ;};func (_begbb *PdfWriter )addObjects (_afeaa _df .PdfObject )error {_dda .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _gffaf ,_ebgcb :=_afeaa .(*_df .PdfIndirectObject );_ebgcb {_dda .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_dda .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_afeaa ,_gffaf );_dda .Log .Trace ("\u002d\u0020\u0025\u0073",_gffaf .PdfObject );
if _begbb .addObject (_gffaf ){_bggfd :=_begbb .addObjects (_gffaf .PdfObject );if _bggfd !=nil {return _bggfd ;};};return nil ;};if _egaae ,_eaedgf :=_afeaa .(*_df .PdfObjectStream );_eaedgf {_dda .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_dda .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_afeaa ,_afeaa );
if _begbb .addObject (_egaae ){_bebdd :=_begbb .addObjects (_egaae .PdfObjectDictionary );if _bebdd !=nil {return _bebdd ;};};return nil ;};if _cddce ,_fdeec :=_afeaa .(*_df .PdfObjectDictionary );_fdeec {_dda .Log .Trace ("\u0044\u0069\u0063\u0074");_dda .Log .Trace ("\u002d\u0020\u0025\u0073",_afeaa );
for _ ,_aeaef :=range _cddce .Keys (){_defegd :=_cddce .Get (_aeaef );if _gegfc ,_fdfga :=_defegd .(*_df .PdfObjectReference );_fdfga {_defegd =_gegfc .Resolve ();_cddce .Set (_aeaef ,_defegd );};if _aeaef !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _ffbfe :=_begbb .addObjects (_defegd );
_ffbfe !=nil {return _ffbfe ;};}else {if _ ,_egdg :=_defegd .(*_df .PdfObjectNull );_egdg {continue ;};if _bfgc :=_begbb .hasObject (_defegd );!_bfgc {_dda .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_defegd ,_defegd ,_defegd );
_begbb ._bfaag [_defegd ]=append (_begbb ._bfaag [_defegd ],_cddce );};};};return nil ;};if _efffc ,_fgeeb :=_afeaa .(*_df .PdfObjectArray );_fgeeb {_dda .Log .Trace ("\u0041\u0072\u0072a\u0079");_dda .Log .Trace ("\u002d\u0020\u0025\u0073",_afeaa );if _efffc ==nil {return _fa .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _gdbeg ,_aefcb :=range _efffc .Elements (){if _bbbeb ,_adcb :=_aefcb .(*_df .PdfObjectReference );_adcb {_aefcb =_bbbeb .Resolve ();_efffc .Set (_gdbeg ,_aefcb );};if _cface :=_begbb .addObjects (_aefcb );_cface !=nil {return _cface ;};};return nil ;
};if _ ,_adgba :=_afeaa .(*_df .PdfObjectReference );_adgba {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_afeaa );
return _fa .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetOptimizer returns current PDF optimizer.
func (_bcddg *PdfWriter )GetOptimizer ()Optimizer {return _bcddg ._cbcgf };

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_gdbe :=&PdfColorPatternType3 {};return _gdbe };

// String returns the name of the colorspace (DeviceN).
func (_bdbd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// GetPdfVersion gets the version of the PDF used within this document.
func (_ebaga *PdfWriter )GetPdfVersion ()string {return _ebaga .getPdfVersion ()};func (_fbedd *PdfAcroForm )fill (_bffc FieldValueProvider ,_gcdfa FieldAppearanceGenerator )error {if _fbedd ==nil {return nil ;};_abfcg ,_acdda :=_bffc .FieldValues ();if _acdda !=nil {return _acdda ;
};for _ ,_acbf :=range _fbedd .AllFields (){_gebcg :=_acbf .PartialName ();_gadbc ,_facee :=_abfcg [_gebcg ];if !_facee {if _ddcgb ,_bffbg :=_acbf .FullName ();_bffbg ==nil {_gadbc ,_facee =_abfcg [_ddcgb ];};};if !_facee {_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gebcg );
continue ;};if _gaefe :=_aaga (_acbf ,_gadbc );_gaefe !=nil {return _gaefe ;};if _gcdfa ==nil {continue ;};for _ ,_gacce :=range _acbf .Annotations {_efbeg ,_aabe :=_gcdfa .GenerateAppearanceDict (_fbedd ,_acbf ,_gacce );if _aabe !=nil {return _aabe ;};
_gacce .AP =_efbeg ;_gacce .ToPdfObject ();};};return nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_agdaba *modelManager )GetPrimitiveFromModel (model PdfModel )_df .PdfObject {_agdaba ._ffgg .RLock ();defer _agdaba ._ffgg .RUnlock ();_fedde ,_daced :=_agdaba ._cgcgf [model ];if !_daced {return nil ;};return _fedde ;};func (_abef *pdfFontType0 )bytesToCharcodes (_cfddcb []byte )([]_aff .CharCode ,bool ){if _abef ._ggbdb ==nil {return nil ,false ;
};_accc ,_bgcg :=_abef ._ggbdb .BytesToCharcodes (_cfddcb );if !_bgcg {return nil ,false ;};_fdgf :=make ([]_aff .CharCode ,len (_accc ));for _bfaa ,_deac :=range _accc {_fdgf [_bfaa ]=_aff .CharCode (_deac );};return _fdgf ,true ;};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_ddffa :fonts ,CurrentFont :fonts [0]};};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_dcfe *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbe ,_aebe :=_df .GetNumbersAsFloat (objects );
if _aebe !=nil {return nil ,_aebe ;};return _dcfe .ColorFromFloats (_cgbe );};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _df .PdfObject ;Flags _df .PdfObject ;};var _cceggd =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_bfbf :=NewPdfAnnotation ();_beac :=&PdfAnnotationStamp {};_beac .PdfAnnotation =_bfbf ;_beac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfbf .SetContext (_beac );return _beac ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_df .PdfObjectArray ;Domain *_df .PdfObjectArray ;Function []PdfFunction ;Extend *_df .PdfObjectArray ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_ebcbd *PdfReader )GetNameDictionary ()(_df .PdfObject ,error ){_aefedd :=_df .ResolveReference (_ebcbd ._aeeb .Get ("\u004e\u0061\u006de\u0073"));if _aefedd ==nil {return nil ,nil ;};if !_ebcbd ._caabc {_faeedc :=_ebcbd .traverseObjectData (_aefedd );
if _faeedc !=nil {return nil ,_faeedc ;};};return _aefedd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfActionSetOCGState )ToPdfObject ()_df .PdfObject {_bea .PdfAction .ToPdfObject ();_aaeg :=_bea ._dfc ;_aba :=_aaeg .PdfObject .(*_df .PdfObjectDictionary );_aba .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeSetOCGState )));_aba .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bea .State );
_aba .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bea .PreserveRB );return _aaeg ;};func (_dbedf *pdfFontType0 )baseFields ()*fontCommon {return &_dbedf .fontCommon };func _fcbc (_dfgge _df .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_ddgbc :=NewPdfColorspaceSpecialSeparation ();
if _gggf ,_fccdf :=_dfgge .(*_df .PdfIndirectObject );_fccdf {_ddgbc ._ccdea =_gggf ;};_dfgge =_df .TraceToDirectObject (_dfgge );_fdca ,_dfdef :=_dfgge .(*_df .PdfObjectArray );if !_dfdef {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _fdca .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_dfgge =_fdca .Get (0);
_gedg ,_dfdef :=_dfgge .(*_df .PdfObjectName );if !_dfdef {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gedg !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_dfgge =_fdca .Get (1);_gedg ,_dfdef =_dfgge .(*_df .PdfObjectName );if !_dfdef {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_ddgbc .ColorantName =_gedg ;_dfgge =_fdca .Get (2);_agdc ,_edce :=NewPdfColorspaceFromPdfObject (_dfgge );if _edce !=nil {return nil ,_edce ;};_ddgbc .AlternateSpace =_agdc ;_dfb ,_edce :=_afecg (_fdca .Get (3));if _edce !=nil {return nil ,_edce ;};
_ddgbc .TintTransform =_dfb ;return _ddgbc ,nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_gab :=NewPdfAction ();_ef :=&PdfActionNamed {};_ef .PdfAction =_gab ;_gab .SetContext (_ef );return _ef ;};

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_geafde *PdfWriter )SetCatalogMarkInfo (info _df .PdfObject )error {if info ==nil {_geafde ._afacf .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _dagbf ,_eaded :=info .(*_df .PdfObjectReference );_eaded {info =_dagbf .Resolve ();
if info ==nil {_geafde ._afacf .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};_geafde .addObject (info );_geafde ._afacf .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );return nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _df .PdfObject ;NewWindow _df .PdfObject ;};func _fgdfb (_edfgc *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_edfgc }};

// HasFontByName checks if has font resource by name.
func (_aeabf *PdfPage )HasFontByName (name _df .PdfObjectName )bool {_fddcb ,_aefga :=_aeabf .Resources .Font .(*_df .PdfObjectDictionary );if !_aefga {return false ;};if _agaaf :=_fddcb .Get (name );_agaaf !=nil {return true ;};return false ;};func (_fgbbgf *LTV )buildCertChain (_bfbef ,_eege []*_bf .Certificate )([]*_bf .Certificate ,map[string ]*_bf .Certificate ,error ){_ceccc :=map[string ]*_bf .Certificate {};
for _ ,_decee :=range _bfbef {_ceccc [_decee .Subject .CommonName ]=_decee ;};_ddgg :=_bfbef ;for _ ,_fagbf :=range _eege {_aedfd :=_fagbf .Subject .CommonName ;if _ ,_edga :=_ceccc [_aedfd ];_edga {continue ;};_ceccc [_aedfd ]=_fagbf ;_ddgg =append (_ddgg ,_fagbf );
};if len (_ddgg )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ggadg error ;for _eadcg :=_ddgg [0];_eadcg !=nil &&!_fgbbgf .CertClient .IsCA (_eadcg );{_bafec ,_eegda :=_ceccc [_eadcg .Issuer .CommonName ];if !_eegda {if _bafec ,_ggadg =_fgbbgf .CertClient .GetIssuer (_eadcg );
_ggadg !=nil {_dda .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ggadg );
break ;};_ceccc [_eadcg .Issuer .CommonName ]=_bafec ;_ddgg =append (_ddgg ,_bafec );};_eadcg =_bafec ;};return _ddgg ,_ceccc ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _df .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _eece *_df .PdfIndirectObject ;var _acga *_df .PdfObjectName ;var _fbee *_df .PdfObjectArray ;if _bbcdb ,_accd :=obj .(*_df .PdfIndirectObject );
_accd {_eece =_bbcdb ;};obj =_df .TraceToDirectObject (obj );switch _dfde :=obj .(type ){case *_df .PdfObjectArray :_fbee =_dfde ;case *_df .PdfObjectName :_acga =_dfde ;};if _acga !=nil {switch *_acga {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_dda .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_acga );return nil ,_gggff ;};};if _fbee !=nil &&_fbee .Len ()> 0{var _cebe _df .PdfObject =_eece ;
if _eece ==nil {_cebe =_fbee ;};if _acad ,_gbfc :=_df .GetName (_fbee .Get (0));_gbfc {switch _acad .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _fbee .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _fbee .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fbee .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _baae (_cebe );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _fbegf (_cebe );
case "\u004c\u0061\u0062":return _ceab (_cebe );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cbfd (_cebe );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ebged (_cebe );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _gcdb (_cebe );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _fcbc (_cebe );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _aedfa (_cebe );default:_dda .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_acad );
};};};_dda .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_eface *PdfWriter )AddPage (page *PdfPage )error {const _ffgdbe ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_gafea (page );_cceeca :=page .ToPdfObject ();_dda .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_dda .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cceeca );_ageeb ,_ccceg :=_df .GetIndirect (_cceeca );if !_ccceg {return _fa .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_dda .Log .Trace ("\u0025\u0073",_ageeb );_dda .Log .Trace ("\u0025\u0073",_ageeb .PdfObject );_ececbf ,_ccceg :=_df .GetDict (_ageeb .PdfObject );if !_ccceg {return _fa .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ebcba ,_ccceg :=_df .GetName (_ececbf .Get ("\u0054\u0079\u0070\u0065"));if !_ccceg {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_ececbf .Get ("\u0054\u0079\u0070\u0065"));
};if _ebcba .String ()!="\u0050\u0061\u0067\u0065"{return _fa .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_aadcf :=[]_df .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_caefa ,_dcgaf :=_df .GetIndirect (_ececbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_dda .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_ececbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_dcgaf );
for _dcgaf {_dda .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_caefa );_gbccc ,_bdbaf :=_df .GetDict (_caefa .PdfObject );if !_bdbaf {return _fa .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_ccgdg :=range _aadcf {_dda .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ccgdg );if _ececbf .Get (_ccgdg )!=nil {_dda .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _cefda :=_gbccc .Get (_ccgdg );_cefda !=nil {_dda .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ccgdg );_ececbf .Set (_ccgdg ,_cefda );};};_caefa ,_dcgaf =_df .GetIndirect (_gbccc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_dda .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gbccc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dda .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_ececbf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eface ._daddb );_ageeb .PdfObject =_ececbf ;_eeba ,_ccceg :=_df .GetDict (_eface ._daddb .PdfObject );if !_ccceg {return _fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_ddec ,_ccceg :=_df .GetArray (_eeba .Get ("\u004b\u0069\u0064\u0073"));if !_ccceg {return _fa .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ddec .Append (_ageeb );_eface ._cfda [_ececbf ]=struct{}{};_eface ._cbef =append (_eface ._cbef ,_ageeb );_eebcd ,_ccceg :=_df .GetInt (_eeba .Get ("\u0043\u006f\u0075n\u0074"));if !_ccceg {return _fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_eebcd =*_eebcd +1;if page ._aebbc ==nil {_fgada :=_ede .Track (_eface ._gceae ,_ffgdbe ,_eface ._cfbge );if _fgada !=nil {return _fgada ;};}else {_cbbaa :=_ede .Track (page ._aebbc ._gcbfb ,_ffgdbe ,page ._aebbc ._gfeacb );if _cbbaa !=nil {return _cbbaa ;
};};_eface .addObject (_ageeb );_ccdgc :=_eface .addObjects (_ececbf );if _ccdgc !=nil {return _ccdgc ;};return nil ;};

// IsHideMenubar returns the value of the hideMenubar flag.
func (_dcdcg *ViewerPreferences )IsHideMenubar ()bool {if _dcdcg ._bbedc ==nil {return false ;};return *_dcdcg ._bbedc ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_bccec *PdfPageResources )GetXObjectFormByName (keyName _df .PdfObjectName )(*XObjectForm ,error ){_gdeaf ,_bgbgg :=_bccec .GetXObjectByName (keyName );if _gdeaf ==nil {return nil ,nil ;};if _bgbgg !=XObjectTypeForm {return nil ,_fa .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_fdeee ,_cafba :=NewXObjectFormFromStream (_gdeaf );if _cafba !=nil {return nil ,_cafba ;};return _fdeee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bgcd *PdfAnnotationCaret )ToPdfObject ()_df .PdfObject {_bgcd .PdfAnnotation .ToPdfObject ();_fbfg :=_bgcd ._cdd ;_agg :=_fbfg .PdfObject .(*_df .PdfObjectDictionary );_bgcd .PdfAnnotationMarkup .appendToPdfDictionary (_agg );_agg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0043\u0061\u0072e\u0074"));
_agg .SetIfNotNil ("\u0052\u0044",_bgcd .RD );_agg .SetIfNotNil ("\u0053\u0079",_bgcd .Sy );return _fbfg ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_ebbdd :=PdfColorLab {l ,a ,b };return &_ebbdd };

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_bdaada *PdfPageResources )GetExtGState (keyName _df .PdfObjectName )(_df .PdfObject ,bool ){if _bdaada .ExtGState ==nil {return nil ,false ;};_fdcag ,_eegcb :=_df .TraceToDirectObject (_bdaada .ExtGState ).(*_df .PdfObjectDictionary );if !_eegcb {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdaada .ExtGState );
return nil ,false ;};if _ebddg :=_fdcag .Get (keyName );_ebddg !=nil {return _ebddg ,true ;};return nil ,false ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_bfaaf *PdfReader )GetRevisionNumber ()int {return _bfaaf ._fcaac .GetRevisionNumber ()};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_df .PdfObjectArray ;_aebf *Image ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_fcg :=NewPdfAction ();_fff :=&PdfActionRendition {};_fff .PdfAction =_fcg ;_fcg .SetContext (_fff );return _fff ;};func (_fcged *PdfWriter )writeBytes (_dbegf []byte ){if _fcged ._debgc !=nil {return ;
};_geff ,_ecccd :=_fcged ._cgccf .Write (_dbegf );_fcged ._eedgc +=int64 (_geff );_fcged ._debgc =_ecccd ;};func _bdddb (_gbfac []*_df .PdfObjectStream )*_df .PdfObjectArray {if len (_gbfac )==0{return nil ;};_gfacb :=make ([]_df .PdfObject ,0,len (_gbfac ));
for _ ,_gdcag :=range _gbfac {_gfacb =append (_gfacb ,_gdcag );};return _df .MakeArray (_gfacb ...);};

// ToPdfObject implements model.PdfModel interface.
func (_gffac *PdfOutputIntent )ToPdfObject ()_df .PdfObject {if _gffac ._ebcg ==nil {_gffac ._ebcg =_df .MakeDict ();};_fddb :=_gffac ._ebcg ;if _gffac .Type !=""{_fddb .Set ("\u0054\u0079\u0070\u0065",_df .MakeName (_gffac .Type ));};_fddb .Set ("\u0053",_df .MakeName (_gffac .S .String ()));
if _gffac .OutputCondition !=""{_fddb .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_df .MakeString (_gffac .OutputCondition ));};_fddb .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_df .MakeString (_gffac .OutputConditionIdentifier ));
_fddb .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_df .MakeString (_gffac .RegistryName ));if _gffac .Info !=""{_fddb .Set ("\u0049\u006e\u0066\u006f",_df .MakeString (_gffac .Info ));};if len (_gffac .DestOutputProfile )!=0{_ddcca ,_eeef :=_df .MakeStream (_gffac .DestOutputProfile ,_df .NewFlateEncoder ());
if _eeef !=nil {_dda .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eeef );
};_ddcca .PdfObjectDictionary .Set ("\u004e",_df .MakeInteger (int64 (_gffac .ColorComponents )));_gaec :=make ([]float64 ,_gffac .ColorComponents *2);for _fcdbd :=0;_fcdbd < _gffac .ColorComponents *2;_fcdbd ++{_aefac :=0.0;if _fcdbd %2!=0{_aefac =1.0;
};_gaec [_fcdbd ]=_aefac ;};_ddcca .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_df .MakeArrayFromFloats (_gaec ));_fddb .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_ddcca );};return _fddb ;
};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_bgd .File ,error ){const _abbdf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_beaaf ,_bgbdd :=_bgd .Open (pdfFile );if _bgbdd !=nil {return nil ,nil ,_bgbdd ;};_ggaeb ,_bgbdd :=_bbgdd (_beaaf ,opts ,true ,_abbdf );if _bgbdd !=nil {_beaaf .Close ();return nil ,nil ,_bgbdd ;};_ggaeb ._gfeacb =pdfFile ;return _ggaeb ,_beaaf ,nil ;
};func (_dbaca *PdfWriter )checkPendingObjects (){for _bbfcd ,_badafa :=range _dbaca ._bfaag {if !_dbaca .hasObject (_bbfcd ){_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_bbfcd ,_bbfcd ,_bbfcd );
for _ ,_acgdf :=range _badafa {for _ ,_fbgbc :=range _acgdf .Keys (){_gcced :=_acgdf .Get (_fbgbc );if _gcced ==_bbfcd {_dda .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_acgdf .Set (_fbgbc ,_df .MakeNull ());break ;};};};};};};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_df .PdfObject ,error );};

// Direction returns the value of the direction.
func (_badgf *ViewerPreferences )Direction ()Direction {return _badgf ._eace };func (_adbca *PdfWriter )seekByName (_bgeg _df .PdfObject ,_cgbba []string ,_ddbgd string )([]_df .PdfObject ,error ){_dda .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bgeg );
var _abegd []_df .PdfObject ;if _cgeca ,_gagae :=_bgeg .(*_df .PdfIndirectObject );_gagae {return _adbca .seekByName (_cgeca .PdfObject ,_cgbba ,_ddbgd );};if _beaaa ,_aaef :=_bgeg .(*_df .PdfObjectStream );_aaef {return _adbca .seekByName (_beaaa .PdfObjectDictionary ,_cgbba ,_ddbgd );
};if _eegaa ,_eebcdf :=_bgeg .(*_df .PdfObjectDictionary );_eebcdf {_dda .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_gcgac :=range _eegaa .Keys (){_bbdaa :=_eegaa .Get (_gcgac );if string (_gcgac )==_ddbgd {_abegd =append (_abegd ,_bbdaa );};for _ ,_aabdd :=range _cgbba {if string (_gcgac )==_aabdd {_dda .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_aabdd );
_egbbc ,_febbc :=_adbca .seekByName (_bbdaa ,_cgbba ,_ddbgd );if _febbc !=nil {return _abegd ,_febbc ;};_abegd =append (_abegd ,_egbbc ...);break ;};};};return _abegd ,nil ;};return _abegd ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dfggb *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adaa :=vals [0];_ebfd :=[]float64 {_adaa };_abgab ,_efafg :=_dfggb .TintTransform .Evaluate (_ebfd );
if _efafg !=nil {_dda .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_efafg );_dda .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_dfggb .TintTransform );
return nil ,_efafg ;};_dda .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_abgab ,_dfggb .AlternateSpace );
_gcffe ,_efafg :=_dfggb .AlternateSpace .ColorFromFloats (_abgab );if _efafg !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_efafg );
return nil ,_efafg ;};return _gcffe ,nil ;};func (_cfca *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _cfca ._fedff };

// GetBorderWidth returns the border style's width.
func (_cgc *PdfBorderStyle )GetBorderWidth ()float64 {if _cgc .W ==nil {return 1;};return *_cgc .W ;};func _faabb (_ffec rune )string {for _abgecg ,_bebaf :=range _b .Categories {if len (_abgecg )==2&&_b .Is (_bebaf ,_ffec ){return _abgecg ;};};return "\u0043\u006e";
};

// GetNumComponents returns the number of color components (3 for Lab).
func (_cbeb *PdfColorLab )GetNumComponents ()int {return 3};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _df .PdfObjectName ;};func (_cecc *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// ToPdfObject implements interface PdfModel.
func (_bab *PdfActionSound )ToPdfObject ()_df .PdfObject {_bab .PdfAction .ToPdfObject ();_gbc :=_bab ._dfc ;_bgbc :=_gbc .PdfObject .(*_df .PdfObjectDictionary );_bgbc .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeSound )));_bgbc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bab .Sound );
_bgbc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bab .Volume );_bgbc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bab .Synchronous );_bgbc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bab .Repeat );
_bgbc .SetIfNotNil ("\u004d\u0069\u0078",_bab .Mix );return _gbc ;};func (_eaa *PdfReader )newPdfAnnotation3DFromDict (_edg *_df .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_deaf :=PdfAnnotation3D {};_deaf .T3DD =_edg .Get ("\u0033\u0044\u0044");_deaf .T3DV =_edg .Get ("\u0033\u0044\u0056");
_deaf .T3DA =_edg .Get ("\u0033\u0044\u0041");_deaf .T3DI =_edg .Get ("\u0033\u0044\u0049");_deaf .T3DB =_edg .Get ("\u0033\u0044\u0042");return &_deaf ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bedaef *Permissions )GetContainingPdfObject ()_df .PdfObject {return _bedaef ._ecagb };

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_ggaa *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _ggaa .UnderlyingCS .GetNumComponents ();};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_cabd *PdfPageResources )HasFontByName (keyName _df .PdfObjectName )bool {_ ,_bgbfd :=_cabd .GetFontByName (keyName );return _bgbfd ;};

// G returns the value of the green component of the color.
func (_dgac *PdfColorDeviceRGB )G ()float64 {return _dgac [1]};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_fadgc *PdfOutline )GetContainingPdfObject ()_df .PdfObject {return _fadgc ._bbagc };

// ViewerPreferences represents the viewer preferences of a PDF document.
type ViewerPreferences struct{_gfbaf *bool ;_bbedc *bool ;_daeee *bool ;_bcffa *bool ;_gcggf *bool ;_gbggg *bool ;_dbgff NonFullScreenPageMode ;_eace Direction ;_bcgdce PageBoundary ;_aeaeb PageBoundary ;_bggda PageBoundary ;_dgce PageBoundary ;_dgfb PrintScaling ;
_debg Duplex ;_ecea *bool ;_fecbe []int ;_gccfe int ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gaaea *PdfFont )ToUnicode ()string {if _gaaea .baseFields ()._babga ==nil {return "";};return _gaaea .baseFields ()._babga .Name ();};

// ToInteger convert to an integer format.
func (_bbac *PdfColorDeviceGray )ToInteger (bits int )uint32 {_febb :=_fe .Pow (2,float64 (bits ))-1;return uint32 (_febb *_bbac .Val ());};var _ pdfFont =(*pdfFontType0 )(nil );

// Evaluate runs the function on the passed in slice and returns the results.
func (_cgccc *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_cgccc .NumInputs {_dda .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_fa .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _cgccc ._dcbeb ==nil {_egccf :=_cgccc .processSamples ();if _egccf !=nil {return nil ,_egccf ;};};_gffgb :=_cgccc .Encode ;if _gffgb ==nil {_gffgb =[]float64 {};
for _edba :=0;_edba < len (_cgccc .Size );_edba ++{_gffgb =append (_gffgb ,0);_gffgb =append (_gffgb ,float64 (_cgccc .Size [_edba ]-1));};};_ggbged :=_cgccc .Decode ;if _ggbged ==nil {_ggbged =_cgccc .Range ;};_babec :=make ([]int ,len (x ));for _ecgfb :=0;
_ecgfb < len (x );_ecgfb ++{_aagd :=x [_ecgfb ];_fbegb :=_fe .Min (_fe .Max (_aagd ,_cgccc .Domain [2*_ecgfb ]),_cgccc .Domain [2*_ecgfb +1]);_gfdfb :=_ae .LinearInterpolate (_fbegb ,_cgccc .Domain [2*_ecgfb ],_cgccc .Domain [2*_ecgfb +1],_gffgb [2*_ecgfb ],_gffgb [2*_ecgfb +1]);
_gegf :=_fe .Min (_fe .Max (_gfdfb ,0),float64 (_cgccc .Size [_ecgfb ]-1));_bfegd :=int (_fe .Floor (_gegf +0.5));if _bfegd < 0{_bfegd =0;}else if _bfegd > _cgccc .Size [_ecgfb ]{_bfegd =_cgccc .Size [_ecgfb ]-1;};_babec [_ecgfb ]=_bfegd ;};_fdgag :=_babec [0];
for _cacfd :=1;_cacfd < _cgccc .NumInputs ;_cacfd ++{_bgdfc :=_babec [_cacfd ];for _fcbb :=0;_fcbb < _cacfd ;_fcbb ++{_bgdfc *=_cgccc .Size [_fcbb ];};_fdgag +=_bgdfc ;};_fdgag *=_cgccc .NumOutputs ;var _baaf []float64 ;for _fffa :=0;_fffa < _cgccc .NumOutputs ;
_fffa ++{_cbaec :=_fdgag +_fffa ;if _cbaec >=len (_cgccc ._dcbeb ){_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_eedab :=_cgccc ._dcbeb [_cbaec ];_fegd :=_ae .LinearInterpolate (float64 (_eedab ),0,_fe .Pow (2,float64 (_cgccc .BitsPerSample )),_ggbged [2*_fffa ],_ggbged [2*_fffa +1]);_adafa :=_fe .Min (_fe .Max (_fegd ,_cgccc .Range [2*_fffa ]),_cgccc .Range [2*_fffa +1]);
_baaf =append (_baaf ,_adafa );};return _baaf ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_ccgdb *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _df .GetNumberAsFloat (_ccgdb .Ascent );};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_cfae :_df .MakeIndirectObject (_df .MakeDict ()),VRI :map[string ]*VRI {}};};

// GenerateRandomID generates a random ID for the K dictionary object.
func (_fedadc *KDict )GenerateRandomID ()string {_aeca ,_cfgdf :=_aab .NewUUID ();if _cfgdf !=nil {_dda .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020g\u0065\u006e\u0065\u0072\u0061t\u0069n\u0067 \u0055\u0055\u0049\u0044\u003a\u0020\u0025v",_cfgdf );};if _aeca !=_aab .Nil {_abbefd :=_aeca .String ();
_fedadc .ID =_df .MakeString (_abbefd );return _abbefd ;};return "";};

// RemveTabOrder removes the tab order for the page.
func (_dffc *PdfPage )RemoveTabOrder (){_dffc .Tabs =nil };

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;IC _df .PdfObject ;RO _df .PdfObject ;OverlayText _df .PdfObject ;Repeat _df .PdfObject ;DA _df .PdfObject ;Q _df .PdfObject ;};

// AllFields returns a flattened list of all fields in the form.
func (_fcgce *PdfAcroForm )AllFields ()[]*PdfField {if _fcgce ==nil {return nil ;};var _cgaee []*PdfField ;if _fcgce .Fields !=nil {for _ ,_fgdd :=range *_fcgce .Fields {_cgaee =append (_cgaee ,_ddaed (_fgdd )...);};};return _cgaee ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_gadc *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func (_gfg *PdfReader )newPdfActionURIFromDict (_fdbb *_df .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fdbb .Get ("\u0055\u0052\u0049"),IsMap :_fdbb .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// Duplex returns the value of the duplex.
func (_dced *ViewerPreferences )Duplex ()Duplex {return _dced ._debg };

// SetReason sets the `Reason` field of the signature.
func (_gaacb *PdfSignature )SetReason (reason string ){_gaacb .Reason =_df .MakeEncodedString (reason ,true );};func _aagb (_gcbfa *_df .PdfObjectDictionary )(*PdfShadingType4 ,error ){_faffeb :=PdfShadingType4 {};_becga :=_gcbfa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _becga ==nil {_dda .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edgea ,_bdebc :=_becga .(*_df .PdfObjectInteger );if !_bdebc {_dda .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_becga );
return nil ,_df .ErrTypeError ;};_faffeb .BitsPerCoordinate =_edgea ;_becga =_gcbfa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _becga ==nil {_dda .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_edgea ,_bdebc =_becga .(*_df .PdfObjectInteger );if !_bdebc {_dda .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_becga );
return nil ,_df .ErrTypeError ;};_faffeb .BitsPerComponent =_edgea ;_becga =_gcbfa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _becga ==nil {_dda .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_edgea ,_bdebc =_becga .(*_df .PdfObjectInteger );if !_bdebc {_dda .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_becga );
return nil ,_df .ErrTypeError ;};_faffeb .BitsPerComponent =_edgea ;_becga =_gcbfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _becga ==nil {_dda .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgacc ,_bdebc :=_becga .(*_df .PdfObjectArray );if !_bdebc {_dda .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_becga );
return nil ,_df .ErrTypeError ;};_faffeb .Decode =_fgacc ;_becga =_gcbfa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _becga ==nil {_dda .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_faffeb .Function =[]PdfFunction {};if _abgaa ,_ddfbd :=_becga .(*_df .PdfObjectArray );_ddfbd {for _ ,_ggea :=range _abgaa .Elements (){_cbfdd ,_gdabgf :=_afecg (_ggea );if _gdabgf !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdabgf );
return nil ,_gdabgf ;};_faffeb .Function =append (_faffeb .Function ,_cbfdd );};}else {_gaddb ,_fdaf :=_afecg (_becga );if _fdaf !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdaf );
return nil ,_fdaf ;};_faffeb .Function =append (_faffeb .Function ,_gaddb );};return &_faffeb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbdf *PdfAnnotationInk )ToPdfObject ()_df .PdfObject {_dbdf .PdfAnnotation .ToPdfObject ();_bgab :=_dbdf ._cdd ;_bcc :=_bgab .PdfObject .(*_df .PdfObjectDictionary );_dbdf .PdfAnnotationMarkup .appendToPdfDictionary (_bcc );_bcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0049\u006e\u006b"));
_bcc .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_dbdf .InkList );_bcc .SetIfNotNil ("\u0042\u0053",_dbdf .BS );return _bgab ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_ebaa *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _df .GetNumberAsFloat (_ebaa .Descent );};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_df .PdfIndirectObject )*PdfOutlineItem {_ddbbg :=PdfOutlineItem {};_ddbbg ._gdedf =&_ddbbg ;_ddbbg .Title =_df .MakeString (title );_gccba :=_df .MakeArray ();_gccba .Append (page );_gccba .Append (_df .MakeName ("\u0046\u0069\u0074"));
_ddbbg .Dest =_gccba ;return &_ddbbg ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cfdf *PdfColorspaceLab )ToPdfObject ()_df .PdfObject {_bgba :=_df .MakeArray ();_bgba .Append (_df .MakeName ("\u004c\u0061\u0062"));_gded :=_df .MakeDict ();if _cfdf .WhitePoint !=nil {_acfe :=_df .MakeArray (_df .MakeFloat (_cfdf .WhitePoint [0]),_df .MakeFloat (_cfdf .WhitePoint [1]),_df .MakeFloat (_cfdf .WhitePoint [2]));
_gded .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_acfe );}else {_dda .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _cfdf .BlackPoint !=nil {_bbbge :=_df .MakeArray (_df .MakeFloat (_cfdf .BlackPoint [0]),_df .MakeFloat (_cfdf .BlackPoint [1]),_df .MakeFloat (_cfdf .BlackPoint [2]));_gded .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bbbge );
};if _cfdf .Range !=nil {_gcbc :=_df .MakeArray (_df .MakeFloat (_cfdf .Range [0]),_df .MakeFloat (_cfdf .Range [1]),_df .MakeFloat (_cfdf .Range [2]),_df .MakeFloat (_cfdf .Range [3]));_gded .Set ("\u0052\u0061\u006eg\u0065",_gcbc );};_bgba .Append (_gded );
if _cfdf ._daccf !=nil {_cfdf ._daccf .PdfObject =_bgba ;return _cfdf ._daccf ;};return _bgba ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_eegf *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cefef ,_edeb :=_df .GetNumbersAsFloat (objects );
if _edeb !=nil {return nil ,_edeb ;};return _eegf .ColorFromFloats (_cefef );};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_eabc :_df .MakeIndirectObject (_df .MakeDict ())}};

// ToPdfObject implements interface PdfModel.
func (_cab *PdfAnnotationRichMedia )ToPdfObject ()_df .PdfObject {_cab .PdfAnnotation .ToPdfObject ();_ffdaa :=_cab ._cdd ;_dbea :=_ffdaa .PdfObject .(*_df .PdfObjectDictionary );_dbea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_dbea .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_cab .RichMediaSettings );_dbea .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_cab .RichMediaContent );
return _ffdaa ;};func (_ecd *PdfReader )newPdfAnnotationFreeTextFromDict (_eeb *_df .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_gagf :=PdfAnnotationFreeText {};_acec ,_efbb :=_ecd .newPdfAnnotationMarkupFromDict (_eeb );if _efbb !=nil {return nil ,_efbb ;
};_gagf .PdfAnnotationMarkup =_acec ;_gagf .DA =_eeb .Get ("\u0044\u0041");_gagf .Q =_eeb .Get ("\u0051");_gagf .RC =_eeb .Get ("\u0052\u0043");_gagf .DS =_eeb .Get ("\u0044\u0053");_gagf .CL =_eeb .Get ("\u0043\u004c");_gagf .IT =_eeb .Get ("\u0049\u0054");
_gagf .BE =_eeb .Get ("\u0042\u0045");_gagf .RD =_eeb .Get ("\u0052\u0044");_gagf .BS =_eeb .Get ("\u0042\u0053");_gagf .LE =_eeb .Get ("\u004c\u0045");return &_gagf ,nil ;};

// SetContext sets the sub action (context).
func (_cf *PdfAction )SetContext (ctx PdfModel ){_cf ._agf =ctx };

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_aae .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _dd .Time ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _bc .ReadSeeker )(*PdfReader ,error ){const _gcddd ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _bbgdd (rs ,&ReaderOpts {LazyLoad :true },false ,_gcddd );
};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _bc .ReadSeeker )(*PdfFont ,error ){const _fdced =_aff .CharCode (32);const _bbed =_aff .CharCode (255);_eabd ,_gedgf :=_bc .ReadAll (r );if _gedgf !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gedgf );
return nil ,_gedgf ;};_fcfa ,_gedgf :=_fc .TtfParse (_c .NewReader (_eabd ));if _gedgf !=nil {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_gedgf );
return nil ,_gedgf ;};_bagea :=&pdfFontSimple {_aeegg :make (map[_aff .CharCode ]float64 ),fontCommon :fontCommon {_adgg :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bagea ._babff =_aff .NewWinAnsiEncoder ();_bagea ._eefad =_fcfa .PostScriptName ;
_bagea .FirstChar =_df .MakeInteger (int64 (_fdced ));_bagea .LastChar =_df .MakeInteger (int64 (_bbed ));_cdgb :=1000.0/float64 (_fcfa .UnitsPerEm );if len (_fcfa .Widths )<=0{return nil ,_fa .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_ccgb :=_cdgb *float64 (_fcfa .Widths [0]);_gcfb :=make ([]float64 ,0,_bbed -_fdced +1);for _ebeed :=_fdced ;_ebeed <=_bbed ;_ebeed ++{_begdd ,_gadg :=_bagea .Encoder ().CharcodeToRune (_ebeed );if !_gadg {_dda .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ebeed );
_gcfb =append (_gcfb ,_ccgb );continue ;};_fagd ,_egde :=_fcfa .Chars [_begdd ];if !_egde {_dda .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_gcfb =append (_gcfb ,_ccgb );continue ;
};_bgaca :=_cdgb *float64 (_fcfa .Widths [_fagd ]);_gcfb =append (_gcfb ,_bgaca );};_bagea .Widths =_df .MakeIndirectObject (_df .MakeArrayFromFloats (_gcfb ));if len (_gcfb )< int (_bbed -_fdced +1){_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_gcfb ),255-32+1);
return nil ,_df .ErrRangeError ;};for _eeda :=_fdced ;_eeda <=_bbed ;_eeda ++{_bagea ._aeegg [_eeda ]=_gcfb [_eeda -_fdced ];};_bagea .Encoding =_df .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_abgbgf :=&PdfFontDescriptor {};
_abgbgf .FontName =_df .MakeName (_fcfa .PostScriptName );_abgbgf .Ascent =_df .MakeFloat (_cdgb *float64 (_fcfa .TypoAscender ));_abgbgf .Descent =_df .MakeFloat (_cdgb *float64 (_fcfa .TypoDescender ));_abgbgf .CapHeight =_df .MakeFloat (_cdgb *float64 (_fcfa .CapHeight ));
_abgbgf .FontBBox =_df .MakeArrayFromFloats ([]float64 {_cdgb *float64 (_fcfa .Xmin ),_cdgb *float64 (_fcfa .Ymin ),_cdgb *float64 (_fcfa .Xmax ),_cdgb *float64 (_fcfa .Ymax )});_abgbgf .ItalicAngle =_df .MakeFloat (_fcfa .ItalicAngle );_abgbgf .MissingWidth =_df .MakeFloat (_cdgb *float64 (_fcfa .Widths [0]));
_gbeb ,_gedgf :=_df .MakeStream (_eabd ,_df .NewFlateEncoder ());if _gedgf !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gedgf );
return nil ,_gedgf ;};_gbeb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_df .MakeInteger (int64 (len (_eabd ))));_abgbgf .FontFile2 =_gbeb ;if _fcfa .Bold {_abgbgf .StemV =_df .MakeInteger (120);}else {_abgbgf .StemV =_df .MakeInteger (70);
};_dcfab :=_ffab ;if _fcfa .IsFixedPitch {_dcfab |=_bebc ;};if _fcfa .ItalicAngle !=0{_dcfab |=_eaaa ;};_abgbgf .Flags =_df .MakeInteger (int64 (_dcfab ));_bagea ._fedff =_abgbgf ;_gecba :=&PdfFont {_bbeb :_bagea };return _gecba ,nil ;};func _cefc (_afeac _df .PdfObject )[]*_df .PdfObjectStream {if _afeac ==nil {return nil ;
};_bddbg ,_gcfeb :=_df .GetArray (_afeac );if !_gcfeb ||_bddbg .Len ()==0{return nil ;};_geafg :=make ([]*_df .PdfObjectStream ,0,_bddbg .Len ());for _ ,_adgcf :=range _bddbg .Elements (){if _bfeag ,_gfcfa :=_df .GetStream (_adgcf );_gfcfa {_geafg =append (_geafg ,_bfeag );
};};return _geafg ;};

// Reset sets the multi font encoder to its initial state.
func (_fgadf *MultipleFontEncoder )Reset (){_fgadf .CurrentFont =_fgadf ._ddffa [0]};func _bbcdg (_dggb *_df .PdfObjectDictionary )(*PdfShadingType5 ,error ){_ecafcc :=PdfShadingType5 {};_ddace :=_dggb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ddace ==nil {_dda .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ccea ,_gegg :=_ddace .(*_df .PdfObjectInteger );if !_gegg {_dda .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddace );
return nil ,_df .ErrTypeError ;};_ecafcc .BitsPerCoordinate =_ccea ;_ddace =_dggb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ddace ==nil {_dda .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ccea ,_gegg =_ddace .(*_df .PdfObjectInteger );if !_gegg {_dda .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ddace );
return nil ,_df .ErrTypeError ;};_ecafcc .BitsPerComponent =_ccea ;_ddace =_dggb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _ddace ==nil {_dda .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_ccea ,_gegg =_ddace .(*_df .PdfObjectInteger );if !_gegg {_dda .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ddace );
return nil ,_df .ErrTypeError ;};_ecafcc .VerticesPerRow =_ccea ;_ddace =_dggb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ddace ==nil {_dda .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fecec ,_gegg :=_ddace .(*_df .PdfObjectArray );if !_gegg {_dda .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddace );
return nil ,_df .ErrTypeError ;};_ecafcc .Decode =_fecec ;if _bffgb :=_dggb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bffgb !=nil {_ecafcc .Function =[]PdfFunction {};if _bbcda ,_ffdcee :=_bffgb .(*_df .PdfObjectArray );_ffdcee {for _ ,_edee :=range _bbcda .Elements (){_bbdcd ,_bcfdg :=_afecg (_edee );
if _bcfdg !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bcfdg );return nil ,_bcfdg ;};_ecafcc .Function =append (_ecafcc .Function ,_bbdcd );
};}else {_gggd ,_efcbc :=_afecg (_bffgb );if _efcbc !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efcbc );return nil ,_efcbc ;
};_ecafcc .Function =append (_ecafcc .Function ,_gggd );};};return &_ecafcc ,nil ;};func _febce (_afbbf *_df .PdfObjectDictionary )(*PdfFieldText ,error ){_ggbe :=&PdfFieldText {};_ggbe .DA ,_ =_df .GetString (_afbbf .Get ("\u0044\u0041"));_ggbe .Q ,_ =_df .GetInt (_afbbf .Get ("\u0051"));
_ggbe .DS ,_ =_df .GetString (_afbbf .Get ("\u0044\u0053"));_ggbe .RV =_afbbf .Get ("\u0052\u0056");_ggbe .MaxLen ,_ =_df .GetInt (_afbbf .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _ggbe ,nil ;};

// SetHideToolbar sets the value of the hideToolbar flag.
func (_gegfg *ViewerPreferences )SetHideToolbar (hideToolbar bool ){_gegfg ._gfbaf =&hideToolbar };func _defef ()*Names {return &Names {_efcbe :_df .MakeIndirectObject (_df .MakeDict ())}};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_df .PdfObjectBool ;SigFlags *_df .PdfObjectInteger ;CO *_df .PdfObjectArray ;DR *PdfPageResources ;DA *_df .PdfObjectString ;Q *_df .PdfObjectInteger ;XFA _df .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _df .PdfObject ;_ffeae *_df .PdfIndirectObject ;_cbaba bool ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_fbeeg *LTV )EnableAll (extraCerts []*_bf .Certificate )error {_bcdd :=_fbeeg ._eaae ._acee .AcroForm ;for _ ,_degac :=range _bcdd .AllFields (){_bdded ,_ :=_degac .GetContext ().(*PdfFieldSignature );if _bdded ==nil {continue ;};_bafbg :=_bdded .V ;
if _bgade :=_fbeeg .validateSig (_bafbg );_bgade !=nil {_dda .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bgade );
};if _cdcc :=_fbeeg .Enable (_bafbg ,extraCerts );_cdcc !=nil {return _cdcc ;};};return nil ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_bbba *PdfPage )AddExtGState (name _df .PdfObjectName ,egs *_df .PdfObjectDictionary )error {if _bbba .Resources ==nil {_bbba .Resources =NewPdfPageResources ();};if _bbba .Resources .ExtGState ==nil {_bbba .Resources .ExtGState =_df .MakeDict ();
};_dbcea ,_aeddg :=_df .TraceToDirectObject (_bbba .Resources .ExtGState ).(*_df .PdfObjectDictionary );if !_aeddg {_dda .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_df .TraceToDirectObject (_bbba .Resources .ExtGState ));
return _fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dbcea .Set (name ,egs );return nil ;};func _aabbfd (_eafbg *_df .PdfObjectDictionary )(*PdfShadingType2 ,error ){_cdcdga :=PdfShadingType2 {};
_dabfg :=_eafbg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _dabfg ==nil {_dda .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_fbfag ,_afeda :=_dabfg .(*_df .PdfObjectArray );if !_afeda {_dda .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dabfg );
return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _fbfag .Len ()!=4{_dda .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fbfag .Len ());
return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_cdcdga .Coords =_fbfag ;if _gddggb :=_eafbg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gddggb !=nil {_gddggb =_df .TraceToDirectObject (_gddggb );
_cfgd ,_fgbda :=_gddggb .(*_df .PdfObjectArray );if !_fgbda {_dda .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gddggb );return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cdcdga .Domain =_cfgd ;};_dabfg =_eafbg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dabfg ==nil {_dda .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cdcdga .Function =[]PdfFunction {};if _abde ,_dcgbe :=_dabfg .(*_df .PdfObjectArray );_dcgbe {for _ ,_gdcab :=range _abde .Elements (){_gcfde ,_dfdce :=_afecg (_gdcab );if _dfdce !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfdce );
return nil ,_dfdce ;};_cdcdga .Function =append (_cdcdga .Function ,_gcfde );};}else {_fefg ,_ccaaf :=_afecg (_dabfg );if _ccaaf !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccaaf );
return nil ,_ccaaf ;};_cdcdga .Function =append (_cdcdga .Function ,_fefg );};if _bbeaf :=_eafbg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bbeaf !=nil {_bbeaf =_df .TraceToDirectObject (_bbeaf );_fdab ,_dbddb :=_bbeaf .(*_df .PdfObjectArray );if !_dbddb {_dda .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbeaf );
return nil ,_df .ErrTypeError ;};if _fdab .Len ()!=2{_dda .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fdab .Len ());return nil ,ErrInvalidAttribute ;
};_cdcdga .Extend =_fdab ;};return &_cdcdga ,nil ;};

// SetDuplex sets the value of the duplex.
func (_gadedb *ViewerPreferences )SetDuplex (duplex Duplex ){_gadedb ._debg =duplex };

// SetFillImage attach a model.Image to push button.
func (_feed *PdfFieldButton )SetFillImage (image *Image ){if _feed .IsPush (){_feed ._aebf =image ;};};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bbcfgf *PdfShadingPattern )ToPdfObject ()_df .PdfObject {_bbcfgf .PdfPattern .ToPdfObject ();_ccfe :=_bbcfgf .getDict ();if _bbcfgf .Shading !=nil {_ccfe .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bbcfgf .Shading .ToPdfObject ());};if _bbcfgf .Matrix !=nil {_ccfe .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bbcfgf .Matrix );
};if _bbcfgf .ExtGState !=nil {_ccfe .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bbcfgf .ExtGState );};return _bbcfgf ._cbde ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_ececg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _df .GetNumberAsFloat (_ececg .CapHeight );};func _fabba (_gcba *_df .PdfObjectDictionary ,_cdce *fontCommon ,_dgdgd _aff .TextEncoder )(*pdfFontSimple ,error ){_acfcf :=_gcbce (_cdce );
_acfcf ._fdbbd =_dgdgd ;if _dgdgd ==nil {_aaacf :=_gcba .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aaacf ==nil {_aaacf =_df .MakeInteger (0);};_acfcf .FirstChar =_aaacf ;_bggg ,_degdf :=_df .GetIntVal (_aaacf );if !_degdf {_dda .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aaacf );
return nil ,_df .ErrTypeError ;};_ebeg :=_aff .CharCode (_bggg );_aaacf =_gcba .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aaacf ==nil {_aaacf =_df .MakeInteger (255);};_acfcf .LastChar =_aaacf ;_bggg ,_degdf =_df .GetIntVal (_aaacf );
if !_degdf {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aaacf );return nil ,_df .ErrTypeError ;
};_gecef :=_aff .CharCode (_bggg );_acfcf ._aeegg =make (map[_aff .CharCode ]float64 );_aaacf =_gcba .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aaacf !=nil {_acfcf .Widths =_aaacf ;_facfe ,_agcfc :=_df .GetArray (_aaacf );if !_agcfc {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aaacf );
return nil ,_df .ErrTypeError ;};_egadg ,_cfaad :=_facfe .ToFloat64Array ();if _cfaad !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cfaad ;};if len (_egadg )!=int (_gecef -_ebeg +1){_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gecef -_ebeg +1,len (_egadg ));
return nil ,_df .ErrRangeError ;};for _ceca ,_cged :=range _egadg {_acfcf ._aeegg [_ebeg +_aff .CharCode (_ceca )]=_cged ;};};};_acfcf .Encoding =_df .TraceToDirectObject (_gcba .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _acfcf ,nil ;
};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _df .PdfObject ;PreserveRB _df .PdfObject ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";
);

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bccg *PdfPageResources )GetShadingByName (keyName _df .PdfObjectName )(*PdfShading ,bool ){if _bccg .Shading ==nil {return nil ,false ;};_gfefb ,_gdceff :=_df .TraceToDirectObject (_bccg .Shading ).(*_df .PdfObjectDictionary );if !_gdceff {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bccg .Shading );
return nil ,false ;};if _abedd :=_gfefb .Get (keyName );_abedd !=nil {_cfcbe ,_ebefe :=_eggf (_abedd );if _ebefe !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_ebefe );
return nil ,false ;};return _cfcbe ,true ;};return nil ,false ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_affab *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_df .StreamEncoder ,error ){_gacb ,_abff :=_affab ._cbde .(*_df .PdfObjectStream );if !_abff {_dda .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_affab ._cbde );
return nil ,nil ,_df .ErrTypeError ;};_ffgbg ,_bbbee :=_df .DecodeStream (_gacb );if _bbbee !=nil {_dda .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_bbbee );
return nil ,nil ,_bbbee ;};_baefe ,_bbbee :=_df .NewEncoderFromStream (_gacb );if _bbbee !=nil {_dda .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bbbee );
return nil ,nil ,_bbbee ;};return _ffgbg ,_baefe ,nil ;};

// Add appends a top level outline item to the outline.
func (_egadgc *Outline )Add (item *OutlineItem ){_egadgc .Entries =append (_egadgc .Entries ,item )};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_abccg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _abccg ._fbeee !=nil {return _abccg ._fbeee ,nil ;};if _abccg .ColorSpace ==nil {return nil ,nil ;};_feefc ,_aefec :=_edddff (_abccg .ColorSpace );if _aefec !=nil {return nil ,_aefec ;
};_abccg ._fbeee =_feefc ;return _abccg ._fbeee ,nil ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _bc .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _ddda ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _bbgdd (rs ,opts ,true ,_ddda );
};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_fece *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_fece .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_fece ._efae =acroForm ;};

// Encoder returns the font's text encoder.
func (_ddac pdfFontType0 )Encoder ()_aff .TextEncoder {return _ddac ._agae };func _fbfgb (_cbdbb _df .PdfObject )(map[_aff .CharCode ]float64 ,error ){if _cbdbb ==nil {return nil ,nil ;};_bcfff ,_ffabd :=_df .GetArray (_cbdbb );if !_ffabd {return nil ,nil ;
};_bcag :=map[_aff .CharCode ]float64 {};_abfea :=_bcfff .Len ();for _edfgf :=0;_edfgf < _abfea -1;_edfgf ++{_bebgb :=_df .TraceToDirectObject (_bcfff .Get (_edfgf ));_bgff ,_adgaff :=_df .GetIntVal (_bebgb );if !_adgaff {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_edfgf ,_bebgb );
};_edfgf ++;if _edfgf > _abfea -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bcfff );};_ecbb :=_df .TraceToDirectObject (_bcfff .Get (_edfgf ));
switch _ecbb .(type ){case *_df .PdfObjectArray :_aefe ,_ :=_df .GetArray (_ecbb );if _aedfg ,_baaecd :=_aefe .ToFloat64Array ();_baaecd ==nil {for _cfccc :=0;_cfccc < len (_aedfg );_cfccc ++{_bcag [_aff .CharCode (_bgff +_cfccc )]=_aedfg [_cfccc ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_edfgf ,_ecbb );
};case *_df .PdfObjectInteger :_eagbe ,_edabb :=_df .GetIntVal (_ecbb );if !_edabb {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_edfgf ,_ecbb );
};_edfgf ++;if _edfgf > _abfea -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bcfff );};_fbabb :=_bcfff .Get (_edfgf );_bgdfg ,_cfaeg :=_df .GetNumberAsFloat (_fbabb );
if _cfaeg !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_edfgf ,_fbabb );};for _bbbfd :=_bgff ;_bbbfd <=_eagbe ;
_bbbfd ++{_bcag [_aff .CharCode (_bbbfd )]=_bgdfg ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_edfgf ,_ecbb );
};};return _bcag ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_beef PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _beef ._bbeb .getFontDescriptor (),nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_gebcad *PdfTilingPattern )SetContentStream (content []byte ,encoder _df .StreamEncoder )error {_aacaa ,_egfbfg :=_gebcad ._cbde .(*_df .PdfObjectStream );if !_egfbfg {_dda .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gebcad ._cbde );
return _df .ErrTypeError ;};if encoder ==nil {encoder =_df .NewRawEncoder ();};_ccacec :=_aacaa .PdfObjectDictionary ;_dedca :=encoder .MakeStreamDict ();_ccacec .Merge (_dedca );_affb ,_agce :=encoder .EncodeBytes (content );if _agce !=nil {return _agce ;
};_ccacec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_affb ))));_aacaa .Stream =_affb ;return nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_df .PdfObjectInteger ;BitsPerComponent *_df .PdfObjectInteger ;VerticesPerRow *_df .PdfObjectInteger ;Decode *_df .PdfObjectArray ;Function []PdfFunction ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bbbad *PdfSignature )GetContainingPdfObject ()_df .PdfObject {return _bbbad ._aecge };

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gfccg OutlineDest )ToPdfObject ()_df .PdfObject {if (_gfccg .PageObj ==nil &&_gfccg .Page < 0)||_gfccg .Mode ==""{return _df .MakeNull ();};_cbgdd :=_df .MakeArray ();if _gfccg .PageObj !=nil {_cbgdd .Append (_gfccg .PageObj );}else {_cbgdd .Append (_df .MakeInteger (_gfccg .Page ));
};_cbgdd .Append (_df .MakeName (_gfccg .Mode ));switch _gfccg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_cbgdd .Append (_df .MakeFloat (_gfccg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_cbgdd .Append (_df .MakeFloat (_gfccg .X ));
case "\u0058\u0059\u005a":_cbgdd .Append (_df .MakeFloat (_gfccg .X ));_cbgdd .Append (_df .MakeFloat (_gfccg .Y ));_cbgdd .Append (_df .MakeFloat (_gfccg .Zoom ));default:_cbgdd .Set (1,_df .MakeName ("\u0046\u0069\u0074"));};return _cbgdd ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_caccd :=&PdfShadingPatternType2 {};_caccd .Matrix =_df .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_caccd .PdfPattern =&PdfPattern {};_caccd .PdfPattern .PatternType =int64 (*_df .MakeInteger (2));
_caccd .PdfPattern ._ggcbe =_caccd ;_caccd .PdfPattern ._cbde =_df .MakeIndirectObject (_df .MakeDict ());return _caccd ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// Items returns all children outline items.
func (_ccdgb *OutlineItem )Items ()[]*OutlineItem {return _ccdgb .Entries };

// ToPdfObject returns the PDF representation of the colorspace.
func (_fdcc *PdfColorspaceDeviceRGB )ToPdfObject ()_df .PdfObject {return _df .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_babgf *PdfField )inherit (_cccdc func (*PdfField )bool )(bool ,error ){_dag :=map[*PdfField ]bool {};_fgfa :=false ;
_bgdfb :=_babgf ;for _bgdfb !=nil {if _ ,_ffbcd :=_dag [_bgdfb ];_ffbcd {return false ,_fa .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_dbbb :=_cccdc (_bgdfb );if _dbbb {_fgfa =true ;
break ;};_dag [_bgdfb ]=true ;_bgdfb =_bgdfb .Parent ;};return _fgfa ,nil ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_df .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _df .PdfObject ;A _df .PdfObject ;SE _df .PdfObject ;C _df .PdfObject ;F _df .PdfObject ;
_ceda *_df .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbgea *PdfShading )ToPdfObject ()_df .PdfObject {_gcdag :=_fbgea ._gfded ;_gbdfd ,_bacae :=_fbgea .getShadingDict ();if _bacae !=nil {_dda .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbgea .ShadingType !=nil {_gbdfd .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fbgea .ShadingType );};if _fbgea .ColorSpace !=nil {_gbdfd .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fbgea .ColorSpace .ToPdfObject ());
};if _fbgea .Background !=nil {_gbdfd .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_fbgea .Background );};if _fbgea .BBox !=nil {_gbdfd .Set ("\u0042\u0042\u006f\u0078",_fbgea .BBox .ToPdfObject ());};if _fbgea .AntiAlias !=nil {_gbdfd .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_fbgea .AntiAlias );
};return _gcdag ;};

// ToPdfObject implements interface PdfModel.
func (_ecb *PdfActionThread )ToPdfObject ()_df .PdfObject {_ecb .PdfAction .ToPdfObject ();_cc :=_ecb ._dfc ;_bgc :=_cc .PdfObject .(*_df .PdfObjectDictionary );_bgc .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeThread )));if _ecb .F !=nil {_bgc .Set ("\u0046",_ecb .F .ToPdfObject ());
};_bgc .SetIfNotNil ("\u0044",_ecb .D );_bgc .SetIfNotNil ("\u0042",_ecb .B );return _cc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dacf *PdfShadingType7 )ToPdfObject ()_df .PdfObject {_dacf .PdfShading .ToPdfObject ();_babacc ,_fedee :=_dacf .getShadingDict ();if _fedee !=nil {_dda .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dacf .BitsPerCoordinate !=nil {_babacc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dacf .BitsPerCoordinate );};if _dacf .BitsPerComponent !=nil {_babacc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dacf .BitsPerComponent );
};if _dacf .BitsPerFlag !=nil {_babacc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dacf .BitsPerFlag );};if _dacf .Decode !=nil {_babacc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dacf .Decode );};if _dacf .Function !=nil {if len (_dacf .Function )==1{_babacc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dacf .Function [0].ToPdfObject ());
}else {_ffaea :=_df .MakeArray ();for _ ,_cbbdb :=range _dacf .Function {_ffaea .Append (_cbbdb .ToPdfObject ());};_babacc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffaea );};};return _dacf ._gfded ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dbca *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dbca ._ggcbe .(*PdfShadingPattern );};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_fgb :=NewPdfAction ();_acd :=&PdfActionThread {};_acd .PdfAction =_fgb ;_fgb .SetContext (_acd );return _acd ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_ebgc *PdfAnnotation )ToPdfObject ()_df .PdfObject {_eafe :=_ebgc ._cdd ;_dcfbe :=_eafe .PdfObject .(*_df .PdfObjectDictionary );_dcfbe .Clear ();_dcfbe .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0041\u006e\u006eo\u0074"));_dcfbe .SetIfNotNil ("\u0052\u0065\u0063\u0074",_ebgc .Rect );
_dcfbe .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ebgc .Contents );_dcfbe .SetIfNotNil ("\u0050",_ebgc .P );_dcfbe .SetIfNotNil ("\u004e\u004d",_ebgc .NM );_dcfbe .SetIfNotNil ("\u004d",_ebgc .M );_dcfbe .SetIfNotNil ("\u0046",_ebgc .F );
_dcfbe .SetIfNotNil ("\u0041\u0050",_ebgc .AP );_dcfbe .SetIfNotNil ("\u0041\u0053",_ebgc .AS );_dcfbe .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_ebgc .Border );_dcfbe .SetIfNotNil ("\u0043",_ebgc .C );_dcfbe .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ebgc .StructParent );
_dcfbe .SetIfNotNil ("\u004f\u0043",_ebgc .OC );return _eafe ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_adbf *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gfcd :=0.3*_adbf .R ()+0.59*_adbf .G ()+0.11*_adbf .B ();_gfcd =_fe .Min (_fe .Max (_gfcd ,0.0),1.0);return NewPdfColorDeviceGray (_gfcd );};

// SetNonFullScreenPageMode sets the value of the nonFullScreenPageMode.
func (_bcccg *ViewerPreferences )SetNonFullScreenPageMode (nonFullScreenPageMode NonFullScreenPageMode ){_bcccg ._dbgff =nonFullScreenPageMode ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fbe *PdfAction )GetContainingPdfObject ()_df .PdfObject {return _fbe ._dfc };

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_bdff *PdfWriter )SetCatalogViewerPreferences (pref _df .PdfObject )error {if pref ==nil {_bdff ._afacf .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _gcggga ,_bbccc :=pref .(*_df .PdfObjectReference );
_bbccc {pref =_gcggga .Resolve ();if pref ==nil {_bdff ._afacf .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};_bdff .addObject (pref );_bdff ._afacf .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );
return nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_dgdge *_df .PdfIndirectObject ;_daddb *_df .PdfIndirectObject ;_cfda map[_df .PdfObject ]struct{};_cbef []*_df .PdfIndirectObject ;_bbedb []_df .PdfObject ;_bfaf map[_df .PdfObject ]struct{};_cbbc []*_df .PdfIndirectObject ;_gfcfe *PdfOutlineTreeNode ;
_afacf *_df .PdfObjectDictionary ;_afdce []_df .PdfObject ;_edaec *_df .PdfIndirectObject ;_cgccf *_a .Writer ;_eedgc int64 ;_debgc error ;_geefe *_df .PdfCrypt ;_gbfaag *_df .PdfObjectDictionary ;_dfbcc *_df .PdfIndirectObject ;_egaab *_df .PdfObjectArray ;
_bbagfg _df .Version ;_dgaff *bool ;_bfaag map[_df .PdfObject ][]*_df .PdfObjectDictionary ;_ccdfd *PdfAcroForm ;_bcgc *Names ;_cbcgf Optimizer ;_ecfag StandardApplier ;_fgbdf map[int ]crossReference ;_aaafd int64 ;ObjNumOffset int ;_ddga bool ;_efaff _df .XrefTable ;
_fagdce int64 ;_egdfc int64 ;_babda map[_df .PdfObject ]int64 ;_affdc map[_df .PdfObject ]struct{};_gceae string ;_cfbge string ;_fabcc []*PdfOutputIntent ;_cbadb bool ;_ddedfd ,_abbbdg string ;};func (_fadd *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// IsSimple returns true if `font` is a simple font.
func (_begad *PdfFont )IsSimple ()bool {_ ,_eabb :=_begad ._bbeb .(*pdfFontSimple );return _eabb };var _babfg =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_gga :=PdfColorCalGray (grayVal );return &_gga ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_cbga *PdfColorspaceLab )DecodeArray ()[]float64 {_defb :=[]float64 {0,100};if _cbga !=nil &&_cbga .Range !=nil &&len (_cbga .Range )==4{_defb =append (_defb ,_cbga .Range ...);}else {_defb =append (_defb ,-100,100,-100,100);};return _defb ;};

// SetCatalogStructTreeRoot sets the catalog struct tree root object.
func (_eccbc *PdfWriter )SetCatalogStructTreeRoot (tree _df .PdfObject )error {if tree ==nil {_eccbc ._afacf .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_eccbc ._afacf .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _eccbc .addObjects (tree );};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_dfgdf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_dfgdf .ToPdfOutline ().PdfOutlineTreeNode ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _bc .ReadSeeker )(*PdfFont ,error ){_fcca ,_bcgab :=_bc .ReadAll (r );if _bcgab !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bcgab );
return nil ,_bcgab ;};_aeeab ,_bcgab :=_fc .TtfParse (_c .NewReader (_fcca ));if _bcgab !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bcgab );
return nil ,_bcgab ;};_cgdbe :=&pdfCIDFontType2 {fontCommon :fontCommon {_adgg :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_df .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_aeeab .Widths )<=0{return nil ,_fa .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bcba :=1000.0/float64 (_aeeab .UnitsPerEm );_fbfge :=_bcba *float64 (_aeeab .Widths [0]);_egccg :=make (map[rune ]int );_adaed :=make (map[_fc .GID ]int );_eccdc :=_fc .GID (len (_aeeab .Widths ));for _ceae ,_agfce :=range _aeeab .Chars {if _agfce > _eccdc -1{continue ;
};_cdeeb :=int (_bcba *float64 (_aeeab .Widths [_agfce ]));_egccg [_ceae ]=_cdeeb ;_adaed [_agfce ]=_cdeeb ;};_cgdbe ._fdcd =_egccg ;_cgdbe .DW =_df .MakeInteger (int64 (_fbfge ));_bcfe :=_afage (_adaed ,uint16 (_eccdc ));_cgdbe .W =_df .MakeIndirectObject (_bcfe );
_aeee :=_df .MakeDict ();_aeee .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_df .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_aeee .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_df .MakeString ("\u0041\u0064\u006fb\u0065"));
_aeee .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_df .MakeInteger (0));_cgdbe .CIDSystemInfo =_aeee ;_eccaf :=&PdfFontDescriptor {FontName :_df .MakeName (_aeeab .PostScriptName ),Ascent :_df .MakeFloat (_bcba *float64 (_aeeab .TypoAscender )),Descent :_df .MakeFloat (_bcba *float64 (_aeeab .TypoDescender )),CapHeight :_df .MakeFloat (_bcba *float64 (_aeeab .CapHeight )),FontBBox :_df .MakeArrayFromFloats ([]float64 {_bcba *float64 (_aeeab .Xmin ),_bcba *float64 (_aeeab .Ymin ),_bcba *float64 (_aeeab .Xmax ),_bcba *float64 (_aeeab .Ymax )}),ItalicAngle :_df .MakeFloat (_aeeab .ItalicAngle ),MissingWidth :_df .MakeFloat (_fbfge )};
_ebbab ,_bcgab :=_df .MakeStream (_fcca ,_df .NewFlateEncoder ());if _bcgab !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bcgab );
return nil ,_bcgab ;};_ebbab .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_df .MakeInteger (int64 (len (_fcca ))));_eccaf .FontFile2 =_ebbab ;if _aeeab .Bold {_eccaf .StemV =_df .MakeInteger (120);}else {_eccaf .StemV =_df .MakeInteger (70);
};_cfdg :=_ddef ;if _aeeab .IsFixedPitch {_cfdg |=_bebc ;};if _aeeab .ItalicAngle !=0{_cfdg |=_eaaa ;};_eccaf .Flags =_df .MakeInteger (int64 (_cfdg ));_cgdbe ._eefad =_aeeab .PostScriptName ;_cgdbe ._fedff =_eccaf ;_dada :=pdfFontType0 {fontCommon :fontCommon {_adgg :"\u0054\u0079\u0070e\u0030",_eefad :_aeeab .PostScriptName },DescendantFont :&PdfFont {_bbeb :_cgdbe },Encoding :_df .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_agae :_aeeab .NewEncoder ()};
if len (_aeeab .Chars )> 0{_afbca :=make (map[_ce .CharCode ]rune ,len (_aeeab .Chars ));for _efag ,_feged :=range _aeeab .Chars {_dbbf :=_ce .CharCode (_feged );if _fdfeg ,_bacg :=_afbca [_dbbf ];!_bacg ||(_bacg &&_fdfeg > _efag ){_afbca [_dbbf ]=_efag ;
};};_dada ._babga =_ce .NewToUnicodeCMap (_afbca );};_daedg :=PdfFont {_bbeb :&_dada };return &_daedg ,nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cfegb *LTV )EnableByName (name string ,extraCerts []*_bf .Certificate )error {_caed :=_cfegb ._eaae ._acee .AcroForm ;for _ ,_eadb :=range _caed .AllFields (){_gffcdd ,_ :=_eadb .GetContext ().(*PdfFieldSignature );if _gffcdd ==nil {continue ;};
if _cbbf :=_gffcdd .PartialName ();_cbbf !=name {continue ;};return _cfegb .Enable (_gffcdd .V ,extraCerts );};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_edef *PdfFilespec )GetContainingPdfObject ()_df .PdfObject {return _edef ._adbd };

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_fcbeg int64 ;_efbc int64 ;_ceeedg int64 ;_eaegg int64 ;_bffeb int64 ;_dcfgb int64 ;_dfgged byte ;_aead int64 ;_badcg int64 ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ggecb *pdfCIDFontType0 )ToPdfObject ()_df .PdfObject {return _df .MakeNull ()};

// ToPdfObject implements interface PdfModel.
func (_bbc *PdfActionLaunch )ToPdfObject ()_df .PdfObject {_bbc .PdfAction .ToPdfObject ();_ea :=_bbc ._dfc ;_efg :=_ea .PdfObject .(*_df .PdfObjectDictionary );_efg .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeLaunch )));if _bbc .F !=nil {_efg .Set ("\u0046",_bbc .F .ToPdfObject ());
};_efg .SetIfNotNil ("\u0057\u0069\u006e",_bbc .Win );_efg .SetIfNotNil ("\u004d\u0061\u0063",_bbc .Mac );_efg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_bbc .Unix );_efg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bbc .NewWindow );return _ea ;
};

// ToPdfObject implements interface PdfModel.
func (_ebbaa *PdfSignature )ToPdfObject ()_df .PdfObject {_ecgba :=_ebbaa ._aecge ;var _bbde *_df .PdfObjectDictionary ;if _gdgbf ,_faadd :=_ecgba .PdfObject .(*pdfSignDictionary );_faadd {_bbde =_gdgbf .PdfObjectDictionary ;}else {_bbde =_ecgba .PdfObject .(*_df .PdfObjectDictionary );
};_bbde .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ebbaa .Type );_bbde .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_ebbaa .Filter );_bbde .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_ebbaa .SubFilter );_bbde .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ebbaa .ByteRange );
_bbde .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ebbaa .Contents );_bbde .SetIfNotNil ("\u0043\u0065\u0072\u0074",_ebbaa .Cert );_bbde .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebbaa .Name );_bbde .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_ebbaa .Reason );
_bbde .SetIfNotNil ("\u004d",_ebbaa .M );_bbde .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_ebbaa .Reference );_bbde .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_ebbaa .Changes );_bbde .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_ebbaa .ContactInfo );
_bbde .SetIfNotNil ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e",_ebbaa .Location );return _ecgba ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_df .PdfObjectName ;Colorants _df .PdfObject ;Process _df .PdfObject ;MixingHints _df .PdfObject ;_cecbb *_df .PdfIndirectObject ;};type modelManager struct{_cgcgf map[PdfModel ]_df .PdfObject ;_ggbdg map[_df .PdfObject ]PdfModel ;
_ffgg _gc .RWMutex ;_cceeg _gc .RWMutex ;};func (_ddcgf fontCommon )coreString ()string {_agca :="";if _ddcgf ._fedff !=nil {_agca =_ddcgf ._fedff .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_ddcgf ._adgg ,_ddcgf ._eefad ,_ddcgf ._fdggd ,_ddcgf ._ccdga ,_ddcgf ._ccef !=nil ,_ddcgf .fontFlags (),_agca );
};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_egfag *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _dfgde []*PdfOutlineTreeNode ;var _cbfde []string ;var _feddc func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_feddc =func (_ecda *PdfOutlineTreeNode ,_gbfec *[]*PdfOutlineTreeNode ,_ggecg *[]string ,_eebfc int ){if _ecda ==nil {return ;
};if _ecda ._gdedf ==nil {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_eggg ,_baadfb :=_ecda ._gdedf .(*PdfOutlineItem );if _baadfb {*_gbfec =append (*_gbfec ,&_eggg .PdfOutlineTreeNode );
_adgb :=_eb .Repeat ("\u0020",_eebfc *2)+_eggg .Title .Decoded ();*_ggecg =append (*_ggecg ,_adgb );};if _ecda .First !=nil {_afae :=_eb .Repeat ("\u0020",_eebfc *2)+"\u002b";*_ggecg =append (*_ggecg ,_afae );_feddc (_ecda .First ,_gbfec ,_ggecg ,_eebfc +1);
};if _baadfb &&_eggg .Next !=nil {_feddc (_eggg .Next ,_gbfec ,_ggecg ,_eebfc );};};_feddc (_egfag ._agbcd ,&_dfgde ,&_cbfde ,0);return _dfgde ,_cbfde ,nil ;};func (_dgff *PdfWriter )writeObject (_fgfge int ,_bcdbd _df .PdfObject ){_dda .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_fgfge );
if _eefdd ,_dabff :=_bcdbd .(*_df .PdfIndirectObject );_dabff {_dgff ._fgbdf [_fgfge ]=crossReference {Type :1,Offset :_dgff ._eedgc ,Generation :_eefdd .GenerationNumber };_gfeae :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fgfge );
if _gcfge ,_abbfg :=_eefdd .PdfObject .(*pdfSignDictionary );_abbfg {_gcfge ._edebg =_dgff ._eedgc +int64 (len (_gfeae ));};if _eefdd .PdfObject ==nil {_dda .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_eefdd .PdfObject =_df .MakeNull ();};_gfeae +=_eefdd .PdfObject .WriteString ();_gfeae +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_dgff .writeString (_gfeae );return ;};if _abdcf ,_deacf :=_bcdbd .(*_df .PdfObjectStream );_deacf {_dgff ._fgbdf [_fgfge ]=crossReference {Type :1,Offset :_dgff ._eedgc ,Generation :_abdcf .GenerationNumber };
_gebcge :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fgfge );_gebcge +=_abdcf .PdfObjectDictionary .WriteString ();_gebcge +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dgff .writeString (_gebcge );if _abdcf .Lazy {_bfaed ,_bdfgc :=_bgd .ReadFile (_abdcf .TempFile );
if _bdfgc !=nil {_dda .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_abdcf .TempFile );return ;};_dgff .writeBytes (_bfaed );
_bgd .Remove (_abdcf .TempFile );}else {_dgff .writeBytes (_abdcf .Stream );};_dgff .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _cbgfa ,_cbgdg :=_bcdbd .(*_df .PdfObjectStreams );
_cbgdg {_dgff ._fgbdf [_fgfge ]=crossReference {Type :1,Offset :_dgff ._eedgc ,Generation :_cbgfa .GenerationNumber };_babde :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fgfge );var _fggfg []string ;var _egffbe string ;var _dbdeeg int64 ;
for _bcaef ,_ebccb :=range _cbgfa .Elements (){_cdbaa ,_fgbff :=_ebccb .(*_df .PdfIndirectObject );if !_fgbff {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_fgfge ,_ebccb );
continue ;};_adcg :=_cdbaa .PdfObject .WriteString ()+"\u0020";_egffbe =_egffbe +_adcg ;_fggfg =append (_fggfg ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_cdbaa .ObjectNumber ,_dbdeeg ));_dgff ._fgbdf [int (_cdbaa .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_fgfge ,Index :_bcaef };
_dbdeeg =_dbdeeg +int64 (len ([]byte (_adcg )));};_abbfb :=_eb .Join (_fggfg ,"\u0020")+"\u0020";_cbgc :=_df .NewFlateEncoder ();_efgdc :=_cbgc .MakeStreamDict ();_efgdc .Set (_df .PdfObjectName ("\u0054\u0079\u0070\u0065"),_df .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_cggfec :=int64 (_cbgfa .Len ());_efgdc .Set (_df .PdfObjectName ("\u004e"),_df .MakeInteger (_cggfec ));_ffeeb :=int64 (len (_abbfb ));_efgdc .Set (_df .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_df .MakeInteger (_ffeeb ));_fgceb ,_ :=_cbgc .EncodeBytes ([]byte (_abbfb +_egffbe ));
_gceab :=int64 (len (_fgceb ));_efgdc .Set (_df .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_df .MakeInteger (_gceab ));_babde +=_efgdc .WriteString ();_babde +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dgff .writeString (_babde );
_dgff .writeBytes (_fgceb );_dgff .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_dgff .writeString (_bcdbd .WriteString ());};func _agfb (_ecag *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_cace ,_ceeag :=_df .GetDict (_ecag .AP );
if !_ceeag {return nil ,nil ,_fa .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _cace ==nil {return nil ,nil ,nil ;};_ffgc ,_ceeag :=_df .GetArray (_ecag .Rect );
if !_ceeag ||_ffgc .Len ()!=4{return nil ,nil ,_fa .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cgef ,_decfc :=NewPdfRectangle (*_ffgc );if _decfc !=nil {return nil ,nil ,_decfc ;};_cced :=_df .TraceToDirectObject (_cace .Get ("\u004e"));
switch _bddd :=_cced .(type ){case *_df .PdfObjectStream :_agccd :=_bddd ;_ccgd ,_edea :=NewXObjectFormFromStream (_agccd );return _ccgd ,_cgef ,_edea ;case *_df .PdfObjectDictionary :_daafef :=_bddd ;if _daafef ==nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _gafaa _df .PdfObject ;_eccc ,_eegd :=_df .GetName (_ecag .AS );if _eegd {_gafaa =_daafef .Get (*_eccc );}else {_gaed :=_ecag ._cdd .PdfObject .(*_df .PdfObjectDictionary );if _gaed ==nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _gagaf :=_gaed .Get ("\u0056");_gagaf !=nil {_gafaa =_daafef .Get (_df .PdfObjectName (_gagaf .String ()));};};if _gafaa ==nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_ccfd ,_eegd :=_df .GetStream (_gafaa );if !_eegd {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_eccc );
return nil ,nil ,_fa .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_bgcde ,_fcdbb :=NewXObjectFormFromStream (_ccfd );return _bgcde ,_cgef ,_fcdbb ;};_dda .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cced );
return nil ,nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToPdfObject implements interface PdfModel.
func (_fbga *PdfAnnotationSound )ToPdfObject ()_df .PdfObject {_fbga .PdfAnnotation .ToPdfObject ();_ddaac :=_fbga ._cdd ;_bafb :=_ddaac .PdfObject .(*_df .PdfObjectDictionary );_fbga .PdfAnnotationMarkup .appendToPdfDictionary (_bafb );_bafb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u006f\u0075n\u0064"));
_bafb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fbga .Sound );_bafb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fbga .Name );return _ddaac ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_afeg :=NewPdfAnnotation ();_egc :=&PdfAnnotationSound {};_egc .PdfAnnotation =_afeg ;_egc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afeg .SetContext (_egc );return _egc ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_dcbg *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_dcbg ._fbeee =colorspace ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_ggdgc *PdfReader )GetCatalogMarkInfo ()(_df .PdfObject ,bool ){if _ggdgc ._aeeb ==nil {return nil ,false ;};_efegc :=_ggdgc ._aeeb .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _efegc ,_efegc !=nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_abdff *PdfPageResources )GenerateXObjectName ()_df .PdfObjectName {_gbdgg :=1;for {_bcdfb :=_df .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_gbdgg ));if !_abdff .HasXObjectByName (*_bcdfb ){return *_bcdfb ;};_gbdgg ++;};};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_gfea :=NewPdfAnnotation ();_egb :=&PdfAnnotationWatermark {};_egb .PdfAnnotation =_gfea ;_gfea .SetContext (_egb );return _egb ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cgcfb *PdfColorspaceDeviceCMYK )ToPdfObject ()_df .PdfObject {return _df .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_fgac *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _fgac ._fcaac .GetCrypter ()!=nil &&!_fgac ._fcaac .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_caeea :=_fgac ._aeeb ;_fbbef :=_caeea .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _fbbef ==nil {return nil ,nil ;};_agecb ,_fegdc :=_df .GetIndirect (_fbbef );_fbbef =_df .TraceToDirectObject (_fbbef );if _df .IsNullObject (_fbbef ){_dda .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_decfg ,_febeg :=_df .GetDict (_fbbef );if !_febeg {_dda .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_fbbef );_dda .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
if _fgac ._bfcca .RelaxedMode {_dda .Log .Debug ("\u0052\u0065\u006c\u0061\u0078\u0065\u0064\u004d\u006f\u0064\u0065 \u0065\u006e\u0061\u0062\u006c\u0065\u0064\u002e \u0049g\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0065\u0072\u0072\u006f\u0072\u0073");
return nil ,nil ;};return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_fbbef );};_dda .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_dda .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_fgac ._caabc {_cgaab :=_fgac .traverseObjectData (_decfg );
if _cgaab !=nil {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_cgaab );
return nil ,_cgaab ;};};_ggcbb ,_bffaa :=_fgac .newPdfAcroFormFromDict (_agecb ,_decfg );if _bffaa !=nil {return nil ,_bffaa ;};_ggcbb ._cbaba =!_fegdc ;return _ggcbb ,nil ;};

// AddCRLs adds CRLs to DSS.
func (_acdbf *DSS )AddCRLs (crls [][]byte )([]*_df .PdfObjectStream ,error ){return _acdbf .add (&_acdbf .CRLs ,_acdbf ._gcaa ,crls );};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_bafeb *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// String implements interface PdfObject.
func (_bcb *PdfAction )String ()string {_fbb ,_cfa :=_bcb .ToPdfObject ().(*_df .PdfIndirectObject );if _cfa {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bcb ._agf ,_fbb .PdfObject .String ());};return "";};

// AddKChild adds a child K dictionary object.
func (_gddca *KDict )AddKChild (kChild *KDict ){_gddca ._cgaed =append (_gddca ._cgaed ,&KValue {_dccg :kChild });};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_bedae :=appender .Reader .DSS ;if _bedae ==nil {_bedae =NewDSS ();};if _cbfee :=_bedae .GenerateHashMaps ();_cbfee !=nil {return nil ,_cbfee ;};return &LTV {CertClient :_edf .NewCertClient (),OCSPClient :_edf .NewOCSPClient (),CRLClient :_edf .NewCRLClient (),SkipExisting :true ,_eaae :appender ,_acbe :_bedae },nil ;
};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_cdcg byte )byte ;func (_cffe *LTV )generateVRIKey (_dcabc *PdfSignature )(string ,error ){_bcddf ,_aefed :=_edeac (_dcabc .Contents .Bytes ());if _aefed !=nil {return "",_aefed ;};return _eb .ToUpper (_eee .EncodeToString (_bcddf )),nil ;
};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _df .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _eeffc error ;encoder ,_eeffc =img .getSuitableEncoder ();if _eeffc !=nil {_dda .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_eeffc );
encoder =_df .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_addee ,_fbgbb :=encoder .EncodeBytes (img .Data );if _fbgbb !=nil {_dda .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_fbgbb );
return nil ,_fbgbb ;};_ddee :=NewXObjectImage ();_aebdf :=img .Width ;_dccdb :=img .Height ;_ddee .Width =&_aebdf ;_ddee .Height =&_dccdb ;_decegb :=img .BitsPerComponent ;_ddee .BitsPerComponent =&_decegb ;_ddee .Filter =encoder ;_ddee .Stream =_addee ;
if cs ==nil {if img .ColorComponents ==1{_ddee .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_df .DCTEncoder :_ddee .ColorSpace =NewPdfColorspaceDeviceRGB ();_decegb =8;_ddee .BitsPerComponent =&_decegb ;
};};}else if img .ColorComponents ==3{_ddee .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_df .DCTEncoder :_ddee .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_ddee .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_fa .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_ddee .ColorSpace =cs ;};if len (img ._bggcb )!=0{_bdfaf :=NewXObjectImage ();_bdfaf .Filter =encoder ;_acedg ,_aeeca :=encoder .EncodeBytes (img ._bggcb );
if _aeeca !=nil {_dda .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_aeeca );return nil ,_aeeca ;};_bdfaf .Stream =_acedg ;_bdfaf .BitsPerComponent =_ddee .BitsPerComponent ;
_bdfaf .Width =&img .Width ;_bdfaf .Height =&img .Height ;_bdfaf .ColorSpace =NewPdfColorspaceDeviceGray ();_ddee .SMask =_bdfaf .ToPdfObject ();}else {_ddee .SMask =xobjIn .SMask ;_ddee .ImageMask =xobjIn .ImageMask ;if _ddee .ColorSpace .GetNumComponents ()==1{_gfggfb (_ddee );
};};return _ddee ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_abbbf *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _abbbf .RunesToCharcodeBytes ([]rune (str ));};func _cfebag (_eabab _df .PdfObject )(*PdfFunctionType3 ,error ){_gedfb :=&PdfFunctionType3 {};var _dceac *_df .PdfObjectDictionary ;
if _gace ,_dbaec :=_eabab .(*_df .PdfIndirectObject );_dbaec {_gdba ,_gafcb :=_gace .PdfObject .(*_df .PdfObjectDictionary );if !_gafcb {return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gedfb ._afaac =_gace ;
_dceac =_gdba ;}else if _cedcd ,_gfcc :=_eabab .(*_df .PdfObjectDictionary );_gfcc {_dceac =_cedcd ;}else {return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_degga ,_dadaf :=_df .TraceToDirectObject (_dceac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_df .PdfObjectArray );
if !_dadaf {_dda .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _degga .Len ()!=2{_dda .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fa .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_aeece ,_eefb :=_degga .ToFloat64Array ();
if _eefb !=nil {return nil ,_eefb ;};_gedfb .Domain =_aeece ;_degga ,_dadaf =_df .TraceToDirectObject (_dceac .Get ("\u0052\u0061\u006eg\u0065")).(*_df .PdfObjectArray );if _dadaf {if _degga .Len ()< 0||_degga .Len ()%2!=0{return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gcgce ,_fggff :=_degga .ToFloat64Array ();if _fggff !=nil {return nil ,_fggff ;};_gedfb .Range =_gcgce ;};_degga ,_dadaf =_df .TraceToDirectObject (_dceac .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_df .PdfObjectArray );if !_dadaf {_dda .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gedfb .Functions =[]PdfFunction {};
for _ ,_aggdb :=range _degga .Elements (){_fedcg ,_gaddf :=_afecg (_aggdb );if _gaddf !=nil {return nil ,_gaddf ;};_gedfb .Functions =append (_gedfb .Functions ,_fedcg );};_degga ,_dadaf =_df .TraceToDirectObject (_dceac .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_df .PdfObjectArray );
if !_dadaf {_dda .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_febcd ,_eefb :=_degga .ToFloat64Array ();if _eefb !=nil {return nil ,_eefb ;};_gedfb .Bounds =_febcd ;if len (_gedfb .Bounds )!=len (_gedfb .Functions )-1{_dda .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_gedfb .Bounds ),len (_gedfb .Functions ));
return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_degga ,_dadaf =_df .TraceToDirectObject (_dceac .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_df .PdfObjectArray );if !_dadaf {_dda .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bfgec ,_eefb :=_degga .ToFloat64Array ();
if _eefb !=nil {return nil ,_eefb ;};_gedfb .Encode =_bfgec ;if len (_gedfb .Encode )!=2*len (_gedfb .Functions ){_dda .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_gedfb .Encode ),len (_gedfb .Functions ));
return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _gedfb ,nil ;};func (_dgec *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_fdebe *_af .Document )error ;};

// SetContext sets the sub annotation (context).
func (_gfae *PdfAnnotation )SetContext (ctx PdfModel ){_gfae ._bcaf =ctx };

// ToPdfObject recursively builds the Outline tree PDF object.
func (_befeb *PdfOutlineItem )ToPdfObject ()_df .PdfObject {_accbb :=_befeb ._ceda ;_fagfb :=_accbb .PdfObject .(*_df .PdfObjectDictionary );_fagfb .Set ("\u0054\u0069\u0074l\u0065",_befeb .Title );if _befeb .A !=nil {_fagfb .Set ("\u0041",_befeb .A );
};if _caba :=_fagfb .Get ("\u0053\u0045");_caba !=nil {_fagfb .Remove ("\u0053\u0045");};if _befeb .C !=nil {_fagfb .Set ("\u0043",_befeb .C );};if _befeb .Dest !=nil {_fagfb .Set ("\u0044\u0065\u0073\u0074",_befeb .Dest );};if _befeb .F !=nil {_fagfb .Set ("\u0046",_befeb .F );
};if _befeb .Count !=nil {_fagfb .Set ("\u0043\u006f\u0075n\u0074",_df .MakeInteger (*_befeb .Count ));};if _befeb .Next !=nil {_fagfb .Set ("\u004e\u0065\u0078\u0074",_befeb .Next .ToPdfObject ());};if _befeb .First !=nil {_fagfb .Set ("\u0046\u0069\u0072s\u0074",_befeb .First .ToPdfObject ());
};if _befeb .Prev !=nil {_fagfb .Set ("\u0050\u0072\u0065\u0076",_befeb .Prev .GetContext ().GetContainingPdfObject ());};if _befeb .Last !=nil {_fagfb .Set ("\u004c\u0061\u0073\u0074",_befeb .Last .GetContext ().GetContainingPdfObject ());};if _befeb .Parent !=nil {_fagfb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_befeb .Parent .GetContext ().GetContainingPdfObject ());
};return _accbb ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_gfbda *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func _fgeg ()*modelManager {_fbbdg :=modelManager {};
_fbbdg ._cgcgf =map[PdfModel ]_df .PdfObject {};_fbbdg ._ggbdg =map[_df .PdfObject ]PdfModel {};_fbbdg ._ffgg =_gc .RWMutex {};_fbbdg ._cceeg =_gc .RWMutex {};return &_fbbdg ;};func (_fcc *PdfReader )newPdfAnnotationSquigglyFromDict (_bafd *_df .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_dcga :=PdfAnnotationSquiggly {};
_effd ,_aaege :=_fcc .newPdfAnnotationMarkupFromDict (_bafd );if _aaege !=nil {return nil ,_aaege ;};_dcga .PdfAnnotationMarkup =_effd ;_dcga .QuadPoints =_bafd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dcga ,nil ;};
func (_fdfag *PdfWriter )setDocumentIDs (_fdebea ,_dbcef string ){_fdfag ._egaab =_df .MakeArray (_df .MakeHexString (_fdebea ),_df .MakeHexString (_dbcef ));};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_gfde *PdfAppender )GetDSS ()(_cagf *DSS ){return _gfde ._acde };

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _df .PdfObject ;RichMediaContent _df .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fgfed pdfCIDFontType2 )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){_fcafc ,_dffea :=_fgfed ._fdcd [r ];if !_dffea {_bgcb ,_egfda :=_df .GetInt (_fgfed .DW );if !_egfda {return _fc .CharMetrics {},false ;};_fcafc =int (*_bgcb );};return _fc .CharMetrics {Wx :float64 (_fcafc )},true ;
};

// Transform rectangle with the supplied matrix.
func (_bdfaa *PdfRectangle )Transform (transformMatrix _ff .Matrix ){_bdfaa .Llx ,_bdfaa .Lly =transformMatrix .Transform (_bdfaa .Llx ,_bdfaa .Lly );_bdfaa .Urx ,_bdfaa .Ury =transformMatrix .Transform (_bdfaa .Urx ,_bdfaa .Ury );_bdfaa .Normalize ();
};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ddb :=NewPdfAction ();_dcb :=&PdfActionGoTo3DView {};_dcb .PdfAction =_ddb ;_ddb .SetContext (_dcb );return _dcb ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_defdf *PdfPageResources )AddExtGState (gsName _df .PdfObjectName ,gsDict _df .PdfObject )error {if _defdf .ExtGState ==nil {_defdf .ExtGState =_df .MakeDict ();};_cccfg :=_defdf .ExtGState ;_cefea ,_eadff :=_df .TraceToDirectObject (_cccfg ).(*_df .PdfObjectDictionary );
if !_eadff {_dda .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_cccfg ,_df .TraceToDirectObject (_cccfg ));
return _df .ErrTypeError ;};_cefea .Set (gsName ,gsDict );return nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cb :=NewPdfAction ();_aeb :=&PdfActionSubmitForm {};_aeb .PdfAction =_cb ;_cb .SetContext (_aeb );return _aeb ;};func _cecfg (_eaeab *_df .PdfObjectDictionary )(*PdfShadingType7 ,error ){_ebbeg :=PdfShadingType7 {};
_daffg :=_eaeab .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _daffg ==nil {_dda .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aggfcd ,_cgdde :=_daffg .(*_df .PdfObjectInteger );if !_cgdde {_dda .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_daffg );
return nil ,_df .ErrTypeError ;};_ebbeg .BitsPerCoordinate =_aggfcd ;_daffg =_eaeab .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _daffg ==nil {_dda .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aggfcd ,_cgdde =_daffg .(*_df .PdfObjectInteger );if !_cgdde {_dda .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_daffg );
return nil ,_df .ErrTypeError ;};_ebbeg .BitsPerComponent =_aggfcd ;_daffg =_eaeab .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _daffg ==nil {_dda .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aggfcd ,_cgdde =_daffg .(*_df .PdfObjectInteger );if !_cgdde {_dda .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_daffg );
return nil ,_df .ErrTypeError ;};_ebbeg .BitsPerComponent =_aggfcd ;_daffg =_eaeab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _daffg ==nil {_dda .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggacd ,_cgdde :=_daffg .(*_df .PdfObjectArray );if !_cgdde {_dda .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_daffg );
return nil ,_df .ErrTypeError ;};_ebbeg .Decode =_ggacd ;if _cddef :=_eaeab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cddef !=nil {_ebbeg .Function =[]PdfFunction {};if _gecff ,_aebbf :=_cddef .(*_df .PdfObjectArray );_aebbf {for _ ,_ddccf :=range _gecff .Elements (){_ebde ,_agfcgg :=_afecg (_ddccf );
if _agfcgg !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agfcgg );return nil ,_agfcgg ;};_ebbeg .Function =append (_ebbeg .Function ,_ebde );
};}else {_ggfda ,_ecffa :=_afecg (_cddef );if _ecffa !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecffa );return nil ,_ecffa ;
};_ebbeg .Function =append (_ebbeg .Function ,_ggfda );};};return &_ebbeg ,nil ;};var (CourierName =_fc .CourierName ;CourierBoldName =_fc .CourierBoldName ;CourierObliqueName =_fc .CourierObliqueName ;CourierBoldObliqueName =_fc .CourierBoldObliqueName ;
HelveticaName =_fc .HelveticaName ;HelveticaBoldName =_fc .HelveticaBoldName ;HelveticaObliqueName =_fc .HelveticaObliqueName ;HelveticaBoldObliqueName =_fc .HelveticaBoldObliqueName ;SymbolName =_fc .SymbolName ;ZapfDingbatsName =_fc .ZapfDingbatsName ;
TimesRomanName =_fc .TimesRomanName ;TimesBoldName =_fc .TimesBoldName ;TimesItalicName =_fc .TimesItalicName ;TimesBoldItalicName =_fc .TimesBoldItalicName ;);

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_efged :=&XObjectForm {};_gacba :=&_df .PdfObjectStream {};_gacba .PdfObjectDictionary =_df .MakeDict ();_efged ._gggdf =_gacba ;return _efged ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gfbc *PdfPage )GetPageDict ()*_df .PdfObjectDictionary {_bcecf :=_gfbc ._becggd ;_bcecf .Clear ();_bcecf .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0050\u0061\u0067\u0065"));_bcecf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfbc .Parent );
if _gfbc .LastModified !=nil {_bcecf .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gfbc .LastModified .ToPdfObject ());};if _gfbc .Resources !=nil {_bcecf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gfbc .Resources .ToPdfObject ());
};if _gfbc .CropBox !=nil {_bcecf .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gfbc .CropBox .ToPdfObject ());};if _gfbc .MediaBox !=nil {_bcecf .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gfbc .MediaBox .ToPdfObject ());};if _gfbc .BleedBox !=nil {_bcecf .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gfbc .BleedBox .ToPdfObject ());
};if _gfbc .TrimBox !=nil {_bcecf .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gfbc .TrimBox .ToPdfObject ());};if _gfbc .ArtBox !=nil {_bcecf .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gfbc .ArtBox .ToPdfObject ());};_bcecf .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gfbc .BoxColorInfo );
_bcecf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gfbc .Contents );if _gfbc .Rotate !=nil {_bcecf .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_df .MakeInteger (*_gfbc .Rotate ));};_bcecf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gfbc .Group );
_bcecf .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gfbc .Thumb );_bcecf .SetIfNotNil ("\u0042",_gfbc .B );_bcecf .SetIfNotNil ("\u0044\u0075\u0072",_gfbc .Dur );_bcecf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gfbc .Trans );_bcecf .SetIfNotNil ("\u0041\u0041",_gfbc .AA );
_bcecf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gfbc .Metadata );_bcecf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gfbc .PieceInfo );_bcecf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gfbc .StructParents );
_bcecf .SetIfNotNil ("\u0049\u0044",_gfbc .ID );_bcecf .SetIfNotNil ("\u0050\u005a",_gfbc .PZ );_bcecf .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gfbc .SeparationInfo );_bcecf .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gfbc .Tabs );
_bcecf .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gfbc .TemplateInstantiated );_bcecf .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gfbc .PresSteps );_bcecf .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gfbc .UserUnit );
_bcecf .SetIfNotNil ("\u0056\u0050",_gfbc .VP );if _gfbc ._afaba !=nil {_eggc :=_df .MakeArray ();for _ ,_bgagg :=range _gfbc ._afaba {if _dbbacg :=_bgagg .GetContext ();_dbbacg !=nil {_eggc .Append (_dbbacg .ToPdfObject ());}else {_eggc .Append (_bgagg .ToPdfObject ());
};};if _eggc .Len ()> 0{_bcecf .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_eggc );};}else if _gfbc .Annots !=nil {_bcecf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gfbc .Annots );};return _bcecf ;};func _dcbd (_aggd _df .PdfObject )(*PdfFontDescriptor ,error ){_efdb :=&PdfFontDescriptor {};
_aggd =_df .ResolveReference (_aggd );if _ccdb ,_ffde :=_aggd .(*_df .PdfIndirectObject );_ffde {_efdb ._defeg =_ccdb ;_aggd =_ccdb .PdfObject ;};_daec ,_ddcf :=_df .GetDict (_aggd );if !_ddcf {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aggd );
return nil ,_df .ErrTypeError ;};if _eecea :=_daec .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_eecea !=nil {_efdb .FontName =_eecea ;}else {_dda .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_daecf ,_ :=_df .GetName (_efdb .FontName );if _beegc :=_daec .Get ("\u0054\u0079\u0070\u0065");_beegc !=nil {_dega ,_afaa :=_beegc .(*_df .PdfObjectName );if !_afaa ||string (*_dega )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_dda .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_beegc ,_daecf ,_efdb .FontName );
};}else {_dda .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_daecf ,_efdb .FontName );
};_efdb .FontFamily =_daec .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_efdb .FontStretch =_daec .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_efdb .FontWeight =_daec .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_efdb .Flags =_daec .Get ("\u0046\u006c\u0061g\u0073");_efdb .FontBBox =_daec .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_efdb .ItalicAngle =_daec .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_efdb .Ascent =_daec .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_efdb .Descent =_daec .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_efdb .Leading =_daec .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_efdb .CapHeight =_daec .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_efdb .XHeight =_daec .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_efdb .StemV =_daec .Get ("\u0053\u0074\u0065m\u0056");_efdb .StemH =_daec .Get ("\u0053\u0074\u0065m\u0048");_efdb .AvgWidth =_daec .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_efdb .MaxWidth =_daec .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_efdb .MissingWidth =_daec .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_efdb .FontFile =_daec .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_efdb .FontFile2 =_daec .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_efdb .FontFile3 =_daec .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_efdb .CharSet =_daec .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_efdb .Style =_daec .Get ("\u0053\u0074\u0079l\u0065");_efdb .Lang =_daec .Get ("\u004c\u0061\u006e\u0067");
_efdb .FD =_daec .Get ("\u0046\u0044");_efdb .CIDSet =_daec .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _efdb .Flags !=nil {if _bcbbd ,_edece :=_df .GetIntVal (_efdb .Flags );_edece {_efdb ._adagba =_bcbbd ;};};if _efdb .MissingWidth !=nil {if _gbcdf ,_edfdd :=_df .GetNumberAsFloat (_efdb .MissingWidth );
_edfdd ==nil {_efdb ._fgffb =_gbcdf ;};};if _efdb .FontFile !=nil {_agecg ,_gffc :=_feafb (_efdb .FontFile );if _gffc !=nil {return _efdb ,_gffc ;};_dda .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_agecg );_efdb .fontFile =_agecg ;
};if _efdb .FontFile2 !=nil {_fgabe ,_bbcfg :=_fc .NewFontFile2FromPdfObject (_efdb .FontFile2 );if _bbcfg !=nil {return _efdb ,_bbcfg ;};_dda .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_fgabe .String ());_efdb ._bbgg =&_fgabe ;
};return _efdb ,nil ;};func _fcegf (_ebffd *_df .PdfObjectDictionary ,_caefg *fontCommon )(*pdfCIDFontType0 ,error ){if _caefg ._adgg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_dda .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_caefg );
return nil ,_df .ErrRangeError ;};_bdgeg :=_fgdfb (_caefg );_ggae ,_bdcgd :=_df .GetDict (_ebffd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bdcgd {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_caefg );
return nil ,ErrRequiredAttributeMissing ;};_bdgeg .CIDSystemInfo =_ggae ;_bdgeg .DW =_ebffd .Get ("\u0044\u0057");_bdgeg .W =_ebffd .Get ("\u0057");_bdgeg .DW2 =_ebffd .Get ("\u0044\u0057\u0032");_bdgeg .W2 =_ebffd .Get ("\u0057\u0032");_bdgeg ._gbbfc =1000.0;
if _bdgfa ,_adca :=_df .GetNumberAsFloat (_bdgeg .DW );_adca ==nil {_bdgeg ._gbbfc =_bdgfa ;};_adbcf ,_cbcbd :=_fbfgb (_bdgeg .W );if _cbcbd !=nil {return nil ,_cbcbd ;};if _adbcf ==nil {_adbcf =map[_aff .CharCode ]float64 {};};_bdgeg ._geaef =_adbcf ;
return _bdgeg ,nil ;};func (_bfge *PdfAcroForm )filteredFields (_fbecb FieldFilterFunc ,_fedbb bool )[]*PdfField {if _bfge ==nil {return nil ;};return _agga (_bfge .Fields ,_fbecb ,_fedbb );};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_dbcfd *PdfPage )GetContainingPdfObject ()_df .PdfObject {return _dbcfd ._edccc };

// Duplex represents the paper handling option that shall be used when printing
// the file from the print dialog.
type Duplex string ;

// GetOutlineTree returns the outline tree.
func (_fbbg *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _fbbg ._agbcd };

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_afg *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fabc ,_bcea :=color .(*PdfColorDeviceRGB );if !_bcea {_dda .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _fabc ,nil ;};

// SetBoundingBox sets the bounding box in the attribute object.
func (_acgeb *KDict )SetBoundingBox (x ,y ,width ,height float64 ){_acgeb ._acbd =&PdfRectangle {Llx :x ,Lly :y ,Urx :x +width ,Ury :y +height };};

// B returns the value of the B component of the color.
func (_fegc *PdfColorCalRGB )B ()float64 {return _fegc [1]};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_df .PdfObjectArray ;Domain *_df .PdfObjectArray ;Function []PdfFunction ;Extend *_df .PdfObjectArray ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dbgg *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgca ,_fcafa :=_df .GetNumbersAsFloat (objects );
if _fcafa !=nil {return nil ,_fcafa ;};return _dbgg .ColorFromFloats (_fgca );};

// GetStructParentsKey returns the StructParents key.
// If not set, returns -1.
func (_ggeea *PdfPage )GetStructParentsKey ()int {if _efcdc ,_agcgg :=_df .GetIntVal (_ggeea .StructParents );_agcgg {return _efcdc ;};return -1;};func _cbfd (_gadb _df .PdfObject )(*PdfColorspaceICCBased ,error ){_gdbd :=&PdfColorspaceICCBased {};if _eagf ,_adbba :=_gadb .(*_df .PdfIndirectObject );
_adbba {_gdbd ._efef =_eagf ;};_gadb =_df .TraceToDirectObject (_gadb );_eggbd ,_baec :=_gadb .(*_df .PdfObjectArray );if !_baec {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eggbd .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_gadb =_df .TraceToDirectObject (_eggbd .Get (0));_agffd ,_baec :=_gadb .(*_df .PdfObjectName );if !_baec {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_agffd !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_gadb =_eggbd .Get (1);
_gaaa ,_baec :=_df .GetStream (_gadb );if !_baec {_dda .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_gadb );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bddc :=_gaaa .PdfObjectDictionary ;_fffd ,_baec :=_bddc .Get ("\u004e").(*_df .PdfObjectInteger );
if !_baec {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fffd !=1&&*_fffd !=3&&*_fffd !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_gdbd .N =int (*_fffd );if _egda :=_bddc .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_egda !=nil {_ebge ,_cfaa :=NewPdfColorspaceFromPdfObject (_egda );if _cfaa !=nil {return nil ,_cfaa ;};_gdbd .Alternate =_ebge ;};if _gbee :=_bddc .Get ("\u0052\u0061\u006eg\u0065");
_gbee !=nil {_gbee =_df .TraceToDirectObject (_gbee );_eafd ,_cbgaf :=_gbee .(*_df .PdfObjectArray );if !_cbgaf {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _eafd .Len ()!=2*_gdbd .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_gfggg ,_cdba :=_eafd .GetAsFloat64Slice ();if _cdba !=nil {return nil ,_cdba ;};_gdbd .Range =_gfggg ;}else {_gdbd .Range =make ([]float64 ,2*_gdbd .N );for _fcge :=0;_fcge < _gdbd .N ;_fcge ++{_gdbd .Range [2*_fcge ]=0.0;_gdbd .Range [2*_fcge +1]=1.0;
};};if _ddcg :=_bddc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ddcg !=nil {_ffdb ,_bgad :=_ddcg .(*_df .PdfObjectStream );if !_bgad {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_gdbd .Metadata =_ffdb ;};_aedf ,_ebbc :=_df .DecodeStream (_gaaa );if _ebbc !=nil {return nil ,_ebbc ;};_gdbd .Data =_aedf ;_gdbd ._bdaf =_gaaa ;return _gdbd ,nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_gbcfae :=&PdfFilespec {};_gbcfae ._adbd =_df .MakeIndirectObject (_df .MakeDict ());return _gbcfae ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_fegf :=NewPdfAnnotation ();_gbb :=&PdfAnnotationInk {};_gbb .PdfAnnotation =_fegf ;_gbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fegf .SetContext (_gbb );return _gbb ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_abbda :=NewPdfAnnotation ();_dcfa :=&PdfAnnotationFreeText {};_dcfa .PdfAnnotation =_abbda ;_dcfa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abbda .SetContext (_dcfa );return _dcfa ;};func (_bdafb *PdfFunctionType0 )processSamples ()error {_aefg :=_bgb .ResampleBytes (_bdafb ._abgbd ,_bdafb .BitsPerSample );
_bdafb ._dcbeb =_aefg ;return nil ;};

// IsDisplayDocTitle returns the value of the displayDocTitle flag.
func (_ecadd *ViewerPreferences )IsDisplayDocTitle ()bool {if _ecadd ._gbggg ==nil {return false ;};return *_ecadd ._gbggg ;};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_cege *MultipleFontEncoder )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){_daebe :=_cege .CurrentFont ;_degbg ,_bbbc :=_daebe .GetRuneMetrics (r );for _bbfag :=1;_bbfag < len (_cege ._ddffa )&&_degbg .Wx ==0;_bbfag ++{_daebe =_cege ._ddffa [_bbfag ];
_degbg ,_bbbc =_daebe .GetRuneMetrics (r );};return _degbg ,_bbbc ;};type pdfFontType3 struct{fontCommon ;_dgcdd *_df .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _df .PdfObject ;Encoding _df .PdfObject ;FontBBox _df .PdfObject ;FontMatrix _df .PdfObject ;FirstChar _df .PdfObject ;LastChar _df .PdfObject ;Widths _df .PdfObject ;Resources _df .PdfObject ;_cdbc map[_aff .CharCode ]float64 ;_dddf _aff .TextEncoder ;
};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_ddgd *PdfFieldButton )IsCheckbox ()bool {return _ddgd .GetType ()==ButtonTypeCheckbox };

// AddWatermarkImage adds an image watermark to the page.
func (_beab *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_bedge ,_bgefc :=_beab .GetMediaBox ();if _bgefc !=nil {return _bgefc ;};_gccfa :=_bedge .Urx -_bedge .Llx ;_eddcgb :=_bedge .Ury -_bedge .Lly ;_cgfgd :=opt .Angle *_fe .Pi /180;
_deefe :=float64 (*ximg .Width );_fccc :=(_gccfa -_deefe *_fe .Cos (_cgfgd ))/2;if opt .FitToWidth {_deefe =_gccfa ;_fccc =0;};_bgcfb :=_eddcgb ;_gbbga :=float64 (0);if opt .PreserveAspectRatio {_bgcfb =_deefe *float64 (*ximg .Height )/float64 (*ximg .Width );
_gbbga =(_eddcgb -_bgcfb )/2;_gbbga -=float64 (*ximg .Width )/2*_fe .Sin (_cgfgd );};if _beab .Resources ==nil {_beab .Resources =NewPdfPageResources ();};_fgea :=NewXObjectForm ();_fgea .BBox =_df .MakeArrayFromFloats ([]float64 {0,0,_deefe ,_bgcfb });
_fgea .Resources =NewPdfPageResources ();_ccbae :=0;_ecccb :=_df .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_ccbae ));for _fgea .Resources .HasXObjectByName (_ecccb ){_ccbae ++;_ecccb =_df .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_ccbae ));
};_bgefc =_fgea .Resources .SetXObjectImageByName (_ecccb ,ximg );if _bgefc !=nil {return _bgefc ;};_ccbae =0;_fefec :=_df .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_ccbae ));for _fgea .Resources .HasExtGState (_fefec ){_ccbae ++;_fefec =_df .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_ccbae ));
};_feaaf :=_df .MakeDict ();_feaaf .Set ("\u0042\u004d",_df .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_feaaf .Set ("\u0043\u0041",_df .MakeFloat (opt .Alpha ));_feaaf .Set ("\u0063\u0061",_df .MakeFloat (opt .Alpha ));_bgefc =_fgea .Resources .AddExtGState (_fefec ,_feaaf );
if _bgefc !=nil {return _bgefc ;};_dbfbef :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_fefec ,_deefe ,_bgcfb ,0.0,0.0,_ecccb );
_fgea .SetContentStream ([]byte (_dbfbef ),nil );_cdab :=_ff .IdentityMatrix ().Rotate (_cgfgd );_eeeg :=[]float64 {_cdab [0],_cdab [1],_cdab [3],_cdab [4],_cdab [6],_cdab [7]};_fgea .Matrix =_df .MakeArrayFromFloats (_eeeg );_egged :=_beab .Resources .GenerateXObjectName ();
_bgefc =_beab .Resources .SetXObjectFormByName (_egged ,_fgea );if _bgefc !=nil {return _bgefc ;};_fcegd :=_e .Sprintf ("\u0071\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",1.0,1.0,_fccc ,_gbbga ,_egged );
return _beab .AddContentStreamByString (_fcegd );};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_cbe *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_cbe .updateObjectsDeep (dss .ToPdfObject (),nil );};_cbe ._acde =dss ;};

// ToPdfObject implements interface PdfModel.
func (_fge *PdfActionRendition )ToPdfObject ()_df .PdfObject {_fge .PdfAction .ToPdfObject ();_edc :=_fge ._dfc ;_dea :=_edc .PdfObject .(*_df .PdfObjectDictionary );_dea .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeRendition )));_dea .SetIfNotNil ("\u0052",_fge .R );
_dea .SetIfNotNil ("\u0041\u004e",_fge .AN );_dea .SetIfNotNil ("\u004f\u0050",_fge .OP );_dea .SetIfNotNil ("\u004a\u0053",_fge .JS );return _edc ;};

// NewStructTreeRoot creates a new structure tree root dictionary.
func NewStructTreeRoot ()*StructTreeRoot {return &StructTreeRoot {K :[]*KDict {},RoleMap :_df .MakeDict (),ParentTreeNextKey :0};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_gcdf *PdfColorspaceLab )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agbb ,_dbec :=_df .GetNumbersAsFloat (objects );
if _dbec !=nil {return nil ,_dbec ;};return _gcdf .ColorFromFloats (_agbb );};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _df .PdfObject ;T3DV _df .PdfObject ;T3DA _df .PdfObject ;T3DI _df .PdfObject ;T3DB _df .PdfObject ;};

// Encoder iterates through the list of fonts and returns a working encoder
func (_fabbaf *MultipleFontEncoder )Encoder (rn rune )(_aff .TextEncoder ,bool ){_acag :=_fabbaf .CurrentFont ;_egae :=_acag .Encoder ();_ ,_ddeff :=_egae .RuneToCharcode (rn );for _dgcg :=1;_dgcg < len (_fabbaf ._ddffa )&&!_ddeff ;_dgcg ++{_acag =_fabbaf ._ddffa [_dgcg ];
_egae =_acag .Encoder ();_ ,_ddeff =_egae .RuneToCharcode (rn );_fabbaf .CurrentFont =_acag ;};return _egae ,_ddeff ;};func (_eaaae *pdfFontSimple )updateStandard14Font (){_fgda ,_ggcg :=_eaaae .Encoder ().(_aff .SimpleEncoder );if !_ggcg {_dda .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_eaaae .Encoder (),_eaaae );
return ;};_effdc :=_fgda .Charcodes ();_eaaae ._aeegg =make (map[_aff .CharCode ]float64 ,len (_effdc ));for _ ,_eedg :=range _effdc {_caefb ,_ :=_fgda .CharcodeToRune (_eedg );_gdfge ,_ :=_eaaae ._eadd .Read (_caefb );_eaaae ._aeegg [_eedg ]=_gdfge .Wx ;
};};

// AddChild adds a child object.
func (_bbec *KDict )AddChild (kv *KValue ){_bbec ._cgaed =append (_bbec ._cgaed ,kv )};

// Fill populates `form` with values provided by `provider`.
func (_bddf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _bddf .fill (provider ,nil )};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_gcefb *PdfWriter )SetCatalogMetadata (meta _df .PdfObject )error {if meta ==nil {_gcefb ._afacf .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_bbgbd ,_gcegc :=_df .GetStream (meta );if !_gcegc {return _fa .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_gcefb .addObject (_bbgbd );_gcefb ._afacf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bbgbd );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcg *PdfAnnotationWatermark )ToPdfObject ()_df .PdfObject {_gcg .PdfAnnotation .ToPdfObject ();_adfb :=_gcg ._cdd ;_gbgf :=_adfb .PdfObject .(*_df .PdfObjectDictionary );_gbgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_gbgf .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_gcg .FixedPrint );return _adfb ;};

// GetContentStream returns the XObject Form's content stream.
func (_bddag *XObjectForm )GetContentStream ()([]byte ,error ){_ccfg ,_cgdbc :=_df .DecodeStream (_bddag ._gggdf );if _cgdbc !=nil {return nil ,_cgdbc ;};return _ccfg ,nil ;};

// ToPdfObject returns a PDF object representation of the ViewerPreferences.
func (_ccbg *ViewerPreferences )ToPdfObject ()_df .PdfObject {_cadabc :=_df .MakeDict ();if _ccbg ._gfbaf !=nil {_cadabc .Set ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072",_df .MakeBool (*_ccbg ._gfbaf ));};if _ccbg ._bbedc !=nil {_cadabc .Set ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072",_df .MakeBool (*_ccbg ._bbedc ));
};if _ccbg ._daeee !=nil {_cadabc .Set ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049",_df .MakeBool (*_ccbg ._daeee ));};if _ccbg ._bcffa !=nil {_cadabc .Set ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw",_df .MakeBool (*_ccbg ._bcffa ));
};if _ccbg ._gcggf !=nil {_cadabc .Set ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077",_df .MakeBool (*_ccbg ._gcggf ));};if _ccbg ._gbggg !=nil {_cadabc .Set ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065",_df .MakeBool (*_ccbg ._gbggg ));
};if _ccbg ._dbgff !=""{_cadabc .Set ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065",_df .MakeName (string (_ccbg ._dbgff )));};if _ccbg ._eace !=""{_cadabc .Set ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn",_df .MakeName (string (_ccbg ._eace )));
};if _ccbg ._bcgdce !=""{_cadabc .Set ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061",_df .MakeName (string (_ccbg ._bcgdce )));};if _ccbg ._aeaeb !=""{_cadabc .Set ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070",_df .MakeName (string (_ccbg ._aeaeb )));
};if _ccbg ._bggda !=""{_cadabc .Set ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a",_df .MakeName (string (_ccbg ._bggda )));};if _ccbg ._dgce !=""{_cadabc .Set ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p",_df .MakeName (string (_ccbg ._dgce )));};
if _ccbg ._dgfb !=""{_cadabc .Set ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067",_df .MakeName (string (_ccbg ._dgfb )));};if _ccbg ._debg !=""{_cadabc .Set ("\u0044\u0075\u0070\u006c\u0065\u0078",_df .MakeName (string (_ccbg ._debg )));
};if _ccbg ._ecea !=nil {_cadabc .Set ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065",_df .MakeBool (*_ccbg ._ecea ));};if _ccbg ._fecbe !=nil {_cadabc .Set ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065",_df .MakeArrayFromIntegers (_ccbg ._fecbe ));
};if _ccbg ._gccfe !=0{_cadabc .Set ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s",_df .MakeInteger (int64 (_ccbg ._gccfe )));};return _cadabc ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_ccegg *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_aefgc *Image )ColorAt (x ,y int )(_d .Color ,error ){_bfaef :=_ae .BytesPerLine (int (_aefgc .Width ),int (_aefgc .BitsPerComponent ),_aefgc .ColorComponents );switch _aefgc .ColorComponents {case 1:return _ae .ColorAtGrayscale (x ,y ,int (_aefgc .BitsPerComponent ),_bfaef ,_aefgc .Data ,_aefgc ._gdfe );
case 3:return _ae .ColorAtNRGBA (x ,y ,int (_aefgc .Width ),_bfaef ,int (_aefgc .BitsPerComponent ),_aefgc .Data ,_aefgc ._bggcb ,_aefgc ._gdfe );case 4:return _ae .ColorAtCMYK (x ,y ,int (_aefgc .Width ),_aefgc .Data ,_aefgc ._gdfe );};_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aefgc .ColorComponents ,_aefgc .BitsPerComponent );
return nil ,_fa .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_bbfdadd *Image )SetSamples (samples []uint32 ){if _bbfdadd .BitsPerComponent < 8{samples =_bbfdadd .samplesAddPadding (samples );};_cdafb :=_bgb .ResampleUint32 (samples ,int (_bbfdadd .BitsPerComponent ),8);_fgbbg :=make ([]byte ,len (_cdafb ));
for _bafee ,_adfef :=range _cdafb {_fgbbg [_bafee ]=byte (_adfef );};_bbfdadd .Data =_fgbbg ;};

// PickTrayByPDFSize returns the value of the pickTrayByPDFSize flag.
func (_fdbac *ViewerPreferences )PickTrayByPDFSize ()bool {if _fdbac ._ecea ==nil {return false ;};return *_fdbac ._ecea ;};func (_cccc *PdfSignature )extractChainFromCert ()([]*_bf .Certificate ,error ){var _gabf *_df .PdfObjectArray ;switch _efeee :=_cccc .Cert .(type ){case *_df .PdfObjectString :_gabf =_df .MakeArray (_efeee );
case *_df .PdfObjectArray :_gabf =_efeee ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_efeee );
};var _baege _c .Buffer ;for _ ,_fggefg :=range _gabf .Elements (){_fdcgb ,_gagab :=_df .GetString (_fggefg );if !_gagab {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fggefg );
};if _ ,_aagf :=_baege .Write (_fdcgb .Bytes ());_aagf !=nil {return nil ,_aagf ;};};return _bf .ParseCertificates (_baege .Bytes ());};func _afedab (_edfa *_df .PdfObjectDictionary )(*PdfShadingType6 ,error ){_dedeg :=PdfShadingType6 {};_cadef :=_edfa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cadef ==nil {_dda .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_acbb ,_bfbff :=_cadef .(*_df .PdfObjectInteger );if !_bfbff {_dda .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cadef );
return nil ,_df .ErrTypeError ;};_dedeg .BitsPerCoordinate =_acbb ;_cadef =_edfa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cadef ==nil {_dda .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_acbb ,_bfbff =_cadef .(*_df .PdfObjectInteger );if !_bfbff {_dda .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cadef );
return nil ,_df .ErrTypeError ;};_dedeg .BitsPerComponent =_acbb ;_cadef =_edfa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cadef ==nil {_dda .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_acbb ,_bfbff =_cadef .(*_df .PdfObjectInteger );if !_bfbff {_dda .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cadef );
return nil ,_df .ErrTypeError ;};_dedeg .BitsPerComponent =_acbb ;_cadef =_edfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cadef ==nil {_dda .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_degcc ,_bfbff :=_cadef .(*_df .PdfObjectArray );if !_bfbff {_dda .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cadef );
return nil ,_df .ErrTypeError ;};_dedeg .Decode =_degcc ;if _eeafe :=_edfa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eeafe !=nil {_dedeg .Function =[]PdfFunction {};if _ddfca ,_eceba :=_eeafe .(*_df .PdfObjectArray );_eceba {for _ ,_ecebcg :=range _ddfca .Elements (){_gccfb ,_badfa :=_afecg (_ecebcg );
if _badfa !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_badfa );return nil ,_badfa ;};_dedeg .Function =append (_dedeg .Function ,_gccfb );
};}else {_bgcgc ,_ggegd :=_afecg (_eeafe );if _ggegd !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggegd );return nil ,_ggegd ;
};_dedeg .Function =append (_dedeg .Function ,_bgcgc );};};return &_dedeg ,nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_deefd ,_beddb :=_bgd .Open (filePath );if _beddb !=nil {_dda .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_beddb );
return nil ,_beddb ;};defer _deefd .Close ();return NewCompositePdfFontFromTTF (_deefd );};func _ddaed (_decbd *PdfField )[]*PdfField {_cdgc :=[]*PdfField {_decbd };for _ ,_fcfag :=range _decbd .Kids {_cdgc =append (_cdgc ,_ddaed (_fcfag )...);};return _cdgc ;
};func _dfcfd (_efccd *_df .PdfObjectStream )(*PdfFunctionType0 ,error ){_fdga :=&PdfFunctionType0 {};_fdga ._dfeeg =_efccd ;_cbbdg :=_efccd .PdfObjectDictionary ;_beddc ,_gffcd :=_df .TraceToDirectObject (_cbbdg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_df .PdfObjectArray );
if !_gffcd {_dda .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _beddc .Len ()< 0||_beddc .Len ()%2!=0{_dda .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fa .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_fdga .NumInputs =_beddc .Len ()/2;_fbcf ,_fefe :=_beddc .ToFloat64Array ();if _fefe !=nil {return nil ,_fefe ;};_fdga .Domain =_fbcf ;_beddc ,_gffcd =_df .TraceToDirectObject (_cbbdg .Get ("\u0052\u0061\u006eg\u0065")).(*_df .PdfObjectArray );if !_gffcd {_dda .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _beddc .Len ()< 0||_beddc .Len ()%2!=0{return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fdga .NumOutputs =_beddc .Len ()/2;_gbcdfc ,_fefe :=_beddc .ToFloat64Array ();if _fefe !=nil {return nil ,_fefe ;};_fdga .Range =_gbcdfc ;_beddc ,_gffcd =_df .TraceToDirectObject (_cbbdg .Get ("\u0053\u0069\u007a\u0065")).(*_df .PdfObjectArray );if !_gffcd {_dda .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_faaba ,_fefe :=_beddc .ToIntegerArray ();
if _fefe !=nil {return nil ,_fefe ;};if len (_faaba )!=_fdga .NumInputs {_dda .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdga .Size =_faaba ;_adfag ,_gffcd :=_df .TraceToDirectObject (_cbbdg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_df .PdfObjectInteger );
if !_gffcd {_dda .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_adfag !=1&&*_adfag !=2&&*_adfag !=4&&*_adfag !=8&&*_adfag !=12&&*_adfag !=16&&*_adfag !=24&&*_adfag !=32{_dda .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_adfag );
return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdga .BitsPerSample =int (*_adfag );_fdga .Order =1;_gcga ,_gffcd :=_df .TraceToDirectObject (_cbbdg .Get ("\u004f\u0072\u0064e\u0072")).(*_df .PdfObjectInteger );
if _gffcd {if *_gcga !=1&&*_gcga !=3{_dda .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_gcga );return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdga .Order =int (*_gcga );
};_beddc ,_gffcd =_df .TraceToDirectObject (_cbbdg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_df .PdfObjectArray );if _gffcd {_agdab ,_ddadgc :=_beddc .ToFloat64Array ();if _ddadgc !=nil {return nil ,_ddadgc ;};_fdga .Encode =_agdab ;};_beddc ,_gffcd =_df .TraceToDirectObject (_cbbdg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_df .PdfObjectArray );
if _gffcd {_ceba ,_fgefe :=_beddc .ToFloat64Array ();if _fgefe !=nil {return nil ,_fgefe ;};_fdga .Decode =_ceba ;};_begdf ,_fefe :=_df .DecodeStream (_efccd );if _fefe !=nil {return nil ,_fefe ;};_fdga ._abgbd =_begdf ;return _fdga ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_aecg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebdc ,_cdcf :=_df .GetNumbersAsFloat (objects );
if _cdcf !=nil {return nil ,_cdcf ;};return _aecg .ColorFromFloats (_ebdc );};var _ pdfFont =(*pdfFontSimple )(nil );

// ToPdfObject implements interface PdfModel.
func (_dffg *PdfActionTrans )ToPdfObject ()_df .PdfObject {_dffg .PdfAction .ToPdfObject ();_bcf :=_dffg ._dfc ;_bcg :=_bcf .PdfObject .(*_df .PdfObjectDictionary );_bcg .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeTrans )));_bcg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_dffg .Trans );
return _bcf ;};var _degc =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_afed DefaultImageHandler )Read (reader _bc .Reader )(*Image ,error ){_bffba ,_ ,_effab :=_ab .Decode (reader );if _effab !=nil {_dda .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_effab );
return nil ,_effab ;};return _afed .NewImageFromGoImage (_bffba );};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _df .PdfObject ;};

// PageBoundary represents the name of the page boundary representing
// the visible area.
type PageBoundary string ;

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_fedfd *DSS )ToPdfObject ()_df .PdfObject {_bbfda :=_fedfd ._cfae .PdfObject .(*_df .PdfObjectDictionary );_bbfda .Clear ();_dcecf :=_df .MakeDict ();for _ccce ,_ffegf :=range _fedfd .VRI {_dcecf .Set (*_df .MakeName (_ccce ),_ffegf .ToPdfObject ());
};_bbfda .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_bdddb (_fedfd .Certs ));_bbfda .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_bdddb (_fedfd .OCSPs ));_bbfda .SetIfNotNil ("\u0043\u0052\u004c\u0073",_bdddb (_fedfd .CRLs ));_bbfda .Set ("\u0056\u0052\u0049",_dcecf );
return _fedfd ._cfae ;};

// SetDisplayDocTitle sets the value of the displayDocTitle flag.
func (_bfgeb *ViewerPreferences )SetDisplayDocTitle (displayDocTitle bool ){_bfgeb ._gbggg =&displayDocTitle ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dedega *PdfShadingType6 )ToPdfObject ()_df .PdfObject {_dedega .PdfShading .ToPdfObject ();_fffc ,_efdca :=_dedega .getShadingDict ();if _efdca !=nil {_dda .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dedega .BitsPerCoordinate !=nil {_fffc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dedega .BitsPerCoordinate );};if _dedega .BitsPerComponent !=nil {_fffc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dedega .BitsPerComponent );
};if _dedega .BitsPerFlag !=nil {_fffc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dedega .BitsPerFlag );};if _dedega .Decode !=nil {_fffc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dedega .Decode );};if _dedega .Function !=nil {if len (_dedega .Function )==1{_fffc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dedega .Function [0].ToPdfObject ());
}else {_cbgg :=_df .MakeArray ();for _ ,_affag :=range _dedega .Function {_cbgg .Append (_affag .ToPdfObject ());};_fffc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbgg );};};return _dedega ._gfded ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_babgab *PdfPageResources )SetXObjectByName (keyName _df .PdfObjectName ,stream *_df .PdfObjectStream )error {if _babgab .XObject ==nil {_babgab .XObject =_df .MakeDict ();};_ddfbe :=_df .TraceToDirectObject (_babgab .XObject );_gaebg ,_ebacg :=_ddfbe .(*_df .PdfObjectDictionary );
if !_ebacg {_dda .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_babgab .XObject ,_ddfbe );return _fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gaebg .Set (keyName ,stream );return nil ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );func _ggabc (_agcdc *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_agcdc }};func (_ebdea *PdfWriter )makeOffSetReference (_bbegg int64 ){_cfefcb :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_bbegg );
_ebdea .writeString (_cfefcb );_ebdea .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// IsFitWindow returns the value of the fitWindow flag.
func (_gfcdb *ViewerPreferences )IsFitWindow ()bool {if _gfcdb ._bcffa ==nil {return false ;};return *_gfcdb ._bcffa ;};func _efcd (_ddd _df .PdfObject )(*PdfBorderStyle ,error ){_gafc :=&PdfBorderStyle {};_gafc ._cfec =_ddd ;var _fdfb *_df .PdfObjectDictionary ;
_ddd =_df .TraceToDirectObject (_ddd );_fdfb ,_baab :=_ddd .(*_df .PdfObjectDictionary );if !_baab {return nil ,_fa .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _bbbf :=_fdfb .Get ("\u0054\u0079\u0070\u0065");_bbbf !=nil {_geg ,_eeaa :=_bbbf .(*_df .PdfObjectName );
if !_eeaa {_dda .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_bbbf );
}else {if *_geg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_dda .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_geg );};};};if _eaff :=_fdfb .Get ("\u0057");
_eaff !=nil {_acdb ,_ccgc :=_df .GetNumberAsFloat (_eaff );if _ccgc !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_ccgc );return nil ,_ccgc ;};_gafc .W =&_acdb ;
};if _febc :=_fdfb .Get ("\u0053");_febc !=nil {_ccb ,_ffa :=_febc .(*_df .PdfObjectName );if !_ffa {return nil ,_fa .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _aee BorderStyle ;switch *_ccb {case "\u0053":_aee =BorderStyleSolid ;case "\u0044":_aee =BorderStyleDashed ;case "\u0042":_aee =BorderStyleBeveled ;case "\u0049":_aee =BorderStyleInset ;case "\u0055":_aee =BorderStyleUnderline ;default:_dda .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ccb );
return nil ,_fa .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_gafc .S =&_aee ;};if _ccc :=_fdfb .Get ("\u0044");_ccc !=nil {_beea ,_adff :=_ccc .(*_df .PdfObjectArray );
if !_adff {_dda .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_ccc );return nil ,_fa .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_bafe ,_ddea :=_beea .ToIntegerArray ();if _ddea !=nil {_dda .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_ddea );
return nil ,_ddea ;};_gafc .D =&_bafe ;};return _gafc ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_fccbbg *PdfSignature )SetLocation (location string ){_fccbbg .Location =_df .MakeEncodedString (location ,true );};

// MergePageWith appends page content to source Pdf file page content.
func (_dfggc *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_bfeg :=pageNum -1;var _adbb *PdfPage ;for _badf ,_gcfc :=range _dfggc ._fdbe {if _badf ==_bfeg {_adbb =_gcfc ;};};if _adbb ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _adbb ._edccc !=nil &&_adbb ._edccc .GetParser ()==_dfggc ._acee ._fcaac {_adbb =_adbb .Duplicate ();_dfggc ._fdbe [_bfeg ]=_adbb ;};page =page .Duplicate ();_gafea (page );_caea :=_cede (_adbb );_cdegc :=_cede (page );_gefd :=make (map[_df .PdfObjectName ]_df .PdfObjectName );
for _ceecc :=range _cdegc {if _ ,_gaca :=_caea [_ceecc ];_gaca {for _bgbd :=1;true ;_bgbd ++{_fgde :=_df .PdfObjectName (string (_ceecc )+_dg .Itoa (_bgbd ));if _ ,_gacg :=_caea [_fgde ];!_gacg {_gefd [_ceecc ]=_fgde ;break ;};};};};_dccf ,_ggec :=page .GetContentStreams ();
if _ggec !=nil {return _ggec ;};_feca ,_ggec :=_adbb .GetContentStreams ();if _ggec !=nil {return _ggec ;};for _dgg ,_efaf :=range _dccf {for _cdae ,_dfdaa :=range _gefd {_efaf =_eb .Replace (_efaf ,"\u002f"+string (_cdae ),"\u002f"+string (_dfdaa ),-1);
};_dccf [_dgg ]=_efaf ;};_feca =append (_feca ,_dccf ...);if _dgdc :=_adbb .SetContentStreams (_feca ,_df .NewFlateEncoder ());_dgdc !=nil {return _dgdc ;};_adbb ._afaba =append (_adbb ._afaba ,page ._afaba ...);if _adbb .Resources ==nil {_adbb .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_adbb .Resources .Font =_dfggc .mergeResources (_adbb .Resources .Font ,page .Resources .Font ,_gefd );_adbb .Resources .XObject =_dfggc .mergeResources (_adbb .Resources .XObject ,page .Resources .XObject ,_gefd );_adbb .Resources .Properties =_dfggc .mergeResources (_adbb .Resources .Properties ,page .Resources .Properties ,_gefd );
if _adbb .Resources .ProcSet ==nil {_adbb .Resources .ProcSet =page .Resources .ProcSet ;};_adbb .Resources .Shading =_dfggc .mergeResources (_adbb .Resources .Shading ,page .Resources .Shading ,_gefd );_adbb .Resources .ExtGState =_dfggc .mergeResources (_adbb .Resources .ExtGState ,page .Resources .ExtGState ,_gefd );
};_cdff ,_ggec :=_adbb .GetMediaBox ();if _ggec !=nil {return _ggec ;};_eddcg ,_ggec :=page .GetMediaBox ();if _ggec !=nil {return _ggec ;};var _baad bool ;if _cdff .Llx > _eddcg .Llx {_cdff .Llx =_eddcg .Llx ;_baad =true ;};if _cdff .Lly > _eddcg .Lly {_cdff .Lly =_eddcg .Lly ;
_baad =true ;};if _cdff .Urx < _eddcg .Urx {_cdff .Urx =_eddcg .Urx ;_baad =true ;};if _cdff .Ury < _eddcg .Ury {_cdff .Ury =_eddcg .Ury ;_baad =true ;};if _baad {_adbb .MediaBox =_cdff ;};return nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_gfbdd *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_aeeg :=_bgb .NewReader (img .getBase ());_cfcc :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._bggcb ,img ._gdfe );
_cgab :=_bgb .NewWriter (_cfcc );_fbaff :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;_babaf :=_gfbdd .GetNumComponents ();_cgccg :=make ([]uint32 ,_babaf );_fedgf :=make ([]float64 ,_babaf );for {_dcaae :=_aeeg .ReadSamples (_cgccg );if _dcaae ==_bc .EOF {break ;
}else if _dcaae !=nil {return img ,_dcaae ;};for _gbgb :=0;_gbgb < _babaf ;_gbgb ++{_cgcg :=float64 (_cgccg [_gbgb ])/_fbaff ;_fedgf [_gbgb ]=_cgcg ;};_gdgb ,_dcaae :=_gfbdd .TintTransform .Evaluate (_fedgf );if _dcaae !=nil {return img ,_dcaae ;};for _ ,_aaab :=range _gdgb {_aaab =_fe .Min (_fe .Max (0,_aaab ),1.0);
if _dcaae =_cgab .WriteSample (uint32 (_aaab *_fbaff ));_dcaae !=nil {return img ,_dcaae ;};};};return _gfbdd .AlternateSpace .ImageToRGB (_fdaa (&_cfcc ));};func (_afad *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};


// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _df .PdfObject ;BS _df .PdfObject ;};func (_fcab *PdfReader )loadAction (_dfaa _df .PdfObject )(*PdfAction ,error ){if _egf ,_ecfef :=_df .GetIndirect (_dfaa );_ecfef {_cbd ,_bgge :=_fcab .newPdfActionFromIndirectObject (_egf );
if _bgge !=nil {return nil ,_bgge ;};return _cbd ,nil ;}else if !_df .IsNullObject (_dfaa ){return nil ,_fa .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bggd *PdfOutline )ToPdfObject ()_df .PdfObject {_bgdc :=_bggd ._bbagc ;_eabgf :=_bgdc .PdfObject .(*_df .PdfObjectDictionary );_eabgf .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _bggd .First !=nil {_eabgf .Set ("\u0046\u0069\u0072s\u0074",_bggd .First .ToPdfObject ());
};if _bggd .Last !=nil {_eabgf .Set ("\u004c\u0061\u0073\u0074",_bggd .Last .GetContext ().GetContainingPdfObject ());};if _bggd .Parent !=nil {_eabgf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bggd .Parent .GetContext ().GetContainingPdfObject ());
};if _bggd .Count !=nil {_eabgf .Set ("\u0043\u006f\u0075n\u0074",_df .MakeInteger (*_bggd .Count ));};return _bgdc ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_bcgd *PdfInfo )ToPdfObject ()_df .PdfObject {_fbcd :=_df .MakeDict ();_fbcd .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_bcgd .Title );_fbcd .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_bcgd .Author );_fbcd .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_bcgd .Subject );
_fbcd .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bcgd .Keywords );_fbcd .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_bcgd .Creator );_fbcd .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bcgd .Producer );
_fbcd .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_bcgd .Trapped );if _bcgd .CreationDate !=nil {_fbcd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bcgd .CreationDate .ToPdfObject ());};if _bcgd .ModifiedDate !=nil {_fbcd .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_bcgd .ModifiedDate .ToPdfObject ());
};for _ ,_gabbd :=range _bcgd ._fcac .Keys (){_fbcd .SetIfNotNil (_gabbd ,_bcgd ._fcac .Get (_gabbd ));};return _fbcd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aaaea *PdfColorspaceDeviceGray )ToPdfObject ()_df .PdfObject {return _df .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// L returns the value of the L component of the color.
func (_bbga *PdfColorLab )L ()float64 {return _bbga [0]};func (_gebdb *PdfPage )setContainer (_cffdc *_df .PdfIndirectObject ){_cffdc .PdfObject =_gebdb ._becggd ;_gebdb ._edccc =_cffdc ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cd :=NewPdfAction ();_cg :=&PdfActionURI {};_cg .PdfAction =_cd ;_cd .SetContext (_cg );return _cg ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_bfea *PdfFontDescriptor )ToPdfObject ()_df .PdfObject {_ececb :=_df .MakeDict ();if _bfea ._defeg ==nil {_bfea ._defeg =&_df .PdfIndirectObject {};};_bfea ._defeg .PdfObject =_ececb ;_ececb .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _bfea .FontName !=nil {_ececb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_bfea .FontName );};if _bfea .FontFamily !=nil {_ececb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_bfea .FontFamily );};if _bfea .FontStretch !=nil {_ececb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_bfea .FontStretch );
};if _bfea .FontWeight !=nil {_ececb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_bfea .FontWeight );};if _bfea .Flags !=nil {_ececb .Set ("\u0046\u006c\u0061g\u0073",_bfea .Flags );};if _bfea .FontBBox !=nil {_ececb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_bfea .FontBBox );
};if _bfea .ItalicAngle !=nil {_ececb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_bfea .ItalicAngle );};if _bfea .Ascent !=nil {_ececb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_bfea .Ascent );};if _bfea .Descent !=nil {_ececb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_bfea .Descent );
};if _bfea .Leading !=nil {_ececb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_bfea .Leading );};if _bfea .CapHeight !=nil {_ececb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_bfea .CapHeight );};if _bfea .XHeight !=nil {_ececb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_bfea .XHeight );
};if _bfea .StemV !=nil {_ececb .Set ("\u0053\u0074\u0065m\u0056",_bfea .StemV );};if _bfea .StemH !=nil {_ececb .Set ("\u0053\u0074\u0065m\u0048",_bfea .StemH );};if _bfea .AvgWidth !=nil {_ececb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_bfea .AvgWidth );
};if _bfea .MaxWidth !=nil {_ececb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_bfea .MaxWidth );};if _bfea .MissingWidth !=nil {_ececb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_bfea .MissingWidth );};if _bfea .FontFile !=nil {_ececb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_bfea .FontFile );
};if _bfea .FontFile2 !=nil {_ececb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_bfea .FontFile2 );};if _bfea .FontFile3 !=nil {_ececb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_bfea .FontFile3 );};if _bfea .CharSet !=nil {_ececb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_bfea .CharSet );
};if _bfea .Style !=nil {_ececb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_bfea .FontName );};if _bfea .Lang !=nil {_ececb .Set ("\u004c\u0061\u006e\u0067",_bfea .Lang );};if _bfea .FD !=nil {_ececb .Set ("\u0046\u0044",_bfea .FD );};if _bfea .CIDSet !=nil {_ececb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_bfea .CIDSet );
};return _bfea ._defeg ;};func (_eg *PdfReader )newPdfActionLaunchFromDict (_dae *_df .PdfObjectDictionary )(*PdfActionLaunch ,error ){_bdb ,_fgd :=_daca (_dae .Get ("\u0046"));if _fgd !=nil {return nil ,_fgd ;};return &PdfActionLaunch {Win :_dae .Get ("\u0057\u0069\u006e"),Mac :_dae .Get ("\u004d\u0061\u0063"),Unix :_dae .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_dae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bdb },nil ;
};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_df .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_df .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bgefcg *PdfReader )GetPageLabels ()(_df .PdfObject ,error ){_gddcf :=_df .ResolveReference (_bgefcg ._aeeb .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _gddcf ==nil {return nil ,nil ;};if !_bgefcg ._caabc {_fcgca :=_bgefcg .traverseObjectData (_gddcf );
if _fcgca !=nil {return nil ,_fcgca ;};};return _gddcf ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_aaaac *modelManager )GetModelFromPrimitive (primitive _df .PdfObject )PdfModel {_aaaac ._cceeg .RLock ();defer _aaaac ._cceeg .RUnlock ();model ,_ebegc :=_aaaac ._ggbdg [primitive ];if !_ebegc {return nil ;};return model ;};

// Initialize initializes the PdfSignature.
func (_caccda *PdfSignature )Initialize ()error {if _caccda .Handler ==nil {return _fa .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _caccda .Handler .InitSignature (_caccda );};

// ToPdfObject implements interface PdfModel.
func (_eabgg *Permissions )ToPdfObject ()_df .PdfObject {return _eabgg ._ecagb };

// ToPdfObject implements interface PdfModel.
func (_efgd *PdfActionResetForm )ToPdfObject ()_df .PdfObject {_efgd .PdfAction .ToPdfObject ();_ade :=_efgd ._dfc ;_dgb :=_ade .PdfObject .(*_df .PdfObjectDictionary );_dgb .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeResetForm )));_dgb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_efgd .Fields );
_dgb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_efgd .Flags );return _ade ;};func _cfaab (_abfg _fc .StdFont )pdfFontSimple {_gbcee :=_abfg .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_adgg :"\u0054\u0079\u0070e\u0031",_eefad :_abfg .Name ()},_eadd :_abfg .GetMetricsTable (),_efadg :&PdfFontDescriptor {FontName :_df .MakeName (string (_gbcee .Name )),FontFamily :_df .MakeName (_gbcee .Family ),FontWeight :_df .MakeFloat (float64 (_gbcee .Weight )),Flags :_df .MakeInteger (int64 (_gbcee .Flags )),FontBBox :_df .MakeArrayFromFloats (_gbcee .BBox [:]),ItalicAngle :_df .MakeFloat (_gbcee .ItalicAngle ),Ascent :_df .MakeFloat (_gbcee .Ascent ),Descent :_df .MakeFloat (_gbcee .Descent ),CapHeight :_df .MakeFloat (_gbcee .CapHeight ),XHeight :_df .MakeFloat (_gbcee .XHeight ),StemV :_df .MakeFloat (_gbcee .StemV ),StemH :_df .MakeFloat (_gbcee .StemH )},_fdbbd :_abfg .Encoder ()};
};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_baf :=NewPdfAction ();_bag :=&PdfActionResetForm {};_bag .PdfAction =_baf ;_baf .SetContext (_bag );return _bag ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_ecdc *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_afgf *Names )addEmbeddedFile (_aggfeb *EmbeddedFile )error {if _afgf .EmbeddedFiles ==nil {_afgf .EmbeddedFiles =_df .MakeDict ();_afgf .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_df .MakeArray ());
};_gdfbca :=NewPdfFileSpecFromEmbeddedFile (_aggfeb );_feba :=_afgf .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_gefdg ,_beefd :=_feba .(*_df .PdfObjectArray );if !_beefd {return _fa .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_bcca string ;_aabg *PdfFilespec ;};_gbga :=[]FileSpecMap {};for _ecbg :=0;_ecbg < len (_gefdg .Elements ());_ecbg +=2{if _ecbg %2==0{_daddg :=_gefdg .Get (_ecbg );if _daddg !=nil {_cfbff :=_daddg .(*_df .PdfObjectString );_eegad :=_gefdg .Get (_ecbg +1);
_gcde ,_cadab :=NewPdfFilespecFromObj (_eegad );if _cadab !=nil {return _cadab ;};_gbga =append (_gbga ,FileSpecMap {_bcca :_cfbff .String (),_aabg :_gcde });};};};_gbga =append (_gbga ,FileSpecMap {_bcca :_aggfeb .Name ,_aabg :_gdfbca });_dc .Slice (_gbga ,func (_agddb ,_dgae int )bool {return _gbga [_agddb ]._bcca < _gbga [_dgae ]._bcca });
_gefdg =_df .MakeArray ();for _ ,_fgafb :=range _gbga {_gefdg .Append (_df .MakeString (_fgafb ._bcca ));_gefdg .Append (_fgafb ._aabg .ToPdfObject ());};_afgf .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_gefdg );return nil ;};var (_ebced =_ba .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_dbgf =_ba .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_dfeea =_ba .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_agbg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_ggeg ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_acffg ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// DecodeArray returns the component range values for the Separation colorspace.
func (_cabg *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_bbdf *BorderStyle )GetPdfName ()string {switch *_bbdf {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_db :=NewPdfAction ();_ace :=&PdfActionHide {};_ace .PdfAction =_db ;_db .SetContext (_ace );return _ace ;};func (_abf *PdfReader )newPdfActionSubmitFormFromDict (_aage *_df .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_ecc ,_edad :=_daca (_aage .Get ("\u0046"));
if _edad !=nil {return nil ,_edad ;};return &PdfActionSubmitForm {F :_ecc ,Fields :_aage .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_aage .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func _bedbg (_egdbc _df .PdfObject ,_bfee *PdfReader )(*OutlineDest ,error ){_agdbd ,_aecd :=_df .GetArray (_egdbc );
if !_aecd {return nil ,_fa .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_bdefa :=_agdbd .Len ();if _bdefa < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_bdefa );
};_cagfdg :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_facdde :=_agdbd .Get (0);if _gdff ,_gebda :=_df .GetIndirect (_facdde );_gebda {if _ ,_ebdfe ,_bgfg :=_bfee .PageFromIndirectObject (_gdff );_bgfg ==nil {_cagfdg .Page =int64 (_ebdfe -1);}else {_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_gdff );
};_cagfdg .PageObj =_gdff ;}else if _gecfe ,_gbfdg :=_df .GetIntVal (_facdde );_gbfdg {if _gecfe >=0&&_gecfe < len (_bfee .PageList ){_cagfdg .PageObj =_bfee .PageList [_gecfe ].GetPageAsIndirectObject ();}else {_dda .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gecfe );
};_cagfdg .Page =int64 (_gecfe );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_facdde );};_bfaeg ,_aecd :=_df .GetNameVal (_agdbd .Get (1));
if !_aecd {_dda .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_agdbd .Get (1));
return _cagfdg ,nil ;};switch _bfaeg {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _bdefa > 2{_cagfdg .Y ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_agdbd .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _bdefa > 2{_cagfdg .X ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_agdbd .Get (2)));
};case "\u0058\u0059\u005a":if _bdefa > 4{_cagfdg .X ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_agdbd .Get (2)));_cagfdg .Y ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_agdbd .Get (3)));_cagfdg .Zoom ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_agdbd .Get (4)));
};default:_bfaeg ="\u0046\u0069\u0074";};_cagfdg .Mode =_bfaeg ;return _cagfdg ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_abbb *_df .PdfObjectDictionary ;_ggbge *_df .PdfIndirectObject ;};

// String returns a human readable description of `fontfile`.
func (_eeafd *fontFile )String ()string {_abca :="\u005b\u004e\u006f\u006e\u0065\u005d";if _eeafd ._eaba !=nil {_abca =_eeafd ._eaba .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_eeafd ._efagg ,_abca );
};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_abfc :=NewPdfAnnotation ();_cddc :=&PdfAnnotationPolyLine {};_cddc .PdfAnnotation =_abfc ;_cddc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abfc .SetContext (_cddc );return _cddc ;};

// IsHideToolbar returns the value of the hideToolbar flag.
func (_gfcfaf *ViewerPreferences )IsHideToolbar ()bool {if _gfcfaf ._gfbaf ==nil {return false ;};return *_gfcfaf ._gfbaf ;};

// Encoder returns the font's text encoder.
func (_gafcc *PdfFont )Encoder ()_aff .TextEncoder {_gcagb :=_gafcc .actualFont ();if _gcagb ==nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_gafcc ._bbeb );
return nil ;};return _gcagb .Encoder ();};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cafa *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_dda .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_dda .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_dda .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_dda .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_agcgb ,_ecaf :=_ae .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bggcb ,img ._gdfe );if _ecaf !=nil {return Image {},_ecaf ;};_dacab ,_ecaf :=_ae .NRGBAConverter .Convert (_agcgb );
if _ecaf !=nil {return Image {},_ecaf ;};return _fdaa (_dacab .Base ()),nil ;};func (_adbfcc *PdfWriter )AttachFile (file *EmbeddedFile )error {_bebge :=_adbfcc ._bcgc ;if _bebge ==nil {_bebge =_defef ();};_cdcdfc :=_bebge .addEmbeddedFile (file );if _cdcdfc !=nil {return _cdcdfc ;
};_adbfcc ._bcgc =_bebge ;return nil ;};func (_efea *PdfReader )newPdfAnnotationStrikeOut (_bedd *_df .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_fgf :=PdfAnnotationStrikeOut {};_ebda ,_dfgg :=_efea .newPdfAnnotationMarkupFromDict (_bedd );
if _dfgg !=nil {return nil ,_dfgg ;};_fgf .PdfAnnotationMarkup =_ebda ;_fgf .QuadPoints =_bedd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fgf ,nil ;};

// AddWatermarkText adds a text watermark to the page.
func (_bdgegd *PdfPage )AddWatermarkText (text string ,opt WatermarkTextOptions )error {if text ==""{return _fa .New ("n\u006f\u0020\u0074\u0065\u0078\u0074\u0020\u0073\u0065\u0074");};if opt .FontPath ==""{return _fa .New ("\u006e\u006f \u0066\u006f\u006et\u0020\u0070\u0061\u0074\u0068\u0020\u0073\u0065\u0074");
};if opt .Alpha ==0{opt .Alpha =0.5;};if opt .FontSize ==0{opt .FontSize =20.0;};if opt .FontColor ==nil {opt .FontColor =_d .Black ;};_addba ,_fgec :=_bdgegd .generateImage (text ,opt .FontSize ,opt .FontPath ,opt .FontColor );if _fgec !=nil {return _fgec ;
};_bcded ,_ ,_fgec :=_ab .Decode (_c .NewReader (_addba ));if _fgec !=nil {return _fgec ;};_fcgeg ,_fgec :=ImageHandling .NewImageFromGoImage (_bcded );if _fgec !=nil {return _fgec ;};_fcfab ,_fgec :=NewXObjectImageFromImage (_fcgeg ,nil ,_df .NewFlateEncoder ());
if _fgec !=nil {return _fgec ;};_ffdg :=WatermarkImageOptions {Alpha :opt .Alpha ,FitToWidth :false ,PreserveAspectRatio :true ,Angle :opt .Angle };return _bdgegd .AddWatermarkImage (_fcfab ,_ffdg );};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_bfgd *Image )ToGoImage ()(_ab .Image ,error ){_dda .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_cfff ,_badcc :=_ae .NewImage (int (_bfgd .Width ),int (_bfgd .Height ),int (_bfgd .BitsPerComponent ),_bfgd .ColorComponents ,_bfgd .Data ,_bfgd ._bggcb ,_bfgd ._gdfe );
if _badcc !=nil {return nil ,_badcc ;};return _cfff ,nil ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _aae .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_df .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_df .MakeInteger (int64 (permission )),V :_df .MakeName ("\u0031\u002e\u0032")};
};

// NewStructTreeRootFromPdfObject creates a new structure tree root from a PDF object.
func NewStructTreeRootFromPdfObject (obj _df .PdfObject )(*StructTreeRoot ,error ){_dccca :=_df .ResolveReference (obj );_dgebag ,_gbaba :=_df .GetDict (_dccca );if !_gbaba {return nil ,_e .Errorf ("\u0065\u0078\u0069\u0073\u0074\u0069\u006e\u0067 \u0073\u0074\u0072uc\u0074\u0075\u0072\u0065\u0020\u0074r\u0065\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_bbfad :=&StructTreeRoot {};_bbfad ._baga =_df .MakeIndirectObject (_df .MakeDict ());if _fbega :=_dgebag .Get ("\u004b");_fbega !=nil {_bacaf :=_df .ResolveReference (_fbega );_bbgf :=_df .ResolveReferencesDeep (_bacaf ,nil );if _bbgf !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006fr\u0020\u0072\u0065\u0073\u006f\u006c\u0076\u0069\u006e\u0067 \u004b \u006f\u0062\u006a\u0065\u0063\u0074\u003a \u0025\u0076",_bbgf );
};_bbfad .K =[]*KDict {};if _deaage ,_bbcae :=_df .GetArray (_bacaf );_bbcae {for _fdefb :=0;_fdefb < _deaage .Len ();_fdefb ++{_gbeg :=_deaage .Get (_fdefb );_baddf ,_cbcc :=NewKDictFromPdfObject (_gbeg );if _cbcc !=nil {return nil ,_cbcc ;};_bbfad .K =append (_bbfad .K ,_baddf );
};}else {_eedgg ,_bagaf :=NewKDictFromPdfObject (_bacaf );if _bagaf !=nil {return nil ,_bagaf ;};_bbfad .K =append (_bbfad .K ,_eedgg );};};if _gcfcg :=_dgebag .Get ("\u0049\u0044\u0054\u0072\u0065\u0065");_gcfcg !=nil {_bbfad .IDTree =_gddec (_gcfcg );
};if _gdcgf :=_dgebag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065");_gdcgf !=nil {_gecbd :=_df .ResolveReference (_gdcgf );if _ffccfe ,_bfbaf :=_df .GetDict (_gecbd );_bfbaf {_bbfad .ParentTree =_ffccfe ;};};if _gagagd :=_dgebag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079");
_gagagd !=nil {_ ,_beedg :=_df .GetInt (_gagagd );if _beedg {_ecaad ,_eeecb :=_df .GetNumberAsInt64 (_gagagd );if _eeecb !=nil {return nil ,_eeecb ;};_bbfad .ParentTreeNextKey =_ecaad ;};};if _cfecd :=_dgebag .Get ("\u0052o\u006c\u0065\u004d\u0061\u0070");
_cfecd !=nil {switch _fddbbb :=_cfecd .(type ){case *_df .PdfIndirectObject :if _bcdfd ,_egcdb :=_df .GetDict (_fddbbb .PdfObject );_egcdb {_bbfad .RoleMap =_bcdfd ;};case *_df .PdfObjectDictionary :_bbfad .RoleMap =_fddbbb ;case *_df .PdfObjectString :_bbfad .RoleMap =_fddbbb ;
};};if _ceed :=_dgebag .Get ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070");_ceed !=nil {if _ecgdc ,_ecbcf :=_df .GetDict (_ceed );_ecbcf {_bbfad .ClassMap =_ecgdc ;};};return _bbfad ,nil ;};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _df .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_bcdfdd :=NewXObjectImage ();if lazy {_ggdfad ,_bffbgc :=UpdateXObjectImageFromImage (_bcdfdd ,img ,cs ,encoder );if _bffbgc !=nil {return nil ,_bffbgc ;
};_ggdfad .ToPdfObject ();_bffbgc =_ggdfad ._gafba .MakeLazy ();if _bffbgc !=nil {return nil ,_bffbgc ;};_ggdfad .Stream =nil ;return _ggdfad ,nil ;};return UpdateXObjectImageFromImage (_bcdfdd ,img ,cs ,encoder );};

// ToPdfObject implements interface PdfModel.
func (_bfdega *PdfSignatureReference )ToPdfObject ()_df .PdfObject {_febag :=_df .MakeDict ();_febag .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bfdega .Type );_febag .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_bfdega .TransformMethod );
_febag .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_bfdega .TransformParams );_febag .SetIfNotNil ("\u0044\u0061\u0074\u0061",_bfdega .Data );_febag .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_bfdega .DigestMethod );
return _febag ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_ggcbe PdfModel ;_cbde _df .PdfObject ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gdeee *OutlineItem )Insert (index uint ,item *OutlineItem ){_efgaa :=uint (len (_gdeee .Entries ));if index > _efgaa {index =_efgaa ;};_gdeee .Entries =append (_gdeee .Entries [:index ],append ([]*OutlineItem {item },_gdeee .Entries [index :]...)...);
};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_fed :=NewPdfAction ();_dcf :=&PdfActionMovie {};_dcf .PdfAction =_fed ;_fed .SetContext (_dcf );return _dcf ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_cfdc *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cfdc .Alternate ==nil {_dda .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _cfdc .N ==1{_dda .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_afea :=NewPdfColorspaceDeviceGray ();return _afea .ColorToRGB (color );}else if _cfdc .N ==3{_dda .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _cfdc .N ==4{_dda .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fafd :=NewPdfColorspaceDeviceCMYK ();return _fafd .ColorToRGB (color );}else {return nil ,_fa .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dda .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_cfdc );
return _cfdc .Alternate .ColorToRGB (color );};func _cfcab (_ggdf []byte )[]byte {const _ceeed =52845;const _aaba =22719;_bfag :=55665;for _ ,_eecef :=range _ggdf [:4]{_bfag =(int (_eecef )+_bfag )*_ceeed +_aaba ;};_ddab :=make ([]byte ,len (_ggdf )-4);
for _eegcd ,_cebb :=range _ggdf [4:]{_ddab [_eegcd ]=byte (int (_cebb )^_bfag >>8);_bfag =(int (_cebb )+_bfag )*_ceeed +_aaba ;};return _ddab ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_df .PdfObject ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ac :=NewPdfAction ();_fd :=&PdfActionLaunch {};_fd .PdfAction =_ac ;_ac .SetContext (_fd );return _fd ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_ceafc *PdfPageResources )HasExtGState (keyName _df .PdfObjectName )bool {_ ,_bfbfa :=_ceafc .GetFontByName (keyName );return _bfbfa ;};func (_fgbfd *PdfWriter )flushWriter ()error {if _fgbfd ._debgc ==nil {_fgbfd ._debgc =_fgbfd ._cgccf .Flush ();
};return _fgbfd ._debgc ;};

// SetDirection sets the value of the direction.
func (_fdag *ViewerPreferences )SetDirection (direction Direction ){_fdag ._eace =direction };

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_deaade *PdfPageResources )SetXObjectImageByNameLazy (keyName _df .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_cgeb :=ximg .ToPdfObject ().(*_df .PdfObjectStream );if lazy {_cgeb .MakeLazy ();};_gaebf :=_deaade .SetXObjectByName (keyName ,_cgeb );
return _gaebf ;};func (_bbcdf *LTV )getOCSPs (_aadeg []*_bf .Certificate ,_bbgac map[string ]*_bf .Certificate )([][]byte ,error ){_ffaga :=make ([][]byte ,0,len (_aadeg ));for _ ,_ecebc :=range _aadeg {for _ ,_ecceg :=range _ecebc .OCSPServer {if _bbcdf .CertClient .IsCA (_ecebc ){continue ;
};_aegf ,_cgcdc :=_bbgac [_ecebc .Issuer .CommonName ];if !_cgcdc {_dda .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_eaccd ,_fggb :=_bbcdf .OCSPClient .MakeRequest (_ecceg ,_ecebc ,_aegf );if _fggb !=nil {_dda .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_fggb );
continue ;};_ffaga =append (_ffaga ,_eaccd );};};return _ffaga ,nil ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_gabg :=&PdfBorderStyle {};return _gabg };

// ColorToRGB converts a Lab color to an RGB color.
func (_abbg *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_abdd :=func (_dbeab float64 )float64 {if _dbeab >=6.0/29{return _dbeab *_dbeab *_dbeab ;};return 108.0/841*(_dbeab -4.0/29.0);};_eacb ,_cgbbg :=color .(*PdfColorLab );if !_cgbbg {_dda .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_eacb .L ();AStar :=_eacb .A ();BStar :=_eacb .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_abbg .WhitePoint [0]*_abdd (L );Y :=_abbg .WhitePoint [1]*_abdd (M );Z :=_abbg .WhitePoint [2]*_abdd (N );_ccba :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ecce :=-0.969256*X +1.875992*Y +0.041556*Z ;_bggea :=0.055648*X +-0.204043*Y +1.057311*Z ;_ccba =_fe .Min (_fe .Max (_ccba ,0),1.0);
_ecce =_fe .Min (_fe .Max (_ecce ,0),1.0);_bggea =_fe .Min (_fe .Max (_bggea ,0),1.0);return NewPdfColorDeviceRGB (_ccba ,_ecce ,_bggea ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_ecddd *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if _ecddd .Alternate ==nil {if _ecddd .N ==1{_afcb :=NewPdfColorspaceDeviceGray ();return _afcb .ColorFromPdfObjects (objects );}else if _ecddd .N ==3{_fbfae :=NewPdfColorspaceDeviceRGB ();
return _fbfae .ColorFromPdfObjects (objects );}else if _ecddd .N ==4{_afab :=NewPdfColorspaceDeviceCMYK ();return _afab .ColorFromPdfObjects (objects );}else {return nil ,_fa .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _ecddd .Alternate .ColorFromPdfObjects (objects );};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_cddd *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _cddd .flattenFieldsWithOpts (false ,appgen ,opts );};

// ViewArea returns the value of the viewArea.
func (_adfgfb *ViewerPreferences )ViewArea ()PageBoundary {return _adfgfb ._bcgdce };

// ToPdfObject returns a stream object.
func (_dcda *XObjectForm )ToPdfObject ()_df .PdfObject {_dcfaa :=_dcda ._gggdf ;_cegfb :=_dcfaa .PdfObjectDictionary ;if _dcda .Filter !=nil {_cegfb =_dcda .Filter .MakeStreamDict ();_dcfaa .PdfObjectDictionary =_cegfb ;};_cegfb .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_cegfb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0046\u006f\u0072\u006d"));_cegfb .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_dcda .FormType );_cegfb .SetIfNotNil ("\u0042\u0042\u006f\u0078",_dcda .BBox );_cegfb .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_dcda .Matrix );
if _dcda .Resources !=nil {_cegfb .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dcda .Resources .ToPdfObject ());};_cegfb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dcda .Group );_cegfb .SetIfNotNil ("\u0052\u0065\u0066",_dcda .Ref );_cegfb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_dcda .MetaData );
_cegfb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dcda .PieceInfo );_cegfb .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dcda .LastModified );_cegfb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dcda .StructParent );
_cegfb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dcda .StructParents );_cegfb .SetIfNotNil ("\u004f\u0050\u0049",_dcda .OPI );_cegfb .SetIfNotNil ("\u004f\u0043",_dcda .OC );_cegfb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dcda .Name );
_cegfb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_dcda .Stream ))));_dcfaa .Stream =_dcda .Stream ;return _dcfaa ;};func (_ecddf *PdfWriter )writeAcroFormFields ()error {if _ecddf ._ccdfd ==nil {return nil ;};_dda .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_daffgg :=_ecddf ._ccdfd .ToPdfObject ();_dda .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_daffgg );_ecddf ._afacf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_daffgg );_bfgaa :=_ecddf .addObjects (_daffgg );
if _bfgaa !=nil {return _bfgaa ;};return nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_afefa *PdfAcroForm )ToPdfObject ()_df .PdfObject {_gbad :=_afefa ._ffeae ;_dbaae :=_gbad .PdfObject .(*_df .PdfObjectDictionary );if _afefa .Fields !=nil {_abbfc :=_df .PdfObjectArray {};for _ ,_ebac :=range *_afefa .Fields {_cfgf :=_ebac .GetContext ();
if _cfgf !=nil {_abbfc .Append (_cfgf .ToPdfObject ());}else {_abbfc .Append (_ebac .ToPdfObject ());};};_dbaae .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_abbfc );};if _afefa .NeedAppearances !=nil {_dbaae .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_afefa .NeedAppearances );
}else {if _bgbed :=_dbaae .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_bgbed !=nil {_dbaae .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _afefa .SigFlags !=nil {_dbaae .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_afefa .SigFlags );
};if _afefa .CO !=nil {_dbaae .Set ("\u0043\u004f",_afefa .CO );};if _afefa .DR !=nil {_dbaae .Set ("\u0044\u0052",_afefa .DR .ToPdfObject ());};if _afefa .DA !=nil {_dbaae .Set ("\u0044\u0041",_afefa .DA );};if _afefa .Q !=nil {_dbaae .Set ("\u0051",_afefa .Q );
};if _afefa .XFA !=nil {_dbaae .Set ("\u0058\u0046\u0041",_afefa .XFA );};if _afefa .ADBEEchoSign !=nil {_dbaae .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_afefa .ADBEEchoSign );};return _gbad ;};

// ToPdfObject implements interface PdfModel.
func (_gfaed *PdfAnnotation3D )ToPdfObject ()_df .PdfObject {_gfaed .PdfAnnotation .ToPdfObject ();_abgg :=_gfaed ._cdd ;_cfegd :=_abgg .PdfObject .(*_df .PdfObjectDictionary );_cfegd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0033\u0044"));
_cfegd .SetIfNotNil ("\u0033\u0044\u0044",_gfaed .T3DD );_cfegd .SetIfNotNil ("\u0033\u0044\u0056",_gfaed .T3DV );_cfegd .SetIfNotNil ("\u0033\u0044\u0041",_gfaed .T3DA );_cfegd .SetIfNotNil ("\u0033\u0044\u0049",_gfaed .T3DI );_cfegd .SetIfNotNil ("\u0033\u0044\u0042",_gfaed .T3DB );
return _abgg ;};func _bgecd (_bgecg *_df .PdfObjectDictionary )(*PdfFieldButton ,error ){_cgcfe :=&PdfFieldButton {};_cgcfe .PdfField =NewPdfField ();_cgcfe .PdfField .SetContext (_cgcfe );_cgcfe .Opt ,_ =_df .GetArray (_bgecg .Get ("\u004f\u0070\u0074"));
_dacb :=NewPdfAnnotationWidget ();_dacb .A ,_ =_df .GetDict (_bgecg .Get ("\u0041"));_dacb .AP ,_ =_df .GetDict (_bgecg .Get ("\u0041\u0050"));_dacb .SetContext (_cgcfe );_cgcfe .PdfField .Annotations =append (_cgcfe .PdfField .Annotations ,_dacb );return _cgcfe ,nil ;
};

// ValidateSignatures validates digital signatures in the document.
func (_dfba *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _dfba .AcroForm ==nil {return nil ,nil ;};if _dfba .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ggega *PdfSignature ;
_cceba *PdfField ;_gafdf SignatureHandler ;};var _afgfb []*sigFieldPair ;for _ ,_ddgcg :=range _dfba .AcroForm .AllFields (){if _ddgcg .V ==nil {continue ;};if _afba ,_ddcbc :=_df .GetDict (_ddgcg .V );_ddcbc {if _dfdaga ,_fcbbf :=_df .GetNameVal (_afba .Get ("\u0054\u0079\u0070\u0065"));
_fcbbf &&(_dfdaga =="\u0053\u0069\u0067"||_dfdaga =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_bgfae ,_eaege :=_df .GetIndirect (_ddgcg .V );if !_eaege {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_bdebe ,_dcgaaa :=_dfba .newPdfSignatureFromIndirect (_bgfae );if _dcgaaa !=nil {return nil ,_dcgaaa ;};var _gffgd SignatureHandler ;for _ ,_afaacc :=range handlers {if _afaacc .IsApplicable (_bdebe ){_gffgd =_afaacc ;break ;
};};_afgfb =append (_afgfb ,&sigFieldPair {_ggega :_bdebe ,_cceba :_ddgcg ,_gafdf :_gffgd });};};};var _eafee []SignatureValidationResult ;for _ ,_agabg :=range _afgfb {_bfecb :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_agabg ._cceba }};
if _agabg ._gafdf ==nil {_bfecb .Errors =append (_bfecb .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_eafee =append (_eafee ,_bfecb );continue ;};_eedb ,_gfcegg :=_agabg ._gafdf .NewDigest (_agabg ._ggega );
if _gfcegg !=nil {_bfecb .Errors =append (_bfecb .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_gfcegg .Error ());_eafee =append (_eafee ,_bfecb );continue ;};_gfefe :=_agabg ._ggega .ByteRange ;if _gfefe ==nil {_bfecb .Errors =append (_bfecb .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_eafee =append (_eafee ,_bfecb );continue ;};for _dggab :=0;_dggab < _gfefe .Len ();_dggab =_dggab +2{_gbec ,_ :=_df .GetNumberAsInt64 (_gfefe .Get (_dggab ));_ffbfd ,_ :=_df .GetIntVal (_gfefe .Get (_dggab +1));if _ ,_eccdf :=_dfba ._afccd .Seek (_gbec ,_bc .SeekStart );
_eccdf !=nil {return nil ,_eccdf ;};_dedde :=make ([]byte ,_ffbfd );if _ ,_baffb :=_dfba ._afccd .Read (_dedde );_baffb !=nil {return nil ,_baffb ;};_eedb .Write (_dedde );};var _bacaef SignatureValidationResult ;if _afcfa ,_gacbdb :=_agabg ._gafdf .(SignatureHandlerDocMDP );
_gacbdb {_bacaef ,_gfcegg =_afcfa .ValidateWithOpts (_agabg ._ggega ,_eedb ,SignatureHandlerDocMDPParams {Parser :_dfba ._fcaac });}else {_bacaef ,_gfcegg =_agabg ._gafdf .Validate (_agabg ._ggega ,_eedb );};if _gfcegg !=nil {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_gfcegg ,_agabg ._gafdf );
_bacaef .Errors =append (_bacaef .Errors ,_gfcegg .Error ());};_bacaef .Name =_agabg ._ggega .Name .Decoded ();_bacaef .Reason =_agabg ._ggega .Reason .Decoded ();if _agabg ._ggega .M !=nil {_bceea ,_cggdg :=NewPdfDate (_agabg ._ggega .M .String ());if _cggdg !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cggdg );
_bacaef .Errors =append (_bacaef .Errors ,_cggdg .Error ());continue ;};_bacaef .Date =_bceea ;};_bacaef .ContactInfo =_agabg ._ggega .ContactInfo .Decoded ();_bacaef .Location =_agabg ._ggega .Location .Decoded ();_bacaef .Fields =_bfecb .Fields ;_eafee =append (_eafee ,_bacaef );
};return _eafee ,nil ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _df .PdfObject )(*PdfOutputIntent ,error ){_bdaad :=&PdfOutputIntent {};if _fefeg :=_bdaad .ParsePdfObject (object );_fefeg !=nil {return nil ,_fefeg ;};return _bdaad ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_defg *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efd ,_bgdfd :=_df .GetNumbersAsFloat (objects );
if _bgdfd !=nil {return nil ,_bgdfd ;};return _defg .ColorFromFloats (_efd );};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_befbd *PdfColorspaceDeviceN )GetNumComponents ()int {return _befbd .ColorantNames .Len ()};func _cgdfg ()string {_effdf .Lock ();defer _effdf .Unlock ();if len (_dbcbd )> 0{return _dbcbd ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};func (_dfda *PdfReader )newPdfAnnotationInkFromDict (_dfga *_df .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_gbdg :=PdfAnnotationInk {};_cfgc ,_fcd :=_dfda .newPdfAnnotationMarkupFromDict (_dfga );if _fcd !=nil {return nil ,_fcd ;};_gbdg .PdfAnnotationMarkup =_cfgc ;
_gbdg .InkList =_dfga .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_gbdg .BS =_dfga .Get ("\u0042\u0053");return &_gbdg ,nil ;};

// SetViewClip sets the value of the viewClip.
func (_dbdgd *ViewerPreferences )SetViewClip (viewClip PageBoundary ){_dbdgd ._aeaeb =viewClip };

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_gaaed *_df .PdfObjectDictionary ;Type *_df .PdfObjectName ;TransformMethod *_df .PdfObjectName ;TransformParams _df .PdfObject ;Data _df .PdfObject ;DigestMethod *_df .PdfObjectName ;};

// BaseFont returns the font's "BaseFont" field.
func (_dfgce *PdfFont )BaseFont ()string {return _dfgce .baseFields ()._eefad };

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_edgd :=&PdfOutlineItem {_ceda :_df .MakeIndirectObject (_df .MakeDict ())};_edgd ._gdedf =_edgd ;return _edgd ;};

// SetPrintScaling sets the value of the printScaling.
func (_ccfee *ViewerPreferences )SetPrintScaling (printScaling PrintScaling ){_ccfee ._dgfb =printScaling ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_gega _bc .ReadSeeker ;_cedf *_df .PdfParser ;_acee *PdfReader ;Reader *PdfReader ;_fdbe []*PdfPage ;_efae *PdfAcroForm ;_acde *DSS ;_eebg *Permissions ;_dacc _df .XrefTable ;_cbdg int64 ;_cfef int ;_efgc []_df .PdfObject ;_cfdd map[_df .PdfObject ]struct{};
_dcea map[_df .PdfObject ]int64 ;_dbedd map[_df .PdfObject ]struct{};_cda map[_df .PdfObject ]struct{};_bdeb int64 ;_bebe bool ;_bcfa string ;_ffg *EncryptOptions ;_bebed *PdfInfo ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_bbeb pdfFont };func (_gadce *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};type pdfFontType0 struct{fontCommon ;_edac *_df .PdfIndirectObject ;_agae _aff .TextEncoder ;Encoding _df .PdfObject ;
DescendantFont *PdfFont ;_ggbdb *_ce .CMap ;};func (_dcafd *PdfWriter )writeObjects (){_dda .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_dcafd ._bbedb ));_dcafd ._fgbdf =make (map[int ]crossReference );
_dcafd ._fgbdf [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _dcafd ._efaff .ObjectMap !=nil {for _cccdgc ,_fcce :=range _dcafd ._efaff .ObjectMap {if _cccdgc ==0{continue ;};if _fcce .XType ==_df .XrefTypeObjectStream {_bfdcg :=crossReference {Type :2,ObjectNumber :_fcce .OsObjNumber ,Index :_fcce .OsObjIndex };
_dcafd ._fgbdf [_cccdgc ]=_bfdcg ;};if _fcce .XType ==_df .XrefTypeTableEntry {_efaec :=crossReference {Type :1,ObjectNumber :_fcce .ObjectNumber ,Offset :_fcce .Offset };_dcafd ._fgbdf [_cccdgc ]=_efaec ;};};};};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_bafc FieldFlag )Has (fl FieldFlag )bool {return (_bafc .Mask ()&fl .Mask ())> 0};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_acedb *PdfFont )CharcodesToUnicodeWithStats (charcodes []_aff .CharCode )(_dacag []rune ,_facab ,_gdfb int ){_efdd ,_facab ,_gdfb :=_acedb .CharcodesToStrings (charcodes ,"");return []rune (_eb .Join (_efdd ,"")),_facab ,_gdfb ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_edagcc *PdfWriter )SetNameDictionary (names _df .PdfObject )error {if names ==nil {return nil ;};_edagcc ._bcgc =_cebcf (names );_dda .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_edagcc ._afacf .Set ("\u004e\u0061\u006de\u0073",names );return _edagcc .addObjects (names );};func _feaeg ()string {_effdf .Lock ();defer _effdf .Unlock ();_bddedd :=_ede .GetLicenseKey ();if len (_bdcbc )> 0&&(_bddedd .IsLicensed ()||_feeff ){return _bdcbc ;
};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_eeeec (),_bddedd .TypeToString ());};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_befb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _befb .Alternate ==nil {_dda .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _befb .N ==1{_dda .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cdcdg :=NewPdfColorspaceDeviceGray ();return _cdcdg .ImageToRGB (img );}else if _befb .N ==3{_dda .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _befb .N ==4{_dda .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_dceg :=NewPdfColorspaceDeviceCMYK ();return _dceg .ImageToRGB (img );}else {return img ,_fa .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dda .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_befb );
_fedd ,_ebede :=_befb .Alternate .ImageToRGB (img );_dda .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_dda .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_fedd );
return _fedd ,_ebede ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_adeab *PdfPageResources )GetXObjectByName (keyName _df .PdfObjectName )(*_df .PdfObjectStream ,XObjectType ){if _adeab .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fbaeb ,_feff :=_df .TraceToDirectObject (_adeab .XObject ).(*_df .PdfObjectDictionary );
if !_feff {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_df .TraceToDirectObject (_adeab .XObject ));
return nil ,XObjectTypeUndefined ;};if _bggdf :=_fbaeb .Get (keyName );_bggdf !=nil {_deeed ,_efgbd :=_df .GetStream (_bggdf );if !_efgbd {_dda .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_bggdf );
return nil ,XObjectTypeUndefined ;};_gabed :=_deeed .PdfObjectDictionary ;_faeeb ,_efgbd :=_df .TraceToDirectObject (_gabed .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_df .PdfObjectName );if !_efgbd {_dda .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_gabed .String ());
return nil ,XObjectTypeUndefined ;};if *_faeeb =="\u0049\u006d\u0061g\u0065"{return _deeed ,XObjectTypeImage ;}else if *_faeeb =="\u0046\u006f\u0072\u006d"{return _deeed ,XObjectTypeForm ;}else if *_faeeb =="\u0050\u0053"{return _deeed ,XObjectTypePS ;
}else {_dda .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_faeeb );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};func (_efeab *PdfReader )resolveReference (_fdfca *_df .PdfObjectReference )(_df .PdfObject ,bool ,error ){_efffd ,_afgac :=_efeab ._fcaac .ObjCache [int (_fdfca .ObjectNumber )];if !_afgac {_dda .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_fdfca );
_fcaag ,_gdda :=_efeab ._fcaac .LookupByReference (*_fdfca );if _gdda !=nil {return nil ,false ,_gdda ;};_efeab ._fcaac .ObjCache [int (_fdfca .ObjectNumber )]=_fcaag ;return _fcaag ,false ,nil ;};return _efffd ,true ,nil ;};

// AddRefChild adds a child reference object.
func (_cfdbc *KDict )AddRefChild (kChild *_df .PdfObjectDictionary ){_cfdbc ._cgaed =append (_cfdbc ._cgaed ,&KValue {_dffeb :kChild });};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_aabd :=&PdfColorspaceLab {};_aabd .BlackPoint =[]float64 {0.0,0.0,0.0};_aabd .Range =[]float64 {-100,100,-100,100};return _aabd ;};

// ToPdfObject implements interface PdfModel.
func (_cdeg *PdfAnnotationWidget )ToPdfObject ()_df .PdfObject {_cdeg .PdfAnnotation .ToPdfObject ();_bbcf :=_cdeg ._cdd ;_cceb :=_bbcf .PdfObject .(*_df .PdfObjectDictionary );if _cdeg ._bed {return _bbcf ;};_cdeg ._bed =true ;_cceb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_cceb .SetIfNotNil ("\u0048",_cdeg .H );_cceb .SetIfNotNil ("\u004d\u004b",_cdeg .MK );_cceb .SetIfNotNil ("\u0041",_cdeg .A );_cceb .SetIfNotNil ("\u0041\u0041",_cdeg .AA );_cceb .SetIfNotNil ("\u0042\u0053",_cdeg .BS );_dab :=_cdeg .Parent ;if _cdeg ._cff !=nil {if _cdeg ._cff ._eabc ==_cdeg ._cdd {_cdeg ._cff .ToPdfObject ();
};_dab =_cdeg ._cff .GetContainingPdfObject ();};if _dab !=_bbcf {_cceb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dab );};_cdeg ._bed =false ;return _bbcf ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_cgfba *PdfPageResources )HasPatternByName (keyName _df .PdfObjectName )bool {_ ,_cgcac :=_cgfba .GetPatternByName (keyName );return _cgcac ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_aebbg *PdfColorspaceCalGray )ToPdfObject ()_df .PdfObject {_ggebc :=&_df .PdfObjectArray {};_ggebc .Append (_df .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_bffe :=_df .MakeDict ();if _aebbg .WhitePoint !=nil {_bffe .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_df .MakeArray (_df .MakeFloat (_aebbg .WhitePoint [0]),_df .MakeFloat (_aebbg .WhitePoint [1]),_df .MakeFloat (_aebbg .WhitePoint [2])));
}else {_dda .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _aebbg .BlackPoint !=nil {_bffe .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_df .MakeArray (_df .MakeFloat (_aebbg .BlackPoint [0]),_df .MakeFloat (_aebbg .BlackPoint [1]),_df .MakeFloat (_aebbg .BlackPoint [2])));
};_bffe .Set ("\u0047\u0061\u006dm\u0061",_df .MakeFloat (_aebbg .Gamma ));_ggebc .Append (_bffe );if _aebbg ._agfe !=nil {_aebbg ._agfe .PdfObject =_ggebc ;return _aebbg ._agfe ;};return _ggebc ;};func (_fdedf Image )getBase ()_ae .ImageBase {return _ae .NewImageBase (int (_fdedf .Width ),int (_fdedf .Height ),int (_fdedf .BitsPerComponent ),_fdedf .ColorComponents ,_fdedf .Data ,_fdedf ._bggcb ,_fdedf ._gdfe );
};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _df .PdfObject )(*EmbeddedFile ,error ){_cbcba :=_df .TraceToDirectObject (obj );_cdec ,_ebag :=_cbcba .(*_df .PdfObjectDictionary );if !_ebag {return nil ,_fa .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_bfga :=_df .TraceToDirectObject (_cdec .Get ("\u0046"));if _bfga ==nil {return nil ,_fa .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_edddf ,_ebag :=_bfga .(*_df .PdfObjectStream );
if !_ebag {return nil ,_fa .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_beed :=_edddf .PdfObjectDictionary ;_deb :=_beed .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _deb ==nil {return nil ,_fa .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_eafg ,_ebag :=_deb .(*_df .PdfObjectDictionary );if !_ebag {return nil ,_fa .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_dbbd :="";_bbbd :=_eafg .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _bbbd !=nil {_dbbd =_bbbd .(*_df .PdfObjectString ).Str ();};_agdd ,_dfaae :=_df .DecodeStream (_edddf );if _dfaae !=nil {return nil ,_dfaae ;};_fega :=&EmbeddedFile {Content :_agdd ,Hash :_dbbd };return _fega ,nil ;};

// Height returns the height of `rect`.
func (_ddade *PdfRectangle )Height ()float64 {return _fe .Abs (_ddade .Ury -_ddade .Lly )};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_fcgc :=NewPdfAnnotation ();_ggba :=&PdfAnnotationStrikeOut {};_ggba .PdfAnnotation =_fcgc ;_ggba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcgc .SetContext (_ggba );return _ggba ;};

// Y returns the value of the yellow component of the color.
func (_bedag *PdfColorDeviceCMYK )Y ()float64 {return _bedag [2]};

// HasExtGState checks if ExtGState name is available.
func (_gceg *PdfPage )HasExtGState (name _df .PdfObjectName )bool {if _gceg .Resources ==nil {return false ;};if _gceg .Resources .ExtGState ==nil {return false ;};_feeb ,_dcbed :=_df .TraceToDirectObject (_gceg .Resources .ExtGState ).(*_df .PdfObjectDictionary );
if !_dcbed {_dda .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_df .TraceToDirectObject (_gceg .Resources .ExtGState ));
return false ;};_ddfbc :=_feeb .Get (name );_ceceb :=_ddfbc !=nil ;return _ceceb ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _df .PdfObject )(*PdfFilespec ,error ){_afcd :=&PdfFilespec {};var _dbee *_df .PdfObjectDictionary ;if _egfd ,_gagc :=_df .GetIndirect (obj );_gagc {_afcd ._adbd =_egfd ;_efegb ,_daee :=_df .GetDict (_egfd .PdfObject );if !_daee {_dda .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_df .ErrTypeError ;};_dbee =_efegb ;}else if _gabgb ,_abgc :=_df .GetDict (obj );_abgc {_afcd ._adbd =_gabgb ;_dbee =_gabgb ;}else {_dda .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );
return nil ,_df .ErrTypeError ;};if _dbee ==nil {_dda .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fa .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};if _gfagb :=_dbee .Get ("\u0054\u0079\u0070\u0065");_gfagb !=nil {_bfaee ,_efgbf :=_gfagb .(*_df .PdfObjectName );if !_efgbf {_dda .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfagb );
}else {if *_bfaee !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_dda .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bfaee );
};};};if _edfd :=_dbee .Get ("\u0046\u0053");_edfd !=nil {_afcd .FS =_edfd ;};if _gfdef :=_dbee .Get ("\u0046");_gfdef !=nil {_afcd .F =_gfdef ;};if _edbb :=_dbee .Get ("\u0055\u0046");_edbb !=nil {_afcd .UF =_edbb ;};if _ddeda :=_dbee .Get ("\u0044\u004f\u0053");
_ddeda !=nil {_afcd .DOS =_ddeda ;};if _dedb :=_dbee .Get ("\u004d\u0061\u0063");_dedb !=nil {_afcd .Mac =_dedb ;};if _fcdg :=_dbee .Get ("\u0055\u006e\u0069\u0078");_fcdg !=nil {_afcd .Unix =_fcdg ;};if _dbecc :=_dbee .Get ("\u0049\u0044");_dbecc !=nil {_afcd .ID =_dbecc ;
};if _dbdg :=_dbee .Get ("\u0056");_dbdg !=nil {_afcd .V =_dbdg ;};if _adbc :=_dbee .Get ("\u0045\u0046");_adbc !=nil {_afcd .EF =_adbc ;};if _aaee :=_dbee .Get ("\u0052\u0046");_aaee !=nil {_afcd .RF =_aaee ;};if _acac :=_dbee .Get ("\u0044\u0065\u0073\u0063");
_acac !=nil {_afcd .Desc =_acac ;};if _ccddg :=_dbee .Get ("\u0043\u0049");_ccddg !=nil {_afcd .CI =_ccddg ;};if _gagef :=_dbee .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_gagef !=nil {_afcd .AFRelationship =_gagef ;
};return _afcd ,nil ;};func (_bcde *PdfReader )newPdfAnnotationProjectionFromDict (_cbdb *_df .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_cac :=&PdfAnnotationProjection {};_bfd ,_efeg :=_bcde .newPdfAnnotationMarkupFromDict (_cbdb );if _efeg !=nil {return nil ,_efeg ;
};_cac .PdfAnnotationMarkup =_bfd ;return _cac ,nil ;};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_effa :=_faf .Detect (content );_cbea :=_bg .Sum (content );_adac :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_effa .String (),Hash :_eee .EncodeToString (_cbea [:])};
return _adac ,nil ;};func (_eaaef *PdfWriter )updateObjectNumbers (){_ddcab :=_eaaef .ObjNumOffset ;_fefbf :=0;for _ ,_ebea :=range _eaaef ._bbedb {_dddff :=int64 (_fefbf +1+_ddcab );_cgadg :=true ;if _eaaef ._ddga {if _bfbefg ,_abcbc :=_eaaef ._babda [_ebea ];
_abcbc {_dddff =_bfbefg ;_cgadg =false ;};};switch _eeeae :=_ebea .(type ){case *_df .PdfIndirectObject :_eeeae .ObjectNumber =_dddff ;_eeeae .GenerationNumber =0;case *_df .PdfObjectStream :_eeeae .ObjectNumber =_dddff ;_eeeae .GenerationNumber =0;case *_df .PdfObjectStreams :_eeeae .ObjectNumber =_dddff ;
_eeeae .GenerationNumber =0;case *_df .PdfObjectReference :_eeeae .ObjectNumber =_dddff ;_eeeae .GenerationNumber =0;case *_df .PdfObjectDictionary ,*_df .PdfObjectString :default:_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_eeeae );
continue ;};if _cgadg {_fefbf ++;};};_dbbdf :=func (_dgbeag _df .PdfObject )int64 {switch _bacag :=_dgbeag .(type ){case *_df .PdfIndirectObject :return _bacag .ObjectNumber ;case *_df .PdfObjectStream :return _bacag .ObjectNumber ;case *_df .PdfObjectStreams :return _bacag .ObjectNumber ;
case *_df .PdfObjectReference :return _bacag .ObjectNumber ;};return 0;};_dc .SliceStable (_eaaef ._bbedb ,func (_fcfabb ,_ddcdc int )bool {return _dbbdf (_eaaef ._bbedb [_fcfabb ])< _dbbdf (_eaaef ._bbedb [_ddcdc ])});};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _dd .Time ){_effdf .Lock ();defer _effdf .Unlock ();_cgfga =modifiedDate ;};

// NewKValue creates a new K value object.
func NewKValue ()*KValue {return &KValue {}};

// NewViewerPreferences returns a new ViewerPreferences object with
// default empty values.
func NewViewerPreferences ()*ViewerPreferences {return &ViewerPreferences {}};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_bce :=NewPdfAnnotation ();_gec :=&PdfAnnotationPrinterMark {};_gec .PdfAnnotation =_bce ;_bce .SetContext (_gec );return _gec ;};

// AddFont adds a font dictionary to the Font resources.
func (_ggca *PdfPage )AddFont (name _df .PdfObjectName ,font _df .PdfObject )error {if _ggca .Resources ==nil {_ggca .Resources =NewPdfPageResources ();};if _ggca .Resources .Font ==nil {_ggca .Resources .Font =_df .MakeDict ();};_cbebc ,_adde :=_df .TraceToDirectObject (_ggca .Resources .Font ).(*_df .PdfObjectDictionary );
if !_adde {_dda .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_df .TraceToDirectObject (_ggca .Resources .Font ));
return _fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbebc .Set (name ,font );return nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_gdeg *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_agddf :=map[*PdfAnnotation ]bool {};_aaac ,_fegcg :=_gdeg .GetAnnotations ();if _fegcg !=nil {return _fegcg ;};_acge :=false ;for _ ,_gbaa :=range _aaac {if opts .AnnotFilterFunc !=nil {_agddf [_gbaa ]=opts .AnnotFilterFunc (_gbaa );
}else {_agddf [_gbaa ]=true ;};if _agddf [_gbaa ]{_acge =true ;};};if !_acge {return nil ;};return _gdeg .flattenFieldsWithOpts (appgen ,opts ,_agddf );};func _ffac (_bdfg string )(map[_aff .CharCode ]_aff .GlyphName ,error ){_dabcc :=_eb .Split (_bdfg ,"\u000a");
_agffaa :=make (map[_aff .CharCode ]_aff .GlyphName );for _ ,_gbfba :=range _dabcc {_gfaec :=_dfeea .FindStringSubmatch (_gbfba );if _gfaec ==nil {continue ;};_cade ,_caeag :=_gfaec [1],_gfaec [2];_dafa ,_gfdff :=_dg .Atoi (_cade );if _gfdff !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gbfba );
return nil ,_df .ErrTypeError ;};_agffaa [_aff .CharCode (_dafa )]=_aff .GlyphName (_caeag );};_dda .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_agffaa );
return _agffaa ,nil ;};

// SetCenterWindow sets the value of the centerWindow flag.
func (_affac *ViewerPreferences )SetCenterWindow (centerWindow bool ){_affac ._gcggf =&centerWindow };

// ToPdfObject returns the PDF representation of the colorspace.
func (_addg *PdfColorspaceSpecialSeparation )ToPdfObject ()_df .PdfObject {_ggbd :=_df .MakeArray (_df .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_ggbd .Append (_addg .ColorantName );_ggbd .Append (_addg .AlternateSpace .ToPdfObject ());
_ggbd .Append (_addg .TintTransform .ToPdfObject ());if _addg ._ccdea !=nil {_addg ._ccdea .PdfObject =_ggbd ;return _addg ._ccdea ;};return _ggbd ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_ecdcg *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _ecdcg .Range };

// ToPdfObject converts date to a PDF string object.
func (_bgaba *PdfDate )ToPdfObject ()_df .PdfObject {_cfeed :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bgaba ._fcbeg ,_bgaba ._efbc ,_bgaba ._ceeedg ,_bgaba ._eaegg ,_bgaba ._bffeb ,_bgaba ._dcfgb ,_bgaba ._dfgged ,_bgaba ._aead ,_bgaba ._badcg );
return _df .MakeString (_cfeed );};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_caag *pdfFontSimple )SetEncoder (encoder _aff .TextEncoder ){_caag ._babff =encoder };

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bdbcc *PdfReader )GetOutlines ()(*Outline ,error ){if _bdbcc ==nil {return nil ,_fa .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_eecbg :=_bdbcc .GetOutlineTree ();if _eecbg ==nil {return nil ,_fa .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _cedfb func (_acfgc *PdfOutlineTreeNode ,_fgegb *[]*OutlineItem );_cedfb =func (_adece *PdfOutlineTreeNode ,_afbed *[]*OutlineItem ){if _adece ==nil {return ;};if _adece ._gdedf ==nil {_dda .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _egadcd *OutlineItem ;if _edbag ,_cgdd :=_adece ._gdedf .(*PdfOutlineItem );_cgdd {_acbaf :=_edbag .Dest ;if (_acbaf ==nil ||_df .IsNullObject (_acbaf ))&&_edbag .A !=nil {if _gggfg ,_fadc :=_df .GetDict (_edbag .A );_fadc {if _adbe ,_fcbba :=_df .GetArray (_gggfg .Get ("\u0044"));
_fcbba {_acbaf =_adbe ;}else {_dfaad ,_bddfe :=_df .GetString (_gggfg .Get ("\u0044"));if !_bddfe {return ;};_addcd ,_bddfe :=_bdbcc ._aeeb .Get ("\u004e\u0061\u006de\u0073").(*_df .PdfObjectReference );if !_bddfe {return ;};_cddac ,_gaedb :=_bdbcc ._fcaac .LookupByReference (*_addcd );
if _gaedb !=nil {_dda .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_gaedb .Error ());
return ;};_edcca ,_bddfe :=_cddac .(*_df .PdfIndirectObject );if !_bddfe {return ;};_cdgbg :=map[_df .PdfObject ]struct{}{};_gaedb =_bdbcc .buildNameNodes (_edcca ,_cdgbg );if _gaedb !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_gaedb .Error ());
return ;};for _eeff :=range _cdgbg {_dbff ,_adgdd :=_df .GetDict (_eeff );if !_adgdd {continue ;};_bdbcg ,_adgdd :=_df .GetArray (_dbff .Get ("\u004e\u0061\u006de\u0073"));if !_adgdd {continue ;};for _gebb ,_eebgcf :=range _bdbcg .Elements (){switch _eebgcf .(type ){case *_df .PdfObjectString :if _eebgcf .String ()==_dfaad .String (){if _fegde :=_bdbcg .Get (_gebb +1);
_fegde !=nil {if _fgfd ,_gadbb :=_df .GetDict (_fegde );_gadbb {_acbaf =_fgfd .Get ("\u0044");break ;};};};};};};};};};var _dgcaa OutlineDest ;if _acbaf !=nil &&!_df .IsNullObject (_acbaf ){if _bedeb ,_cbfb :=_bedbg (_acbaf ,_bdbcc );_cbfb ==nil {_dgcaa =*_bedeb ;
}else {_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_acbaf ,_cbfb );
};};_egadcd =NewOutlineItem (_edbag .Title .Decoded (),_dgcaa );*_afbed =append (*_afbed ,_egadcd );if _edbag .Next !=nil {_cedfb (_edbag .Next ,_afbed );};};if _adece .First !=nil {if _egadcd !=nil {_afbed =&_egadcd .Entries ;};_cedfb (_adece .First ,_afbed );
};};_gfba :=NewOutline ();_cedfb (_eecbg ,&_gfba .Entries );return _gfba ,nil ;};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_fdgbe *Names )ToPdfObject ()_df .PdfObject {_ggdea :=_fdgbe ._efcbe ;_eafge ,_cffdf :=_ggdea .PdfObject .(*_df .PdfObjectDictionary );if !_cffdf {_dda .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
return _ggdea ;};if _fdgbe .EmbeddedFiles !=nil {_eafge .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_df .MakeIndirectObject (_fdgbe .EmbeddedFiles ));};return _ggdea ;};

// ToPdfObject implements interface PdfModel.
func (_eggb *PdfAnnotationScreen )ToPdfObject ()_df .PdfObject {_eggb .PdfAnnotation .ToPdfObject ();_ggfa :=_eggb ._cdd ;_ggdg :=_ggfa .PdfObject .(*_df .PdfObjectDictionary );_ggdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_ggdg .SetIfNotNil ("\u0054",_eggb .T );_ggdg .SetIfNotNil ("\u004d\u004b",_eggb .MK );_ggdg .SetIfNotNil ("\u0041",_eggb .A );_ggdg .SetIfNotNil ("\u0041\u0041",_eggb .AA );return _ggfa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_begbg *PdfShadingType2 )ToPdfObject ()_df .PdfObject {_begbg .PdfShading .ToPdfObject ();_cbcaa ,_cfac :=_begbg .getShadingDict ();if _cfac !=nil {_dda .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cbcaa ==nil {_dda .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _begbg .Coords !=nil {_cbcaa .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_begbg .Coords );
};if _begbg .Domain !=nil {_cbcaa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_begbg .Domain );};if _begbg .Function !=nil {if len (_begbg .Function )==1{_cbcaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_begbg .Function [0].ToPdfObject ());
}else {_cbged :=_df .MakeArray ();for _ ,_ecegfg :=range _begbg .Function {_cbged .Append (_ecegfg .ToPdfObject ());};_cbcaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbged );};};if _begbg .Extend !=nil {_cbcaa .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_begbg .Extend );
};return _begbg ._gfded ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_df .PdfObjectInteger ;BitsPerComponent *_df .PdfObjectInteger ;BitsPerFlag *_df .PdfObjectInteger ;Decode *_df .PdfObjectArray ;Function []PdfFunction ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_eebcf *PdfPage )Size ()(float64 ,float64 ,error ){_gcggg ,_caabb :=_eebcf .GetMediaBox ();if _caabb !=nil {return 0,0,_caabb ;};_bbged ,_dccdf :=_gcggg .Width (),_gcggg .Height ();_egeg ,_caabb :=_eebcf .GetRotate ();if _caabb !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_caabb .Error ());
};if _eecd :=_egeg ;_eecd %360!=0&&_eecd %90==0{if _cecgd :=(360+_eecd %360)%360;_cecgd ==90||_cecgd ==270{_bbged ,_dccdf =_dccdf ,_bbged ;};};return _bbged ,_dccdf ,nil ;};func _eaddc (_ebdadd string )(string ,error ){var _begec _c .Buffer ;_begec .WriteString (_ebdadd );
_gcebd :=make ([]byte ,8+16);_afcbea :=_dd .Now ().UTC ().UnixNano ();_ed .BigEndian .PutUint64 (_gcebd ,uint64 (_afcbea ));_ ,_gfced :=_gf .Read (_gcebd [8:]);if _gfced !=nil {return "",_gfced ;};_begec .WriteString (_eee .EncodeToString (_gcebd ));return _begec .String (),nil ;
};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_deccea *PdfPattern )SetContext (ctx PdfModel ){_deccea ._ggcbe =ctx };

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_acceb *PdfPageResources )GetContainingPdfObject ()_df .PdfObject {return _acceb ._bcgbd };

// Register registers (caches) a model to primitive object relationship.
func (_ecbc *modelManager )Register (primitive _df .PdfObject ,model PdfModel ){_ecbc ._ffgg .Lock ();defer _ecbc ._ffgg .Unlock ();_ecbc ._cceeg .Lock ();defer _ecbc ._cceeg .Unlock ();_ecbc ._cgcgf [model ]=primitive ;_ecbc ._ggbdg [primitive ]=model ;
};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _df .PdfObject ;MK _df .PdfObject ;A _df .PdfObject ;AA _df .PdfObject ;};

// NonFullScreenPageMode represents the document’s page mode when exiting
// full-screen mode.
type NonFullScreenPageMode string ;func (_bedee *PdfReader )loadDSS ()(*DSS ,error ){if _bedee ._fcaac .GetCrypter ()!=nil &&!_bedee ._fcaac .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cfbgf :=_bedee ._aeeb .Get ("\u0044\u0053\u0053");if _cfbgf ==nil {return nil ,nil ;};_bdbcb ,_ :=_df .GetIndirect (_cfbgf );_cfbgf =_df .TraceToDirectObject (_cfbgf );switch _dabg :=_cfbgf .(type ){case *_df .PdfObjectNull :return nil ,nil ;case *_df .PdfObjectDictionary :return _feaf (_bdbcb ,_dabg );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_cfbgf );};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_ffeae :_df .MakeIndirectObject (_df .MakeDict ())};};func _dbggc (_fdae _df .PdfObject )(*PdfFunctionType2 ,error ){_cacg :=&PdfFunctionType2 {};var _cffb *_df .PdfObjectDictionary ;
if _cbba ,_bgfbb :=_fdae .(*_df .PdfIndirectObject );_bgfbb {_eecb ,_baeg :=_cbba .PdfObject .(*_df .PdfObjectDictionary );if !_baeg {return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cacg ._dbfbe =_cbba ;
_cffb =_eecb ;}else if _ggfd ,_fdbee :=_fdae .(*_df .PdfObjectDictionary );_fdbee {_cffb =_ggfd ;}else {return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dda .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_cffb .String ());
_ecbea ,_gebca :=_df .TraceToDirectObject (_cffb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_df .PdfObjectArray );if !_gebca {_dda .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ecbea .Len ()< 0||_ecbea .Len ()%2!=0{_dda .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fa .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ddede ,_abae :=_ecbea .ToFloat64Array ();if _abae !=nil {return nil ,_abae ;};_cacg .Domain =_ddede ;_ecbea ,_gebca =_df .TraceToDirectObject (_cffb .Get ("\u0052\u0061\u006eg\u0065")).(*_df .PdfObjectArray );if _gebca {if _ecbea .Len ()< 0||_ecbea .Len ()%2!=0{return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_edfe ,_cfaf :=_ecbea .ToFloat64Array ();if _cfaf !=nil {return nil ,_cfaf ;};_cacg .Range =_edfe ;};_ecbea ,_gebca =_df .TraceToDirectObject (_cffb .Get ("\u0043\u0030")).(*_df .PdfObjectArray );if _gebca {_abgec ,_addga :=_ecbea .ToFloat64Array ();
if _addga !=nil {return nil ,_addga ;};_cacg .C0 =_abgec ;};_ecbea ,_gebca =_df .TraceToDirectObject (_cffb .Get ("\u0043\u0031")).(*_df .PdfObjectArray );if _gebca {_gcgd ,_fccdc :=_ecbea .ToFloat64Array ();if _fccdc !=nil {return nil ,_fccdc ;};_cacg .C1 =_gcgd ;
};if len (_cacg .C0 )!=len (_cacg .C1 ){_dda .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_df .ErrRangeError ;};N ,_abae :=_df .GetNumberAsFloat (_df .TraceToDirectObject (_cffb .Get ("\u004e")));
if _abae !=nil {_dda .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_cffb .String ());return nil ,_abae ;};_cacg .N =N ;
return _cacg ,nil ;};

// GetXObjectByName gets XObject by name.
func (_aaaag *PdfPage )GetXObjectByName (name _df .PdfObjectName )(_df .PdfObject ,bool ){_aadfd ,_dceed :=_aaaag .Resources .XObject .(*_df .PdfObjectDictionary );if !_dceed {return nil ,false ;};if _feefd :=_aadfd .Get (name );_feefd !=nil {return _feefd ,true ;
};return nil ,false ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_aegda *PdfWriter )SetRotation (rotate int64 )error {_bbbb ,_ecfcf :=_df .GetDict (_aegda ._daddb );if !_ecfcf {return ErrTypeCheck ;};_bbbb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_df .MakeInteger (rotate ));return nil ;};func _aacde (_dcgc *_df .PdfObjectDictionary )*VRI {_gebc ,_ :=_df .GetString (_dcgc .Get ("\u0054\u0055"));
_ddadg ,_ :=_df .GetString (_dcgc .Get ("\u0054\u0053"));return &VRI {Cert :_cefc (_dcgc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_cefc (_dcgc .Get ("\u004f\u0043\u0053\u0050")),CRL :_cefc (_dcgc .Get ("\u0043\u0052\u004c")),TU :_gebc ,TS :_ddadg };};func (_gfdg *PdfReader )newPdfAnnotationWatermarkFromDict (_gda *_df .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_cfeg :=PdfAnnotationWatermark {};
_cfeg .FixedPrint =_gda .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_cfeg ,nil ;};

// Encoder returns the font's text encoder.
func (_ebfgc pdfCIDFontType2 )Encoder ()_aff .TextEncoder {return _ebfgc ._geada };func _aaga (_aebd *PdfField ,_daefa _df .PdfObject )error {switch _aebd .GetContext ().(type ){case *PdfFieldText :switch _afdge :=_daefa .(type ){case *_df .PdfObjectName :_ecfcb :=_afdge ;
_dda .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ecfcb .String ());
_aebd .V =_df .MakeEncodedString (_afdge .String (),true );case *_df .PdfObjectString :_aebd .V =_df .MakeEncodedString (_afdge .String (),true );default:_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_afdge ,_afdge );
};case *PdfFieldButton :switch _daefa .(type ){case *_df .PdfObjectName :if len (_daefa .String ())> 0{_aebd .V =_daefa ;_bceca (_aebd ,_daefa );};case *_df .PdfObjectString :if len (_daefa .String ())> 0{_aebd .V =_df .MakeName (_daefa .String ());_bceca (_aebd ,_aebd .V );
};default:_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aebd .PartialName (),_daefa );_aebd .V =_daefa ;};case *PdfFieldChoice :switch _daefa .(type ){case *_df .PdfObjectName :if len (_daefa .String ())> 0{_aebd .V =_df .MakeString (_daefa .String ());
_bceca (_aebd ,_daefa );};case *_df .PdfObjectString :if len (_daefa .String ())> 0{_aebd .V =_daefa ;_bceca (_aebd ,_df .MakeName (_daefa .String ()));};default:_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aebd .PartialName (),_daefa );
_aebd .V =_daefa ;};case *PdfFieldSignature :_dda .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_aebd .PartialName (),_daefa );
};return nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_edebd *PdfOutlineTreeNode )GetContext ()PdfModel {if _gcdd ,_bbge :=_edebd ._gdedf .(*PdfOutline );_bbge {return _gcdd ;};if _cbdgd ,_addb :=_edebd ._gdedf .(*PdfOutlineItem );_addb {return _cbdgd ;};_dda .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};var (StructureTypeParagraph ="\u0050";StructureTypeHeader ="\u0048";StructureTypeHeading1 ="\u0048\u0031";StructureTypeHeading2 ="\u0048\u0032";StructureTypeHeading3 ="\u0048\u0033";StructureTypeHeading4 ="\u0048\u0034";StructureTypeHeading5 ="\u0048\u0035";
StructureTypeHeading6 ="\u0048\u0036";StructureTypeList ="\u004c";StructureTypeListItem ="\u004c\u0049";StructureTypeLabel ="\u004c\u0062\u006c";StructureTypeListBody ="\u004c\u0042\u006fd\u0079";StructureTypeTable ="\u0054\u0061\u0062l\u0065";StructureTypeTableRow ="\u0054\u0052";
StructureTypeTableHeaderCell ="\u0054\u0048";StructureTypeTableData ="\u0054\u0044";StructureTypeTableHead ="\u0054\u0048\u0065a\u0064";StructureTypeTableBody ="\u0054\u0042\u006fd\u0079";StructureTypeTableFooter ="\u0054\u0046\u006fo\u0074";);

// ToPdfObject implements interface PdfModel.
func (_bedg *EmbeddedFile )ToPdfObject ()_df .PdfObject {_cbab :=_df .NewFlateEncoder ();_ddfc ,_accb :=_df .MakeStream (_bedg .Content ,_cbab );if _accb !=nil {_dda .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_accb );
return nil ;};_dgfe :=_ddfc .PdfObjectDictionary ;_dgfe .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_dgfe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_aeagb :=_df .MakeDict ();_aeagb .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_df .MakeString (_bedg .Hash [:]));_aeagb .Set ("\u0053\u0069\u007a\u0065",_df .MakeInteger (int64 (len (_bedg .Content ))));_aefb :=_bedg .CreationTime ;if _aefb .IsZero (){_aefb =_dd .Now ();
};_fgeeg :=_bedg .ModTime ;if _fgeeg .IsZero (){_fgeeg =_aefb ;};_dcfg ,_accb :=NewPdfDateFromTime (_aefb );if _accb !=nil {_dda .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_accb );
return nil ;};_febed ,_accb :=NewPdfDateFromTime (_fgeeg );if _accb !=nil {_dda .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_accb );
return nil ;};_aeagb .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dcfg .ToPdfObject ());_aeagb .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_febed .ToPdfObject ());_dgfe .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_aeagb );
_badfe :=_df .MakeDict ();_badfe .Set (*_df .MakeName ("\u0046"),_ddfc );return _badfe ;};

// AddKDict adds a K dictionary object to the structure tree root.
func (_fdbda *StructTreeRoot )AddKDict (k *KDict ){_fdbda .K =append (_fdbda .K ,k )};

// SetFileName sets the pdf writer file name for metered usage tracker.
func (_decac *PdfWriter )SetFileName (name string ){_decac ._cfbge =name };

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_df .PdfObjectArray ;ExtGState _df .PdfObject ;};func (_ddge *PdfReader )newPdfFieldFromIndirectObject (_gafb *_df .PdfIndirectObject ,_egfgg *PdfField )(*PdfField ,error ){if _ebef ,_aaaa :=_ddge ._fgdef .GetModelFromPrimitive (_gafb ).(*PdfField );
_aaaa {return _ebef ,nil ;};_eafcc ,_gbdc :=_df .GetDict (_gafb );if !_gbdc {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eacbcb :=NewPdfField ();_eacbcb ._eabc =_gafb ;_eacbcb ._eabc .PdfObject =_eafcc ;if _bedcb ,_abgb :=_df .GetName (_eafcc .Get ("\u0046\u0054"));_abgb {_eacbcb .FT =_bedcb ;};if _egfgg !=nil {_eacbcb .Parent =_egfgg ;};_eacbcb .T ,_ =_eafcc .Get ("\u0054").(*_df .PdfObjectString );
_eacbcb .TU ,_ =_eafcc .Get ("\u0054\u0055").(*_df .PdfObjectString );_eacbcb .TM ,_ =_eafcc .Get ("\u0054\u004d").(*_df .PdfObjectString );_eacbcb .Ff ,_ =_eafcc .Get ("\u0046\u0066").(*_df .PdfObjectInteger );_eacbcb .V =_eafcc .Get ("\u0056");_eacbcb .DV =_eafcc .Get ("\u0044\u0056");
_eacbcb .AA =_eafcc .Get ("\u0041\u0041");if DA :=_eafcc .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_df .GetString (DA );_eacbcb .VariableText =&VariableText {DA :DA };Q ,_ :=_eafcc .Get ("\u0051").(*_df .PdfObjectInteger );DS ,_ :=_eafcc .Get ("\u0044\u0053").(*_df .PdfObjectString );
RV :=_eafcc .Get ("\u0052\u0056");_eacbcb .VariableText .Q =Q ;_eacbcb .VariableText .DS =DS ;_eacbcb .VariableText .RV =RV ;};_eccb :=_eacbcb .FT ;if _eccb ==nil &&_egfgg !=nil {_eccb =_egfgg .FT ;};if _eccb !=nil {switch *_eccb {case "\u0054\u0078":_ddeg ,_geae :=_febce (_eafcc );
if _geae !=nil {return nil ,_geae ;};_ddeg .PdfField =_eacbcb ;_eacbcb ._baac =_ddeg ;case "\u0043\u0068":_beeae ,_fcbf :=_cbcd (_eafcc );if _fcbf !=nil {return nil ,_fcbf ;};_beeae .PdfField =_eacbcb ;_eacbcb ._baac =_beeae ;case "\u0042\u0074\u006e":_cbadf ,_efee :=_bgecd (_eafcc );
if _efee !=nil {return nil ,_efee ;};_cbadf .PdfField =_eacbcb ;_eacbcb ._baac =_cbadf ;case "\u0053\u0069\u0067":_bcfb ,_caab :=_ddge .newPdfFieldSignatureFromDict (_eafcc );if _caab !=nil {return nil ,_caab ;};_bcfb .PdfField =_eacbcb ;_eacbcb ._baac =_bcfb ;
default:_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_eacbcb .FT );return nil ,_fa .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _bbe ,_eddb :=_df .GetName (_eafcc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_eddb {if *_bbe =="\u0057\u0069\u0064\u0067\u0065\u0074"{_gegbb ,_eagb :=_ddge .newPdfAnnotationFromIndirectObject (_gafb );if _eagb !=nil {return nil ,_eagb ;};_cddb ,_fceg :=_gegbb .GetContext ().(*PdfAnnotationWidget );
if !_fceg {return nil ,_fa .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_cddb ._cff =_eacbcb ;_cddb .Parent =_eacbcb ._eabc ;_eacbcb .Annotations =append (_eacbcb .Annotations ,_cddb );
return _eacbcb ,nil ;};};_afgg :=true ;if _afccc ,_gbaf :=_df .GetArray (_eafcc .Get ("\u004b\u0069\u0064\u0073"));_gbaf {_becbd :=make ([]*_df .PdfIndirectObject ,0,_afccc .Len ());for _ ,_deegg :=range _afccc .Elements (){_gddf ,_fbfad :=_df .GetIndirect (_deegg );
if !_fbfad {_effbd ,_cdca :=_df .GetStream (_deegg );if _cdca &&_effbd .PdfObjectDictionary !=nil {_ecab ,_cgfe :=_df .GetNameVal (_effbd .Get ("\u0054\u0079\u0070\u0065"));if _cgfe &&_ecab =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_dda .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_fa .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_baabb ,_cgac :=_df .GetDict (_gddf );
if !_cgac {return nil ,ErrTypeCheck ;};if _afgg {_afgg =!_bfbdc (_baabb );};_becbd =append (_becbd ,_gddf );};for _ ,_bgaa :=range _becbd {if _afgg {_afaca ,_cdgd :=_ddge .newPdfAnnotationFromIndirectObject (_bgaa );if _cdgd !=nil {_dda .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cdgd );
return nil ,_cdgd ;};_fdgc ,_fbfeg :=_afaca ._bcaf .(*PdfAnnotationWidget );if !_fbfeg {return nil ,ErrTypeCheck ;};_fdgc ._cff =_eacbcb ;_eacbcb .Annotations =append (_eacbcb .Annotations ,_fdgc );}else {_ccab ,_aadea :=_ddge .newPdfFieldFromIndirectObject (_bgaa ,_eacbcb );
if _aadea !=nil {_dda .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_aadea );return nil ,_aadea ;};_eacbcb .Kids =append (_eacbcb .Kids ,_ccab );
};};};return _eacbcb ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_abgbd []byte ;_dcbeb []uint32 ;_dfeeg *_df .PdfObjectStream ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_df .PdfObjectName ;P *_df .PdfObjectInteger ;V *_df .PdfObjectName ;};func (_edccf *PdfReader )traverseObjectData (_efagf _df .PdfObject )error {return _df .ResolveReferencesDeep (_efagf ,_edccf ._ggebf );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_degge pdfCIDFontType0 )GetCharMetrics (code _aff .CharCode )(_fc .CharMetrics ,bool ){_egdcd :=_degge ._gbbfc ;if _adgca ,_ggee :=_degge ._geaef [code ];_ggee {_egdcd =_adgca ;};return _fc .CharMetrics {Wx :_egdcd },true ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bfb :=NewPdfAnnotation ();_ecae :=&PdfAnnotationHighlight {};_ecae .PdfAnnotation =_bfb ;_ecae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfb .SetContext (_ecae );return _ecae ;};const (BorderEffectNoEffect BorderEffect =iota ;
BorderEffectCloudy BorderEffect =iota ;);

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_ffca *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_eggd :=NewPdfOutlineItem ();_eggd .Title =_df .MakeEncodedString (_ffca .Title ,true );_eggd .Dest =_ffca .Dest .ToPdfObject ();var _dfbee []*PdfOutlineItem ;var _cdece int64 ;var _gbaaf *PdfOutlineItem ;
for _ ,_geeee :=range _ffca .Entries {_aaaeb ,_bedf :=_geeee .ToPdfOutlineItem ();_aaaeb .Parent =&_eggd .PdfOutlineTreeNode ;if _gbaaf !=nil {_gbaaf .Next =&_aaaeb .PdfOutlineTreeNode ;_aaaeb .Prev =&_gbaaf .PdfOutlineTreeNode ;};_dfbee =append (_dfbee ,_aaaeb );
_cdece +=_bedf ;_gbaaf =_aaaeb ;};_cgacf :=len (_dfbee );_cdece +=int64 (_cgacf );if _cgacf > 0{_eggd .First =&_dfbee [0].PdfOutlineTreeNode ;_eggd .Last =&_dfbee [_cgacf -1].PdfOutlineTreeNode ;_eggd .Count =&_cdece ;};return _eggd ,_cdece ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_deceg *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_deceg .Type ,_deceg .P ,_deceg .V );};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _df .PdfObject ;Name _df .PdfObject ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ffggd *PdfPageResources )GetXObjectImageByName (keyName _df .PdfObjectName )(*XObjectImage ,error ){_ccdaa ,_gfbce :=_ffggd .GetXObjectByName (keyName );if _ccdaa ==nil {return nil ,nil ;};if _gfbce !=XObjectTypeImage {return nil ,_fa .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_bdgfb ,_dfabg :=NewXObjectImageFromStream (_ccdaa );if _dfabg !=nil {return nil ,_dfabg ;};return _bdgfb ,nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_dca :=NewPdfAnnotation ();_bde :=&PdfAnnotationCircle {};_bde .PdfAnnotation =_dca ;_bde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dca .SetContext (_bde );return _bde ;};func _eeeec ()string {return _dda .Version };


// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_agfe *_df .PdfIndirectObject ;};func (_ecgd *PdfReader )newPdfAnnotationUnderlineFromDict (_fadb *_df .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_adfe :=PdfAnnotationUnderline {};
_cfbd ,_cbaf :=_ecgd .newPdfAnnotationMarkupFromDict (_fadb );if _cbaf !=nil {return nil ,_cbaf ;};_adfe .PdfAnnotationMarkup =_cfbd ;_adfe .QuadPoints =_fadb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_adfe ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_aedfb :=&PdfFieldSignature {};_aedfb .PdfField =NewPdfField ();_aedfb .PdfField .SetContext (_aedfb );_aedfb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_aedfb .PdfAnnotationWidget .SetContext (_aedfb );
_aedfb .PdfAnnotationWidget ._cdd =_aedfb .PdfField ._eabc ;_aedfb .T =_df .MakeString ("");_aedfb .F =_df .MakeInteger (132);_aedfb .V =signature ;return _aedfb ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_cdfb *PdfFieldButton )SetType (btype ButtonType ){_afce :=uint32 (0);if _cdfb .Ff !=nil {_afce =uint32 (*_cdfb .Ff );};switch btype {case ButtonTypePush :_afce |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_afce |=FieldFlagRadio .Mask ();
};_cdfb .Ff =_df .MakeInteger (int64 (_afce ));};

// ToPdfObject implements interface PdfModel.
func (_fcf *PdfActionGoTo3DView )ToPdfObject ()_df .PdfObject {_fcf .PdfAction .ToPdfObject ();_bdg :=_fcf ._dfc ;_gcf :=_bdg .PdfObject .(*_df .PdfObjectDictionary );_gcf .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeGoTo3DView )));_gcf .SetIfNotNil ("\u0054\u0041",_fcf .TA );
_gcf .SetIfNotNil ("\u0056",_fcf .V );return _bdg ;};

// SetViewArea sets the value of the viewArea.
func (_fefee *ViewerPreferences )SetViewArea (viewArea PageBoundary ){_fefee ._bcgdce =viewArea };func (_agbbg *PdfWriter )mapObjectStreams (_cgeaa bool )(map[_df .PdfObject ]bool ,bool ){_caaba :=make (map[_df .PdfObject ]bool );for _ ,_gegad :=range _agbbg ._bbedb {if _ddabfg ,_aeedc :=_gegad .(*_df .PdfObjectStreams );
_aeedc {_cgeaa =true ;for _ ,_bacea :=range _ddabfg .Elements (){_caaba [_bacea ]=true ;if _fgbeg ,_geeacf :=_bacea .(*_df .PdfIndirectObject );_geeacf {_caaba [_fgbeg .PdfObject ]=true ;};};};};return _caaba ,_cgeaa ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_fag :=NewPdfAction ();_feg :=&PdfActionSetOCGState {};_feg .PdfAction =_fag ;_fag .SetContext (_feg );return _feg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_agdbg *PdfPageResourcesColorspaces )ToPdfObject ()_df .PdfObject {_gagag :=_df .MakeDict ();for _ ,_fagfd :=range _agdbg .Names {_gagag .Set (_df .PdfObjectName (_fagfd ),_agdbg .Colorspaces [_fagfd ].ToPdfObject ());};if _agdbg ._aedcg !=nil {_agdbg ._aedcg .PdfObject =_gagag ;
return _agdbg ._aedcg ;};return _gagag ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_ccgce :=&PdfSignature {Type :_df .MakeName ("\u0053\u0069\u0067"),Handler :handler };_gcbab :=&pdfSignDictionary {PdfObjectDictionary :_df .MakeDict (),_bgfbc :&handler ,_gfbde :_ccgce };_ccgce ._aecge =_df .MakeIndirectObject (_gcbab );
return _ccgce ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gbcfa *PdfColorCalGray )GetNumComponents ()int {return 1};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_edf .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_edf .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_edf .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_eaae *PdfAppender ;_acbe *DSS ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bbcbc *PdfReader )GetNamedDestinations ()(_df .PdfObject ,error ){_cbdec :=_df .ResolveReference (_bbcbc ._aeeb .Get ("\u0044\u0065\u0073t\u0073"));if _cbdec ==nil {return nil ,nil ;};if !_bbcbc ._caabc {_ffga :=_bbcbc .traverseObjectData (_cbdec );
if _ffga !=nil {return nil ,_ffga ;};};return _cbdec ,nil ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_ebcg :_df .MakeDict (),ColorComponents :colorComponents };
};

// IsValid checks if the given pdf output intent type is valid.
func (_edfca PdfOutputIntentType )IsValid ()bool {return _edfca >=PdfOutputIntentTypeA1 &&_edfca <=PdfOutputIntentTypeX ;};

// GetStandardApplier gets currently used StandardApplier..
func (_dacce *PdfWriter )GetStandardApplier ()StandardApplier {return _dacce ._ecfag };

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _df .PdfObject ;IsMap _df .PdfObject ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_fcff *PdfFont )ToPdfObject ()_df .PdfObject {if _fcff ._bbeb ==nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _df .MakeNull ();
};return _fcff ._bbeb .ToPdfObject ();};

// GetPerms returns the Permissions dictionary
func (_aadd *PdfReader )GetPerms ()*Permissions {return _aadd ._bfbed };

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_bgggc *XObjectImage )GetContainingPdfObject ()_df .PdfObject {return _bgggc ._gafba };func (_ada *PdfReader )newPdfActionGotoFromDict (_bfg *_df .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_bfg .Get ("\u0044")},nil ;
};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_fbc *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_adebea *PdfWriter )optimize ()error {if _adebea ._cbcgf ==nil {return nil ;};var _dcdd error ;_adebea ._bbedb ,_dcdd =_adebea ._cbcgf .Optimize (_adebea ._bbedb );
if _dcdd !=nil {return _dcdd ;};_befcg :=make (map[_df .PdfObject ]struct{},len (_adebea ._bbedb ));for _ ,_agcaa :=range _adebea ._bbedb {_befcg [_agcaa ]=struct{}{};};_adebea ._bfaf =_befcg ;return nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_dbcf *PdfColorspaceICCBased )ToPdfObject ()_df .PdfObject {_ecgf :=&_df .PdfObjectArray {};_ecgf .Append (_df .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _gfdeg *_df .PdfObjectStream ;if _dbcf ._bdaf !=nil {_gfdeg =_dbcf ._bdaf ;
}else {_gfdeg =&_df .PdfObjectStream {};};_fagf :=_df .MakeDict ();_fagf .Set ("\u004e",_df .MakeInteger (int64 (_dbcf .N )));if _dbcf .Alternate !=nil {_fagf .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_dbcf .Alternate .ToPdfObject ());};if _dbcf .Metadata !=nil {_fagf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dbcf .Metadata );
};if _dbcf .Range !=nil {var _eacc []_df .PdfObject ;for _ ,_aef :=range _dbcf .Range {_eacc =append (_eacc ,_df .MakeFloat (_aef ));};_fagf .Set ("\u0052\u0061\u006eg\u0065",_df .MakeArray (_eacc ...));};_fagf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_dbcf .Data ))));
_gfdeg .Stream =_dbcf .Data ;_gfdeg .PdfObjectDictionary =_fagf ;_ecgf .Append (_gfdeg );if _dbcf ._efef !=nil {_dbcf ._efef .PdfObject =_ecgf ;return _dbcf ._efef ;};return _ecgf ;};

// GetNumPages returns the number of pages in the document.
func (_cgbd *PdfReader )GetNumPages ()(int ,error ){if _cgbd ._fcaac .GetCrypter ()!=nil &&!_cgbd ._fcaac .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_cgbd ._gaded ),nil ;};func (_abaf *PdfReader )newPdfAnnotationWidgetFromDict (_febd *_df .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_cffc :=PdfAnnotationWidget {};_cffc .H =_febd .Get ("\u0048");_cffc .MK =_febd .Get ("\u004d\u004b");
_cffc .A =_febd .Get ("\u0041");_cffc .AA =_febd .Get ("\u0041\u0041");_cffc .BS =_febd .Get ("\u0042\u0053");_cffc .Parent =_febd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_cffc ,nil ;};func (_baba *PdfReader )newPdfActionGotoEFromDict (_eea *_df .PdfObjectDictionary )(*PdfActionGoToE ,error ){_bad ,_eae :=_daca (_eea .Get ("\u0046"));
if _eae !=nil {return nil ,_eae ;};return &PdfActionGoToE {D :_eea .Get ("\u0044"),NewWindow :_eea .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_eea .Get ("\u0054"),F :_bad },nil ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _df .PdfObjectArray )(*PdfRectangle ,error ){_cggbd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _fgcaa error ;_cggbd .Llx ,_fgcaa =_df .GetNumberAsFloat (arr .Get (0));if _fgcaa !=nil {return nil ,_fgcaa ;};_cggbd .Lly ,_fgcaa =_df .GetNumberAsFloat (arr .Get (1));if _fgcaa !=nil {return nil ,_fgcaa ;};_cggbd .Urx ,_fgcaa =_df .GetNumberAsFloat (arr .Get (2));
if _fgcaa !=nil {return nil ,_fgcaa ;};_cggbd .Ury ,_fgcaa =_df .GetNumberAsFloat (arr .Get (3));if _fgcaa !=nil {return nil ,_fgcaa ;};return &_cggbd ,nil ;};

// Width returns the width of `rect`.
func (_bfbag *PdfRectangle )Width ()float64 {return _fe .Abs (_bfbag .Urx -_bfbag .Llx )};

// ToInteger convert to an integer format.
func (_fafc *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gbcdb :=_fe .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gbcdb *_fafc .R ()),uint32 (_gbcdb *_fafc .G ()),uint32 (_gbcdb *_fafc .B ())};};func (_gdgce *PdfShading )getShadingDict ()(*_df .PdfObjectDictionary ,error ){_daaeb :=_gdgce ._gfded ;
if _ddcgc ,_fedfe :=_daaeb .(*_df .PdfIndirectObject );_fedfe {_cbag ,_gagad :=_ddcgc .PdfObject .(*_df .PdfObjectDictionary );if !_gagad {return nil ,_df .ErrTypeError ;};return _cbag ,nil ;}else if _afggf ,_feded :=_daaeb .(*_df .PdfObjectStream );_feded {return _afggf .PdfObjectDictionary ,nil ;
}else if _bdgegdc ,_ccfce :=_daaeb .(*_df .PdfObjectDictionary );_ccfce {return _bdgegdc ,nil ;}else {_dda .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_df .ErrTypeError ;};};func (_fea *PdfReader )newPdfActionGotoRFromDict (_bbcg *_df .PdfObjectDictionary )(*PdfActionGoToR ,error ){_aaca ,_bae :=_daca (_bbcg .Get ("\u0046"));if _bae !=nil {return nil ,_bae ;};return &PdfActionGoToR {D :_bbcg .Get ("\u0044"),NewWindow :_bbcg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_aaca },nil ;
};

// PrintScaling represents the page scaling option that shall be selected
// when a print dialog is displayed for this document.
type PrintScaling string ;

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _df .PdfObject ;NewWindow _df .PdfObject ;T _df .PdfObject ;};

// SetPickTrayByPDFSize sets the value of the pickTrayByPDFSize flag.
func (_bcgda *ViewerPreferences )SetPickTrayByPDFSize (pickTrayByPDFSize bool ){_bcgda ._ecea =&pickTrayByPDFSize ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_cadea *PdfPageResources )SetXObjectFormByName (keyName _df .PdfObjectName ,xform *XObjectForm )error {_aeaf :=xform .ToPdfObject ().(*_df .PdfObjectStream );_bdfdc :=_cadea .SetXObjectByName (keyName ,_aeaf );return _bdfdc ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_cfceg :=NewPdfAnnotation ();_eff :=&PdfAnnotationMovie {};_eff .PdfAnnotation =_cfceg ;_cfceg .SetContext (_eff );return _eff ;};func (_dbbaa *LTV )enable (_gaaf ,_bece []*_bf .Certificate ,_bafg string )error {_eabgcg ,_bbegf ,_gfbff :=_dbbaa .buildCertChain (_gaaf ,_bece );
if _gfbff !=nil {return _gfbff ;};_dfeb ,_gfbff :=_dbbaa .getCerts (_eabgcg );if _gfbff !=nil {return _gfbff ;};var _deca ,_eedee [][]byte ;if _dbbaa .OCSPClient !=nil {_deca ,_gfbff =_dbbaa .getOCSPs (_eabgcg ,_bbegf );if _gfbff !=nil {return _gfbff ;
};};if _dbbaa .CRLClient !=nil {_eedee ,_gfbff =_dbbaa .getCRLs (_eabgcg );if _gfbff !=nil {return _gfbff ;};};_edggb :=_dbbaa ._acbe ;_gaabb ,_gfbff :=_edggb .AddCerts (_dfeb );if _gfbff !=nil {return _gfbff ;};_ggdfaa ,_gfbff :=_edggb .AddOCSPs (_deca );
if _gfbff !=nil {return _gfbff ;};_cbfc ,_gfbff :=_edggb .AddCRLs (_eedee );if _gfbff !=nil {return _gfbff ;};if _bafg !=""{_edggb .VRI [_bafg ]=&VRI {Cert :_gaabb ,OCSP :_ggdfaa ,CRL :_cbfc };};_dbbaa ._eaae .SetDSS (_edggb );return nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );
AES_128bit ;AES_256bit ;);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ffgbb *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ffgbb .UnderlyingCS ==nil {return nil ,_fa .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _ffgbb .UnderlyingCS .ColorFromFloats (vals );};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_dbgef *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_feea :=_bgb .NewReader (img .getBase ());_eeafg :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cfddc :=_bgb .NewWriter (_eeafg );
_afef :=_fe .Pow (2,float64 (img .BitsPerComponent ))-1;_gada :=make ([]uint32 ,3);var (_agbe uint32 ;ANorm ,X ,Y ,Z ,_edae ,_bgga ,_afge float64 ;_fedec error ;);for {_agbe ,_fedec =_feea .ReadSample ();if _fedec ==_bc .EOF {break ;}else if _fedec !=nil {return img ,_fedec ;
};ANorm =float64 (_agbe )/_afef ;X =_dbgef .WhitePoint [0]*_fe .Pow (ANorm ,_dbgef .Gamma );Y =_dbgef .WhitePoint [1]*_fe .Pow (ANorm ,_dbgef .Gamma );Z =_dbgef .WhitePoint [2]*_fe .Pow (ANorm ,_dbgef .Gamma );_edae =3.240479*X +-1.537150*Y +-0.498535*Z ;
_bgga =-0.969256*X +1.875992*Y +0.041556*Z ;_afge =0.055648*X +-0.204043*Y +1.057311*Z ;_edae =_fe .Min (_fe .Max (_edae ,0),1.0);_bgga =_fe .Min (_fe .Max (_bgga ,0),1.0);_afge =_fe .Min (_fe .Max (_afge ,0),1.0);_gada [0]=uint32 (_edae *_afef );_gada [1]=uint32 (_bgga *_afef );
_gada [2]=uint32 (_afge *_afef );if _fedec =_cfddc .WriteSamples (_gada );_fedec !=nil {return img ,_fedec ;};};return _fdaa (&_eeafg ),nil ;};func (_aeaee *pdfCIDFontType0 )baseFields ()*fontCommon {return &_aeaee .fontCommon };

// ToPdfObject implements interface PdfModel.
func (_dffa *PdfActionGoToR )ToPdfObject ()_df .PdfObject {_dffa .PdfAction .ToPdfObject ();_ad :=_dffa ._dfc ;_eef :=_ad .PdfObject .(*_df .PdfObjectDictionary );_eef .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeGoToR )));if _dffa .F !=nil {_eef .Set ("\u0046",_dffa .F .ToPdfObject ());
};_eef .SetIfNotNil ("\u0044",_dffa .D );_eef .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dffa .NewWindow );return _ad ;};func (_cdfd *PdfSignature )extractChainFromPKCS7 ()([]*_bf .Certificate ,error ){_feegfg ,_abgacc :=_da .Parse (_cdfd .Contents .Bytes ());
if _abgacc !=nil {return nil ,_abgacc ;};return _feegfg .Certificates ,nil ;};

// SetPage directly sets the page object.
func (_cddeff *KDict )SetPage (page *_df .PdfIndirectObject ){_cddeff .Pg =page };func _edeac (_bceec []byte )([]byte ,error ){_bddfg :=_de .New ();if _ ,_eddba :=_bc .Copy (_bddfg ,_c .NewReader (_bceec ));_eddba !=nil {return nil ,_eddba ;};return _bddfg .Sum (nil ),nil ;
};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_daaca *pdfCIDFontType2 )ToPdfObject ()_df .PdfObject {if _daaca ._cdee ==nil {_daaca ._cdee =&_df .PdfIndirectObject {};};_gddg :=_daaca .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_daaca ._cdee .PdfObject =_gddg ;if _daaca .CIDSystemInfo !=nil {_gddg .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_daaca .CIDSystemInfo );};if _daaca .DW !=nil {_gddg .Set ("\u0044\u0057",_daaca .DW );};if _daaca .DW2 !=nil {_gddg .Set ("\u0044\u0057\u0032",_daaca .DW2 );
};if _daaca .W !=nil {_gddg .Set ("\u0057",_daaca .W );};if _daaca .W2 !=nil {_gddg .Set ("\u0057\u0032",_daaca .W2 );};if _daaca .CIDToGIDMap !=nil {_gddg .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_daaca .CIDToGIDMap );};return _daaca ._cdee ;
};

// AddCerts adds certificates to DSS.
func (_deead *DSS )AddCerts (certs [][]byte )([]*_df .PdfObjectStream ,error ){return _deead .add (&_deead .Certs ,_deead ._afbbd ,certs );};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_afdfb *PdfPageResources )SetColorspaceByName (keyName _df .PdfObjectName ,cs PdfColorspace )error {_ggcdc ,_fbecd :=_afdfb .GetColorspaces ();if _fbecd !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fbecd );
return _fbecd ;};if _ggcdc ==nil {_ggcdc =NewPdfPageResourcesColorspaces ();_afdfb .SetColorSpace (_ggcdc );};_ggcdc .Set (keyName ,cs );return nil ;};func _bfccd (_gbbaa _df .PdfObject ,_befa _df .PdfObject ,_abbdag map[_df .PdfObject ][]_df .PdfObject ,_afgeg map[string ]_df .PdfObject ,_bagb *[]_df .PdfObject ){var _ceaa *_df .PdfIndirectObject ;
if _dgeba ,_febgb :=_df .GetIndirect (_gbbaa );_febgb {_ceaa =_dgeba ;_gbbaa =_dgeba .PdfObject ;};switch _ffgbdb :=_gbbaa .(type ){case *_df .PdfObjectDictionary :if _ffgbdb .Get ("\u0053")==nil {return ;};_ffgbdb .Set ("\u0050",_befa );if _fedad :=_ffgbdb .Get ("\u0050\u0067");
_fedad !=nil {if _fefa ,_aebec :=_df .GetIndirect (_fedad );_aebec &&_fefa !=nil &&_fefa .PdfObject !=nil {_abbdag [_fedad ]=append (_abbdag [_fedad ],_ceaa );};};if _abbfe :=_ffgbdb .Get ("\u0053");_abbfe !=nil {if _ccbda ,_dgaa :=_df .GetNameVal (_abbfe );
_dgaa {if _ccbda ==StructureTypeLink {if _dfcgg :=_ffgbdb .Get ("\u004b");_dfcgg !=nil {if _edafd ,_deff :=_df .GetArray (_dfcgg );_deff &&_edafd .Len ()==2{_fggdb :=false ;_facde :=false ;for _ ,_dcdfb :=range _edafd .Elements (){if _gddgef ,_dfbcf :=_df .GetDict (_dcdfb );
_dfbcf {if _acgg ,_baffe :=_df .GetName (_gddgef .Get ("\u0054\u0079\u0070\u0065"));_baffe &&_acgg .String ()=="\u004f\u0042\u004a\u0052"{_facde =true ;};}else if _ ,_dabdc :=_df .GetInt (_dcdfb );_dabdc {_fggdb =true ;};};if _fggdb &&_facde {*_bagb =append (*_bagb ,_ceaa );
};}else if _bdeag ,_gebdac :=_df .GetDict (_dfcgg );_gebdac {if _gbeag ,_bdddc :=_df .GetName (_bdeag .Get ("\u0054\u0079\u0070\u0065"));_bdddc &&_gbeag .String ()=="\u004f\u0042\u004a\u0052"{*_bagb =append (*_bagb ,_ceaa );};};};};};};if _aefgcf :=_ffgbdb .Get ("\u0049\u0044");
_aefgcf !=nil {_afgeg [_aefgcf .String ()]=_gbbaa ;};if _fgeef :=_ffgbdb .Get ("\u004b");_fgeef !=nil {_bfccd (_fgeef ,_ceaa ,_abbdag ,_afgeg ,_bagb );};case *_df .PdfObjectArray :for _ ,_cega :=range _ffgbdb .Elements (){_bfccd (_cega ,_befa ,_abbdag ,_afgeg ,_bagb );
};default:};};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _dd .Time )(PdfDate ,error ){_febge :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_bggae ,_ :=_dg .ParseInt (_febge [1:3],10,32);_eegag ,_ :=_dg .ParseInt (_febge [4:6],10,32);return PdfDate {_fcbeg :int64 (timeObj .Year ()),_efbc :int64 (timeObj .Month ()),_ceeedg :int64 (timeObj .Day ()),_eaegg :int64 (timeObj .Hour ()),_bffeb :int64 (timeObj .Minute ()),_dcfgb :int64 (timeObj .Second ()),_dfgged :_febge [0],_aead :_bggae ,_badcg :_eegag },nil ;
};

// NewKDictionary creates a new K dictionary object.
func NewKDictionary ()*KDict {return &KDict {_cgaed :make ([]*KValue ,0),_efgaf :-1}};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_cdcaa *PdfReader )GetIndirectObjectByNumber (number int )(_df .PdfObject ,error ){_deafd ,_fdbec :=_cdcaa ._fcaac .LookupByNumber (number );return _deafd ,_fdbec ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bffbf *PdfPage )SetContentStreams (cStreams []string ,encoder _df .StreamEncoder )error {if len (cStreams )==0{_bffbf .Contents =nil ;return nil ;};if encoder ==nil {encoder =_df .NewRawEncoder ();};var _ccgdcb []*_df .PdfObjectStream ;for _ ,_bbea :=range cStreams {_gbgcg :=&_df .PdfObjectStream {};
_faedd :=encoder .MakeStreamDict ();_abefa ,_eadde :=encoder .EncodeBytes ([]byte (_bbea ));if _eadde !=nil {return _eadde ;};_faedd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_abefa ))));_gbgcg .PdfObjectDictionary =_faedd ;
_gbgcg .Stream =_abefa ;_ccgdcb =append (_ccgdcb ,_gbgcg );};if len (_ccgdcb )==1{_bffbf .Contents =_ccgdcb [0];}else {_egfbe :=_df .MakeArray ();for _ ,_fbedbg :=range _ccgdcb {_egfbe .Append (_fbedbg );};_bffbf .Contents =_egfbe ;};return nil ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_ebcg *_df .PdfObjectDictionary ;};

// GetContentStreams returns the content stream as an array of strings.
func (_febda *PdfPage )GetContentStreams ()([]string ,error ){_fgfec :=_febda .GetContentStreamObjs ();var _bfgf []string ;for _ ,_bffgf :=range _fgfec {_gbbe ,_dgcfa :=_cccgc (_bffgf );if _dgcfa !=nil {return nil ,_dgcfa ;};_bfgf =append (_bfgf ,_gbbe );
};return _bfgf ,nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_badfc *PdfPageResources )SetPatternByName (keyName _df .PdfObjectName ,pattern _df .PdfObject )error {if _badfc .Pattern ==nil {_badfc .Pattern =_df .MakeDict ();};_ebaf ,_bbaccg :=_df .GetDict (_badfc .Pattern );if !_bbaccg {return _df .ErrTypeError ;
};_ebaf .Set (keyName ,pattern );return nil ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_bcdg *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _fa .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_bcdg .S =subtype ;return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_edbc *PdfShadingPatternType2 )ToPdfObject ()_df .PdfObject {_edbc .PdfPattern .ToPdfObject ();_fadea :=_edbc .getDict ();if _edbc .Shading !=nil {_fadea .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_edbc .Shading .ToPdfObject ());};if _edbc .Matrix !=nil {_fadea .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_edbc .Matrix );
};if _edbc .ExtGState !=nil {_fadea .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_edbc .ExtGState );};return _edbc ._cbde ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cfd :=NewPdfAnnotation ();_aacf :=&PdfAnnotationProjection {};_aacf .PdfAnnotation =_cfd ;_aacf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfd .SetContext (_aacf );return _aacf ;};const (RelationshipSource FileRelationship =iota ;
RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);func _gfggfb (_gcfgf *XObjectImage )error {if _gcfgf .SMask ==nil {return nil ;};_edca ,_dfgfc :=_gcfgf .SMask .(*_df .PdfObjectStream );if !_dfgfc {_dda .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _df .ErrTypeError ;};_dfaaa :=_edca .PdfObjectDictionary ;_gdcce :=_dfaaa .Get ("\u004d\u0061\u0074t\u0065");if _gdcce ==nil {return nil ;};_ecbdc ,_bfaca :=_beagb (_gdcce .(*_df .PdfObjectArray ));if _bfaca !=nil {return _bfaca ;};_fgffe :=_df .MakeArrayFromFloats ([]float64 {_ecbdc });
_dfaaa .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fgffe );return nil ;};

// IsColored specifies if the pattern is colored.
func (_ecafc *PdfTilingPattern )IsColored ()bool {if _ecafc .PaintType !=nil &&*_ecafc .PaintType ==1{return true ;};return false ;};func (_adgc *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _adgc ._fedff };

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_fdbeg *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _fdbeg ._ggcbe .(*PdfTilingPattern );};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_bfba []byte )(_dcdc int ,_efecf error );};

// ToPdfObject implements interface PdfModel.
func (_aad *PdfActionHide )ToPdfObject ()_df .PdfObject {_aad .PdfAction .ToPdfObject ();_bdc :=_aad ._dfc ;_afe :=_bdc .PdfObject .(*_df .PdfObjectDictionary );_afe .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeHide )));_afe .SetIfNotNil ("\u0054",_aad .T );
_afe .SetIfNotNil ("\u0048",_aad .H );return _bdc ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gcedg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dda .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_aggag :=[]float64 {0.0};if _gcedg .C0 !=nil {_aggag =_gcedg .C0 ;};_eccff :=[]float64 {1.0};if _gcedg .C1 !=nil {_eccff =_gcedg .C1 ;};var _edfc []float64 ;for _adge :=0;_adge < len (_aggag );_adge ++{_cfebe :=_aggag [_adge ]+_fe .Pow (x [0],_gcedg .N )*(_eccff [_adge ]-_aggag [_adge ]);
_edfc =append (_edfc ,_cfebe );};return _edfc ,nil ;};func _gabce ()_dd .Time {_effdf .Lock ();defer _effdf .Unlock ();return _egbfaee };

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_beedc *PdfShading )GetContainingPdfObject ()_df .PdfObject {return _beedc ._gfded };

// IsPush returns true if the button field represents a push button, false otherwise.
func (_cbebe *PdfFieldButton )IsPush ()bool {return _cbebe .GetType ()==ButtonTypePush };

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_bgcba pdfFontSimple )GetCharMetrics (code _aff .CharCode )(_fc .CharMetrics ,bool ){if _deebc ,_ebdb :=_bgcba ._aeegg [code ];_ebdb {return _fc .CharMetrics {Wx :_deebc },true ;};if _fc .IsStdFont (_fc .StdFontName (_bgcba ._eefad )){return _fc .CharMetrics {Wx :250},true ;
};return _fc .CharMetrics {},false ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _df .PdfObject ;Mac _df .PdfObject ;Unix _df .PdfObject ;NewWindow _df .PdfObject ;};func (_caace *PdfWriter )copyObjects (){_bdeee :=make (map[_df .PdfObject ]_df .PdfObject );_bcfcc :=make ([]_df .PdfObject ,0,len (_caace ._bbedb ));
_dacef :=make (map[_df .PdfObject ]struct{},len (_caace ._bbedb ));_cgdc :=make (map[_df .PdfObject ]struct{});for _ ,_aegeg :=range _caace ._bbedb {_ecgefb :=_caace .copyObject (_aegeg ,_bdeee ,_cgdc ,false );if _ ,_gcdebe :=_cgdc [_aegeg ];_gcdebe {continue ;
};_bcfcc =append (_bcfcc ,_ecgefb );_dacef [_ecgefb ]=struct{}{};};_caace ._bbedb =_bcfcc ;_caace ._bfaf =_dacef ;_caace ._edaec =_caace .copyObject (_caace ._edaec ,_bdeee ,nil ,false ).(*_df .PdfIndirectObject );_caace ._dgdge =_caace .copyObject (_caace ._dgdge ,_bdeee ,nil ,false ).(*_df .PdfIndirectObject );
if _caace ._dfbcc !=nil {_caace ._dfbcc =_caace .copyObject (_caace ._dfbcc ,_bdeee ,nil ,false ).(*_df .PdfIndirectObject );};if _caace ._ddga {_bdecc :=make (map[_df .PdfObject ]int64 );for _gdbfb ,_fccde :=range _caace ._babda {if _begdc ,_adfc :=_bdeee [_gdbfb ];
_adfc {_bdecc [_begdc ]=_fccde ;}else {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_caace ._babda =_bdecc ;};};func _ceead (_ccdce *_df .PdfObjectStream )(*PdfFunctionType4 ,error ){_dfbbd :=&PdfFunctionType4 {};_dfbbd ._caccg =_ccdce ;_dcab :=_ccdce .PdfObjectDictionary ;_ceffd ,_dfcc :=_df .TraceToDirectObject (_dcab .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_df .PdfObjectArray );
if !_dfcc {_dda .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fa .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ceffd .Len ()%2!=0{_dda .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fa .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cdffb ,_gaccec :=_ceffd .ToFloat64Array ();
if _gaccec !=nil {return nil ,_gaccec ;};_dfbbd .Domain =_cdffb ;_ceffd ,_dfcc =_df .TraceToDirectObject (_dcab .Get ("\u0052\u0061\u006eg\u0065")).(*_df .PdfObjectArray );if _dfcc {if _ceffd .Len ()< 0||_ceffd .Len ()%2!=0{return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gdfbc ,_ggad :=_ceffd .ToFloat64Array ();if _ggad !=nil {return nil ,_ggad ;};_dfbbd .Range =_gdfbc ;};_addgc ,_gaccec :=_df .DecodeStream (_ccdce );if _gaccec !=nil {return nil ,_gaccec ;};_dfbbd ._efdf =_addgc ;_fdbc :=_be .NewPSParser (_addgc );_abdfe ,_gaccec :=_fdbc .Parse ();
if _gaccec !=nil {return nil ,_gaccec ;};_dfbbd .Program =_abdfe ;return _dfbbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_febg *PdfAnnotationStrikeOut )ToPdfObject ()_df .PdfObject {_febg .PdfAnnotation .ToPdfObject ();_edff :=_febg ._cdd ;_aadg :=_edff .PdfObject .(*_df .PdfObjectDictionary );_febg .PdfAnnotationMarkup .appendToPdfDictionary (_aadg );_aadg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_aadg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_febg .QuadPoints );return _edff ;};func (_gedeg *LTV )getCerts (_efgbg []*_bf .Certificate )([][]byte ,error ){_fegff :=make ([][]byte ,0,len (_efgbg ));for _ ,_ebfde :=range _efgbg {_fegff =append (_fegff ,_ebfde .Raw );
};return _fegff ,nil ;};func _baadc (_fbgb _df .PdfObject ,_gdabb *fontCommon )(*_ce .CMap ,error ){_bbfdad ,_gbcfe :=_df .GetStream (_fbgb );if !_gbcfe {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_fbgb );
return nil ,_df .ErrTypeError ;};_bfgg ,_fddc :=_df .DecodeStream (_bbfdad );if _fddc !=nil {return nil ,_fddc ;};_cagca ,_fddc :=_ce .LoadCmapFromData (_bfgg ,!_gdabb .isCIDFont ());if _fddc !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_bbfdad .ObjectNumber ,_fddc );
};return _cagca ,_fddc ;};

// M returns the value of the magenta component of the color.
func (_dbaad *PdfColorDeviceCMYK )M ()float64 {return _dbaad [1]};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_fgegbe *PdfPageResources )GetFontByName (keyName _df .PdfObjectName )(_df .PdfObject ,bool ){if _fgegbe .Font ==nil {return nil ,false ;};_eagaa ,_fbbf :=_df .TraceToDirectObject (_fgegbe .Font ).(*_df .PdfObjectDictionary );if !_fbbf {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_df .TraceToDirectObject (_fgegbe .Font ));
return nil ,false ;};if _fabbd :=_eagaa .Get (keyName );_fabbd !=nil {return _fabbd ,true ;};return nil ,false ;};

// SetTabOrder sets the tab order for the page.
func (_eacf *PdfPage )SetTabOrder (order TabOrderType ){_eacf .Tabs =_df .MakeName (string (order ))};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bdbb *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beeb ,_edaf :=_df .GetNumbersAsFloat (objects );
if _edaf !=nil {return nil ,_edaf ;};return _bdbb .ColorFromFloats (_beeb );};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _df .PdfObject ;};func (_adaab *PdfWriter )writeNamesDictionary ()error {if _adaab ._bcgc ==nil {return nil ;};_gacad :=_adaab ._bcgc .ToPdfObject ();_adaab ._afacf .Set ("\u004e\u0061\u006de\u0073",_gacad );_ebfbae :=_adaab .addObjects (_gacad );
if _ebfbae !=nil {return _ebfbae ;};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gfee *PdfAnnotation )GetContainingPdfObject ()_df .PdfObject {return _gfee ._cdd };

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _df .PdfObject )(*PdfInfo ,error ){var _gcgf PdfInfo ;_aeacb ,_gdge :=obj .(*_df .PdfObjectDictionary );if !_gdge {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_fbce :=range _aeacb .Keys (){switch _fbce {case "\u0054\u0069\u0074l\u0065":_gcgf .Title ,_ =_df .GetString (_aeacb .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_gcgf .Author ,_ =_df .GetString (_aeacb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_gcgf .Subject ,_ =_df .GetString (_aeacb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_gcgf .Keywords ,_ =_df .GetString (_aeacb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_gcgf .Creator ,_ =_df .GetString (_aeacb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_gcgf .Producer ,_ =_df .GetString (_aeacb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_gcgf .Trapped ,_ =_df .GetName (_aeacb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _dgcag ,_fdccc :=_df .GetString (_aeacb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_fdccc &&_dgcag .String ()!=""{_gcfff ,_gdag :=NewPdfDate (_dgcag .String ());if _gdag !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_gdag );
};_gcgf .CreationDate =&_gcfff ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _aaeb ,_gcdbf :=_df .GetString (_aeacb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_gcdbf &&_aaeb .String ()!=""{_dcgba ,_afabf :=NewPdfDate (_aaeb .String ());if _afabf !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_afabf );
};_gcgf .ModifiedDate =&_dcgba ;};default:_ddadc ,_ :=_df .GetString (_aeacb .Get (_fbce ));if _gcgf ._fcac ==nil {_gcgf ._fcac =_df .MakeDict ();};_gcgf ._fcac .Set (_fbce ,_ddadc );};};return &_gcgf ,nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_eeee *PdfReader )GetTrailer ()(*_df .PdfObjectDictionary ,error ){_beaec :=_eeee ._fcaac .GetTrailer ();if _beaec ==nil {return nil ,_fa .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _beaec ,nil ;
};func (_cggfc *PdfAppender )mergeResources (_gffd ,_fedc _df .PdfObject ,_eddc map[_df .PdfObjectName ]_df .PdfObjectName )_df .PdfObject {if _fedc ==nil &&_gffd ==nil {return nil ;};if _fedc ==nil {return _gffd ;};_abec ,_aeccd :=_df .GetDict (_fedc );
if !_aeccd {return _gffd ;};if _gffd ==nil {_fgc :=_df .MakeDict ();_fgc .Merge (_abec );return _fedc ;};_gbdf ,_aeccd :=_df .GetDict (_gffd );if !_aeccd {_dda .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_gbdf =_df .MakeDict ();};for _ ,_ffeg :=range _abec .Keys (){if _fbeg ,_fgad :=_eddc [_ffeg ];_fgad {_gbdf .Set (_fbeg ,_abec .Get (_ffeg ));}else {_gbdf .Set (_ffeg ,_abec .Get (_ffeg ));};};return _gbdf ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_ceabee *PdfReader )Decrypt (password []byte )(bool ,error ){_ecaeb ,_fbbdgc :=_ceabee ._fcaac .Decrypt (password );if _fbbdgc !=nil {return false ,_fbbdgc ;};if !_ecaeb {return false ,nil ;};_fbbdgc =_ceabee .loadStructure ();if _fbbdgc !=nil {_dda .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_fbbdgc );
return false ,_fbbdgc ;};return true ,nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_gcaeg *LTV )Enable (sig *PdfSignature ,extraCerts []*_bf .Certificate )error {if _fbda :=_gcaeg .validateSig (sig );_fbda !=nil {return _fbda ;};_fcace ,_dgccb :=_gcaeg .generateVRIKey (sig );if _dgccb !=nil {return _dgccb ;};if _ ,_acba :=_gcaeg ._acbe .VRI [_fcace ];
_acba &&_gcaeg .SkipExisting {return nil ;};_fbedb ,_dgccb :=sig .GetCerts ();if _dgccb !=nil {return _dgccb ;};return _gcaeg .enable (_fbedb ,extraCerts ,_fcace );};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_ggdfa _bc .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_caaga _ab .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_cgabc _ab .Image )(*Image ,error );

// Compress an image.
Compress (_cegg *Image ,_gcgfc int64 )(*Image ,error );};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_fagff *PdfField )GetContext ()PdfModel {return _fagff ._baac };var ErrColorOutOfRange =_fa .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_effdf .Lock ();defer _effdf .Unlock ();_gbedda =keywords };

// GetOCProperties returns the optional content properties PdfObject.
func (_abgff *PdfReader )GetOCProperties ()(_df .PdfObject ,error ){_gfgfd :=_abgff ._aeeb ;_cdcge :=_gfgfd .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cdcge =_df .ResolveReference (_cdcge );if !_abgff ._caabc {_gaedf :=_abgff .traverseObjectData (_cdcge );
if _gaedf !=nil {return nil ,_gaedf ;};};return _cdcge ,nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_df .PdfObjectArray ;Matrix *_df .PdfObjectArray ;Function []PdfFunction ;};func (_dgfa *PdfWriter )checkLicense ()error {_fgfaa :=_ede .GetLicenseKey ();if (_fgfaa ==nil ||!_fgfaa .IsLicensed ())&&!_feeff {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _fa .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};func _ddbgb (_afgdf ,_ecedb string )string {if _eb .Contains (_afgdf ,"\u002b"){_ccgf :=_eb .Split (_afgdf ,"\u002b");
if len (_ccgf )==2{_afgdf =_ccgf [1];};};return _ecedb +"\u002b"+_afgdf ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bdbc *PdfShadingPatternType3 )ToPdfObject ()_df .PdfObject {_bdbc .PdfPattern .ToPdfObject ();_bbfgb :=_bdbc .getDict ();if _bdbc .Shading !=nil {_bbfgb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bdbc .Shading .ToPdfObject ());};if _bdbc .Matrix !=nil {_bbfgb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bdbc .Matrix );
};if _bdbc .ExtGState !=nil {_bbfgb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bdbc .ExtGState );};return _bdbc ._cbde ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_bcecd *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_bcecd .GetNumComponents (){return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_becgg ,_ggcc :=_bcecd .TintTransform .Evaluate (vals );
if _ggcc !=nil {return nil ,_ggcc ;};_aegb ,_ggcc :=_bcecd .AlternateSpace .ColorFromFloats (_becgg );if _ggcc !=nil {return nil ,_ggcc ;};return _aegb ,nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_dgga *PdfColorspaceSpecialIndexed )ToPdfObject ()_df .PdfObject {_fabb :=_df .MakeArray (_df .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_fabb .Append (_dgga .Base .ToPdfObject ());_fabb .Append (_df .MakeInteger (int64 (_dgga .HiVal )));
_fabb .Append (_dgga .Lookup );if _dgga ._gffg !=nil {_dgga ._gffg .PdfObject =_fabb ;return _dgga ._gffg ;};return _fabb ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;
PdfOutputIntentTypeX ;);func (_dcc *PdfReader )newPdfActionResetFormFromDict (_eba *_df .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_eba .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_eba .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_dfdee *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _df .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fdef *PdfColorspaceSpecialPattern )ToPdfObject ()_df .PdfObject {if _fdef .UnderlyingCS ==nil {return _df .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_adga :=_df .MakeArray (_df .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_adga .Append (_fdef .UnderlyingCS .ToPdfObject ());
if _fdef ._geaad !=nil {_fdef ._geaad .PdfObject =_adga ;return _fdef ._geaad ;};return _adga ;};

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_ddffa []*PdfFont ;CurrentFont *PdfFont ;};func (_abgbc *LTV )validateSig (_cdef *PdfSignature )error {if _cdef ==nil ||_cdef .Contents ==nil ||len (_cdef .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_cdef );
};return nil ;};func (_fbcge *PdfWriter )writeOutputIntents ()error {if len (_fbcge ._fabcc )==0{return nil ;};_bdadc :=make ([]_df .PdfObject ,len (_fbcge ._fabcc ));for _bdbeb ,_gaadb :=range _fbcge ._fabcc {_ddbdc :=_gaadb .ToPdfObject ();_bdadc [_bdbeb ]=_df .MakeIndirectObject (_ddbdc );
};_aegaa :=_df .MakeIndirectObject (_df .MakeArray (_bdadc ...));_fbcge ._afacf .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_aegaa );if _bcfaeg :=_fbcge .addObjects (_aegaa );_bcfaeg !=nil {return _bcfaeg ;};return nil ;
};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_dfeda *PdfWriter )SetPageLabels (pageLabels _df .PdfObject )error {if pageLabels ==nil {return nil ;};_dda .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_dfeda ._afacf .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _dfeda .addObjects (pageLabels );};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_cgf :=NewPdfAnnotation ();_dbaa :=&PdfAnnotationSquiggly {};_dbaa .PdfAnnotation =_cgf ;_dbaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgf .SetContext (_dbaa );return _dbaa ;};

// AddOutlineTree adds outlines to a PDF file.
func (_gbfed *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gbfed ._gfcfe =outlineTree };func (_gbcdbb *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _gfga :=_gbcdbb ._fedff ;_gfga !=nil {return _gfga ;};return _gbcdbb ._efadg ;
};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_gbae :=NewPdfAction ();_gfd :=&PdfActionSound {};_gfd .PdfAction =_gbae ;_gbae .SetContext (_gfd );return _gfd ;};func _gbea (_addef _df .PdfObject )(*PdfPattern ,error ){_ddefg :=&PdfPattern {};var _bcbaf *_df .PdfObjectDictionary ;
if _dcbdd ,_bbdc :=_df .GetIndirect (_addef );_bbdc {_ddefg ._cbde =_dcbdd ;_bfgbb ,_effge :=_dcbdd .PdfObject .(*_df .PdfObjectDictionary );if !_effge {_dda .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_dcbdd .PdfObject );
return nil ,_df .ErrTypeError ;};_bcbaf =_bfgbb ;}else if _eafda ,_aceda :=_df .GetStream (_addef );_aceda {_ddefg ._cbde =_eafda ;_bcbaf =_eafda .PdfObjectDictionary ;}else {_dda .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_addef );
return nil ,_df .ErrTypeError ;};_cgeef :=_bcbaf .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cgeef ==nil {_dda .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gffda ,_ddba :=_cgeef .(*_df .PdfObjectInteger );if !_ddba {_dda .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cgeef );
return nil ,_df .ErrTypeError ;};if *_gffda !=1&&*_gffda !=2{_dda .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_gffda );return nil ,_df .ErrRangeError ;
};_ddefg .PatternType =int64 (*_gffda );switch *_gffda {case 1:_ebdce ,_dcggg :=_bdbe (_bcbaf );if _dcggg !=nil {return nil ,_dcggg ;};_ebdce .PdfPattern =_ddefg ;_ddefg ._ggcbe =_ebdce ;return _ddefg ,nil ;case 2:_cgacd ,_fddbb :=_dbad (_bcbaf );if _fddbb !=nil {return nil ,_fddbb ;
};_cgacd .PdfPattern =_ddefg ;_ddefg ._ggcbe =_cgacd ;return _ddefg ,nil ;};return nil ,_fa .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_df .PdfObjectInteger ;TilingType *_df .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_df .PdfObjectFloat ;YStep *_df .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_df .PdfObjectArray ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_cbegf *PdfPage )ToPdfObject ()_df .PdfObject {_decce :=_cbegf ._edccc ;_cbegf .GetPageDict ();return _decce ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_aed :=NewPdfAnnotation ();_cae :=&PdfAnnotation3D {};_cae .PdfAnnotation =_aed ;_aed .SetContext (_cae );return _cae ;};func _beagb (_dcccgd *_df .PdfObjectArray )(float64 ,error ){_facaa ,_cefdac :=_dcccgd .ToFloat64Array ();
if _cefdac !=nil {_dda .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dcccgd ,_cefdac );};switch len (_facaa ){case 1:return _facaa [0],nil ;
case 3:_bdce :=PdfColorspaceDeviceRGB {};_ecgdb ,_bbfb :=_bdce .ColorFromFloats (_facaa );if _bbfb !=nil {return 0.0,_bbfb ;};return _ecgdb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_gbdd :=PdfColorspaceDeviceCMYK {};_abgd ,_adbbb :=_gbdd .ColorFromFloats (_facaa );
if _adbbb !=nil {return 0.0,_adbbb ;};_geaaa ,_adbbb :=_gbdd .ColorToRGB (_abgd .(*PdfColorDeviceCMYK ));if _adbbb !=nil {return 0.0,_adbbb ;};return _geaaa .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_cefdac =_fa .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_dda .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dcccgd ,_cefdac );return 0.0,_cefdac ;};func _cbcbg (_fcgg *_df .PdfObjectDictionary ){_aafgc ,_eefe :=_df .GetArray (_fcgg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_cgeg ,_ffbf :=_df .GetIntVal (_fcgg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_afcdc ,_abede :=_df .GetIntVal (_fcgg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _eefe &&_ffbf &&_abede {_bege :=_aafgc .Len ();if _bege !=_afcdc -_cgeg +1{_dda .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_bege ,_afcdc );
_gebg :=_df .PdfObjectInteger (_cgeg +_bege -1);_fcgg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_gebg );};};};

// ToPdfObject returns the PDF representation of the pattern.
func (_fbfdb *PdfPattern )ToPdfObject ()_df .PdfObject {_feeae :=_fbfdb .getDict ();_feeae .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_feeae .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (_fbfdb .PatternType ));
return _fbfdb ._cbde ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func _gcbce (_dfcf *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_dfcf }};func (_eaac *PdfAnnotationMarkup )appendToPdfDictionary (_bdbf *_df .PdfObjectDictionary ){_bdbf .SetIfNotNil ("\u0054",_eaac .T );if _eaac .Popup !=nil {_bdbf .Set ("\u0050\u006f\u0070u\u0070",_eaac .Popup .ToPdfObject ());
};_bdbf .SetIfNotNil ("\u0043\u0041",_eaac .CA );_bdbf .SetIfNotNil ("\u0052\u0043",_eaac .RC );_bdbf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eaac .CreationDate );_bdbf .SetIfNotNil ("\u0049\u0052\u0054",_eaac .IRT );
_bdbf .SetIfNotNil ("\u0053\u0075\u0062\u006a",_eaac .Subj );_bdbf .SetIfNotNil ("\u0052\u0054",_eaac .RT );_bdbf .SetIfNotNil ("\u0049\u0054",_eaac .IT );_bdbf .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_eaac .ExData );};func (_dadcf *PdfPage )loadFont (_efgdg string )(*_bd .Font ,error ){_cbcf ,_cfege :=_bgd .ReadFile (_efgdg );
if _cfege !=nil {return nil ,_cfege ;};_aegg ,_cfege :=_bb .ParseFont (_cbcf );if _cfege !=nil {return nil ,_cfege ;};return _aegg ,nil ;};func _ecad (_dabbe _df .PdfObject ,_fcedd bool )(*PdfFont ,error ){_deef ,_eaad ,_abadcc :=_cbge (_dabbe );if _deef !=nil {_cbcbg (_deef );
};if _abadcc !=nil {if _abadcc ==ErrType1CFontNotSupported {_gafgg ,_begge :=_fabba (_deef ,_eaad ,nil );if _begge !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_eaad ,_begge );
return nil ,_abadcc ;};return &PdfFont {_bbeb :_gafgg },_abadcc ;};return nil ,_abadcc ;};_gdcc :=&PdfFont {};switch _eaad ._adgg {case "\u0054\u0079\u0070e\u0030":if !_fcedd {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eaad );
return nil ,_fa .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_ffcd ,_fgbe :=_bceag (_deef ,_eaad );if _fgbe !=nil {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eaad ,_fgbe );
return nil ,_fgbe ;};_gdcc ._bbeb =_ffcd ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _aeea *pdfFontSimple ;_efeef ,_dcgd :=_fc .NewStdFontByName (_fc .StdFontName (_eaad ._eefad ));
if _dcgd {_ecdga :=_cfaab (_efeef );_gdcc ._bbeb =&_ecdga ;_dcde :=_df .TraceToDirectObject (_ecdga .ToPdfObject ());_ccegd ,_dgaf ,_gdfc :=_cbge (_dcde );if _gdfc !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_eaad ,_ecdga );
return nil ,_gdfc ;};for _ ,_gbfd :=range _deef .Keys (){_ccegd .Set (_gbfd ,_deef .Get (_gbfd ));};_aeea ,_gdfc =_fabba (_ccegd ,_dgaf ,_ecdga ._fdbbd );if _gdfc !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_eaad ,_ecdga );
return nil ,_gdfc ;};_aeea ._aeegg =_ecdga ._aeegg ;_aeea ._eadd =_ecdga ._eadd ;if _aeea ._efadg ==nil {_aeea ._efadg =_ecdga ._efadg ;};}else {_aeea ,_abadcc =_fabba (_deef ,_eaad ,nil );if _abadcc !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_eaad ,_abadcc );
return nil ,_abadcc ;};};_abadcc =_aeea .addEncoding ();if _abadcc !=nil {return nil ,_abadcc ;};if _dcgd {_aeea .updateStandard14Font ();};if _dcgd &&_aeea ._babff ==nil &&_aeea ._fdbbd ==nil {_dda .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aeea );
_dda .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_efeef );};if len (_aeea ._aeegg )==0{_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_aeea );};_gdcc ._bbeb =_aeea ;
case "\u0054\u0079\u0070e\u0033":_ddag ,_gcgfd :=_ebfea (_deef ,_eaad );if _gcgfd !=nil {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gcgfd );
return nil ,_gcgfd ;};_gdcc ._bbeb =_ddag ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_cegd ,_agag :=_fcegf (_deef ,_eaad );if _agag !=nil {_dda .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_agag );
return nil ,_agag ;};_gdcc ._bbeb =_cegd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gdfd ,_cecf :=_fdfe (_deef ,_eaad );if _cecf !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eaad ,_cecf );
return nil ,_cecf ;};_gdcc ._bbeb =_gdfd ;default:_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_eaad );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eaad );};return _gdcc ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_ffb :=NewPdfAction ();_gfdf :=&PdfActionImportData {};_gfdf .PdfAction =_ffb ;_ffb .SetContext (_gfdf );return _gfdf ;};

// ToPdfObject implements interface PdfModel.
func (_cec *PdfActionGoToE )ToPdfObject ()_df .PdfObject {_cec .PdfAction .ToPdfObject ();_ddc :=_cec ._dfc ;_fdc :=_ddc .PdfObject .(*_df .PdfObjectDictionary );_fdc .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeGoToE )));if _cec .F !=nil {_fdc .Set ("\u0046",_cec .F .ToPdfObject ());
};_fdc .SetIfNotNil ("\u0044",_cec .D );_fdc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cec .NewWindow );_fdc .SetIfNotNil ("\u0054",_cec .T );return _ddc ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_eeceae *PdfReader )Inspect ()(map[string ]int ,error ){return _eeceae ._fcaac .Inspect ()};func (_fgdea *PdfPage )flattenFieldsWithOpts (_fbafe FieldAppearanceGenerator ,_efec *FieldFlattenOpts ,_bbee map[*PdfAnnotation ]bool )error {var _fbbed []*PdfAnnotation ;
if _fbafe !=nil {if _ddbc :=_fbafe .WrapContentStream (_fgdea );_ddbc !=nil {return _ddbc ;};};_bcfgb ,_cagfa :=_fgdea .GetAnnotations ();if _cagfa !=nil {return _cagfa ;};for _ ,_adfd :=range _bcfgb {_cecd ,_adbbd :=_bbee [_adfd ];if !_adbbd &&_efec .AnnotFilterFunc !=nil {if _ ,_ceac :=_adfd .GetContext ().(*PdfAnnotationWidget );
!_ceac {_adbbd =_efec .AnnotFilterFunc (_adfd );};};if !_adbbd {_fbbed =append (_fbbed ,_adfd );continue ;};switch _adfd .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_dbeca ,_fcabe ,_cfba :=_agfb (_adfd );if _cfba !=nil {if !_cecd {_dda .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_cfba );
continue ;};if _dbeca ==nil {continue ;};_bfbda :=_fgdea .Resources .GenerateXObjectName ();_fgdea .Resources .SetXObjectFormByName (_bfbda ,_dbeca );_egfb ,_fdgb ,_cfba :=_dbfc (_dbeca );if _cfba !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_cfba );
}else {_egeb :=_ff .IdentityMatrix ();_egeb =_egeb .Translate (-_egfb .Llx ,-_egfb .Lly );if _fdgb {_bbaf :=1.0;if _egfb .Width ()> 0{_bbaf =_fe .Round (_fcabe .Width ()/_egfb .Width ());};_edfff :=1.0;if _egfb .Height ()> 0{_edfff =_fe .Round (_fcabe .Height ()/_egfb .Height ());
};_egeb =_egeb .Scale (_bbaf ,_edfff );};_fcabe .Transform (_egeb );};_dcege :=_fe .Min (_fcabe .Llx ,_fcabe .Urx );_dgebf :=_fe .Min (_fcabe .Lly ,_fcabe .Ury );var _cdaea []string ;_cdaea =append (_cdaea ,"\u0071");_cdaea =append (_cdaea ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_dcege ,_dgebf ));
_cdaea =append (_cdaea ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bfbda .String ()));_cdaea =append (_cdaea ,"\u0051");_gbfg :=_eb .Join (_cdaea ,"\u000a");_cfba =_fgdea .AppendContentStream (_gbfg );if _cfba !=nil {return _cfba ;};if _dbeca .Resources !=nil {_edagc ,_gfbf :=_df .GetDict (_dbeca .Resources .Font );
if _gfbf {for _ ,_cacab :=range _edagc .Keys (){if !_fgdea .Resources .HasFontByName (_cacab ){_fgdea .Resources .SetFontByName (_cacab ,_edagc .Get (_cacab ));};};};};};if len (_fbbed )> 0{_fgdea ._afaba =_fbbed ;}else {_fgdea ._afaba =[]*PdfAnnotation {};
};return nil ;};

// SetName sets the `Name` field of the signature.
func (_aegef *PdfSignature )SetName (name string ){_aegef .Name =_df .MakeEncodedString (name ,true )};

// SetKDict sets the KDict for the KValue.
func (_dbcb *KValue )SetKDict (kDict *KDict ){_dbcb .Clear ();_dbcb ._dccg =kDict };func _cefff ()string {_eefac :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _fage _c .Buffer ;for _fdbddg :=0;_fdbddg < 6;_fdbddg ++{_fage .WriteRune (rune (_eefac [_ec .Intn (len (_eefac ))]));};return _fage .String ();};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_aec :=NewPdfAnnotation ();_ceb :=&PdfAnnotationText {};_ceb .PdfAnnotation =_aec ;_ceb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aec .SetContext (_ceb );return _ceb ;};func _dafac (_gbfbd *_df .PdfObjectDictionary )(*PdfShadingType3 ,error ){_caaf :=PdfShadingType3 {};
_daafg :=_gbfbd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _daafg ==nil {_dda .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ffagb ,_eefda :=_daafg .(*_df .PdfObjectArray );if !_eefda {_dda .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_daafg );
return nil ,_df .ErrTypeError ;};if _ffagb .Len ()!=6{_dda .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ffagb .Len ());return nil ,ErrInvalidAttribute ;
};_caaf .Coords =_ffagb ;if _bcbea :=_gbfbd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bcbea !=nil {_bcbea =_df .TraceToDirectObject (_bcbea );_accf ,_fgfbe :=_bcbea .(*_df .PdfObjectArray );if !_fgfbe {_dda .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcbea );
return nil ,_df .ErrTypeError ;};_caaf .Domain =_accf ;};_daafg =_gbfbd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _daafg ==nil {_dda .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_caaf .Function =[]PdfFunction {};if _afedac ,_cafc :=_daafg .(*_df .PdfObjectArray );_cafc {for _ ,_gfgaff :=range _afedac .Elements (){_ebdg ,_fccgc :=_afecg (_gfgaff );if _fccgc !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fccgc );
return nil ,_fccgc ;};_caaf .Function =append (_caaf .Function ,_ebdg );};}else {_fgae ,_cacgg :=_afecg (_daafg );if _cacgg !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cacgg );
return nil ,_cacgg ;};_caaf .Function =append (_caaf .Function ,_fgae );};if _aceab :=_gbfbd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_aceab !=nil {_aceab =_df .TraceToDirectObject (_aceab );_cgfee ,_eecba :=_aceab .(*_df .PdfObjectArray );if !_eecba {_dda .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aceab );
return nil ,_df .ErrTypeError ;};if _cgfee .Len ()!=2{_dda .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cgfee .Len ());return nil ,ErrInvalidAttribute ;
};_caaf .Extend =_cgfee ;};return &_caaf ,nil ;};func _cdbcb (_geeg string )map[string ]string {_efbda :=_bede .Split (_geeg ,-1);_cacf :=map[string ]string {};for _ ,_face :=range _efbda {_dbdgf :=_dbgf .FindStringSubmatch (_face );if _dbdgf ==nil {continue ;
};_eeeca ,_edefc :=_dbdgf [1],_dbdgf [2];_cacf [_eeeca ]=_edefc ;};return _cacf ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _gfa .Permissions ;Algorithm EncryptionAlgorithm ;};

// SetImage updates XObject Image with new image data.
func (_caaaa *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_caaaa .Filter .UpdateParams (img .GetParamsDict ());_aegcd ,_ddebg :=_caaaa .Filter .EncodeBytes (img .Data );if _ddebg !=nil {return _ddebg ;};_caaaa .Stream =_aegcd ;_egfca :=img .Width ;
_caaaa .Width =&_egfca ;_gcbgc :=img .Height ;_caaaa .Height =&_gcbgc ;_cabge :=img .BitsPerComponent ;_caaaa .BitsPerComponent =&_cabge ;if cs ==nil {if img .ColorComponents ==1{_caaaa .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_caaaa .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_caaaa .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fa .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_caaaa .ColorSpace =cs ;};return nil ;
};func (_efb *PdfReader )newPdfAnnotationFromIndirectObject (_gaagd *_df .PdfIndirectObject )(*PdfAnnotation ,error ){_bcff ,_cga :=_gaagd .PdfObject .(*_df .PdfObjectDictionary );if !_cga {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_efb ._fgdef .GetModelFromPrimitive (_bcff );model !=nil {_gdgf ,_egg :=model .(*PdfAnnotation );if !_egg {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _gdgf ,nil ;};_fbaf :=&PdfAnnotation {};_fbaf ._cdd =_gaagd ;_efb ._fgdef .Register (_bcff ,_fbaf );if _afdg :=_bcff .Get ("\u0054\u0079\u0070\u0065");_afdg !=nil {_abaa ,_agff :=_afdg .(*_df .PdfObjectName );if !_agff {_dda .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_afdg );
}else {if *_abaa !="\u0041\u006e\u006eo\u0074"{_dda .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_abaa );};};};
if _cee :=_bcff .Get ("\u0052\u0065\u0063\u0074");_cee !=nil {_fbaf .Rect =_cee ;};if _daac :=_bcff .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_daac !=nil {_fbaf .Contents =_daac ;};if _aacd :=_bcff .Get ("\u0050");_aacd !=nil {_fbaf .P =_aacd ;
};if _eaea :=_bcff .Get ("\u004e\u004d");_eaea !=nil {_fbaf .NM =_eaea ;};if _bcd :=_bcff .Get ("\u004d");_bcd !=nil {_fbaf .M =_bcd ;};if _fedg :=_bcff .Get ("\u0046");_fedg !=nil {_fbaf .F =_fedg ;};if _cebd :=_bcff .Get ("\u0041\u0050");_cebd !=nil {_fbaf .AP =_cebd ;
};if _gbfb :=_bcff .Get ("\u0041\u0053");_gbfb !=nil {_fbaf .AS =_gbfb ;};if _cca :=_bcff .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_cca !=nil {_fbaf .Border =_cca ;};if _def :=_bcff .Get ("\u0043");_def !=nil {_fbaf .C =_def ;};if _ebfe :=_bcff .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_ebfe !=nil {_fbaf .StructParent =_ebfe ;};if _bgdf :=_bcff .Get ("\u004f\u0043");_bgdf !=nil {_fbaf .OC =_bgdf ;};_gaf :=_bcff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _gaf ==nil {_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_fbaf ._bcaf =nil ;return _fbaf ,nil ;};_beaa ,_acf :=_gaf .(*_df .PdfObjectName );if !_acf {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gaf );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_gaf );};switch *_beaa {case "\u0054\u0065\u0078\u0074":_abeb ,_ffd :=_efb .newPdfAnnotationTextFromDict (_bcff );
if _ffd !=nil {return nil ,_ffd ;};_abeb .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_abeb ;return _fbaf ,nil ;case "\u004c\u0069\u006e\u006b":_aacg ,_gff :=_efb .newPdfAnnotationLinkFromDict (_bcff );if _gff !=nil {return nil ,_gff ;};_aacg .PdfAnnotation =_fbaf ;
_fbaf ._bcaf =_aacg ;return _fbaf ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_fgbbb ,_gcda :=_efb .newPdfAnnotationFreeTextFromDict (_bcff );if _gcda !=nil {return nil ,_gcda ;};_fgbbb .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_fgbbb ;return _fbaf ,nil ;
case "\u004c\u0069\u006e\u0065":_afde ,_cfe :=_efb .newPdfAnnotationLineFromDict (_bcff );if _cfe !=nil {return nil ,_cfe ;};_afde .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_afde ;_dda .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_fbaf ,_fbaf );
_dda .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_afde ,_afde );_dda .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_afde .PdfAnnotationMarkup ,_afde .PdfAnnotationMarkup );
return _fbaf ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_dbe ,_cffg :=_efb .newPdfAnnotationSquareFromDict (_bcff );if _cffg !=nil {return nil ,_cffg ;};_dbe .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_dbe ;return _fbaf ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cdda ,_defc :=_efb .newPdfAnnotationCircleFromDict (_bcff );
if _defc !=nil {return nil ,_defc ;};_cdda .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_cdda ;return _fbaf ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_feb ,_cfdb :=_efb .newPdfAnnotationPolygonFromDict (_bcff );if _cfdb !=nil {return nil ,_cfdb ;};_feb .PdfAnnotation =_fbaf ;
_fbaf ._bcaf =_feb ;return _fbaf ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cggf ,_efcf :=_efb .newPdfAnnotationPolyLineFromDict (_bcff );if _efcf !=nil {return nil ,_efcf ;};_cggf .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_cggf ;return _fbaf ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ecec ,_bdd :=_efb .newPdfAnnotationHighlightFromDict (_bcff );if _bdd !=nil {return nil ,_bdd ;};_ecec .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_ecec ;return _fbaf ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_ceec ,_fca :=_efb .newPdfAnnotationUnderlineFromDict (_bcff );
if _fca !=nil {return nil ,_fca ;};_ceec .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_ceec ;return _fbaf ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bced ,_gfgg :=_efb .newPdfAnnotationSquigglyFromDict (_bcff );if _gfgg !=nil {return nil ,_gfgg ;
};_bced .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_bced ;return _fbaf ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_fdea ,_aaae :=_efb .newPdfAnnotationStrikeOut (_bcff );if _aaae !=nil {return nil ,_aaae ;};_fdea .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_fdea ;
return _fbaf ,nil ;case "\u0043\u0061\u0072e\u0074":_ecfe ,_geeb :=_efb .newPdfAnnotationCaretFromDict (_bcff );if _geeb !=nil {return nil ,_geeb ;};_ecfe .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_ecfe ;return _fbaf ,nil ;case "\u0053\u0074\u0061m\u0070":_gce ,_cfdbe :=_efb .newPdfAnnotationStampFromDict (_bcff );
if _cfdbe !=nil {return nil ,_cfdbe ;};_gce .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_gce ;return _fbaf ,nil ;case "\u0049\u006e\u006b":_daaa ,_caef :=_efb .newPdfAnnotationInkFromDict (_bcff );if _caef !=nil {return nil ,_caef ;};_daaa .PdfAnnotation =_fbaf ;
_fbaf ._bcaf =_daaa ;return _fbaf ,nil ;case "\u0050\u006f\u0070u\u0070":_dfddc ,_agfd :=_efb .newPdfAnnotationPopupFromDict (_bcff );if _agfd !=nil {return nil ,_agfd ;};_dfddc .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_dfddc ;return _fbaf ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_abge ,_fad :=_efb .newPdfAnnotationFileAttachmentFromDict (_bcff );
if _fad !=nil {return nil ,_fad ;};_abge .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_abge ;return _fbaf ,nil ;case "\u0053\u006f\u0075n\u0064":_fbg ,_fae :=_efb .newPdfAnnotationSoundFromDict (_bcff );if _fae !=nil {return nil ,_fae ;};_fbg .PdfAnnotation =_fbaf ;
_fbaf ._bcaf =_fbg ;return _fbaf ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bdec ,_cfb :=_efb .newPdfAnnotationRichMediaFromDict (_bcff );if _cfb !=nil {return nil ,_cfb ;};_bdec .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_bdec ;return _fbaf ,nil ;
case "\u004d\u006f\u0076i\u0065":_ebg ,_gbcf :=_efb .newPdfAnnotationMovieFromDict (_bcff );if _gbcf !=nil {return nil ,_gbcf ;};_ebg .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_ebg ;return _fbaf ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_faaa ,_bdgd :=_efb .newPdfAnnotationScreenFromDict (_bcff );
if _bdgd !=nil {return nil ,_bdgd ;};_faaa .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_faaa ;return _fbaf ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_bgce ,_gag :=_efb .newPdfAnnotationWidgetFromDict (_bcff );if _gag !=nil {return nil ,_gag ;};_bgce .PdfAnnotation =_fbaf ;
_fbaf ._bcaf =_bgce ;return _fbaf ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_cba ,_babg :=_efb .newPdfAnnotationPrinterMarkFromDict (_bcff );if _babg !=nil {return nil ,_babg ;};_cba .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_cba ;
return _fbaf ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_faba ,_gefe :=_efb .newPdfAnnotationTrapNetFromDict (_bcff );if _gefe !=nil {return nil ,_gefe ;};_faba .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_faba ;return _fbaf ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ecg ,_ddbg :=_efb .newPdfAnnotationWatermarkFromDict (_bcff );
if _ddbg !=nil {return nil ,_ddbg ;};_ecg .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_ecg ;return _fbaf ,nil ;case "\u0033\u0044":_efcb ,_ffda :=_efb .newPdfAnnotation3DFromDict (_bcff );if _ffda !=nil {return nil ,_ffda ;};_efcb .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_efcb ;
return _fbaf ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_fagb ,_beda :=_efb .newPdfAnnotationProjectionFromDict (_bcff );if _beda !=nil {return nil ,_beda ;};_fagb .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_fagb ;return _fbaf ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_gbce ,_bage :=_efb .newPdfAnnotationRedactFromDict (_bcff );if _bage !=nil {return nil ,_bage ;};_gbce .PdfAnnotation =_fbaf ;_fbaf ._bcaf =_gbce ;return _fbaf ,nil ;};_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_beaa );
return nil ,nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_ggfe FieldFlag )Mask ()uint32 {return uint32 (_ggfe )};

// SetPrintClip sets the value of the printClip.
func (_cgad *ViewerPreferences )SetPrintClip (printClip PageBoundary ){_cgad ._dgce =printClip };

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_afb :=&PdfAction {};_afb ._dfc =_df .MakeIndirectObject (_df .MakeDict ());return _afb ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_beaef *PdfField )FullName ()(string ,error ){var _gbcbd _c .Buffer ;_cdcb :=[]string {};if _beaef .T !=nil {_cdcb =append (_cdcb ,_beaef .T .Decoded ());};_degec :=map[*PdfField ]bool {};_degec [_beaef ]=true ;_cece :=_beaef .Parent ;for _cece !=nil {if _ ,_ffef :=_degec [_cece ];
_ffef {return _gbcbd .String (),_fa .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _cece .T ==nil {return _gbcbd .String (),_fa .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_cdcb =append (_cdcb ,_cece .T .Decoded ());_degec [_cece ]=true ;_cece =_cece .Parent ;};for _ebcc :=len (_cdcb )-1;_ebcc >=0;_ebcc --{_gbcbd .WriteString (_cdcb [_ebcc ]);if _ebcc > 0{_gbcbd .WriteString ("\u002e");};};return _gbcbd .String (),nil ;
};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_decebd *XObjectForm )SetContentStream (content []byte ,encoder _df .StreamEncoder )error {_gcege :=content ;if encoder ==nil {if _decebd .Filter !=nil {encoder =_decebd .Filter ;}else {encoder =_df .NewRawEncoder ();};};_dbcga ,_aabaa :=encoder .EncodeBytes (_gcege );
if _aabaa !=nil {return _aabaa ;};_gcege =_dbcga ;_decebd .Stream =_gcege ;_decebd .Filter =encoder ;return nil ;};var _bede =_ba .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_gcdde *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _gcdde ._fcaac .GetRevisionNumber ()==0{return nil ,_fa .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _fdbgde ,_gedbf :=_gcdde ._cdgdd [_gcdde ];_gedbf {return _fdbgde ,nil ;};_abfa ,_affba :=_gcdde ._fcaac .GetPreviousRevisionReadSeeker ();if _affba !=nil {return nil ,_affba ;};_bcced ,_affba :=_bbgdd (_abfa ,_gcdde ._bfcca ,_gcdde ._decbb ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _affba !=nil {return nil ,_affba ;};_gcdde ._agfcg [_gcdde ._fcaac .GetRevisionNumber ()-1]=_bcced ;_gcdde ._cdgdd [_gcdde ]=_bcced ;_bcced ._cdgdd =_gcdde ._cdgdd ;return _bcced ,nil ;};

// RemoveWatermarkImage removes watermark.
// If you don't know exact name of watermark PDF object, pass empty string as an argument.
func (_gdac *PdfPage )RemoveWatermarkImage (name string )error {if _gdac .Resources !=nil &&_gdac .Resources .XObject !=nil {if _bbgda ,_deba :=_df .GetDict (_gdac .Resources .XObject );_deba {for _ ,_dbaeg :=range _bbgda .Keys (){if name ==_dbaeg .String (){_gdac .removeXObj (_bbgda ,_dbaeg );
continue ;};_abaef ,_eecab :=_df .GetStream (_bbgda .Get (_dbaeg ));if !_eecab {continue ;};_agfee ,_eecab :=_df .GetDict (_abaef .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o"));if !_eecab {continue ;};_fbbb ,_eecab :=_df .GetDict (_agfee .Get ("\u0041\u0044\u0042\u0045\u005f\u0043\u006f\u006d\u0070\u006f\u0075\u006ed\u0054\u0079\u0070\u0065"));
if !_eecab {continue ;};if _fbbb .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065")!=nil &&_fbbb .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065").String ()=="\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"{_gdac .removeXObj (_bbgda ,_dbaeg );};};};};_bagecd ,_cdggb :=_gdac .GetAnnotations ();
if _cdggb ==nil {_dgfd :=make ([]*PdfAnnotation ,0);for _ ,_eafb :=range _bagecd {switch _eafb .GetContext ().(type ){case *PdfAnnotationWatermark :default:_dgfd =append (_dgfd ,_eafb );};};_gdac .SetAnnotations (_dgfd );};return nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_effdf .Lock ();defer _effdf .Unlock ();_bddgb =subject };

// SetAlpha sets the alpha layer for the image.
func (_cafd *Image )SetAlpha (alpha []byte ){_cafd ._bggcb =alpha };

// ToInteger convert to an integer format.
func (_cdg *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_bgfb :=_fe .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_bgfb *_cdg .C ()),uint32 (_bgfb *_cdg .M ()),uint32 (_bgfb *_cdg .Y ()),uint32 (_bgfb *_cdg .K ())};};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_abgag :=&PdfPageResourcesColorspaces {};_abgag .Names =[]string {};_abgag .Colorspaces =map[string ]PdfColorspace {};_abgag ._aedcg =&_df .PdfIndirectObject {};return _abgag ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ecbf *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func _fdfe (_dddg *_df .PdfObjectDictionary ,_cfbe *fontCommon )(*pdfCIDFontType2 ,error ){if _cfbe ._adgg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dda .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cfbe );
return nil ,_df .ErrRangeError ;};_daeddg :=_bafbd (_cfbe );_gfbfg ,_gcca :=_df .GetDict (_dddg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gcca {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cfbe );
return nil ,ErrRequiredAttributeMissing ;};_daeddg .CIDSystemInfo =_gfbfg ;_daeddg .DW =_dddg .Get ("\u0044\u0057");_daeddg .W =_dddg .Get ("\u0057");_daeddg .DW2 =_dddg .Get ("\u0044\u0057\u0032");_daeddg .W2 =_dddg .Get ("\u0057\u0032");_daeddg .CIDToGIDMap =_dddg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_daeddg ._dfbb =1000.0;if _fabce ,_ccebb :=_df .GetNumberAsFloat (_daeddg .DW );_ccebb ==nil {_daeddg ._dfbb =_fabce ;};_fcafe ,_ffcdbc :=_fbfgb (_daeddg .W );if _ffcdbc !=nil {return nil ,_ffcdbc ;};if _fcafe ==nil {_fcafe =map[_aff .CharCode ]float64 {};
};_daeddg ._bada =_fcafe ;return _daeddg ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_babc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject implements interface PdfModel.
func (_cedc *PdfBorderStyle )ToPdfObject ()_df .PdfObject {_ggcd :=_df .MakeDict ();if _cedc ._cfec !=nil {if _agfa ,_dbeb :=_cedc ._cfec .(*_df .PdfIndirectObject );_dbeb {_agfa .PdfObject =_ggcd ;};};_ggcd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _cedc .W !=nil {_ggcd .Set ("\u0057",_df .MakeFloat (*_cedc .W ));};if _cedc .S !=nil {_ggcd .Set ("\u0053",_df .MakeName (_cedc .S .GetPdfName ()));};if _cedc .D !=nil {_ggcd .Set ("\u0044",_df .MakeArrayFromIntegers (*_cedc .D ));};if _cedc ._cfec !=nil {return _cedc ._cfec ;
};return _ggcd ;};func NewViewerPreferencesFromPdfObject (obj _df .PdfObject )(*ViewerPreferences ,error ){_aeafg :=_df .ResolveReference (obj );_cabc ,_dbbcd :=_df .GetDict (_aeafg );if !_dbbcd {return nil ,_e .Errorf ("e\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0020\u0076i\u0065\u0077\u0065\u0072\u0020\u0070\u0072ef\u0065\u0072\u0065\u006ec\u0065\u0073\u0020\u0069\u0073\u0020\u006e\u006f\u0074 a\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_feeda :=NewViewerPreferences ();if _dffcbg :=_cabc .Get ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072");_dffcbg !=nil {if _cbaa ,_ccfb :=_df .GetBool (_dffcbg );_ccfb {_feeda ._gfbaf =(*bool )(_cbaa );};};if _efbbb :=_cabc .Get ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072");
_efbbb !=nil {if _gfaee ,_fcgbf :=_df .GetBool (_efbbb );_fcgbf {_feeda ._bbedc =(*bool )(_gfaee );};};if _ebacge :=_cabc .Get ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049");_ebacge !=nil {if _ddbce ,_cdaef :=_df .GetBool (_ebacge );
_cdaef {_feeda ._daeee =(*bool )(_ddbce );};};if _dcfce :=_cabc .Get ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw");_dcfce !=nil {if _cgefg ,_efebc :=_df .GetBool (_dcfce );_efebc {_feeda ._bcffa =(*bool )(_cgefg );};};if _fcfbg :=_cabc .Get ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077");
_fcfbg !=nil {if _fdefg ,_gbcde :=_df .GetBool (_fcfbg );_gbcde {_feeda ._gcggf =(*bool )(_fdefg );};};if _fbaa :=_cabc .Get ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065");_fbaa !=nil {if _ecdbb ,_gfcac :=_df .GetBool (_fbaa );
_gfcac {_feeda ._gbggg =(*bool )(_ecdbb );};};if _agafd :=_cabc .Get ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065");_agafd !=nil {if _fgcf ,_dbeae :=_df .GetName (_agafd );_dbeae {_feeda ._dbgff =NonFullScreenPageMode (*_fgcf );
};};if _fbag :=_cabc .Get ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn");_fbag !=nil {if _aggg ,_gdfec :=_df .GetName (_fbag );_gdfec {_feeda ._eace =Direction (*_aggg );};};if _bfccdc :=_cabc .Get ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061");
_bfccdc !=nil {if _agbbcd ,_bdggc :=_df .GetName (_bfccdc );_bdggc {_feeda ._bcgdce =PageBoundary (*_agbbcd );};};if _egbfae :=_cabc .Get ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070");_egbfae !=nil {if _fefbe ,_cccca :=_df .GetName (_egbfae );_cccca {_feeda ._aeaeb =PageBoundary (*_fefbe );
};};if _bfdec :=_cabc .Get ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a");_bfdec !=nil {if _dcaag ,_ebdfc :=_df .GetName (_bfdec );_ebdfc {_feeda ._bggda =PageBoundary (*_dcaag );};};if _cdcbg :=_cabc .Get ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p");
_cdcbg !=nil {if _fcfeb ,_fafg :=_df .GetName (_cdcbg );_fafg {_feeda ._dgce =PageBoundary (*_fcfeb );};};if _cfcfg :=_cabc .Get ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067");_cfcfg !=nil {if _dceb ,_cagaf :=_df .GetName (_cfcfg );
_cagaf {_feeda ._dgfb =PrintScaling (*_dceb );};};if _adebe :=_cabc .Get ("\u0044\u0075\u0070\u006c\u0065\u0078");_adebe !=nil {if _bdfge ,_bafdf :=_df .GetName (_adebe );_bafdf {_feeda ._debg =Duplex (*_bdfge );};};if _gegcg :=_cabc .Get ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065");
_gegcg !=nil {if _cebaf ,_gdbc :=_df .GetBool (_gegcg );_gdbc {_feeda ._ecea =(*bool )(_cebaf );};};if _dadf :=_cabc .Get ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065");_dadf !=nil {if _cffcf ,_cgacb :=_df .GetArray (_dadf );
_cgacb {_feeda ._fecbe =make ([]int ,_cffcf .Len ());for _dfgfd :=range _feeda ._fecbe {if _dcdfd :=_cffcf .Get (_dfgfd );_dcdfd !=nil {if _aecfa ,_geecg :=_df .GetInt (_dcdfd );_geecg {_feeda ._fecbe [_dfgfd ]=int (*_aecfa );};};};};};if _edcda :=_cabc .Get ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s");
_edcda !=nil {if _dbdgg ,_ddaacc :=_df .GetInt (_edcda );_ddaacc {_feeda ._gccfe =int (*_dbdgg );};};return _feeda ,nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_df .PdfObjectInteger ;BitsPerComponent *_df .PdfObjectInteger ;BitsPerFlag *_df .PdfObjectInteger ;Decode *_df .PdfObjectArray ;Function []PdfFunction ;};func (_cfedc *PdfReader )newPdfAcroFormFromDict (_gaeg *_df .PdfIndirectObject ,_aebga *_df .PdfObjectDictionary )(*PdfAcroForm ,error ){_abbc :=NewPdfAcroForm ();
if _gaeg !=nil {_abbc ._ffeae =_gaeg ;_gaeg .PdfObject =_df .MakeDict ();};if _gdcgc :=_aebga .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_gdcgc !=nil &&!_df .IsNullObject (_gdcgc ){_eeab ,_faffe :=_df .GetArray (_gdcgc );if !_faffe {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gdcgc );
};var _ebab []*PdfField ;for _ ,_deede :=range _eeab .Elements (){_cbgb ,_gggea :=_df .GetIndirect (_deede );if !_gggea {if _ ,_gfaea :=_deede .(*_df .PdfObjectNull );_gfaea {_dda .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_dda .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_deede );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_aeddf ,_caeb :=_cfedc .newPdfFieldFromIndirectObject (_cbgb ,nil );
if _caeb !=nil {return nil ,_caeb ;};_dda .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_aeddf );_ebab =append (_ebab ,_aeddf );};_abbc .Fields =&_ebab ;};if _cgfb :=_aebga .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_cgfb !=nil {_bggab ,_gced :=_df .GetBool (_cgfb );if _gced {_abbc .NeedAppearances =_bggab ;}else {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cgfb );
};};if _fggfb :=_aebga .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_fggfb !=nil {_fbef ,_efdcd :=_df .GetInt (_fggfb );if _efdcd {_abbc .SigFlags =_fbef ;}else {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fggfb );
};};if _aafbf :=_aebga .Get ("\u0043\u004f");_aafbf !=nil {_gdgc ,_afdgf :=_df .GetArray (_aafbf );if _afdgf {_abbc .CO =_gdgc ;}else {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_aafbf );
};};if _caae :=_aebga .Get ("\u0044\u0052");_caae !=nil {if _egec ,_bdgcc :=_df .GetDict (_caae );_bdgcc {_gbbgc ,_acgc :=NewPdfPageResourcesFromDict (_egec );if _acgc !=nil {_dda .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_acgc );
return nil ,_acgc ;};_abbc .DR =_gbbgc ;}else {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_caae );};};if _babee :=_aebga .Get ("\u0044\u0041");
_babee !=nil {_daffb ,_acef :=_df .GetString (_babee );if _acef {_abbc .DA =_daffb ;}else {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_babee );
};};if _agda :=_aebga .Get ("\u0051");_agda !=nil {_agfg ,_bgee :=_df .GetInt (_agda );if _bgee {_abbc .Q =_agfg ;}else {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_agda );
};};if _dacg :=_aebga .Get ("\u0058\u0046\u0041");_dacg !=nil {_abbc .XFA =_dacg ;};if _egace :=_aebga .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_egace !=nil {_abbc .ADBEEchoSign =_egace ;};_abbc .ToPdfObject ();
return _abbc ,nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _df .PdfObject ;MK _df .PdfObject ;A _df .PdfObject ;AA _df .PdfObject ;BS _df .PdfObject ;Parent _df .PdfObject ;_cff *PdfField ;_bed bool ;};

// Val returns the value of the color.
func (_fcedba *PdfColorCalGray )Val ()float64 {return float64 (*_fcedba )};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_eggbe :=&PdfColorPattern {};return _eggbe };func _edddff (_feead _df .PdfObject )(*PdfPageResourcesColorspaces ,error ){_bcce :=&PdfPageResourcesColorspaces {};if _fdbbcg ,_gbabg :=_feead .(*_df .PdfIndirectObject );
_gbabg {_bcce ._aedcg =_fdbbcg ;_feead =_fdbbcg .PdfObject ;};_ggcaa ,_dgeee :=_df .GetDict (_feead );if !_dgeee {return nil ,_fa .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_bcce .Names =[]string {};_bcce .Colorspaces =map[string ]PdfColorspace {};for _ ,_gacd :=range _ggcaa .Keys (){_cbdgdb :=_ggcaa .Get (_gacd );_bcce .Names =append (_bcce .Names ,string (_gacd ));_fefca ,_fabec :=NewPdfColorspaceFromPdfObject (_cbdgdb );
if _fabec !=nil {return nil ,_fabec ;};_bcce .Colorspaces [string (_gacd )]=_fefca ;};return _bcce ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_ebfff *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _ebfff .MediaBox !=nil {return _ebfff .MediaBox ,nil ;};_bgdfcb :=_ebfff .Parent ;for _bgdfcb !=nil {_bdbdc ,_ggfdb :=_df .GetDict (_bgdfcb );if !_ggfdb {return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fagef :=_bdbdc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fagef !=nil {_acfd ,_fdbab :=_df .GetArray (_fagef );if !_fdbab {return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_fcfdf ,_ffada :=NewPdfRectangle (*_acfd );if _ffada !=nil {return nil ,_ffada ;};return _fcfdf ,nil ;};_bgdfcb =_bdbdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fa .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _df .PdfObject ;};func (_bbbed *XObjectImage )getParamsDict ()*_df .PdfObjectDictionary {_dgfdd :=_df .MakeDict ();_dgfdd .Set ("\u0057\u0069\u0064t\u0068",_df .MakeInteger (*_bbbed .Width ));_dgfdd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_df .MakeInteger (*_bbbed .Height ));
_dgfdd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_df .MakeInteger (int64 (_bbbed .ColorSpace .GetNumComponents ())));_dgfdd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_df .MakeInteger (*_bbbed .BitsPerComponent ));
return _dgfdd ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fgga *PdfAcroForm ,_ffgdb *PdfField ,_deeb *PdfAnnotationWidget )(*_df .PdfObjectDictionary ,error );};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_dgbfd *PdfPageResources )SetXObjectImageByName (keyName _df .PdfObjectName ,ximg *XObjectImage )error {_cfcfe :=ximg .ToPdfObject ().(*_df .PdfObjectStream );_gffb :=_dgbfd .SetXObjectByName (keyName ,_cfcfe );return _gffb ;};func (_gde *PdfReader )newPdfActionSetOCGStateFromDict (_ggb *_df .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_ggb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_ggb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};func _bceag (_edefe *_df .PdfObjectDictionary ,_fbdg *fontCommon )(*pdfFontType0 ,error ){_acea ,_ebdd :=_df .GetArray (_edefe .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_ebdd {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fbdg );
return nil ,_df .ErrRangeError ;};if _acea .Len ()!=1{_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_acea .Len ());return nil ,_df .ErrRangeError ;
};_eebef ,_bcfae :=_ecad (_acea .Get (0),false );if _bcfae !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bcfae ,_fbdg );
return nil ,_bcfae ;};_cggg :=_edefe .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_deceb :="";_gbbf :=_caaa (_fbdg );_gbbf .DescendantFont =_eebef ;switch _edgce :=_cggg .(type ){case *_df .PdfObjectName :_deceb ,_ebdd =_df .GetNameVal (_cggg );
if _ebdd {if _deceb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_deceb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_gbbf ._agae =_aff .NewIdentityTextEncoder (_deceb );}else if _ce .IsPredefinedCMap (_deceb ){_gbbf ._ggbdb ,_bcfae =_ce .LoadPredefinedCMap (_deceb );
if _bcfae !=nil {_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_deceb ,_bcfae );
};}else {_dda .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_deceb );};};case *_df .PdfObjectStream :if _gbbf ._ccef ==nil {_bdcg ,_deebe :=_ce .NewCIDSystemInfo (_edgce .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _deebe !=nil {_dda .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_deebe );};_cgcfa :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_bdcg .Registry ,_bdcg .Ordering );
if _ce .IsPredefinedCMap (_cgcfa ){_gbbf ._ggbdb ,_deebe =_ce .LoadPredefinedCMap (_cgcfa );if _deebe !=nil {_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cgcfa ,_deebe );
};}else {_cgcfa =_edgce .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_bgcc ,_fda :=_df .DecodeStream (_edgce );if _fda !=nil {_dda .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_fda );
return _gbbf ,_fda ;};if _ffcbgf :=_cgcfa =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_cgcfa =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_ffcbgf {_gbbf ._ggbdb ,_fda =_ce .LoadCmapFromData (_bgcc ,_ffcbgf );
if _fda !=nil {_dda .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_fda ,string (_bgcc ));
return _gbbf ,_fda ;};_gbdcc :=make (map[_ce .CharCode ]rune ,256);for _bdag :=0x00;_bdag <=0xFF;_bdag ++{_gbdcc [_ce .CharCode (_bdag )]=rune (_bdag );};_gbbf ._babga =_ce .NewToUnicodeCMap (_gbdcc );};};};};if _dacea :=_eebef .baseFields ()._babga ;_dacea !=nil {if _fbbc :=_dacea .Name ();
_fbbc =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_fbbc =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_fbbc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_fbbc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_gbbf ._agae =_aff .NewCMapEncoder (_deceb ,_gbbf ._ggbdb ,_dacea );
};};return _gbbf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cagc *PdfAnnotationStamp )ToPdfObject ()_df .PdfObject {_cagc .PdfAnnotation .ToPdfObject ();_cecb :=_cagc ._cdd ;_gad :=_cecb .PdfObject .(*_df .PdfObjectDictionary );_cagc .PdfAnnotationMarkup .appendToPdfDictionary (_gad );_gad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u0074\u0061m\u0070"));
_gad .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cagc .Name );return _cecb ;};

// ParserMetadata gets the parser  metadata.
func (_abadc *CompliancePdfReader )ParserMetadata ()_df .ParserMetadata {if _abadc ._beagg ==(_df .ParserMetadata {}){_abadc ._beagg ,_ =_abadc ._fcaac .ParserMetadata ();};return _abadc ._beagg ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_df .PdfObjectDictionary )(*PdfPageResources ,error ){_dcgfd :=NewPdfPageResources ();if _eecf :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_eecf !=nil {_dcgfd .ExtGState =_eecf ;};if _caadf :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_caadf !=nil &&!_df .IsNullObject (_caadf ){_dcgfd .ColorSpace =_caadf ;};if _fdfgeb :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_fdfgeb !=nil {_dcgfd .Pattern =_fdfgeb ;};if _abee :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_abee !=nil {_dcgfd .Shading =_abee ;
};if _dacadf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_dacadf !=nil {_dcgfd .XObject =_dacadf ;};if _fgdc :=_df .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fgdc !=nil {_dcgfd .Font =_fgdc ;};if _fbegc :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_fbegc !=nil {_dcgfd .ProcSet =_fbegc ;};if _ebbea :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ebbea !=nil {_dcgfd .Properties =_ebbea ;};return _dcgfd ,nil ;};

// A returns the value of the A component of the color.
func (_gcbf *PdfColorCalRGB )A ()float64 {return _gcbf [0]};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_gbdfa *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject implements interface PdfModel.
func (_aggf *PdfAnnotationMovie )ToPdfObject ()_df .PdfObject {_aggf .PdfAnnotation .ToPdfObject ();_fdf :=_aggf ._cdd ;_dgbd :=_fdf .PdfObject .(*_df .PdfObjectDictionary );_dgbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u004d\u006f\u0076i\u0065"));
_dgbd .SetIfNotNil ("\u0054",_aggf .T );_dgbd .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_aggf .Movie );_dgbd .SetIfNotNil ("\u0041",_aggf .A );return _fdf ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_ecagb *_df .PdfObjectDictionary ;};

// StdFontName represents name of a standard font.
type StdFontName =_fc .StdFontName ;

// SetOCProperties sets the optional content properties.
func (_eacee *PdfWriter )SetOCProperties (ocProperties _df .PdfObject )error {_ggdffa :=_eacee ._afacf ;if ocProperties !=nil {_dda .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_ggdffa .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _eacee .addObjects (ocProperties );};return nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_gdedf interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_dbabg *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dffgc :=vals [0];if _dffgc < 0.0||_dffgc > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dffgc );
return nil ,ErrColorOutOfRange ;};_fafe :=vals [1];if _fafe < 0.0||_fafe > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fafe );return nil ,ErrColorOutOfRange ;
};_fcede :=vals [2];if _fcede < 0.0||_fcede > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fcede );return nil ,ErrColorOutOfRange ;};_fegfc :=vals [3];
if _fegfc < 0.0||_fegfc > 1.0{_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fegfc );return nil ,ErrColorOutOfRange ;};_aced :=NewPdfColorDeviceCMYK (_dffgc ,_fafe ,_fcede ,_fegfc );
return _aced ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_eafcb *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_eafcb .Base .GetNumComponents ();_afdc :=int (vals [0])*N ;
if _afdc < 0||(_afdc +N -1)>=len (_eafcb ._beag ){_dda .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afdc );return nil ,ErrColorOutOfRange ;};_dfae :=_eafcb ._beag [_afdc :_afdc +N ];
var _bbfa []float64 ;for _ ,_gafdg :=range _dfae {_bbfa =append (_bbfa ,float64 (_gafdg )/255.0);};_daff ,_aaegc :=_eafcb .Base .ColorFromFloats (_bbfa );if _aaegc !=nil {return nil ,_aaegc ;};return _daff ,nil ;};func _gafea (_ceaac *PdfPage ){_bfgdd :=_ede .GetLicenseKey ();
if _bfgdd !=nil &&_bfgdd .IsLicensed (){return ;};_fdfdg :=_df .PdfObjectName ("\u0055\u0046\u0031");if !_ceaac .Resources .HasFontByName (_fdfdg ){_ceaac .Resources .SetFontByName (_fdfdg ,DefaultFont ().ToPdfObject ());};var _fdeg []string ;_fdeg =append (_fdeg ,"\u0071");
_fdeg =append (_fdeg ,"\u0042\u0054");_fdeg =append (_fdeg ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_fdfdg .String ()));_fdeg =append (_fdeg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_fdeg =append (_fdeg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_cggag :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_fdeg =append (_fdeg ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_cggag ));_fdeg =append (_fdeg ,"\u0045\u0054");_fdeg =append (_fdeg ,"\u0051");_gfdad :=_eb .Join (_fdeg ,"\u000a");_ceaac .AddContentStreamByString (_gfdad );_ceaac .ToPdfObject ();
};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_abafcb *PdfWriter )SetNamedDestinations (dests _df .PdfObject )error {if dests ==nil {return nil ;};_dda .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_abafcb ._afacf .Set ("\u0044\u0065\u0073t\u0073",dests );return _abafcb .addObjects (dests );};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _df .PdfObject ;LE _df .PdfObject ;BS _df .PdfObject ;IC _df .PdfObject ;BE _df .PdfObject ;IT _df .PdfObject ;Measure _df .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bebd *PdfAnnotationPolyLine )ToPdfObject ()_df .PdfObject {_bebd .PdfAnnotation .ToPdfObject ();_ebe :=_bebd ._cdd ;_affa :=_ebe .PdfObject .(*_df .PdfObjectDictionary );_bebd .PdfAnnotationMarkup .appendToPdfDictionary (_affa );_affa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_affa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bebd .Vertices );_affa .SetIfNotNil ("\u004c\u0045",_bebd .LE );_affa .SetIfNotNil ("\u0042\u0053",_bebd .BS );_affa .SetIfNotNil ("\u0049\u0043",_bebd .IC );_affa .SetIfNotNil ("\u0042\u0045",_bebd .BE );
_affa .SetIfNotNil ("\u0049\u0054",_bebd .IT );_affa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bebd .Measure );return _ebe ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_fcfdg *PdfReader )GetObjectNums ()[]int {return _fcfdg ._fcaac .GetObjectNums ()};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ffeaec *PdfPageResourcesColorspaces )Set (key _df .PdfObjectName ,val PdfColorspace ){if _ ,_egcga :=_ffeaec .Colorspaces [string (key )];!_egcga {_ffeaec .Names =append (_ffeaec .Names ,string (key ));};_ffeaec .Colorspaces [string (key )]=val ;
};func (_eag *PdfReader )newPdfAnnotationRedactFromDict (_gcdg *_df .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fdbbb :=PdfAnnotationRedact {};_fced ,_eecg :=_eag .newPdfAnnotationMarkupFromDict (_gcdg );if _eecg !=nil {return nil ,_eecg ;};_fdbbb .PdfAnnotationMarkup =_fced ;
_fdbbb .QuadPoints =_gcdg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fdbbb .IC =_gcdg .Get ("\u0049\u0043");_fdbbb .RO =_gcdg .Get ("\u0052\u004f");_fdbbb .OverlayText =_gcdg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_fdbbb .Repeat =_gcdg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fdbbb .DA =_gcdg .Get ("\u0044\u0041");_fdbbb .Q =_gcdg .Get ("\u0051");return &_fdbbb ,nil ;};func (_ddg *PdfReader )newPdfActionGoTo3DViewFromDict (_fdbd *_df .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_fdbd .Get ("\u0054\u0041"),V :_fdbd .Get ("\u0056")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_bcda *PdfAnnotationLine )ToPdfObject ()_df .PdfObject {_bcda .PdfAnnotation .ToPdfObject ();_dfag :=_bcda ._cdd ;_aaec :=_dfag .PdfObject .(*_df .PdfObjectDictionary );_bcda .PdfAnnotationMarkup .appendToPdfDictionary (_aaec );_aaec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u004c\u0069\u006e\u0065"));
_aaec .SetIfNotNil ("\u004c",_bcda .L );_aaec .SetIfNotNil ("\u0042\u0053",_bcda .BS );_aaec .SetIfNotNil ("\u004c\u0045",_bcda .LE );_aaec .SetIfNotNil ("\u0049\u0043",_bcda .IC );_aaec .SetIfNotNil ("\u004c\u004c",_bcda .LL );_aaec .SetIfNotNil ("\u004c\u004c\u0045",_bcda .LLE );
_aaec .SetIfNotNil ("\u0043\u0061\u0070",_bcda .Cap );_aaec .SetIfNotNil ("\u0049\u0054",_bcda .IT );_aaec .SetIfNotNil ("\u004c\u004c\u004f",_bcda .LLO );_aaec .SetIfNotNil ("\u0043\u0050",_bcda .CP );_aaec .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bcda .Measure );
_aaec .SetIfNotNil ("\u0043\u004f",_bcda .CO );return _dfag ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _df .PdfObject ;B _df .PdfObject ;};func _dfgbf (_gcbag *_df .PdfObjectDictionary )(*PdfShadingType1 ,error ){_fbgfc :=PdfShadingType1 {};if _ceded :=_gcbag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_ceded !=nil {_ceded =_df .TraceToDirectObject (_ceded );_edcgc ,_facabb :=_ceded .(*_df .PdfObjectArray );if !_facabb {_dda .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceded );
return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fbgfc .Domain =_edcgc ;};if _baebd :=_gcbag .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_baebd !=nil {_baebd =_df .TraceToDirectObject (_baebd );
_bdcgdg ,_dabcf :=_baebd .(*_df .PdfObjectArray );if !_dabcf {_dda .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_baebd );return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fbgfc .Matrix =_bdcgdg ;};_abdbf :=_gcbag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _abdbf ==nil {_dda .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fbgfc .Function =[]PdfFunction {};if _eccgf ,_aaegb :=_abdbf .(*_df .PdfObjectArray );_aaegb {for _ ,_ddfdg :=range _eccgf .Elements (){_feege ,_cdafg :=_afecg (_ddfdg );if _cdafg !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdafg );
return nil ,_cdafg ;};_fbgfc .Function =append (_fbgfc .Function ,_feege );};}else {_bgcae ,_eggff :=_afecg (_abdbf );if _eggff !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eggff );
return nil ,_eggff ;};_fbgfc .Function =append (_fbgfc .Function ,_bgcae );};return &_fbgfc ,nil ;};func (_ccabg *PdfAcroForm )fillImageWithAppearance (_dbgfa FieldImageProvider ,_cgccb FieldAppearanceGenerator )error {if _ccabg ==nil {return nil ;};_gfagc ,_fcedbd :=_dbgfa .FieldImageValues ();
if _fcedbd !=nil {return _fcedbd ;};for _ ,_cegff :=range _ccabg .AllFields (){_ecgef :=_cegff .PartialName ();_aadff ,_dddgd :=_gfagc [_ecgef ];if !_dddgd {if _gbff ,_bdab :=_cegff .FullName ();_bdab ==nil {_aadff ,_dddgd =_gfagc [_gbff ];};};if !_dddgd {_dda .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_ecgef );
continue ;};switch _agged :=_cegff .GetContext ().(type ){case *PdfFieldButton :if _agged .IsPush (){_agged .SetFillImage (_aadff );};};if _cgccb ==nil {continue ;};for _ ,_gdee :=range _cegff .Annotations {_cgecd ,_gbcg :=_cgccb .GenerateAppearanceDict (_ccabg ,_cegff ,_gdee );
if _gbcg !=nil {return _gbcg ;};_gdee .AP =_cgecd ;_gdee .ToPdfObject ();};};return nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_df .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_ddddf *_df .PdfIndirectObject ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ebba *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };type pdfSignDictionary struct{*_df .PdfObjectDictionary ;_bgfbc *SignatureHandler ;_gfbde *PdfSignature ;_edebg int64 ;_badda int ;_bfeef int ;_afbfg int ;_ffaf int ;
};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_ecee :=&PdfFilespec {};_ecee ._adbd =_df .MakeIndirectObject (_df .MakeDict ());_ecee .Desc =_df .MakeString (file .Description );_ecee .EF =file .ToPdfObject ();_ecee .F =_df .MakeString (file .Name );
_ecee .UF =_df .MakeEncodedString (file .Name ,true );_cded :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_cded ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_cded ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_cded ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_cded ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_ecee .AFRelationship =_df .MakeName (_cded );return _ecee ;
};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_bceef *PdfOutlineTreeNode )ToPdfObject ()_df .PdfObject {return _bceef .GetContext ().ToPdfObject ();};func (_gffae *PdfReader )loadStructure ()error {if _gffae ._fcaac .GetCrypter ()!=nil &&!_gffae ._fcaac .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_begaf :=_gffae ._fcaac .GetTrailer ();if _begaf ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ecfg ,_bgeaa :=_begaf .Get ("\u0052\u006f\u006f\u0074").(*_df .PdfObjectReference );if !_bgeaa {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_begaf );
};_gggfa ,_fgdga :=_gffae ._fcaac .LookupByReference (*_ecfg );if _fgdga !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fgdga );
return _fgdga ;};_acabb ,_bgeaa :=_gggfa .(*_df .PdfIndirectObject );if !_bgeaa {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gggfa ,*_begaf );
return _fa .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dfaeg ,_bgeaa :=(*_acabb ).PdfObject .(*_df .PdfObjectDictionary );if !_bgeaa {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_acabb .PdfObject );
return _fa .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dda .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dfaeg );_gbfef ,_bgeaa :=_dfaeg .Get ("\u0050\u0061\u0067e\u0073").(*_df .PdfObjectReference );
if !_bgeaa {return _fa .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_agdg ,_fgdga :=_gffae ._fcaac .LookupByReference (*_gbfef );
if _fgdga !=nil {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _fgdga ;};_ebgfa ,_bgeaa :=_agdg .(*_df .PdfIndirectObject );if !_bgeaa {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_dda .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ebgfa );return _fa .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_edgae ,_bgeaa :=_ebgfa .PdfObject .(*_df .PdfObjectDictionary );if !_bgeaa {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ebgfa );
return _fa .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bfcgeg ,_bgeaa :=_df .GetInt (_edgae .Get ("\u0043\u006f\u0075n\u0074"));if !_bgeaa {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _fa .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_bgeaa =_df .GetName (_edgae .Get ("\u0054\u0079\u0070\u0065"));!_bgeaa {_dda .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_edgae .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0050\u0061\u0067e\u0073"));};if _ebeb ,_deeae :=_df .GetInt (_edgae .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_deeae {_fecd :=int64 (*_ebeb );_gffae .Rotate =&_fecd ;};_gffae ._cdabb =_ecfg ;
_gffae ._aeeb =_dfaeg ;_gffae ._gcef =_edgae ;_gffae ._fcag =_ebgfa ;_gffae ._bdad =int (*_bfcgeg );_gffae ._gaded =[]*_df .PdfIndirectObject {};_defgc :=map[_df .PdfObject ]struct{}{};_fgdga =_gffae .buildPageList (_ebgfa ,nil ,_defgc );if _fgdga !=nil {return _fgdga ;
};_dda .Log .Trace ("\u002d\u002d\u002d");_dda .Log .Trace ("\u0054\u004f\u0043");_dda .Log .Trace ("\u0050\u0061\u0067e\u0073");_dda .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_gffae ._gaded ),_gffae ._gaded );_gffae ._agbcd ,_fgdga =_gffae .loadOutlines ();
if _fgdga !=nil {_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_fgdga );
return _fgdga ;};_gffae .AcroForm ,_fgdga =_gffae .loadForms ();if _fgdga !=nil {return _fgdga ;};_gffae .DSS ,_fgdga =_gffae .loadDSS ();if _fgdga !=nil {return _fgdga ;};_gffae ._bfbed ,_fgdga =_gffae .loadPerms ();if _fgdga !=nil {return _fgdga ;};return nil ;
};

// ViewClip returns the value of the viewClip.
func (_geggf *ViewerPreferences )ViewClip ()PageBoundary {return _geggf ._aeaeb };

// GetMCID returns the MCID of the KValue.
func (_ffdf *KValue )GetMCID ()*int {return _ffdf ._agabbd };func _dbfc (_fgfb *XObjectForm )(*PdfRectangle ,bool ,error ){if _bade ,_fgdeg :=_fgfb .BBox .(*_df .PdfObjectArray );_fgdeg {_dgdd ,_facae :=NewPdfRectangle (*_bade );if _facae !=nil {return nil ,false ,_facae ;
};if _bgbac ,_dadb :=_fgfb .Matrix .(*_df .PdfObjectArray );_dadb {_afaff ,_dcae :=_bgbac .ToFloat64Array ();if _dcae !=nil {return nil ,false ,_dcae ;};_cegf :=_ff .IdentityMatrix ();if len (_afaff )==6{_cegf =_ff .NewMatrix (_afaff [0],_afaff [1],_afaff [2],_afaff [3],_afaff [4],_afaff [5]);
};_dgdd .Transform (_cegf );return _dgdd ,true ,nil ;};return _dgdd ,false ,nil ;};return nil ,false ,_fa .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_beae *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _beae .Alternate ==nil {if _beae .N ==1{_dbede :=NewPdfColorspaceDeviceGray ();return _dbede .ColorFromFloats (vals );}else if _beae .N ==3{_ddbb :=NewPdfColorspaceDeviceRGB ();
return _ddbb .ColorFromFloats (vals );}else if _beae .N ==4{_dgcb :=NewPdfColorspaceDeviceCMYK ();return _dgcb .ColorFromFloats (vals );}else {return nil ,_fa .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _beae .Alternate .ColorFromFloats (vals );};func (_bbeff *PdfWriter )writeOutlines ()error {if _bbeff ._gfcfe ==nil {return nil ;};_dda .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_bbeff ._gfcfe );
_ecbeb :=_bbeff ._gfcfe .ToPdfObject ();_dda .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ecbeb ,_ecbeb ,_ecbeb );_bbeff ._afacf .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ecbeb );
_gfgba :=_bbeff .addObjects (_ecbeb );if _gfgba !=nil {return _gfgba ;};return nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_aeefb *PdfPageResources )HasColorspaceByName (keyName _df .PdfObjectName )bool {_adbcd ,_deggea :=_aeefb .GetColorspaces ();if _deggea !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_deggea );
return false ;};if _adbcd ==nil {return false ;};_ ,_bgdb :=_adbcd .Colorspaces [string (keyName )];return _bgdb ;};func (_ggf *PdfReader )newPdfAnnotationScreenFromDict (_acfc *_df .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_bgac :=PdfAnnotationScreen {};
_bgac .T =_acfc .Get ("\u0054");_bgac .MK =_acfc .Get ("\u004d\u004b");_bgac .A =_acfc .Get ("\u0041");_bgac .AA =_acfc .Get ("\u0041\u0041");return &_bgac ,nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _df .StreamEncoder )(*XObjectImage ,error ){_dabde :=NewXObjectImage ();return UpdateXObjectImageFromImage (_dabde ,img ,cs ,encoder );};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_edd :=NewPdfAnnotation ();_gaab :=&PdfAnnotationScreen {};_gaab .PdfAnnotation =_edd ;_edd .SetContext (_gaab );return _gaab ;};

// HasXObjectByName checks if has XObject resource by name.
func (_bbaac *PdfPage )HasXObjectByName (name _df .PdfObjectName )bool {_gdcaaa ,_egfbf :=_bbaac .Resources .XObject .(*_df .PdfObjectDictionary );if !_egfbf {return false ;};if _eebfb :=_gdcaaa .Get (name );_eebfb !=nil {return true ;};return false ;};


// NonFullScreenPageMode returns the value of the nonFullScreenPageMode.
func (_acaae *ViewerPreferences )NonFullScreenPageMode ()NonFullScreenPageMode {return _acaae ._dbgff };func (_ddgdf *PdfReader )flattenFieldsWithOpts (_fbfea bool ,_gbed FieldAppearanceGenerator ,_dddba *FieldFlattenOpts )error {if _dddba ==nil {_dddba =&FieldFlattenOpts {};
};var _aefd bool ;_aede :=map[*PdfAnnotation ]bool {};{var _dfad []*PdfField ;_ebbb :=_ddgdf .AcroForm ;if _ebbb !=nil {if _dddba .FilterFunc !=nil {_dfad =_ebbb .filteredFields (_dddba .FilterFunc ,true );_aefd =_ebbb .Fields !=nil &&len (*_ebbb .Fields )> 0;
}else {_dfad =_ebbb .AllFields ();};};for _ ,_ebdcf :=range _dfad {if len (_ebdcf .Annotations )< 1{_dda .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_ebdcf .PartialName ());
for _gbag ,_geea :=range _ebdcf .Kids {for _ ,_dcbe :=range _geea .Annotations {_aede [_dcbe .PdfAnnotation ]=_ebdcf .V !=nil ;if _geea .V ==nil {_geea .V =_ebdcf .V ;};if _geea .T ==nil {_geea .T =_df .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_ebdcf .PartialName (),_gbag ));
};if _gbed !=nil {_caeaf ,_cgcdb :=_gbed .GenerateAppearanceDict (_ebbb ,_geea ,_dcbe );if _cgcdb !=nil {return _cgcdb ;};_dcbe .AP =_caeaf ;};};};};for _ ,_aabf :=range _ebdcf .Annotations {_aede [_aabf .PdfAnnotation ]=_ebdcf .V !=nil ;if _gbed !=nil {_efdc ,_facc :=_gbed .GenerateAppearanceDict (_ebbb ,_ebdcf ,_aabf );
if _facc !=nil {return _facc ;};_aabf .AP =_efdc ;};};};};if _fbfea {for _ ,_bead :=range _ddgdf .PageList {_cadg ,_gcgg :=_bead .GetAnnotations ();if _gcgg !=nil {return _gcgg ;};for _ ,_bdedg :=range _cadg {_aede [_bdedg ]=true ;};};};for _ ,_gcag :=range _ddgdf .PageList {_gede :=_gcag .flattenFieldsWithOpts (_gbed ,_dddba ,_aede );
if _gede !=nil {return _gede ;};};if !_aefd {_ddgdf .AcroForm =nil ;};return nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_bffd *PdfPattern )IsTiling ()bool {return _bffd .PatternType ==1};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gddc *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PartialName returns the partial name of the field.
func (_cdgf *PdfField )PartialName ()string {_ffege :="";if _cdgf .T !=nil {_ffege =_cdgf .T .Decoded ();}else {_dda .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _ffege ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_ebbgb :=&PdfOutline {_bbagc :_df .MakeIndirectObject (_df .MakeDict ())};_ebbgb ._gdedf =_ebbgb ;return _ebbgb ;};type pdfCIDFontType2 struct{fontCommon ;_cdee *_df .PdfIndirectObject ;_geada _aff .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_df .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _df .PdfObject ;W _df .PdfObject ;DW2 _df .PdfObject ;W2 _df .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _df .PdfObject ;_bada map[_aff .CharCode ]float64 ;_dfbb float64 ;_fdcd map[rune ]int ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bcfc *PdfFont )SubsetRegistered ()error {switch _bgag :=_bcfc ._bbeb .(type ){case *pdfFontType0 :_bfegc :=_bgag .subsetRegistered ();if _bfegc !=nil {_dda .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bfegc );
return _bfegc ;};if _bgag ._edac !=nil {if _bgag ._agae !=nil {_bgag ._agae .ToPdfObject ();};_bgag .ToPdfObject ();};default:_dda .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bgag );
};return nil ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_aaacg *PdfOutputIntent )GetContainingPdfObject ()_df .PdfObject {return _aaacg ._ebcg };

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ebd :=NewPdfAction ();_gba :=&PdfActionGoToE {};_gba .PdfAction =_ebd ;_ebd .SetContext (_gba );return _gba ;};func (_dacad *Image )resampleLowBits (_fegcab []uint32 ){_fada :=_ae .BytesPerLine (int (_dacad .Width ),int (_dacad .BitsPerComponent ),_dacad .ColorComponents );
_eabad :=make ([]byte ,_dacad .ColorComponents *_fada *int (_dacad .Height ));_agbcf :=int (_dacad .BitsPerComponent )*_dacad .ColorComponents *int (_dacad .Width );_aefcc :=uint8 (8);var (_fggd ,_dfef int ;_acdba uint32 ;);for _fgbg :=0;_fgbg < int (_dacad .Height );
_fgbg ++{_dfef =_fgbg *_fada ;for _fdgab :=0;_fdgab < _agbcf ;_fdgab ++{_acdba =_fegcab [_fggd ];_aefcc -=uint8 (_dacad .BitsPerComponent );_eabad [_dfef ]|=byte (_acdba )<<_aefcc ;if _aefcc ==0{_aefcc =8;_dfef ++;};_fggd ++;};};_dacad .Data =_eabad ;};


// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_ggge *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fa .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_gaaab :=&PdfColorPattern {};_daef ,_cefe :=objects [len (objects )-1].(*_df .PdfObjectName );if !_cefe {_dda .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_gaaab .PatternName =*_daef ;if len (objects )> 1{_ecde :=objects [0:len (objects )-1];if _ggge .UnderlyingCS ==nil {_dda .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_fa .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_fead ,_egcc :=_ggge .UnderlyingCS .ColorFromPdfObjects (_ecde );if _egcc !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_egcc );
return nil ,_egcc ;};_gaaab .Color =_fead ;};return _gaaab ,nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fggab DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};type fontFile struct{_efagg string ;_bbacc string ;_eaba _aff .SimpleEncoder ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_ccag *PdfInfo )AddCustomInfo (name string ,value string )error {if _ccag ._fcac ==nil {_ccag ._fcac =_df .MakeDict ();};if _ ,_egcd :=_cceggd [name ];_egcd {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_ccag ._fcac .SetIfNotNil (*_df .MakeName (name ),_df .MakeString (value ));return nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// ToPdfObject converts the K dictionary to a PDF object.
func (_dgeeec *KDict )ToPdfObject ()_df .PdfObject {_ebfb :=_df .MakeDict ();if _dgeeec .ID !=nil {_ebfb .Set ("\u0049\u0044",_dgeeec .ID );};if _dgeeec .K !=nil {_ebfb .Set ("\u004b",_dgeeec .K );}else if len (_dgeeec ._cgaed )> 0{if len (_dgeeec ._cgaed )==1{_dgeeec .K =_dgeeec ._cgaed [0].ToPdfObject ();
}else {_dedbe :=_df .MakeArray ();for _ ,_fgaeg :=range _dgeeec ._cgaed {_dedbe .Append (_fgaeg .ToPdfObject ());};_dgeeec .K =_dedbe ;};_ebfb .Set ("\u004b",_dgeeec .K );};if _dgeeec .S !=nil {_ebfb .Set ("\u0053",_dgeeec .S );};if _dgeeec .P !=nil {_ebfb .Set ("\u0050",_dgeeec .P );
};if _dgeeec .Pg !=nil {_ebfb .Set ("\u0050\u0067",_dgeeec .Pg );};if _dgeeec .C !=nil {_ebfb .Set ("\u0043",_dgeeec .C );};if _dgeeec .R !=nil {_ebfb .Set ("\u0052",_dgeeec .R );};if _dgeeec .T !=nil {_ebfb .Set ("\u0054",_dgeeec .T );};if _dgeeec .Lang !=nil {_ebfb .Set ("\u004c\u0061\u006e\u0067",_dgeeec .Lang );
};if _dgeeec .Alt !=nil {_ebfb .Set ("\u0041\u006c\u0074",_dgeeec .Alt );};if _dgeeec .E !=nil {_ebfb .Set ("\u0045",_dgeeec .E );};if _dgeeec .A !=nil {_ebfb .Set ("\u0041",_dgeeec .A );}else if _dgeeec ._acbd !=nil {_agfgg :=_df .MakeArrayFromFloats ([]float64 {_dgeeec ._acbd .Llx ,_dgeeec ._acbd .Lly ,_dgeeec ._acbd .Urx ,_dgeeec ._acbd .Ury });
_bcgg :=_df .MakeDict ();_bcgg .Set ("\u0042\u0042\u006f\u0078",_agfgg );_bcgg .Set ("\u004f",_df .MakeString ("\u004c\u0061\u0079\u006f\u0075\u0074"));_ebfb .Set ("\u0041",_df .MakeIndirectObject (_bcgg ));};if _dgeeec .ActualText !=nil {_ebfb .Set ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074",_dgeeec .ActualText );
};if _dgeeec .E !=nil {_ebfb .Set ("\u0045",_dgeeec .E );};if _dgeeec .Alt !=nil {_ebfb .Set ("\u0041\u006c\u0074",_dgeeec .Alt );};return _ebfb ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// ToPdfObject converts the structure tree root to a PDF object.
func (_fdac *StructTreeRoot )ToPdfObject ()_df .PdfObject {_eggda :=_fdac ._baga ;if _eggda ==nil {_eggda =&_df .PdfIndirectObject {};_eggda .PdfObject =_df .MakeDict ();};_ceace :=_eggda .PdfObject .(*_df .PdfObjectDictionary );var _edfbd _df .PdfObject ;
if len (_fdac .K )==1{_edfbd =_df .MakeIndirectObject (_fdac .K [0].ToPdfObject ());}else {_gagd :=_df .MakeArray ();for _ ,K :=range _fdac .K {_gagd .Append (_df .MakeIndirectObject (K .ToPdfObject ()));};_edfbd =_gagd ;};var (_ggeeda =[]_df .PdfObject {};
_gdcb =map[_df .PdfObject ][]_df .PdfObject {};_fcda =map[string ]_df .PdfObject {};);_bfccd (_edfbd ,_eggda ,_gdcb ,_fcda ,&_ggeeda );_ceace .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));
_ceace .Set ("\u004b",_edfbd );if _fdac .IDTree !=nil {_ceace .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_df .MakeIndirectObject (_fdac .IDTree .ToPdfObject ()));}else if len (_fcda )> 0{_abefaf :=_df .MakeArray ();_fcfdfd :=make ([]string ,0,len (_fcda ));
for _afdcc :=range _fcda {_fcfdfd =append (_fcfdfd ,_afdcc );};_dc .Strings (_fcfdfd );for _ ,_cfaabe :=range _fcfdfd {_abefaf .Append (_df .MakeString (_cfaabe ));_abefaf .Append (_fcda [_cfaabe ]);};_fdac .IDTree =&IDTree {Names :_abefaf ,Limits :_df .MakeArray (_df .MakeString (_fcfdfd [0]),_df .MakeString (_fcfdfd [len (_fcfdfd )-1]))};
_ceace .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_df .MakeIndirectObject (_fdac .IDTree .ToPdfObject ()));};if _fdac .ParentTree !=nil {_ceace .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_df .MakeIndirectObject (_fdac .ParentTree ));
}else if len (_gdcb )> 0||len (_ggeeda )> 0{_daddf :=_df .MakeArray ();_adegaf :=0;for _agcde ,_aabae :=range _gdcb {_gbeef :=_df .MakeArray ();for _ ,_acaeb :=range _aabae {_gbeef .Append (_acaeb );};_fface :=_df .MakeInteger (int64 (_adegaf ));_daddf .Append (_fface );
_daddf .Append (_df .MakeIndirectObject (_gbeef ));if _agad ,_agbaa :=_df .GetIndirect (_agcde );_agbaa {if _eggdg ,_cfagc :=_df .GetDict (_agad .PdfObject );_cfagc {_acdf :=_eggdg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
if _acdf !=nil {if _gdaab ,_agbd :=_df .GetIntVal (_acdf );_agbd {if _adegaf < _gdaab {_eggdg .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fface );};};}else {_eggdg .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fface );
};};};_adegaf ++;};_gfeca :=func (_aeefg _df .PdfObject ,_feeaa *_df .PdfObjectDictionary )bool {if _cgggad :=_feeaa .Get ("\u004f\u0062\u006a");_cgggad !=nil {if _fcbeb ,_babdc :=_df .GetDict (_cgggad );_babdc {_aebfa :=_fcbeb .Get ("\u0054\u0079\u0070\u0065");
_eedd :=_fcbeb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _aebfa !=nil &&_aebfa .String ()=="\u0041\u006e\u006eo\u0074"&&_eedd !=nil &&_eedd .String ()=="\u004c\u0069\u006e\u006b"{_cebbb :=_df .MakeInteger (int64 (_adegaf ));_fcbeb .Set ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cebbb );
_daddf .Append (_cebbb );_daddf .Append (_aeefg );_adegaf ++;return true ;};};};return false ;};for _ ,_ebagd :=range _ggeeda {if _feada ,_ddccbc :=_df .GetDict (_ebagd );_ddccbc {if _gcceg :=_feada .Get ("\u0053");_gcceg !=nil {if _adbdc ,_cbcea :=_df .GetNameVal (_gcceg );
_cbcea &&_adbdc ==StructureTypeLink {if _gfdfg :=_feada .Get ("\u004b");_gfdfg !=nil {if _dddag ,_cacef :=_df .GetArray (_gfdfg );_cacef {for _ ,_cacbd :=range _dddag .Elements (){if _acfee ,_gadede :=_df .GetDict (_cacbd );_gadede {_gfeca (_ebagd ,_acfee );
};};}else if _ddedf ,_cgccbc :=_df .GetDict (_gfdfg );_cgccbc {_gfeca (_ebagd ,_ddedf );};};};};};};_fdac .ParentTree =_df .MakeDict ();_fdac .ParentTree .Set ("\u004e\u0075\u006d\u0073",_daddf );_fdac .ParentTreeNextKey =int64 (_adegaf );_ceace .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_df .MakeIndirectObject (_fdac .ParentTree ));
};_ceace .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079",_df .MakeInteger (_fdac .ParentTreeNextKey ));if _fdac .RoleMap !=nil {_ceace .Set ("\u0052o\u006c\u0065\u004d\u0061\u0070",_fdac .RoleMap );
};if _fdac .ClassMap !=nil {_ceace .Set ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070",_fdac .ClassMap );};return _eggda ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _df .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _df .PdfObject ;Contents _df .PdfObject ;
Rotate *int64 ;Group _df .PdfObject ;Thumb _df .PdfObject ;B _df .PdfObject ;Dur _df .PdfObject ;Trans _df .PdfObject ;AA _df .PdfObject ;Metadata _df .PdfObject ;PieceInfo _df .PdfObject ;StructParents _df .PdfObject ;ID _df .PdfObject ;PZ _df .PdfObject ;
SeparationInfo _df .PdfObject ;Tabs _df .PdfObject ;TemplateInstantiated _df .PdfObject ;PresSteps _df .PdfObject ;UserUnit _df .PdfObject ;VP _df .PdfObject ;Annots _df .PdfObject ;_afaba []*PdfAnnotation ;_becggd *_df .PdfObjectDictionary ;_edccc *_df .PdfIndirectObject ;
_bbbde _df .PdfObjectDictionary ;_aebbc *PdfReader ;};

// GetRefObject returns the reference object of the KValue.
func (_ggabb *KValue )GetRefObject ()_df .PdfObject {return _ggabb ._dffeb };func (_edde *PdfPage )removeXObj (_beffg *_df .PdfObjectDictionary ,_gccd _df .PdfObjectName ){_beffg .Remove (_gccd );_bgafa :=_df .NewFlateEncoder ();_cafb :=_edde .GetContentStreamObjs ();
_aafac :=_df .MakeArray ();for _ ,_facg :=range _cafb {_bcdcf ,_ :=_cccgc (_facg );if _eb .Contains (_bcdcf ,_gccd .String ()){_cfefc :=_eb .Index (_bcdcf ,_gccd .String ());_bcab :=_eb .LastIndex (_bcdcf [:_cfefc ],"\u0071");_agba :=_eb .Index (_bcdcf [_cfefc :],"\u0051")+_cfefc +1;
if _bcab >=0&&_agba >=0{var _bfded _eb .Builder ;_bfded .WriteString (_bcdcf [:_bcab ]);_bfded .WriteString (_bcdcf [_agba :]);_adec ,_adad :=_df .MakeStream ([]byte (_bfded .String ()),_bgafa );if _adad ==nil {_aafac .Append (_adec );continue ;};};};_aafac .Append (_facg );
};_edde .Contents =_aafac ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _df .PdfObject ;ColorSpace _df .PdfObject ;Pattern _df .PdfObject ;Shading _df .PdfObject ;XObject _df .PdfObject ;Font _df .PdfObject ;ProcSet _df .PdfObject ;Properties _df .PdfObject ;_bcgbd *_df .PdfObjectDictionary ;
_fbeee *PdfPageResourcesColorspaces ;};func (_gbbg *PdfFilespec )getDict ()*_df .PdfObjectDictionary {if _bbace ,_dfbe :=_gbbg ._adbd .(*_df .PdfIndirectObject );_dfbe {_cfeba ,_eged :=_bbace .PdfObject .(*_df .PdfObjectDictionary );if !_eged {return nil ;
};return _cfeba ;}else if _bcgdc ,_gdde :=_gbbg ._adbd .(*_df .PdfObjectDictionary );_gdde {return _bcgdc ;}else {_dda .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_gbbg ._adbd );
return nil ;};};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_ccaf *PdfSignature ,_edfgb Hasher ,_fbggb SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_egga *PdfWriter )ApplyStandard (optimizer StandardApplier ){_egga ._ecfag =optimizer };

// GetCerts returns the signature certificate chain.
func (_eadga *PdfSignature )GetCerts ()([]*_bf .Certificate ,error ){var _bcfgf []func ()([]*_bf .Certificate ,error );switch _eaedg ,_ :=_df .GetNameVal (_eadga .SubFilter );_eaedg {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_bcfgf =append (_bcfgf ,_eadga .extractChainFromPKCS7 ,_eadga .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_bcfgf =append (_bcfgf ,_eadga .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_bcfgf =append (_bcfgf ,_eadga .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_eaedg );};for _ ,_fbefa :=range _bcfgf {_abeca ,_aefab :=_fbefa ();if _aefab !=nil {return nil ,_aefab ;
};if len (_abeca )> 0{return _abeca ,nil ;};};return nil ,ErrSignNoCertificates ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fdde *PdfSignatureReference )GetContainingPdfObject ()_df .PdfObject {return _fdde ._gaaed };

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cfcb *PdfPage )Duplicate ()*PdfPage {_cebeg :=*_cfcb ;_cebeg ._becggd =_df .MakeDict ();_cebeg ._edccc =_df .MakeIndirectObject (_cebeg ._becggd );_cebeg ._bbbde =*_cebeg ._becggd ;return &_cebeg ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_bdcgda *PdfWriter )SetOpenAction (dest _df .PdfObject )error {if dest ==nil ||_df .IsNullObject (dest ){return nil ;};_bdcgda ._afacf .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _bdcgda .addObjects (dest );
};func (_gagaaf *PdfWriter )copyObject (_gbcdc _df .PdfObject ,_adegg map[_df .PdfObject ]_df .PdfObject ,_badfd map[_df .PdfObject ]struct{},_ecaff bool )_df .PdfObject {_gagcb :=!_gagaaf ._ddga &&_badfd !=nil ;if _edaaf ,_eacac :=_adegg [_gbcdc ];_eacac {if _gagcb &&!_ecaff {delete (_badfd ,_gbcdc );
};return _edaaf ;};if _gbcdc ==nil {_cabce :=_df .MakeNull ();return _cabce ;};_cgefc :=_gbcdc ;switch _beddg :=_gbcdc .(type ){case *_df .PdfObjectArray :_gdfbg :=_df .MakeArray ();_cgefc =_gdfbg ;_adegg [_gbcdc ]=_cgefc ;for _ ,_feedd :=range _beddg .Elements (){_gdfbg .Append (_gagaaf .copyObject (_feedd ,_adegg ,_badfd ,_ecaff ));
};case *_df .PdfObjectStreams :_baecd :=&_df .PdfObjectStreams {PdfObjectReference :_beddg .PdfObjectReference };_cgefc =_baecd ;_adegg [_gbcdc ]=_cgefc ;for _ ,_bbfcf :=range _beddg .Elements (){_baecd .Append (_gagaaf .copyObject (_bbfcf ,_adegg ,_badfd ,_ecaff ));
};case *_df .PdfObjectStream :_afaffg :=&_df .PdfObjectStream {Stream :_beddg .Stream ,PdfObjectReference :_beddg .PdfObjectReference ,Lazy :_beddg .Lazy ,TempFile :_beddg .TempFile };_cgefc =_afaffg ;_adegg [_gbcdc ]=_cgefc ;_afaffg .PdfObjectDictionary =_gagaaf .copyObject (_beddg .PdfObjectDictionary ,_adegg ,_badfd ,_ecaff ).(*_df .PdfObjectDictionary );
case *_df .PdfObjectDictionary :var _decef bool ;if _gagcb &&!_ecaff {if _bdagf ,_ :=_df .GetNameVal (_beddg .Get ("\u0054\u0079\u0070\u0065"));_bdagf =="\u0050\u0061\u0067\u0065"{_ ,_dgde :=_gagaaf ._cfda [_beddg ];_ecaff =!_dgde ;_decef =_ecaff ;};};
_bgefab :=_df .MakeDict ();_cgefc =_bgefab ;_adegg [_gbcdc ]=_cgefc ;for _ ,_gfecc :=range _beddg .Keys (){_bgefab .Set (_gfecc ,_gagaaf .copyObject (_beddg .Get (_gfecc ),_adegg ,_badfd ,_ecaff ));};if _decef {_cgefc =_df .MakeNull ();_ecaff =false ;};
case *_df .PdfIndirectObject :_dgfcfc :=&_df .PdfIndirectObject {PdfObjectReference :_beddg .PdfObjectReference };_cgefc =_dgfcfc ;_adegg [_gbcdc ]=_cgefc ;_dgfcfc .PdfObject =_gagaaf .copyObject (_beddg .PdfObject ,_adegg ,_badfd ,_ecaff );case *_df .PdfObjectString :_ddeb :=*_beddg ;
_cgefc =&_ddeb ;_adegg [_gbcdc ]=_cgefc ;case *_df .PdfObjectName :_decde :=*_beddg ;_cgefc =&_decde ;_adegg [_gbcdc ]=_cgefc ;case *_df .PdfObjectNull :_cgefc =_df .MakeNull ();_adegg [_gbcdc ]=_cgefc ;case *_df .PdfObjectInteger :_gaaaa :=*_beddg ;_cgefc =&_gaaaa ;
_adegg [_gbcdc ]=_cgefc ;case *_df .PdfObjectReference :_cbgdf :=*_beddg ;_cgefc =&_cbgdf ;_adegg [_gbcdc ]=_cgefc ;case *_df .PdfObjectFloat :_efdbc :=*_beddg ;_cgefc =&_efdbc ;_adegg [_gbcdc ]=_cgefc ;case *_df .PdfObjectBool :_bdbaa :=*_beddg ;_cgefc =&_bdbaa ;
_adegg [_gbcdc ]=_cgefc ;case *pdfSignDictionary :_gfeeb :=&pdfSignDictionary {PdfObjectDictionary :_df .MakeDict (),_bgfbc :_beddg ._bgfbc ,_gfbde :_beddg ._gfbde };_cgefc =_gfeeb ;_adegg [_gbcdc ]=_cgefc ;for _ ,_dcccg :=range _beddg .Keys (){_gfeeb .Set (_dcccg ,_gagaaf .copyObject (_beddg .Get (_dcccg ),_adegg ,_badfd ,_ecaff ));
};default:_dda .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gbcdc );
};if _gagcb &&_ecaff {_badfd [_gbcdc ]=struct{}{};};return _cgefc ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aaaeab pdfFontType3 )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){_bgcac :=_aaaeab .Encoder ();if _bgcac ==nil {_dda .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_aaaeab );
return _fc .CharMetrics {},false ;};_bffg ,_cbfe :=_bgcac .RuneToCharcode (r );if !_cbfe {if r !=' '{_dda .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_aaaeab );
};return _fc .CharMetrics {},false ;};_fecg ,_dcdg :=_aaaeab .GetCharMetrics (_bffg );return _fecg ,_dcdg ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_bfgb *PdfFieldChoice )ToPdfObject ()_df .PdfObject {_bfgb .PdfField .ToPdfObject ();_addc :=_bfgb ._eabc ;_gcfa :=_addc .PdfObject .(*_df .PdfObjectDictionary );_gcfa .Set ("\u0046\u0054",_df .MakeName ("\u0043\u0068"));if _bfgb .Opt !=nil {_gcfa .Set ("\u004f\u0070\u0074",_bfgb .Opt );
};if _bfgb .TI !=nil {_gcfa .Set ("\u0054\u0049",_bfgb .TI );};if _bfgb .I !=nil {_gcfa .Set ("\u0049",_bfgb .I );};return _addc ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_df .PdfObjectStream )(*XObjectImage ,error ){_egcbc :=&XObjectImage {};_egcbc ._gafba =stream ;_ddccc :=*(stream .PdfObjectDictionary );_gbgca ,_fcdaa :=_df .NewEncoderFromStream (stream );if _fcdaa !=nil {return nil ,_fcdaa ;
};_egcbc .Filter =_gbgca ;if _eaefe :=_df .TraceToDirectObject (_ddccc .Get ("\u0057\u0069\u0064t\u0068"));_eaefe !=nil {_babb ,_babad :=_eaefe .(*_df .PdfObjectInteger );if !_babad {return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_adbfb :=int64 (*_babb );_egcbc .Width =&_adbfb ;}else {return nil ,_fa .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cbdeg :=_df .TraceToDirectObject (_ddccc .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_cbdeg !=nil {_aabda ,_fceab :=_cbdeg .(*_df .PdfObjectInteger );if !_fceab {return nil ,_fa .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_cegdg :=int64 (*_aabda );
_egcbc .Height =&_cegdg ;}else {return nil ,_fa .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _fcffc :=_df .TraceToDirectObject (_ddccc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_fcffc !=nil {_bebcb ,_cbgeg :=NewPdfColorspaceFromPdfObject (_fcffc );if _cbgeg !=nil {return nil ,_cbgeg ;};_egcbc .ColorSpace =_bebcb ;}else {_dda .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_egcbc .ColorSpace =NewPdfColorspaceDeviceGray ();};if _geab :=_df .TraceToDirectObject (_ddccc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_geab !=nil {_cfega ,_ddgdgb :=_geab .(*_df .PdfObjectInteger );
if !_ddgdgb {return nil ,_fa .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fcbbg :=int64 (*_cfega );_egcbc .BitsPerComponent =&_fcbbg ;};_egcbc .Intent =_ddccc .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_egcbc .ImageMask =_ddccc .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_egcbc .Mask =_ddccc .Get ("\u004d\u0061\u0073\u006b");_egcbc .Decode =_ddccc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_egcbc .Interpolate =_ddccc .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_egcbc .Alternatives =_ddccc .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_egcbc .SMask =_ddccc .Get ("\u0053\u004d\u0061s\u006b");_egcbc .SMaskInData =_ddccc .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_egcbc .Matte =_ddccc .Get ("\u004d\u0061\u0074t\u0065");_egcbc .Name =_ddccc .Get ("\u004e\u0061\u006d\u0065");_egcbc .StructParent =_ddccc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_egcbc .ID =_ddccc .Get ("\u0049\u0044");
_egcbc .OPI =_ddccc .Get ("\u004f\u0050\u0049");_egcbc .Metadata =_ddccc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_egcbc .OC =_ddccc .Get ("\u004f\u0043");_egcbc .Stream =stream .Stream ;return _egcbc ,nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _df .PdfObject ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_aecge *_df .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_df .PdfObjectName ;Filter *_df .PdfObjectName ;SubFilter *_df .PdfObjectName ;Contents *_df .PdfObjectString ;Cert _df .PdfObject ;ByteRange *_df .PdfObjectArray ;Reference *_df .PdfObjectArray ;Changes *_df .PdfObjectArray ;Name *_df .PdfObjectString ;
M *_df .PdfObjectString ;Location *_df .PdfObjectString ;Reason *_df .PdfObjectString ;ContactInfo *_df .PdfObjectString ;R *_df .PdfObjectInteger ;V *_df .PdfObjectInteger ;PropBuild *_df .PdfObjectDictionary ;PropAuthTime *_df .PdfObjectInteger ;PropAuthType *_df .PdfObjectName ;
};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_ecaac *PdfPage )AddContentStreamByString (contentStr string )error {_febga ,_aafbb :=_df .MakeStream ([]byte (contentStr ),_df .NewFlateEncoder ());if _aafbb !=nil {return _aafbb ;};if _ecaac .Contents ==nil {_ecaac .Contents =_febga ;}else {_dccb :=_df .TraceToDirectObject (_ecaac .Contents );
_bebda ,_gedgfd :=_dccb .(*_df .PdfObjectArray );if !_gedgfd {_bebda =_df .MakeArray (_dccb );};_bebda .Append (_febga );_ecaac .Contents =_bebda ;};return nil ;};func _feafb (_aedea _df .PdfObject )(*fontFile ,error ){_dda .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_aedea );
_gaef :=&fontFile {};_aedea =_df .TraceToDirectObject (_aedea );_egddb ,_fedcf :=_aedea .(*_df .PdfObjectStream );if !_fedcf {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_aedea );
return nil ,_df .ErrTypeError ;};_cabgc :=_egddb .PdfObjectDictionary ;_dfcg ,_gfcg :=_df .DecodeStream (_egddb );if _gfcg !=nil {return nil ,_gfcg ;};_cecaa ,_fedcf :=_df .GetNameVal (_cabgc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fedcf {_gaef ._bbacc =_cecaa ;
if _cecaa =="\u0054\u0079\u0070\u0065\u0031\u0043"{_dda .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_gdcfc ,_ :=_df .GetIntVal (_cabgc .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_bgage ,_ :=_df .GetIntVal (_cabgc .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _gdcfc > len (_dfcg ){_gdcfc =len (_dfcg );
};if _gdcfc +_bgage > len (_dfcg ){_bgage =len (_dfcg )-_gdcfc ;};_agde :=_dfcg [:_gdcfc ];var _agbbc []byte ;if _bgage > 0{_agbbc =_dfcg [_gdcfc :_gdcfc +_bgage ];};if _gdcfc > 0&&_bgage > 0{_daae :=_gaef .loadFromSegments (_agde ,_agbbc );if _daae !=nil {return nil ,_daae ;
};};return _gaef ,nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_dbfbe *_df .PdfIndirectObject ;};

// Clear clears the KValue.
func (_ecbfg *KValue )Clear (){_ecbfg ._dccg =nil ;_ecbfg ._dffeb =nil ;_ecbfg ._agabbd =nil };

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};type pdfFontSimple struct{fontCommon ;_abgf *_df .PdfIndirectObject ;_aeegg map[_aff .CharCode ]float64 ;_babff _aff .TextEncoder ;_fdbbd _aff .TextEncoder ;_efadg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _df .PdfObject ;LastChar _df .PdfObject ;Widths _df .PdfObject ;Encoding _df .PdfObject ;_eadd *_fc .RuneCharSafeMap ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_gdb *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeab :=vals [0];if _aeab < 0.0||_aeab > 100.0{_dda .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_aeab );
return nil ,ErrColorOutOfRange ;};_caad :=vals [1];_abcg :=float64 (-100);_agffa :=float64 (100);if len (_gdb .Range )> 1{_abcg =_gdb .Range [0];_agffa =_gdb .Range [1];};if _caad < _abcg ||_caad > _agffa {_dda .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_caad ,_abcg ,_agffa );
return nil ,ErrColorOutOfRange ;};_gagaa :=vals [2];_bdgg :=float64 (-100);_fdbbc :=float64 (100);if len (_gdb .Range )> 3{_bdgg =_gdb .Range [2];_fdbbc =_gdb .Range [3];};if _gagaa < _bdgg ||_gagaa > _fdbbc {_dda .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gagaa ,_bdgg ,_fdbbc );
return nil ,ErrColorOutOfRange ;};_ecbe :=NewPdfColorLab (_aeab ,_caad ,_gagaa );return _ecbe ,nil ;};func (_ddcdb *fontFile )parseASCIIPart (_dcbca []byte )error {if len (_dcbca )< 2||string (_dcbca [:2])!="\u0025\u0021"{return _fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_babe ,_aebge ,_ebefc :=_ecfc (_dcbca );if _ebefc !=nil {return _ebefc ;};_gggc :=_cdbcb (_babe );_ddcdb ._efagg =_gggc ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _ddcdb ._efagg ==""{_dda .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _aebge !=""{_ddccbe ,_fdcf :=_ffac (_aebge );if _fdcf !=nil {return _fdcf ;};_dgcab ,_fdcf :=_aff .NewCustomSimpleTextEncoder (_ddccbe ,nil );if _fdcf !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_fdcf );
return nil ;};_ddcdb ._eaba =_dgcab ;};return nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_daeb :=NewPdfAnnotation ();_faac :=&PdfAnnotationLine {};_faac .PdfAnnotation =_daeb ;_faac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_daeb .SetContext (_faac );return _faac ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_faee *Image )GetSamples ()[]uint32 {_ddaf :=_bgb .ResampleBytes (_faee .Data ,int (_faee .BitsPerComponent ));if _faee .BitsPerComponent < 8{_ddaf =_faee .samplesTrimPadding (_ddaf );};_baabg :=int (_faee .Width )*int (_faee .Height )*_faee .ColorComponents ;
if len (_ddaf )< _baabg {_dda .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_ddaf ),_baabg );
return _ddaf ;}else if len (_ddaf )> _baabg {_dda .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_ddaf ),_baabg );
_ddaf =_ddaf [:_baabg ];};return _ddaf ;};type pdfCIDFontType0 struct{fontCommon ;_fgcbd *_df .PdfIndirectObject ;_bfcdd _aff .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_df .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _df .PdfObject ;W _df .PdfObject ;DW2 _df .PdfObject ;W2 _df .PdfObject ;_geaef map[_aff .CharCode ]float64 ;_gbbfc float64 ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_eaedd *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_cfbag :=NewPdfWriter ();_cfbag .SetFileName (_eaedd ._gfeacb );if opts ==nil {opts =&ReaderToWriterOpts {};};_aabbf ,_abcbe :=_eaedd .GetNumPages ();if _abcbe !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abcbe );
return nil ,_abcbe ;};for _bffcd :=1;_bffcd <=_aabbf ;_bffcd ++{_feega ,_fabac :=_eaedd .GetPage (_bffcd );if _fabac !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fabac );return nil ,_fabac ;};if opts .PageProcessCallback !=nil {_fabac =opts .PageProcessCallback (_bffcd ,_feega );
if _fabac !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fabac );return nil ,_fabac ;};}else if opts .PageCallback !=nil {opts .PageCallback (_bffcd ,_feega );};_fabac =_cfbag .AddPage (_feega );if _fabac !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fabac );
return nil ,_fabac ;};};_cfbag ._bbagfg =_eaedd .PdfVersion ();if !opts .SkipInfo {_cabf ,_gecbc :=_eaedd .GetPdfInfo ();if _gecbc !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gecbc );}else {_cfbag ._edaec .PdfObject =_cabf .ToPdfObject ();
};};if !opts .SkipMetadata {if _efcab :=_eaedd ._aeeb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_efcab !=nil {if _aceeab :=_cfbag .SetCatalogMetadata (_efcab );_aceeab !=nil {return nil ,_aceeab ;};};};if !opts .SkipMarkInfo {if _gfgaf ,_fgcba :=_eaedd .GetCatalogMarkInfo ();
_fgcba {if _afgec :=_cfbag .SetCatalogMarkInfo (_gfgaf );_afgec !=nil {return nil ,_afgec ;};};};if !opts .SkipAcroForm {_gefb :=_cfbag .SetForms (_eaedd .AcroForm );if _gefb !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gefb );
return nil ,_gefb ;};};if !opts .SkipViewerPreferences {if _ecegf ,_gdae :=_eaedd .GetCatalogViewerPreferences ();_gdae {if _edgag :=_cfbag .SetCatalogViewerPreferences (_ecegf );_edgag !=nil {return nil ,_edgag ;};};};if !opts .SkipLanguage {if _adfgg ,_fcaea :=_eaedd .GetCatalogLanguage ();
_fcaea {if _dgabg :=_cfbag .SetCatalogLanguage (_adfgg );_dgabg !=nil {return nil ,_dgabg ;};};};if !opts .SkipOutlines {_cfbag .AddOutlineTree (_eaedd .GetOutlineTree ());};if !opts .SkipOCProperties {_fdbdg ,_gfgc :=_eaedd .GetOCProperties ();if _gfgc !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfgc );
}else {_gfgc =_cfbag .SetOCProperties (_fdbdg );if _gfgc !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfgc );};};};if !opts .SkipPageLabels {_aadfc ,_gddgg :=_eaedd .GetPageLabels ();if _gddgg !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gddgg );
}else {_gddgg =_cfbag .SetPageLabels (_aadfc );if _gddgg !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gddgg );};};};if !opts .SkipNamedDests {_baegf ,_deadd :=_eaedd .GetNamedDestinations ();if _deadd !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deadd );
}else {_deadd =_cfbag .SetNamedDestinations (_baegf );if _deadd !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deadd );};};};if !opts .SkipNameDictionary {_eedcc ,_fefegd :=_eaedd .GetNameDictionary ();if _fefegd !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fefegd );
}else {_fefegd =_cfbag .SetNameDictionary (_eedcc );if _fefegd !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fefegd );};};};_ffgba ,_geegf :=_eaedd .GetCatalogStructTreeRoot ();if _geegf {_cbdgb :=_cfbag .SetCatalogStructTreeRoot (_ffgba );
if _cbdgb !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbdgb );};};if !opts .SkipRotation &&_eaedd .Rotate !=nil {if _adbgf :=_cfbag .SetRotation (*_eaedd .Rotate );_adbgf !=nil {_dda .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adbgf );
};};return &_cfbag ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_edgfe DefaultImageHandler )NewGrayImageFromGoImage (goimg _ab .Image )(*Image ,error ){_bdef :=goimg .Bounds ();_cdfg :=&Image {Width :int64 (_bdef .Dx ()),Height :int64 (_bdef .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _adffa :=goimg .(type ){case *_ab .Gray :if len (_adffa .Pix )!=_bdef .Dx ()*_bdef .Dy (){_faage ,_aeaga :=_ae .GrayConverter .Convert (goimg );
if _aeaga !=nil {return nil ,_aeaga ;};_cdfg .Data =_faage .Pix ();}else {_cdfg .Data =_adffa .Pix ;};case *_ab .Gray16 :_cdfg .BitsPerComponent =16;if len (_adffa .Pix )!=_bdef .Dx ()*_bdef .Dy ()*2{_edadc ,_eededd :=_ae .Gray16Converter .Convert (goimg );
if _eededd !=nil {return nil ,_eededd ;};_cdfg .Data =_edadc .Pix ();}else {_cdfg .Data =_adffa .Pix ;};case _ae .Image :_aeeeb :=_adffa .Base ();if _aeeeb .ColorComponents ==1{_cdfg .BitsPerComponent =int64 (_aeeeb .BitsPerComponent );_cdfg .Data =_aeeeb .Data ;
return _cdfg ,nil ;};_ccca ,_daegc :=_ae .GrayConverter .Convert (goimg );if _daegc !=nil {return nil ,_daegc ;};_cdfg .Data =_ccca .Pix ();default:_acfb ,_feadb :=_ae .GrayConverter .Convert (goimg );if _feadb !=nil {return nil ,_feadb ;};_cdfg .Data =_acfb .Pix ();
};return _cdfg ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_gcbg ,_beba :=_fc .NewStdFontByName (HelveticaName );if !_beba {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_bbbe :=_cfaab (_gcbg );return &PdfFont {_bbeb :&_bbbe };};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_adged *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _egede []*PdfField ;if _adged .AcroForm !=nil {_egede =_adged .AcroForm .AllFields ();};_agbab :=make (map[*PdfField ]struct{},len (_egede ));for _ ,_dfadd :=range _egede {_agbab [_dfadd ]=struct{}{};
};for _ ,_eedce :=range _adged .PageList {_bbefe ,_fbgaf :=_eedce .GetAnnotations ();if _fbgaf !=nil {return false ,_fbgaf ;};for _ ,_cdfgf :=range _bbefe {_ggcga ,_ggbda :=_cdfgf .GetContext ().(*PdfAnnotationWidget );if !_ggbda {continue ;};_bdeeg :=_ggcga .Field ();
if _bdeeg ==nil {return true ,nil ;};if _ ,_gccc :=_agbab [_bdeeg ];!_gccc {return true ,nil ;};};};return false ,nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _df .PdfObject ;BS _df .PdfObject ;LE _df .PdfObject ;IC _df .PdfObject ;LL _df .PdfObject ;LLE _df .PdfObject ;Cap _df .PdfObject ;IT _df .PdfObject ;LLO _df .PdfObject ;CP _df .PdfObject ;
Measure _df .PdfObject ;CO _df .PdfObject ;};func (_fcgag *PdfPattern )getDict ()*_df .PdfObjectDictionary {if _acfcb ,_dbbg :=_fcgag ._cbde .(*_df .PdfIndirectObject );_dbbg {_dfggbd ,_dbga :=_acfcb .PdfObject .(*_df .PdfObjectDictionary );if !_dbga {return nil ;
};return _dfggbd ;}else if _dafbb ,_accbd :=_fcgag ._cbde .(*_df .PdfObjectStream );_accbd {return _dafbb .PdfObjectDictionary ;}else {_dda .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_fcgag ._cbde );
return nil ;};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fecea *PdfShadingType4 )ToPdfObject ()_df .PdfObject {_fecea .PdfShading .ToPdfObject ();_cdga ,_cafcc :=_fecea .getShadingDict ();if _cafcc !=nil {_dda .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fecea .BitsPerCoordinate !=nil {_cdga .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fecea .BitsPerCoordinate );};if _fecea .BitsPerComponent !=nil {_cdga .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fecea .BitsPerComponent );
};if _fecea .BitsPerFlag !=nil {_cdga .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fecea .BitsPerFlag );};if _fecea .Decode !=nil {_cdga .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fecea .Decode );};if _fecea .Function !=nil {if len (_fecea .Function )==1{_cdga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fecea .Function [0].ToPdfObject ());
}else {_eabgcc :=_df .MakeArray ();for _ ,_egddf :=range _fecea .Function {_eabgcc .Append (_egddf .ToPdfObject ());};_cdga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eabgcc );};};return _fecea ._gfded ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_dgca *PdfAppender )Write (w _bc .Writer )error {if _dgca ._bebe {return _fa .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_afc :=NewPdfWriter ();_ddead ,_dgeb :=_df .GetDict (_afc ._daddb );if !_dgeb {return _fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_eefa ,_dgeb :=_ddead .Get ("\u004b\u0069\u0064\u0073").(*_df .PdfObjectArray );if !_dgeb {return _fa .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_edec ,_dgeb :=_ddead .Get ("\u0043\u006f\u0075n\u0074").(*_df .PdfObjectInteger );if !_dgeb {return _fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_bgef :=_dgca ._acee ._fcaac ;_baed :=_bgef .GetTrailer ();if _baed ==nil {return _fa .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_dead ,_dgeb :=_df .GetIndirect (_baed .Get ("\u0052\u006f\u006f\u0074"));
if !_dgeb {return _fa .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fabg ,_dgeb :=_df .GetDict (_dead );if !_dgeb {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dead ,*_baed );
return _fa .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bcec :=false ;for _ ,_adce :=range _dgca ._acee .AcroForm .signatureFields (){if _adce .Lock !=nil {_bcec =true ;break ;};};if _bcec {_afc ._dgdge =_dead ;
};for _ ,_dbg :=range _fabg .Keys (){if _afc ._afacf .Get (_dbg )==nil {_acc :=_fabg .Get (_dbg );_afc ._afacf .Set (_dbg ,_acc );};};if _dgca ._efae !=nil {if _dgca ._efae ._cbaba {if _faab :=_df .TraceToDirectObject (_dgca ._efae .ToPdfObject ());!_df .IsNullObject (_faab ){_afc ._afacf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_faab );
_dgca .updateObjectsDeep (_faab ,nil );}else {_dda .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_afc ._afacf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dgca ._efae .ToPdfObject ());_dgca .updateObjectsDeep (_dgca ._efae .ToPdfObject (),nil );};};if _dgca ._acde !=nil {_dgca .updateObjectsDeep (_dgca ._acde .ToPdfObject (),nil );
_afc ._afacf .Set ("\u0044\u0053\u0053",_dgca ._acde .GetContainingPdfObject ());};if _dgca ._eebg !=nil {_afc ._afacf .Set ("\u0050\u0065\u0072m\u0073",_dgca ._eebg .ToPdfObject ());_dgca .updateObjectsDeep (_dgca ._eebg .ToPdfObject (),nil );};if _afc ._bbagfg .Major < 2{_afc .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_afc .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _dggc ,_cfga :=_df .GetDict (_baed .Get ("\u0049\u006e\u0066\u006f"));_cfga {if _ffge ,_dfdc :=_df .GetDict (_afc ._edaec );_dfdc {for _ ,_cacc :=range _dggc .Keys (){if _ffge .Get (_cacc )==nil {_ffge .Set (_cacc ,_dggc .Get (_cacc ));
};};};};if _dgca ._bebed !=nil {_afc ._edaec =_df .MakeIndirectObject (_dgca ._bebed .ToPdfObject ());};_dgca .updateObjectsDeep (_afc ._edaec ,nil );_dgca .updateObjectsDeep (_afc ._dgdge ,nil );_bagd :=false ;if len (_dgca ._acee .PageList )!=len (_dgca ._fdbe ){_bagd =true ;
}else {for _bfcd :=range _dgca ._acee .PageList {switch {case _dgca ._fdbe [_bfcd ]==_dgca ._acee .PageList [_bfcd ]:case _dgca ._fdbe [_bfcd ]==_dgca .Reader .PageList [_bfcd ]:default:_bagd =true ;};if _bagd {break ;};};};if _bagd {_dgca .updateObjectsDeep (_afc ._daddb ,nil );
}else {_dgca ._dbedd [_afc ._daddb ]=struct{}{};};_afc ._daddb .ObjectNumber =_dgca .Reader ._fcag .ObjectNumber ;_dgca ._dcea [_afc ._daddb ]=_dgca .Reader ._fcag .ObjectNumber ;_fgcb :=[]_df .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_ebga :=range _dgca ._fdbe {_eac :=_ebga .ToPdfObject ();*_edec =*_edec +1;if _dcbc ,_ffgd :=_eac .(*_df .PdfIndirectObject );_ffgd &&_dcbc .GetParser ()==_dgca ._acee ._fcaac {_eefa .Append (&_dcbc .PdfObjectReference );continue ;};if _bebde ,_gfda :=_df .GetDict (_eac );
_gfda {_fbab ,_gfb :=_bebde .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_df .PdfIndirectObject );for _gfb {_dda .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fbab );_fefc ,_cgfa :=_fbab .PdfObject .(*_df .PdfObjectDictionary );
if !_cgfa {return _fa .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_dcgbd :=range _fgcb {_dda .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcgbd );if _agbc :=_bebde .Get (_dcgbd );
_agbc !=nil {_dda .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_ebga ._bbbde .Keys ())> 0&&!_bagd {_aged :=_ebga ._bbbde ;if _bggc :=_aged .Get (_dcgbd );_bggc !=nil {if _agbc !=_bggc {_dda .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_dcgbd ,_bggc );
_bebde .Set (_dcgbd ,_bggc );};};};continue ;};if _dbge :=_fefc .Get (_dcgbd );_dbge !=nil {_dda .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcgbd );_bebde .Set (_dcgbd ,_dbge );
};};_fbab ,_gfb =_fefc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_df .PdfIndirectObject );_dda .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fefc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};
if _bagd {_bebde .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afc ._daddb );};};_dgca .updateObjectsDeep (_eac ,nil );_eefa .Append (_eac );};if _ ,_gbcd :=_dgca ._gega .Seek (0,_bc .SeekStart );_gbcd !=nil {return _gbcd ;};_fcbe :=make (map[SignatureHandler ]_bc .Writer );
_fedcb :=_df .MakeArray ();for _ ,_bgae :=range _dgca ._efgc {if _cea ,_faace :=_df .GetIndirect (_bgae );_faace {if _eebgc ,_dbag :=_cea .PdfObject .(*pdfSignDictionary );_dbag {_dbgea :=*_eebgc ._bgfbc ;var _daafe error ;_fcbe [_dbgea ],_daafe =_dbgea .NewDigest (_eebgc ._gfbde );
if _daafe !=nil {return _daafe ;};_fedcb .Append (_df .MakeInteger (0xfffff),_df .MakeInteger (0xfffff));};};};if _fedcb .Len ()> 0{_fedcb .Append (_df .MakeInteger (0xfffff),_df .MakeInteger (0xfffff));};for _ ,_eaee :=range _dgca ._efgc {if _eceg ,_ebdf :=_df .GetIndirect (_eaee );
_ebdf {if _ffdc ,_egaf :=_eceg .PdfObject .(*pdfSignDictionary );_egaf {_ffdc .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fedcb );};};};_eceb :=len (_fcbe )> 0;var _degg _bc .Reader =_dgca ._gega ;if _eceb {_edcc :=make ([]_bc .Writer ,0,len (_fcbe ));
for _ ,_edgb :=range _fcbe {_edcc =append (_edcc ,_edgb );};_degg =_bc .TeeReader (_dgca ._gega ,_bc .MultiWriter (_edcc ...));};_fcefb ,_dgbb :=_bc .Copy (w ,_degg );if _dgbb !=nil {return _dgbb ;};if len (_dgca ._efgc )==0{return nil ;};_afc ._aaafd =_fcefb ;
_afc .ObjNumOffset =_dgca ._cfef ;_afc ._ddga =true ;_afc ._efaff =_dgca ._dacc ;_afc ._fagdce =_dgca ._cbdg ;_afc ._egdfc =_dgca ._bdeb ;_afc ._bbagfg =_dgca ._acee .PdfVersion ();_afc ._babda =_dgca ._dcea ;_afc ._geefe =_dgca ._cedf .GetCrypter ();_afc ._dfbcc =_dgca ._cedf .GetEncryptObj ();
_aded :=_dgca ._cedf .GetXrefType ();if _aded !=nil {_daed :=*_aded ==_df .XrefTypeObjectStream ;_afc ._dgaff =&_daed ;};_afc ._bfaf =map[_df .PdfObject ]struct{}{};_afc ._bbedb =[]_df .PdfObject {};for _ ,_fdfc :=range _dgca ._efgc {if _ ,_bfce :=_dgca ._dbedd [_fdfc ];
_bfce {continue ;};_afc .addObject (_fdfc );};_cfbc :=w ;if _eceb {_cfbc =_c .NewBuffer (nil );};if _dgca ._bcfa !=""&&_afc ._geefe ==nil {_afc .Encrypt ([]byte (_dgca ._bcfa ),[]byte (_dgca ._bcfa ),_dgca ._ffg );};if _fafa :=_baed .Get ("\u0049\u0044");
_fafa !=nil {if _bebeb ,_ebed :=_df .GetArray (_fafa );_ebed {_afc ._egaab =_bebeb ;};};if _bgaee :=_afc .Write (_cfbc );_bgaee !=nil {return _bgaee ;};if _eceb {_dbab :=_cfbc .(*_c .Buffer ).Bytes ();_becg :=_df .MakeArray ();var _aege []*pdfSignDictionary ;
var _efed int64 ;for _ ,_bgec :=range _afc ._bbedb {if _gabbg ,_egdb :=_df .GetIndirect (_bgec );_egdb {if _ccbe ,_gdce :=_gabbg .PdfObject .(*pdfSignDictionary );_gdce {_aege =append (_aege ,_ccbe );_eaaca :=_ccbe ._edebg +int64 (_ccbe ._badda );_becg .Append (_df .MakeInteger (_efed ),_df .MakeInteger (_eaaca -_efed ));
_efed =_ccbe ._edebg +int64 (_ccbe ._bfeef );};};};_becg .Append (_df .MakeInteger (_efed ),_df .MakeInteger (_fcefb +int64 (len (_dbab ))-_efed ));_ggecc :=[]byte (_becg .WriteString ());for _ ,_gbdeg :=range _aege {_edgg :=int (_gbdeg ._edebg -_fcefb );
for _fabab :=_gbdeg ._afbfg ;_fabab < _gbdeg ._ffaf ;_fabab ++{_dbab [_edgg +_fabab ]=' ';};_gfgb :=_dbab [_edgg +_gbdeg ._afbfg :_edgg +_gbdeg ._ffaf ];copy (_gfgb ,_ggecc );};var _fcedb int ;for _ ,_bgeb :=range _aege {_ggfg :=int (_bgeb ._edebg -_fcefb );
_gacc :=_dbab [_fcedb :_ggfg +_bgeb ._badda ];_ffgdc :=*_bgeb ._bgfbc ;_fcbe [_ffgdc ].Write (_gacc );_fcedb =_ggfg +_bgeb ._bfeef ;};for _ ,_gafd :=range _aege {_fbdf :=_dbab [_fcedb :];_fbbd :=*_gafd ._bgfbc ;_fcbe [_fbbd ].Write (_fbdf );};for _ ,_edcg :=range _aege {_aacc :=int (_edcg ._edebg -_fcefb );
_fgff :=*_edcg ._bgfbc ;_bfbd :=_fcbe [_fgff ];if _gfdc :=_fgff .Sign (_edcg ._gfbde ,_bfbd );_gfdc !=nil {return _gfdc ;};_edcg ._gfbde .ByteRange =_becg ;_affd :=[]byte (_edcg ._gfbde .Contents .WriteString ());for _fdgg :=_edcg ._afbfg ;_fdgg < _edcg ._ffaf ;
_fdgg ++{_dbab [_aacc +_fdgg ]=' ';};for _ded :=_edcg ._badda ;_ded < _edcg ._bfeef ;_ded ++{_dbab [_aacc +_ded ]=' ';};_dfgd :=_dbab [_aacc +_edcg ._afbfg :_aacc +_edcg ._ffaf ];copy (_dfgd ,_ggecc );_dfgd =_dbab [_aacc +_edcg ._badda :_aacc +_edcg ._bfeef ];
copy (_dfgd ,_affd );};_dddd :=_c .NewBuffer (_dbab );_ ,_dgbb =_bc .Copy (w ,_dddd );if _dgbb !=nil {return _dgbb ;};};_dgca ._bebe =true ;return nil ;};

// StructTreeRoot represents the structure tree root dictionary.
// Reference: PDF documentation chapter 14.7 Logical Structure, table 322.
type StructTreeRoot struct{K []*KDict ;IDTree *IDTree ;ParentTree *_df .PdfObjectDictionary ;ParentTreeNextKey int64 ;RoleMap _df .PdfObject ;ClassMap *_df .PdfObjectDictionary ;_baga *_df .PdfIndirectObject ;_abaee []_aab .UUID ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_df .PdfObjectStream ;OCSP []*_df .PdfObjectStream ;CRL []*_df .PdfObjectStream ;TU *_df .PdfObjectString ;TS *_df .PdfObjectString ;};func _gddec (_ecfb _df .PdfObject )*IDTree {_ecfb =_df .ResolveReference (_ecfb );_baged :=_df .MakeArray ();
_bdba :=_df .MakeArray ();_gcdff :=[]*IDTree {};if _daegf ,_fddg :=_df .GetDict (_ecfb );_fddg {if _ddgbd :=_daegf .Get ("\u004e\u0061\u006de\u0073");_ddgbd !=nil {_ddgbd =_df .ResolveReference (_ddgbd );if _fcde ,_cegda :=_df .GetArray (_ddgbd );_cegda {for _ ,_gbede :=range _fcde .Elements (){_baged .Append (_gbede );
};};};if _ccgec :=_daegf .Get ("\u004c\u0069\u006d\u0069\u0074\u0073");_ccgec !=nil {_ccgec =_df .ResolveReference (_ccgec );if _edbge ,_ggff :=_df .GetArray (_ccgec );_ggff {for _bbbag :=0;_bbbag < 2;_bbbag ++{_bdba .Append (_edbge .Get (_bbbag ));};};
};if _gafbb :=_daegf .Get ("\u004b\u0069\u0064\u0073");_gafbb !=nil {_gafbb =_df .ResolveReference (_gafbb );if _bgdbg ,_efbge :=_df .GetArray (_gafbb );_efbge {for _ ,_dafbbg :=range _bgdbg .Elements (){_adfeaf :=_gddec (_dafbbg );_gcdff =append (_gcdff ,_adfeaf );
};};};};_dfaede :=&IDTree {Names :_baged ,Limits :_bdba };if len (_gcdff )> 0{_dfaede .Kids =_gcdff ;};return _dfaede ;};func (_gecb *PdfReader )newPdfAnnotationLineFromDict (_gbbb *_df .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_efbe :=PdfAnnotationLine {};
_fged ,_dbdc :=_gecb .newPdfAnnotationMarkupFromDict (_gbbb );if _dbdc !=nil {return nil ,_dbdc ;};_efbe .PdfAnnotationMarkup =_fged ;_efbe .L =_gbbb .Get ("\u004c");_efbe .BS =_gbbb .Get ("\u0042\u0053");_efbe .LE =_gbbb .Get ("\u004c\u0045");_efbe .IC =_gbbb .Get ("\u0049\u0043");
_efbe .LL =_gbbb .Get ("\u004c\u004c");_efbe .LLE =_gbbb .Get ("\u004c\u004c\u0045");_efbe .Cap =_gbbb .Get ("\u0043\u0061\u0070");_efbe .IT =_gbbb .Get ("\u0049\u0054");_efbe .LLO =_gbbb .Get ("\u004c\u004c\u004f");_efbe .CP =_gbbb .Get ("\u0043\u0050");
_efbe .Measure =_gbbb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_efbe .CO =_gbbb .Get ("\u0043\u004f");return &_efbe ,nil ;};

// SetPrintPageRange sets the value of the printPageRange.
func (_fdff *ViewerPreferences )SetPrintPageRange (printPageRange []int ){_fdff ._fecbe =printPageRange ;};func (_egcf *PdfReader )loadPerms ()(*Permissions ,error ){if _fffec :=_egcf ._aeeb .Get ("\u0050\u0065\u0072m\u0073");_fffec !=nil {if _ccdbg ,_bgdg :=_df .GetDict (_fffec );
_bgdg {_acbab :=_ccdbg .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _acbab ==nil {return nil ,nil ;};if _abdb ,_ceaec :=_df .GetIndirect (_acbab );_ceaec {_bfecc ,_afcbe :=_egcf .newPdfSignatureFromIndirect (_abdb );if _afcbe !=nil {return nil ,_afcbe ;
};return NewPermissions (_bfecc ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _df .PdfObject ;IC _df .PdfObject ;BE _df .PdfObject ;RD _df .PdfObject ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _df .PdfObject ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_df .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_ccdea *_df .PdfIndirectObject ;};

// ToPdfObject converts rectangle to a PDF object.
func (_dbebc *PdfRectangle )ToPdfObject ()_df .PdfObject {return _df .MakeArray (_df .MakeFloat (_dbebc .Llx ),_df .MakeFloat (_dbebc .Lly ),_df .MakeFloat (_dbebc .Urx ),_df .MakeFloat (_dbebc .Ury ));};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ToPdfObject implements interface PdfModel.
func (_gbe *PdfAnnotationCircle )ToPdfObject ()_df .PdfObject {_gbe .PdfAnnotation .ToPdfObject ();_bfca :=_gbe ._cdd ;_ddgb :=_bfca .PdfObject .(*_df .PdfObjectDictionary );_gbe .PdfAnnotationMarkup .appendToPdfDictionary (_ddgb );_ddgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_ddgb .SetIfNotNil ("\u0042\u0053",_gbe .BS );_ddgb .SetIfNotNil ("\u0049\u0043",_gbe .IC );_ddgb .SetIfNotNil ("\u0042\u0045",_gbe .BE );_ddgb .SetIfNotNil ("\u0052\u0044",_gbe .RD );return _bfca ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_abcea *PdfShadingType3 )ToPdfObject ()_df .PdfObject {_abcea .PdfShading .ToPdfObject ();_fbbdf ,_eecfd :=_abcea .getShadingDict ();if _eecfd !=nil {_dda .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _abcea .Coords !=nil {_fbbdf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_abcea .Coords );};if _abcea .Domain !=nil {_fbbdf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abcea .Domain );};if _abcea .Function !=nil {if len (_abcea .Function )==1{_fbbdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abcea .Function [0].ToPdfObject ());
}else {_fbfb :=_df .MakeArray ();for _ ,_dabda :=range _abcea .Function {_fbfb .Append (_dabda .ToPdfObject ());};_fbbdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbfb );};};if _abcea .Extend !=nil {_fbbdf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_abcea .Extend );
};return _abcea ._gfded ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_dfddg *DSS )GenerateHashMaps ()error {_gabe ,_ffgbd :=_dfddg .generateHashMap (_dfddg .Certs );if _ffgbd !=nil {return _ffgbd ;};_cbad ,_ffgbd :=_dfddg .generateHashMap (_dfddg .OCSPs );if _ffgbd !=nil {return _ffgbd ;};_afff ,_ffgbd :=_dfddg .generateHashMap (_dfddg .CRLs );
if _ffgbd !=nil {return _ffgbd ;};_dfddg ._afbbd =_gabe ;_dfddg ._bccf =_cbad ;_dfddg ._gcaa =_afff ;return nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_ccace *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _daedd []_aff .TextEncoder ;var _cacb _aff .CMapEncoder ;if _feeg :=_ccace .baseFields ()._babga ;_feeg !=nil {_cacb =_aff .NewCMapEncoder ("",nil ,_feeg );};_bgdag :=_ccace .Encoder ();
if _bgdag !=nil {switch _abce :=_bgdag .(type ){case _aff .SimpleEncoder :_bdega :=_abce .BaseName ();if _ ,_ecac :=_degc [_bdega ];_ecac {_daedd =append (_daedd ,_bgdag );};};};if len (_daedd )==0{if _ccace .baseFields ()._babga !=nil {_daedd =append (_daedd ,_cacb );
};if _bgdag !=nil {_daedd =append (_daedd ,_bgdag );};};var _bbceg _c .Buffer ;var _cbcbb int ;for _ ,_cdgge :=range data {var _dfdg bool ;for _ ,_ceff :=range _daedd {if _agffe :=_ceff .Encode (string (_cdgge ));len (_agffe )> 0{_bbceg .Write (_agffe );
_dfdg =true ;break ;};};if !_dfdg {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cdgge );
_cbcbb ++;};};if _cbcbb !=0{_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_cbcbb ,_ccace ,_daedd );
};return _bbceg .Bytes (),_cbcbb ;};func (_ggdc *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _dfab []*PdfFieldSignature ;for _ ,_dgcc :=range _ggdc .AllFields (){switch _efgf :=_dgcc .GetContext ().(type ){case *PdfFieldSignature :_daab :=_efgf ;
_dfab =append (_dfab ,_daab );};};return _dfab ;};func (_gbfaa *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _gbfaa ._fcaac .GetCrypter ()!=nil &&!_gbfaa ._fcaac .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ggac :=_gbfaa ._aeeb ;_dcdgc :=_ggac .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dcdgc ==nil {return nil ,nil ;};_dda .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_adeb :=_df .ResolveReference (_dcdgc );
_dda .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_adeb );if _ggccb :=_df .IsNullObject (_adeb );_ggccb {_dda .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_cafdd ,_cbbe :=_adeb .(*_df .PdfIndirectObject );if !_cbbe {if _ ,_dfcd :=_df .GetDict (_adeb );!_dfcd {_dda .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_dda .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_cafdd =_df .MakeIndirectObject (_adeb );};_cdede ,_cbbe :=_cafdd .PdfObject .(*_df .PdfObjectDictionary );if !_cbbe {return nil ,_fa .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_dda .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_cdede );_feefb ,_ ,_gdcefa :=_gbfaa .buildOutlineTree (_cafdd ,nil ,nil ,nil );if _gdcefa !=nil {return nil ,_gdcefa ;};_dda .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_feefb );
return _feefb ,nil ;};func (_ggcf *PdfReader )newPdfActionRenditionFromDict (_dege *_df .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_dege .Get ("\u0052"),AN :_dege .Get ("\u0041\u004e"),OP :_dege .Get ("\u004f\u0050"),JS :_dege .Get ("\u004a\u0053")},nil ;
};

// R returns the value of the red component of the color.
func (_fbfdd *PdfColorDeviceRGB )R ()float64 {return _fbfdd [0]};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_ggab *PdfPage )error ;};

// SetMCID sets the MCID for the KValue.
func (_gfge *KValue )SetMCID (mcid int ){_gfge .Clear ();_gfge ._agabbd =&mcid };

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ggebf :map[_df .PdfObject ]struct{}{},_fgdef :_fgeg (),_fcaac :_df .NewParserFromString (txt )};};func (_ccfcb *PdfWriter )writeXRefStreams (_dfdcc int ,_aeacd int64 )error {_dfedd :=_dfdcc +1;
_ccfcb ._fgbdf [_dfedd ]=crossReference {Type :1,ObjectNumber :_dfedd ,Offset :_aeacd };_cdbae :=_c .NewBuffer (nil );_aefedg :=_df .MakeArray ();for _eaede :=0;_eaede <=_dfdcc ;{for ;_eaede <=_dfdcc ;_eaede ++{_abgfb ,_afcdb :=_ccfcb ._fgbdf [_eaede ];
if _afcdb &&(!_ccfcb ._ddga ||_ccfcb ._ddga &&(_abgfb .Type ==1&&_abgfb .Offset >=_ccfcb ._egdfc ||_abgfb .Type ==0)){break ;};};var _eceda int ;for _eceda =_eaede +1;_eceda <=_dfdcc ;_eceda ++{_aaed ,_fbfdf :=_ccfcb ._fgbdf [_eceda ];if _fbfdf &&(!_ccfcb ._ddga ||_ccfcb ._ddga &&(_aaed .Type ==1&&_aaed .Offset > _ccfcb ._egdfc )){continue ;
};break ;};_aefedg .Append (_df .MakeInteger (int64 (_eaede )),_df .MakeInteger (int64 (_eceda -_eaede )));for _dbcd :=_eaede ;_dbcd < _eceda ;_dbcd ++{_cgce :=_ccfcb ._fgbdf [_dbcd ];switch _cgce .Type {case 0:_ed .Write (_cdbae ,_ed .BigEndian ,byte (0));
_ed .Write (_cdbae ,_ed .BigEndian ,uint32 (0));_ed .Write (_cdbae ,_ed .BigEndian ,uint16 (0xFFFF));case 1:_ed .Write (_cdbae ,_ed .BigEndian ,byte (1));_ed .Write (_cdbae ,_ed .BigEndian ,uint32 (_cgce .Offset ));_ed .Write (_cdbae ,_ed .BigEndian ,uint16 (_cgce .Generation ));
case 2:_ed .Write (_cdbae ,_ed .BigEndian ,byte (2));_ed .Write (_cdbae ,_ed .BigEndian ,uint32 (_cgce .ObjectNumber ));_ed .Write (_cdbae ,_ed .BigEndian ,uint16 (_cgce .Index ));};};_eaede =_eceda +1;};_eaccdb ,_dfeeab :=_df .MakeStream (_cdbae .Bytes (),_df .NewFlateEncoder ());
if _dfeeab !=nil {return _dfeeab ;};_eaccdb .ObjectNumber =int64 (_dfedd );_eaccdb .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0058\u0052\u0065\u0066"));_eaccdb .PdfObjectDictionary .Set ("\u0057",_df .MakeArray (_df .MakeInteger (1),_df .MakeInteger (4),_df .MakeInteger (2)));
_eaccdb .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_aefedg );_eaccdb .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_df .MakeInteger (int64 (_dfedd )));_eaccdb .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_ccfcb ._edaec );_eaccdb .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_ccfcb ._dgdge );
if _ccfcb ._ddga &&_ccfcb ._fagdce > 0{_eaccdb .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_df .MakeInteger (_ccfcb ._fagdce ));};if _ccfcb ._geefe !=nil {_eaccdb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ccfcb ._dfbcc );};if _ccfcb ._egaab ==nil &&_ccfcb ._ddedfd !=""&&_ccfcb ._abbbdg !=""{_ccfcb ._egaab =_df .MakeArray (_df .MakeHexString (_ccfcb ._ddedfd ),_df .MakeHexString (_ccfcb ._abbbdg ));
};if _ccfcb ._egaab !=nil {_dda .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ccfcb ._egaab );_eaccdb .Set ("\u0049\u0044",_ccfcb ._egaab );};_ccfcb .writeObject (int (_eaccdb .ObjectNumber ),_eaccdb );return nil ;};

// SetStructParentsKey sets the StructParents key.
func (_gdgd *PdfPage )SetStructParentsKey (key int ){if key ==-1{_gdgd .StructParents =nil ;}else {_gdgd .StructParents =_df .MakeInteger (int64 (key ));};};func (_agbf *PdfWriter )writeObjectsInStreams (_bbeea map[_df .PdfObject ]bool )error {for _ ,_ffage :=range _agbf ._bbedb {if _geede :=_bbeea [_ffage ];
_geede {continue ;};_efdbd :=int64 (0);switch _cdfff :=_ffage .(type ){case *_df .PdfIndirectObject :_efdbd =_cdfff .ObjectNumber ;case *_df .PdfObjectStream :_efdbd =_cdfff .ObjectNumber ;case *_df .PdfObjectStreams :_efdbd =_cdfff .ObjectNumber ;case *_df .PdfObjectDictionary ,*_df .PdfObjectString :default:_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_ffage ,_cdfff );
return ErrTypeCheck ;};if _agbf ._geefe !=nil &&_ffage !=_agbf ._dfbcc {_gdcga :=_agbf ._geefe .Encrypt (_ffage ,_efdbd ,0);if _gdcga !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_gdcga );
return _gdcga ;};};_agbf .writeObject (int (_efdbd ),_ffage );};return nil ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;

// RelaxedMode indicates whether the parser should operate in a relaxed mode, ignoring certain insignificant errors and continuing to parse the PDF file.
// For example, it skips AcroForm loading errors and proceeds with the rest of the file if no form-related processing is required.
RelaxedMode bool ;};

// KDict represents a K dictionary object.
type KDict struct{

// The structure type, a name object identifying the nature of the
// structure element and its role within the document,
// such as a chapter, paragraph, or footnote
S _df .PdfObject ;

// The structure element that is the immediate parent of this one
// in the structure hierarchy.
P _df .PdfObject ;

// The element identifier, a byte string designating this structure element.
ID *_df .PdfObjectString ;

// A page object representing a page on which some or all of the content
// items designated by the K entry shall be rendered.
Pg _df .PdfObject ;

// The children of this structure element.
K _df .PdfObject ;

// A single attribute object or array of attribute objects associated
// with this structure element.
A _df .PdfObject ;

// An attribute class name or array of class names associated with
// this structure element.
C _df .PdfObject ;

// The current revision number of this structure element
R *_df .PdfObjectInteger ;

// The title of the structure element, a text string representing
// it in human-readable form.
T *_df .PdfObjectString ;

// A language identifier specifying the natural language for all text
// in the structure element except where overridden by
// language specifications for nested structure elements or marked content.
Lang *_df .PdfObjectString ;

// An alternate description of the structure element and its
// children in human-readable form, which is useful when extracting
// the document’s contents in support of accessibility to users with
// disabilities or for other purposes.
Alt *_df .PdfObjectString ;

// The expanded form of an abbreviation.
E *_df .PdfObjectString ;

// Text that is an exact replacement for the structure element and its children.
ActualText *_df .PdfObjectString ;_cgaed []*KValue ;_efgaf int64 ;_acbd *PdfRectangle ;};

// PrintScaling returns the value of the printScaling.
func (_bdfdd *ViewerPreferences )PrintScaling ()PrintScaling {return _bdfdd ._dgfb };

// ToInteger convert to an integer format.
func (_gae *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gfeg :=_fe .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gfeg *_gae .A ()),uint32 (_gfeg *_gae .B ()),uint32 (_gfeg *_gae .C ())};};

// ImageToRGB convert an indexed image to RGB.
func (_ccdcc *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ccdcc .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_agec :=_ae .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._bggcb ,img ._gdfe );_geedg :=_bgb .NewReader (img .getBase ());_abgac :=_bgb .NewWriter (_agec );var (_ggbc uint32 ;_fgab int ;_cgec error ;);for {_ggbc ,_cgec =_geedg .ReadSample ();
if _cgec ==_bc .EOF {break ;}else if _cgec !=nil {return img ,_cgec ;};_fgab =int (_ggbc );_dda .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_fgab ,N ,len (_ccdcc ._beag ));
if (_fgab +1)*N > len (_ccdcc ._beag ){_fgab =len (_ccdcc ._beag )/N -1;_dda .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_fgab );if _fgab < 0{_dda .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _acgf :=_fgab *N ;_acgf < (_fgab +1)*N ;_acgf ++{if _cgec =_abgac .WriteSample (uint32 (_ccdcc ._beag [_acgf ]));_cgec !=nil {return img ,_cgec ;};};};return _ccdcc .Base .ImageToRGB (_fdaa (&_agec ));};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_bca :=NewPdfAction ();_cfc :=&PdfActionGoToR {};_cfc .PdfAction =_bca ;_bca .SetContext (_cfc );return _cfc ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_babd :=NewPdfAnnotation ();_gdg :=&PdfAnnotationTrapNet {};_gdg .PdfAnnotation =_babd ;_babd .SetContext (_gdg );return _gdg ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_acaee *PdfPageResources )GetColorspaceByName (keyName _df .PdfObjectName )(PdfColorspace ,bool ){_gddggc ,_daagd :=_acaee .GetColorspaces ();if _daagd !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_daagd );
return nil ,false ;};if _gddggc ==nil {return nil ,false ;};_febca ,_cfea :=_gddggc .Colorspaces [string (keyName )];if !_cfea {return nil ,false ;};return _febca ,true ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_ecdee *PdfPage )GetContentStreamObjs ()[]_df .PdfObject {if _ecdee .Contents ==nil {return nil ;};_cgbea :=_df .TraceToDirectObject (_ecdee .Contents );if _bbcbg ,_eedf :=_cgbea .(*_df .PdfObjectArray );_eedf {return _bbcbg .Elements ();};return []_df .PdfObject {_cgbea };
};func (_gdcd *pdfFontType3 )baseFields ()*fontCommon {return &_gdcd .fontCommon };var (_effdf _gc .Mutex ;_eeaad ="";_egbfaee _dd .Time ;_dbcbd ="";_gbedda ="";_cgfga _dd .Time ;_bdcbc ="";_bddgb ="";_ebfaf ="";);

// SetContext set the sub annotation (context).
func (_fefcc *PdfShading )SetContext (ctx PdfModel ){_fefcc ._adfab =ctx };func (_bdeea *PdfWriter )setDocInfo (_cdgac _df .PdfObject ){if _bdeea .hasObject (_bdeea ._edaec ){delete (_bdeea ._bfaf ,_bdeea ._edaec );delete (_bdeea ._affdc ,_bdeea ._edaec );
for _gabcf ,_fcaeb :=range _bdeea ._bbedb {if _fcaeb ==_bdeea ._edaec {copy (_bdeea ._bbedb [_gabcf :],_bdeea ._bbedb [_gabcf +1:]);_bdeea ._bbedb [len (_bdeea ._bbedb )-1]=nil ;_bdeea ._bbedb =_bdeea ._bbedb [:len (_bdeea ._bbedb )-1];break ;};};};_becab :=_df .PdfIndirectObject {};
_becab .PdfObject =_cdgac ;_bdeea ._edaec =&_becab ;_bdeea .addObject (&_becab );};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bbfg :=NewPdfAnnotation ();_dfdd :=&PdfAnnotationSquare {};_dfdd .PdfAnnotation =_bbfg ;_dfdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbfg .SetContext (_dfdd );return _dfdd ;};

// ToPdfObject implements interface PdfModel.
func (_dffe *PdfFilespec )ToPdfObject ()_df .PdfObject {_acfab :=_dffe .getDict ();_acfab .Clear ();_acfab .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_acfab .SetIfNotNil ("\u0046\u0053",_dffe .FS );
_acfab .SetIfNotNil ("\u0046",_dffe .F );_acfab .SetIfNotNil ("\u0055\u0046",_dffe .UF );_acfab .SetIfNotNil ("\u0044\u004f\u0053",_dffe .DOS );_acfab .SetIfNotNil ("\u004d\u0061\u0063",_dffe .Mac );_acfab .SetIfNotNil ("\u0055\u006e\u0069\u0078",_dffe .Unix );
_acfab .SetIfNotNil ("\u0049\u0044",_dffe .ID );_acfab .SetIfNotNil ("\u0056",_dffe .V );_acfab .SetIfNotNil ("\u0045\u0046",_dffe .EF );_acfab .SetIfNotNil ("\u0052\u0046",_dffe .RF );_acfab .SetIfNotNil ("\u0044\u0065\u0073\u0063",_dffe .Desc );_acfab .SetIfNotNil ("\u0043\u0049",_dffe .CI );
_acfab .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_dffe .AFRelationship );return _dffe ._adbd ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_aaagf :=&XObjectImage {};_gaefed :=&_df .PdfObjectStream {};_gaefed .PdfObjectDictionary =_df .MakeDict ();_aaagf ._gafba =_gaefed ;return _aaagf ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _df .PdfObject ;};

// SetAnnotations sets the annotations list.
func (_gdffd *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gdffd ._afaba =annotations };func (_adag *PdfReader )newPdfActionHideFromDict (_efa *_df .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_efa .Get ("\u0054"),H :_efa .Get ("\u0048")},nil ;
};

// C returns the value of the cyan component of the color.
func (_bbda *PdfColorDeviceCMYK )C ()float64 {return _bbda [0]};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// Add appends an outline item as a child of the current outline item.
func (_cdeda *OutlineItem )Add (item *OutlineItem ){_cdeda .Entries =append (_cdeda .Entries ,item )};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _bc .ReadSeeker )(*PdfReader ,error ){const _eegde ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _bbgdd (rs ,&ReaderOpts {},false ,_eegde );};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_cdcgd *PdfPage )GetRotate ()(int64 ,error ){if _cdcgd .Rotate !=nil {return *_cdcgd .Rotate ,nil ;};_ccga :=_cdcgd .Parent ;for _ccga !=nil {_cbceg ,_bcbe :=_df .GetDict (_ccga );if !_bcbe {return 0,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _faec :=_cbceg .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_faec !=nil {_bdcgb ,_gdffe :=_df .GetInt (_faec );if !_gdffe {return 0,_fa .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _bdcgb !=nil {return int64 (*_bdcgb ),nil ;
};return 0,_fa .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_ccga =_cbceg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_fa .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _df .PdfObject ;Q _df .PdfObject ;RC _df .PdfObject ;DS _df .PdfObject ;CL _df .PdfObject ;IT _df .PdfObject ;BE _df .PdfObject ;RD _df .PdfObject ;BS _df .PdfObject ;LE _df .PdfObject ;
};

// WatermarkTextOptions contains options for configuring the text watermark process.
type WatermarkTextOptions struct{

// opacity, 0.5 by default.
Alpha float64 ;

// font size, 20 by default.
FontSize float64 ;

// it is mandatory to set FontPath to the path of .ttf font file you would like to use for drawing.
FontPath string ;

// font color, black by default.
FontColor _d .Color ;

// rotation angle in degrees, 0 by default.
Angle float64 ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_adee :=&PdfColorspaceDeviceN {};return _adee };

// ColorToRGB converts a DeviceN color to an RGB color.
func (_aabb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aabb .AlternateSpace ==nil {return nil ,_fa .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _aabb .AlternateSpace .ColorToRGB (color );};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_bacef *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bacef .AlternateSpace ==nil {return nil ,_fa .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _bacef .AlternateSpace .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_cfbdb *PdfAnnotationLink )ToPdfObject ()_df .PdfObject {_cfbdb .PdfAnnotation .ToPdfObject ();_dfdb :=_cfbdb ._cdd ;_dec :=_dfdb .PdfObject .(*_df .PdfObjectDictionary );_dec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u004c\u0069\u006e\u006b"));
if _cfbdb ._dadd !=nil &&_cfbdb ._dadd ._agf !=nil {_dec .Set ("\u0041",_cfbdb ._dadd ._agf .ToPdfObject ());}else if _cfbdb .A !=nil {_dec .Set ("\u0041",_cfbdb .A );};_dec .SetIfNotNil ("\u0044\u0065\u0073\u0074",_cfbdb .Dest );_dec .SetIfNotNil ("\u0048",_cfbdb .H );
_dec .SetIfNotNil ("\u0050\u0041",_cfbdb .PA );_dec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cfbdb .QuadPoints );_dec .SetIfNotNil ("\u0042\u0053",_cfbdb .BS );return _dfdb ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_bgbe *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fa .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dbfg :=field .V ;if _dbfg ==nil {return _fa .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gcad :=pageNum -1;
if _gcad < 0||_gcad > len (_bgbe ._fdbe )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_gfed :=_bgbe .Reader .PageList [_gcad ];field .P =_gfed .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_df .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_gfed .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _bgbe ._efae ==_bgbe ._acee .AcroForm {_bgbe ._efae =_bgbe .Reader .AcroForm ;};_cgcd :=_bgbe ._efae ;if _cgcd ==nil {_cgcd =NewPdfAcroForm ();};_cgcd .SigFlags =_df .MakeInteger (3);
if _cgcd .NeedAppearances !=nil {_cgcd .NeedAppearances =nil ;};_adc :=append (_cgcd .AllFields (),field .PdfField );_cgcd .Fields =&_adc ;_bgbe .ReplaceAcroForm (_cgcd );_bgbe .UpdatePage (_gfed );_bgbe ._fdbe [_gcad ]=_gfed ;if _ ,_fcb :=field .V .GetDocMDPPermission ();
_fcb {_bgbe ._eebg =NewPermissions (field .V );};return nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_eddf *PdfFont )GetCharMetrics (code _aff .CharCode )(CharMetrics ,bool ){var _adedg _fc .CharMetrics ;switch _gbcbe :=_eddf ._bbeb .(type ){case *pdfFontSimple :if _bceg ,_adagb :=_gbcbe .GetCharMetrics (code );_adagb {return _bceg ,_adagb ;};case *pdfFontType0 :if _fagab ,_dfdde :=_gbcbe .GetCharMetrics (code );
_dfdde {return _fagab ,_dfdde ;};case *pdfCIDFontType0 :if _dece ,_bfac :=_gbcbe .GetCharMetrics (code );_bfac {return _dece ,_bfac ;};case *pdfCIDFontType2 :if _egbd ,_bgcf :=_gbcbe .GetCharMetrics (code );_bgcf {return _egbd ,_bgcf ;};case *pdfFontType3 :if _cacd ,_gbedd :=_gbcbe .GetCharMetrics (code );
_gbedd {return _cacd ,_gbedd ;};default:_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_eddf ._bbeb );
return _adedg ,false ;};if _cgee ,_bffb :=_eddf .GetFontDescriptor ();_bffb ==nil &&_cgee !=nil {return _fc .CharMetrics {Wx :_cgee ._fgffb },true ;};_dda .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_eddf );
return _adedg ,false ;};

// SetHideWindowUI sets the value of the hideWindowUI flag.
func (_agffg *ViewerPreferences )SetHideWindowUI (hideWindowUI bool ){_agffg ._daeee =&hideWindowUI };

// IsHideWindowUI returns the value of the hideWindowUI flag.
func (_ceabd *ViewerPreferences )IsHideWindowUI ()bool {if _ceabd ._daeee ==nil {return false ;};return *_ceabd ._daeee ;};func (_bcbca *Image )samplesAddPadding (_eggbf []uint32 )[]uint32 {_adega :=_ae .BytesPerLine (int (_bcbca .Width ),int (_bcbca .BitsPerComponent ),_bcbca .ColorComponents )*(8/int (_bcbca .BitsPerComponent ));
_gdgfa :=_adega *int (_bcbca .Height );if len (_eggbf )==_gdgfa {return _eggbf ;};_agfge :=make ([]uint32 ,_gdgfa );_ffed :=int (_bcbca .Width )*_bcbca .ColorComponents ;for _cggbb :=0;_cggbb < int (_bcbca .Height );_cggbb ++{_gfdfe :=_cggbb *int (_bcbca .Width );
_ffbcdg :=_cggbb *_adega ;for _degaf :=0;_degaf < _ffed ;_degaf ++{_agfge [_ffbcdg +_degaf ]=_eggbf [_gfdfe +_degaf ];};};return _agfge ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_bafa *KValue )ToPdfObject ()_df .PdfObject {if _bafa ._dccg !=nil {return _df .MakeIndirectObject (_bafa ._dccg .ToPdfObject ());};if _bafa ._dffeb !=nil {return _bafa ._dffeb ;};if _bafa ._agabbd !=nil {return _df .MakeInteger (int64 (*_bafa ._agabbd ));
};return nil ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_defee *PdfReader )GetCatalogMetadata ()(_df .PdfObject ,bool ){if _defee ._aeeb ==nil {return nil ,false ;};_gfbdg :=_defee ._aeeb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _gfbdg ,_gfbdg !=nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_cfcef *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_afceg :=_cfcef .fill (provider ,appGen );if _afceg !=nil {return _afceg ;};if _ ,_cbb :=provider .(FieldImageProvider );_cbb {_afceg =_cfcef .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _afceg ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_effdf .Lock ();defer _effdf .Unlock ();_dbcbd =creator };

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_gddd *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_gefee *PdfSignature ,_faagef Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_dbfce *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_gacgb *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_ddffd *PdfSignature ,_efffa Hasher )error ;};func (_fdee *PdfReader )newPdfAnnotationPopupFromDict (_fcdf *_df .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bbd :=PdfAnnotationPopup {};_bbd .Parent =_fcdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_bbd .Open =_fcdf .Get ("\u004f\u0070\u0065\u006e");return &_bbd ,nil ;};func (_ddfgg *PdfWriter )adjustXRefAffectedVersion (_eddac bool ){if _eddac &&_ddfgg ._bbagfg .Major ==1&&_ddfgg ._bbagfg .Minor < 5{_ddfgg ._bbagfg .Minor =5;};};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_acfgg *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _acfgg ._cccf ==nil {_acfgg ._cccf =_be .NewPSExecutor (_acfgg .Program );};var _eaace []_be .PSObject ;for _ ,_cgdbb :=range xVec {_eaace =append (_eaace ,_be .MakeReal (_cgdbb ));
};_aefcg ,_bgfag :=_acfgg ._cccf .Execute (_eaace );if _bgfag !=nil {return nil ,_bgfag ;};_dfcff ,_bgfag :=_be .PSObjectArrayToFloat64Array (_aefcg );if _bgfag !=nil {return nil ,_bgfag ;};return _dfcff ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_geaad *_df .PdfIndirectObject ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_deg :=NewPdfAction ();_eed :=&PdfActionJavaScript {};_eed .PdfAction =_deg ;_deg .SetContext (_eed );return _eed ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ecf :=NewPdfAction ();_dac :=&PdfActionTrans {};_dac .PdfAction =_ecf ;_ecf .SetContext (_dac );return _dac ;};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_dcfc *PdfFont )GetCIDToGIDMapObject ()_df .PdfObject {_bcbda ,_dgdb :=_dcfc ._bbeb .(*pdfCIDFontType2 );if _dgdb {return _bcbda .CIDToGIDMap ;};return nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_afaaa *PdfPageResources )SetShadingByName (keyName _df .PdfObjectName ,shadingObj _df .PdfObject )error {if _afaaa .Shading ==nil {_afaaa .Shading =_df .MakeDict ();};_aadda ,_afdfa :=_df .GetDict (_afaaa .Shading );if !_afdfa {return _df .ErrTypeError ;
};_aadda .Set (keyName ,shadingObj );return nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_facad *PdfColorspaceICCBased )GetContainingPdfObject ()_df .PdfObject {return _facad ._bdaf };

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_gafa *PdfColorspaceDeviceN )ToPdfObject ()_df .PdfObject {_edag :=_df .MakeArray (_df .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_edag .Append (_gafa .ColorantNames );_edag .Append (_gafa .AlternateSpace .ToPdfObject ());_edag .Append (_gafa .TintTransform .ToPdfObject ());
if _gafa .Attributes !=nil {_edag .Append (_gafa .Attributes .ToPdfObject ());};if _gafa ._ddddf !=nil {_gafa ._ddddf .PdfObject =_edag ;return _gafa ._ddddf ;};return _edag ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_aaagd :=map[rune ]int {};for _ ,_abfeb :=range text {_aaagd [_abfeb ]++;};return _aaagd ;};func (_efgfc *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_efgfc ._bbagfg .Major ,_efgfc ._bbagfg .Minor );
};func _ebfea (_aafab *_df .PdfObjectDictionary ,_aeff *fontCommon )(*pdfFontType3 ,error ){_dgfg :=_ggabc (_aeff );_bcdcg :=_aafab .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bcdcg ==nil {_bcdcg =_df .MakeInteger (0);};_dgfg .FirstChar =_bcdcg ;
_bbddg ,_gecfc :=_df .GetIntVal (_bcdcg );if !_gecfc {_dda .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bcdcg );
return nil ,_df .ErrTypeError ;};_fccg :=_aff .CharCode (_bbddg );_bcdcg =_aafab .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bcdcg ==nil {_bcdcg =_df .MakeInteger (255);};_dgfg .LastChar =_bcdcg ;_bbddg ,_gecfc =_df .GetIntVal (_bcdcg );
if !_gecfc {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bcdcg );return nil ,_df .ErrTypeError ;
};_fcad :=_aff .CharCode (_bbddg );_bcdcg =_aafab .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bcdcg !=nil {_dgfg .Resources =_bcdcg ;};_bcdcg =_aafab .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _bcdcg ==nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_bcdcg );
return nil ,_df .ErrNotSupported ;};_dgfg .CharProcs =_bcdcg ;_bcdcg =_aafab .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _bcdcg ==nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_bcdcg );
return nil ,_df .ErrNotSupported ;};_dgfg .FontMatrix =_bcdcg ;_dgfg ._cdbc =make (map[_aff .CharCode ]float64 );_bcdcg =_aafab .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bcdcg !=nil {_dgfg .Widths =_bcdcg ;_ceeea ,_cgcfc :=_df .GetArray (_bcdcg );
if !_cgcfc {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bcdcg );return nil ,_df .ErrTypeError ;
};_ddgdfe ,_ecgee :=_ceeea .ToFloat64Array ();if _ecgee !=nil {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ecgee ;};if len (_ddgdfe )!=int (_fcad -_fccg +1){_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fcad -_fccg +1,len (_ddgdfe ));
return nil ,_df .ErrRangeError ;};_bcagb ,_cgcfc :=_df .GetArray (_dgfg .FontMatrix );if !_cgcfc {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_bcagb );
return nil ,_ecgee ;};_acafg ,_ecgee :=_bcagb .ToFloat64Array ();if _ecgee !=nil {_dda .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ecgee ;};_baadf :=_ff .NewMatrix (_acafg [0],_acafg [1],_acafg [2],_acafg [3],_acafg [4],_acafg [5]);for _bcbdd ,_ffbcf :=range _ddgdfe {_fggg ,_ :=_baadf .Transform (_ffbcf ,_ffbcf );_dgfg ._cdbc [_fccg +_aff .CharCode (_bcbdd )]=_fggg ;};
};_dgfg .Encoding =_df .TraceToDirectObject (_aafab .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_faea :=_aafab .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _faea !=nil {_dgfg ._ccef =_df .TraceToDirectObject (_faea );_fbgc ,_bcad :=_baadc (_dgfg ._ccef ,&_dgfg .fontCommon );
if _bcad !=nil {return nil ,_bcad ;};_dgfg ._babga =_fbgc ;};if _ddfd :=_dgfg ._babga ;_ddfd !=nil {_dgfg ._dddf =_aff .NewCMapEncoder ("",nil ,_ddfd );}else {_dgfg ._dddf =_aff .NewPdfDocEncoder ();};return _dgfg ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_ddff *PdfFieldButton )IsRadio ()bool {return _ddff .GetType ()==ButtonTypeRadio };

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_afaac *_df .PdfIndirectObject ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gacca :=NewPdfOutline ();_gacca ._gdedf =&_gacca ;return _gacca ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// Items returns all children outline items.
func (_dfbd *Outline )Items ()[]*OutlineItem {return _dfbd .Entries };

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _df .PdfObject ;Volume _df .PdfObject ;Synchronous _df .PdfObject ;Repeat _df .PdfObject ;Mix _df .PdfObject ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_eebbc *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fa .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_bace ,_cccd :=_ae .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bggcb ,img ._gdfe );if _cccd !=nil {return img ,_cccd ;};_ddgff ,_cccd :=_ae .NRGBAConverter .Convert (_bace );if _cccd !=nil {return img ,_cccd ;
};_bdda :=_fdaa (_ddgff .Base ());_dda .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_dda .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_dda .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_bdda .Data );
_dda .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_bdda );return _bdda ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _df .PdfObject ;FS _df .PdfObject ;F _df .PdfObject ;UF _df .PdfObject ;DOS _df .PdfObject ;Mac _df .PdfObject ;Unix _df .PdfObject ;ID _df .PdfObject ;V _df .PdfObject ;EF _df .PdfObject ;RF _df .PdfObject ;Desc _df .PdfObject ;
CI _df .PdfObject ;AFRelationship _df .PdfObject ;_adbd _df .PdfObject ;};func (_ababdc *PdfWriter )writeTrailer (_ffebd int ){_ababdc .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _gbfdb :=0;_gbfdb <=_ffebd ;{for ;_gbfdb <=_ffebd ;_gbfdb ++{_acddf ,_ggdfc :=_ababdc ._fgbdf [_gbfdb ];
if _ggdfc &&(!_ababdc ._ddga ||_ababdc ._ddga &&(_acddf .Type ==1&&_acddf .Offset >=_ababdc ._egdfc ||_acddf .Type ==0)){break ;};};var _efbdd int ;for _efbdd =_gbfdb +1;_efbdd <=_ffebd ;_efbdd ++{_eeaeg ,_fgbdfg :=_ababdc ._fgbdf [_efbdd ];if _fgbdfg &&(!_ababdc ._ddga ||_ababdc ._ddga &&(_eeaeg .Type ==1&&_eeaeg .Offset > _ababdc ._egdfc )){continue ;
};break ;};_cdafa :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_gbfdb ,_efbdd -_gbfdb );_ababdc .writeString (_cdafa );for _efcag :=_gbfdb ;_efcag < _efbdd ;_efcag ++{_dgdce :=_ababdc ._fgbdf [_efcag ];switch _dgdce .Type {case 0:_cdafa =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_ababdc .writeString (_cdafa );case 1:_cdafa =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_dgdce .Offset ,0);_ababdc .writeString (_cdafa );};};_gbfdb =_efbdd +1;};_eedgb :=_df .MakeDict ();_eedgb .Set ("\u0049\u006e\u0066\u006f",_ababdc ._edaec );
_eedgb .Set ("\u0052\u006f\u006f\u0074",_ababdc ._dgdge );_eedgb .Set ("\u0053\u0069\u007a\u0065",_df .MakeInteger (int64 (_ffebd +1)));if _ababdc ._ddga &&_ababdc ._fagdce > 0{_eedgb .Set ("\u0050\u0072\u0065\u0076",_df .MakeInteger (_ababdc ._fagdce ));
};if _ababdc ._geefe !=nil {_eedgb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ababdc ._dfbcc );};if _ababdc ._egaab ==nil &&_ababdc ._ddedfd !=""&&_ababdc ._abbbdg !=""{_ababdc ._egaab =_df .MakeArray (_df .MakeHexString (_ababdc ._ddedfd ),_df .MakeHexString (_ababdc ._abbbdg ));
};if _ababdc ._egaab !=nil {_eedgb .Set ("\u0049\u0044",_ababdc ._egaab );_dda .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ababdc ._egaab );};_ababdc .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_ababdc .writeString (_eedgb .WriteString ());
_ababdc .writeString ("\u000a");};

// ToPdfObject implements interface PdfModel.
func (_ebgf *PdfAnnotationSquiggly )ToPdfObject ()_df .PdfObject {_ebgf .PdfAnnotation .ToPdfObject ();_cdcd :=_ebgf ._cdd ;_gaad :=_cdcd .PdfObject .(*_df .PdfObjectDictionary );_ebgf .PdfAnnotationMarkup .appendToPdfDictionary (_gaad );_gaad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_gaad .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ebgf .QuadPoints );return _cdcd ;};

// GetVersion gets the document version.
func (_ebbgbc *PdfWriter )GetVersion ()_df .Version {return _ebbgbc ._bbagfg };func (_befbf *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _befbf ._fedff };

// UpdatePage updates the `page` in the new revision if it has changed.
func (_gdaf *PdfAppender )UpdatePage (page *PdfPage ){_gdaf .updateObjectsDeep (page .ToPdfObject (),nil )};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_df .PdfObjectInteger ;BitsPerComponent *_df .PdfObjectInteger ;BitsPerFlag *_df .PdfObjectInteger ;Decode *_df .PdfObjectArray ;Function []PdfFunction ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_dbbac *PdfAcroForm )GetContainingPdfObject ()_df .PdfObject {return _dbbac ._ffeae };

// SetHideMenubar sets the value of the hideMenubar flag.
func (_abbcd *ViewerPreferences )SetHideMenubar (hideMenubar bool ){_abbcd ._bbedc =&hideMenubar };

// ToPdfObject implements interface PdfModel.
func (_fdbf *PdfAnnotationTrapNet )ToPdfObject ()_df .PdfObject {_fdbf .PdfAnnotation .ToPdfObject ();_cdf :=_fdbf ._cdd ;_fbfd :=_cdf .PdfObject .(*_df .PdfObjectDictionary );_fbfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _cdf ;};func (_acdg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_gead *_df .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_gdcf :=PdfAnnotationFileAttachment {};_adeg ,_gbba :=_acdg .newPdfAnnotationMarkupFromDict (_gead );
if _gbba !=nil {return nil ,_gbba ;};_gdcf .PdfAnnotationMarkup =_adeg ;_gdcf .FS =_gead .Get ("\u0046\u0053");_gdcf .Name =_gead .Get ("\u004e\u0061\u006d\u0065");return &_gdcf ,nil ;};

// NumCopies returns the value of the numCopies.
func (_gcbca *ViewerPreferences )NumCopies ()int {return _gcbca ._gccfe };

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bbbae int ,_gbgbe *PdfPage );func _dbgb (_cdbgd _df .PdfObject ){_dda .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_cdbgd ,_cdbgd .String ());if _caaff ,_dgddec :=_cdbgd .(*_df .PdfObjectStream );
_dgddec {_adgcaa ,_cfbdbd :=_df .DecodeStream (_caaff );if _cfbdbd !=nil {_dda .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_cfbdbd );return ;};_dda .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_adgcaa );}else if _dffb ,_gccbc :=_cdbgd .(*_df .PdfIndirectObject );
_gccbc {_dda .Log .Debug ("\u0025\u0054\u0020%\u0076",_dffb .PdfObject ,_dffb .PdfObject );_dda .Log .Debug ("\u0025\u0073",_dffb .PdfObject .String ());};};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_edgc *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_aedb ,_dgcf :=color .(*PdfColorCalGray );if !_dgcf {_dda .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_aedb .Val ();X :=_edgc .WhitePoint [0]*_fe .Pow (ANorm ,_edgc .Gamma );Y :=_edgc .WhitePoint [1]*_fe .Pow (ANorm ,_edgc .Gamma );
Z :=_edgc .WhitePoint [2]*_fe .Pow (ANorm ,_edgc .Gamma );_abd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bfbg :=-0.969256*X +1.875992*Y +0.041556*Z ;_agfdd :=0.055648*X +-0.204043*Y +1.057311*Z ;_abd =_fe .Min (_fe .Max (_abd ,0),1.0);_bfbg =_fe .Min (_fe .Max (_bfbg ,0),1.0);
_agfdd =_fe .Min (_fe .Max (_agfdd ,0),1.0);return NewPdfColorDeviceRGB (_abd ,_bfbg ,_agfdd ),nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_fgcg *Image )GetParamsDict ()*_df .PdfObjectDictionary {_acfcc :=_df .MakeDict ();_acfcc .Set ("\u0057\u0069\u0064t\u0068",_df .MakeInteger (_fgcg .Width ));_acfcc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_df .MakeInteger (_fgcg .Height ));_acfcc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_df .MakeInteger (int64 (_fgcg .ColorComponents )));
_acfcc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_df .MakeInteger (_fgcg .BitsPerComponent ));return _acfcc ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_df .PdfObjectArray ;ExtGState _df .PdfObject ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_bgg :=NewPdfAnnotation ();_dgd :=&PdfAnnotationCaret {};_dgd .PdfAnnotation =_bgg ;_dgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgg .SetContext (_dgd );return _dgd ;};

// ToPdfObject returns the PDF representation of the function.
func (_ffabc *PdfFunctionType0 )ToPdfObject ()_df .PdfObject {if _ffabc ._dfeeg ==nil {_ffabc ._dfeeg =&_df .PdfObjectStream {};};_adbfcd :=_df .MakeDict ();_adbfcd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (0));
_adcf :=&_df .PdfObjectArray {};for _ ,_bacf :=range _ffabc .Domain {_adcf .Append (_df .MakeFloat (_bacf ));};_adbfcd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_adcf );_ecgc :=&_df .PdfObjectArray {};for _ ,_ffgeb :=range _ffabc .Range {_ecgc .Append (_df .MakeFloat (_ffgeb ));
};_adbfcd .Set ("\u0052\u0061\u006eg\u0065",_ecgc );_gbbbb :=&_df .PdfObjectArray {};for _ ,_ceaf :=range _ffabc .Size {_gbbbb .Append (_df .MakeInteger (int64 (_ceaf )));};_adbfcd .Set ("\u0053\u0069\u007a\u0065",_gbbbb );_adbfcd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_df .MakeInteger (int64 (_ffabc .BitsPerSample )));
if _ffabc .Order !=1{_adbfcd .Set ("\u004f\u0072\u0064e\u0072",_df .MakeInteger (int64 (_ffabc .Order )));};_adbfcd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_ffabc ._abgbd ))));_ffabc ._dfeeg .Stream =_ffabc ._abgbd ;_ffabc ._dfeeg .PdfObjectDictionary =_adbfcd ;
return _ffabc ._dfeeg ;};func (_fbdfd *PdfWriter )checkCrossReferenceStream ()bool {_aedfc :=_fbdfd ._bbagfg .Major > 1||(_fbdfd ._bbagfg .Major ==1&&_fbdfd ._bbagfg .Minor > 4);if _fbdfd ._dgaff !=nil {_aedfc =*_fbdfd ._dgaff ;};return _aedfc ;};

// GetPdfInfo returns the PDF info dictionary.
func (_decgf *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_eadf ,_cebcg :=_decgf .GetTrailer ();if _cebcg !=nil {return nil ,_cebcg ;};var _egacae *_df .PdfObjectDictionary ;_gddad :=_eadf .Get ("\u0049\u006e\u0066\u006f");switch _babag :=_gddad .(type ){case *_df .PdfObjectReference :_gbaeg :=_babag ;
_gddad ,_cebcg =_decgf .GetIndirectObjectByNumber (int (_gbaeg .ObjectNumber ));_gddad =_df .TraceToDirectObject (_gddad );if _cebcg !=nil {return nil ,_cebcg ;};_egacae ,_ =_gddad .(*_df .PdfObjectDictionary );case *_df .PdfObjectDictionary :_egacae =_babag ;
};if _egacae ==nil {return nil ,_fa .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_bdea ,_cebcg :=NewPdfInfoFromObject (_egacae );if _cebcg !=nil {return nil ,_cebcg ;
};return _bdea ,nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_gabac *VRI )ToPdfObject ()*_df .PdfObjectDictionary {_gfeac :=_df .MakeDict ();_gfeac .SetIfNotNil (_df .PdfObjectName ("\u0043\u0065\u0072\u0074"),_bdddb (_gabac .Cert ));_gfeac .SetIfNotNil (_df .PdfObjectName ("\u004f\u0043\u0053\u0050"),_bdddb (_gabac .OCSP ));
_gfeac .SetIfNotNil (_df .PdfObjectName ("\u0043\u0052\u004c"),_bdddb (_gabac .CRL ));_gfeac .SetIfNotNil ("\u0054\u0055",_gabac .TU );_gfeac .SetIfNotNil ("\u0054\u0053",_gabac .TS );return _gfeac ;};func (_ddae *PdfFont )baseFields ()*fontCommon {if _ddae ._bbeb ==nil {_dda .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _ddae ._bbeb .baseFields ();};func (_befe *PdfReader )newPdfAnnotationLinkFromDict (_cffd *_df .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_cbae :=PdfAnnotationLink {};_cbae .A =_cffd .Get ("\u0041");_cbae .Dest =_cffd .Get ("\u0044\u0065\u0073\u0074");
_cbae .H =_cffd .Get ("\u0048");_cbae .PA =_cffd .Get ("\u0050\u0041");_cbae .QuadPoints =_cffd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_cbae .BS =_cffd .Get ("\u0042\u0053");return &_cbae ,nil ;};func (_ccg *PdfReader )newPdfActionImportDataFromDict (_cbfg *_df .PdfObjectDictionary )(*PdfActionImportData ,error ){_gea ,_egd :=_daca (_cbfg .Get ("\u0046"));
if _egd !=nil {return nil ,_egd ;};return &PdfActionImportData {F :_gea },nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_daccf *_df .PdfIndirectObject ;};func (_cfbed *PdfWriter )setHashIDs (_acffa _ee .Hash )error {_fdeaf :=_acffa .Sum (nil );if _cfbed ._ddedfd ==""{_cfbed ._ddedfd =_eee .EncodeToString (_fdeaf [:8]);
};_cfbed .setDocumentIDs (_cfbed ._ddedfd ,_eee .EncodeToString (_fdeaf [8:]));return nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_cdeb *pdfFontType0 )ToPdfObject ()_df .PdfObject {if _cdeb ._edac ==nil {_cdeb ._edac =&_df .PdfIndirectObject {};};_abbgd :=_cdeb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_cdeb ._edac .PdfObject =_abbgd ;if _cdeb .Encoding !=nil {_abbgd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cdeb .Encoding );
}else if _cdeb ._agae !=nil {_abbgd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cdeb ._agae .ToPdfObject ());};if _cdeb .DescendantFont !=nil {_abbgd .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_df .MakeArray (_cdeb .DescendantFont .ToPdfObject ()));
};return _cdeb ._edac ;};

// AddImageResource adds an image to the XObject resources.
func (_cbgf *PdfPage )AddImageResource (name _df .PdfObjectName ,ximg *XObjectImage )error {var _eaed *_df .PdfObjectDictionary ;if _cbgf .Resources .XObject ==nil {_eaed =_df .MakeDict ();_cbgf .Resources .XObject =_eaed ;}else {var _eaeg bool ;_eaed ,_eaeg =(_cbgf .Resources .XObject ).(*_df .PdfObjectDictionary );
if !_eaeg {return _fa .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_eaed .Set (name ,ximg .ToPdfObject ());return nil ;};

// ToPdfObject implements interface PdfModel.
func (_acdc *PdfAnnotationText )ToPdfObject ()_df .PdfObject {_acdc .PdfAnnotation .ToPdfObject ();_ced :=_acdc ._cdd ;_gdad :=_ced .PdfObject .(*_df .PdfObjectDictionary );if _acdc .PdfAnnotationMarkup !=nil {_acdc .PdfAnnotationMarkup .appendToPdfDictionary (_gdad );
};_gdad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0054\u0065\u0078\u0074"));_gdad .SetIfNotNil ("\u004f\u0070\u0065\u006e",_acdc .Open );_gdad .SetIfNotNil ("\u004e\u0061\u006d\u0065",_acdc .Name );_gdad .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_acdc .State );
_gdad .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_acdc .StateModel );return _ced ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_ebbgc *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _ebbgc ._afaba !=nil {return _ebbgc ._afaba ,nil ;};if _ebbgc .Annots ==nil {_ebbgc ._afaba =[]*PdfAnnotation {};return nil ,nil ;};if _ebbgc ._aebbc ==nil {_ebbgc ._afaba =[]*PdfAnnotation {};
return nil ,nil ;};_fdaec ,_deace :=_ebbgc ._aebbc .loadAnnotations (_ebbgc .Annots );if _deace !=nil {return nil ,_deace ;};if _fdaec ==nil {_ebbgc ._afaba =[]*PdfAnnotation {};};_ebbgc ._afaba =_fdaec ;return _ebbgc ._afaba ,nil ;};

// Subtype returns the font's "Subtype" field.
func (_cebea *PdfFont )Subtype ()string {_defe :=_cebea .baseFields ()._adgg ;if _bagde ,_ageca :=_cebea ._bbeb .(*pdfFontType0 );_ageca {_defe =_defe +"\u003a"+_bagde .DescendantFont .Subtype ();};return _defe ;};

// C returns the value of the C component of the color.
func (_efca *PdfColorCalRGB )C ()float64 {return _efca [2]};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_gfedd :=&PdfShadingType3 {};_gfedd .PdfShading =&PdfShading {};_gfedd .PdfShading ._gfded =_df .MakeIndirectObject (_df .MakeDict ());_gfedd .PdfShading ._adfab =_gfedd ;return _gfedd ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_ggdff *PdfWriter )SetDocInfo (info *PdfInfo ){_ggdff .setDocInfo (info .ToPdfObject ())};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_edcf *CompliancePdfReader )error ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_df .PdfObject ;GetContainingPdfObject ()_df .PdfObject ;};

// ToGoTime returns the date in time.Time format.
func (_aagdc PdfDate )ToGoTime ()_dd .Time {_ffbgf :=int (_aagdc ._aead *60*60+_aagdc ._badcg *60);switch _aagdc ._dfgged {case '-':_ffbgf =-_ffbgf ;case 'Z':_ffbgf =0;};_ffgda :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_aagdc ._dfgged ,_aagdc ._aead ,_aagdc ._badcg );
_bgbcb :=_dd .FixedZone (_ffgda ,_ffbgf );return _dd .Date (int (_aagdc ._fcbeg ),_dd .Month (_aagdc ._efbc ),int (_aagdc ._ceeedg ),int (_aagdc ._eaegg ),int (_aagdc ._bffeb ),int (_aagdc ._dcfgb ),0,_bgbcb );};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_ebcg :_df .MakeDict ()};
};func _feaf (_gfgd *_df .PdfIndirectObject ,_edda *_df .PdfObjectDictionary )(*DSS ,error ){if _gfgd ==nil {_gfgd =_df .MakeIndirectObject (nil );};_gfgd .PdfObject =_df .MakeDict ();_fcfg :=map[string ]*VRI {};if _acff ,_gafdb :=_df .GetDict (_edda .Get ("\u0056\u0052\u0049"));
_gafdb {for _ ,_cgga :=range _acff .Keys (){if _gabc ,_gaae :=_df .GetDict (_acff .Get (_cgga ));_gaae {_fcfg [_eb .ToUpper (_cgga .String ())]=_aacde (_gabc );};};};return &DSS {Certs :_cefc (_edda .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_cefc (_edda .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_cefc (_edda .Get ("\u0043\u0052\u004c\u0073")),VRI :_fcfg ,_cfae :_gfgd },nil ;
};

// SetPrintArea sets the value of the printArea.
func (_fgdad *ViewerPreferences )SetPrintArea (printArea PageBoundary ){_fgdad ._bggda =printArea };

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _df .PdfObject )(_df .PdfObjectName ,error ){var _bfdg *_df .PdfObjectName ;var _daafb *_df .PdfObjectArray ;if _eeed ,_eafc :=obj .(*_df .PdfIndirectObject );_eafc {if _bfef ,_aaccd :=_eeed .PdfObject .(*_df .PdfObjectArray );
_aaccd {_daafb =_bfef ;}else if _ecdg ,_abed :=_eeed .PdfObject .(*_df .PdfObjectName );_abed {_bfdg =_ecdg ;};}else if _ebbg ,_gccf :=obj .(*_df .PdfObjectArray );_gccf {_daafb =_ebbg ;}else if _aeac ,_efgg :=obj .(*_df .PdfObjectName );_efgg {_bfdg =_aeac ;
};if _bfdg !=nil {switch *_bfdg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_bfdg ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_bfdg ,nil ;
};};if _daafb !=nil &&_daafb .Len ()> 0{if _dfee ,_begb :=_daafb .Get (0).(*_df .PdfObjectName );_begb {switch *_dfee {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _daafb .Len ()==1{return *_dfee ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_dfee ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_dfee ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_dfee ,nil ;};};};return "",nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _df .PdfObject ;H _df .PdfObject ;};func (_aegc *PdfReader )newPdfAnnotationMarkupFromDict (_gac *_df .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_bedb :=&PdfAnnotationMarkup {};if _cef :=_gac .Get ("\u0054");
_cef !=nil {_bedb .T =_cef ;};if _fgee :=_gac .Get ("\u0050\u006f\u0070u\u0070");_fgee !=nil {_dge ,_cfbg :=_fgee .(*_df .PdfIndirectObject );if !_cfbg {if _ ,_gagb :=_fgee .(*_df .PdfObjectNull );!_gagb {return nil ,_fa .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_facf ,_aade :=_aegc .newPdfAnnotationFromIndirectObject (_dge );if _aade !=nil {return nil ,_aade ;};if _facf !=nil {_cgd ,_ddaa :=_facf ._bcaf .(*PdfAnnotationPopup );if !_ddaa {return nil ,_fa .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_bedb .Popup =_cgd ;};};};if _bdde :=_gac .Get ("\u0043\u0041");_bdde !=nil {_bedb .CA =_bdde ;};if _ead :=_gac .Get ("\u0052\u0043");_ead !=nil {_bedb .RC =_ead ;};if _bbfd :=_gac .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_bbfd !=nil {_bedb .CreationDate =_bbfd ;};if _ggg :=_gac .Get ("\u0049\u0052\u0054");_ggg !=nil {_bedb .IRT =_ggg ;};if _eaef :=_gac .Get ("\u0053\u0075\u0062\u006a");_eaef !=nil {_bedb .Subj =_eaef ;};if _dde :=_gac .Get ("\u0052\u0054");_dde !=nil {_bedb .RT =_dde ;
};if _fdg :=_gac .Get ("\u0049\u0054");_fdg !=nil {_bedb .IT =_fdg ;};if _bfbb :=_gac .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bfbb !=nil {_bedb .ExData =_bfbb ;};return _bedb ,nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _df .PdfObject ;T _df .PdfObject ;Operation _df .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_dfgcf *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_aecc *PdfReader )newPdfAnnotationSquareFromDict (_dfgc *_df .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_dbdd :=PdfAnnotationSquare {};_fcea ,_fef :=_aecc .newPdfAnnotationMarkupFromDict (_dfgc );
if _fef !=nil {return nil ,_fef ;};_dbdd .PdfAnnotationMarkup =_fcea ;_dbdd .BS =_dfgc .Get ("\u0042\u0053");_dbdd .IC =_dfgc .Get ("\u0049\u0043");_dbdd .BE =_dfgc .Get ("\u0042\u0045");_dbdd .RD =_dfgc .Get ("\u0052\u0044");return &_dbdd ,nil ;};

// Val returns the color value.
func (_bbdfa *PdfColorDeviceGray )Val ()float64 {return float64 (*_bbdfa )};func _ebged (_fdbgd _df .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_dda .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_fdbgd .String (),_fdbgd );
_adg :=NewPdfColorspaceSpecialPattern ();if _gaac ,_bega :=_fdbgd .(*_df .PdfIndirectObject );_bega {_adg ._geaad =_gaac ;};_fdbgd =_df .TraceToDirectObject (_fdbgd );if _gcfe ,_ffbc :=_fdbgd .(*_df .PdfObjectName );_ffbc {if *_gcfe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _adg ,nil ;};_aggfc ,_bdae :=_fdbgd .(*_df .PdfObjectArray );if !_bdae {_dda .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_fdbgd );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _aggfc .Len ()!=1&&_aggfc .Len ()!=2{_dda .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_aggfc );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_fdbgd =_aggfc .Get (0);if _gaba ,_cadd :=_fdbgd .(*_df .PdfObjectName );_cadd {if *_gaba !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dda .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_gaba );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _aggfc .Len ()> 1{_fdbgd =_aggfc .Get (1);_fdbgd =_df .TraceToDirectObject (_fdbgd );_ffgdg ,_aeag :=NewPdfColorspaceFromPdfObject (_fdbgd );if _aeag !=nil {return nil ,_aeag ;
};_adg .UnderlyingCS =_ffgdg ;};_dda .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_adg .UnderlyingCS );
return _adg ,nil ;};func (_dbcg *PdfReader )newPdfAnnotationCaretFromDict (_bee *_df .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_dbeg :=PdfAnnotationCaret {};_bcga ,_eaf :=_dbcg .newPdfAnnotationMarkupFromDict (_bee );if _eaf !=nil {return nil ,_eaf ;
};_dbeg .PdfAnnotationMarkup =_bcga ;_dbeg .RD =_bee .Get ("\u0052\u0044");_dbeg .Sy =_bee .Get ("\u0053\u0079");return &_dbeg ,nil ;};

// String returns a string representation of what flags are set.
func (_fbae FieldFlag )String ()string {_faff :="";if _fbae ==FieldFlagClear {_faff ="\u0043\u006c\u0065a\u0072";return _faff ;};if _fbae &FieldFlagReadOnly > 0{_faff +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _fbae &FieldFlagRequired > 0{_faff +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _fbae &FieldFlagNoExport > 0{_faff +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _fbae &FieldFlagNoToggleToOff > 0{_faff +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _fbae &FieldFlagRadio > 0{_faff +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _fbae &FieldFlagPushbutton > 0{_faff +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _fbae &FieldFlagRadiosInUnision > 0{_faff +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _fbae &FieldFlagMultiline > 0{_faff +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _fbae &FieldFlagPassword > 0{_faff +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _fbae &FieldFlagFileSelect > 0{_faff +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _fbae &FieldFlagDoNotScroll > 0{_faff +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _fbae &FieldFlagComb > 0{_faff +="\u007c\u0043\u006fm\u0062";};if _fbae &FieldFlagRichText > 0{_faff +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _fbae &FieldFlagDoNotSpellCheck > 0{_faff +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _fbae &FieldFlagCombo > 0{_faff +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _fbae &FieldFlagEdit > 0{_faff +="\u007c\u0045\u0064i\u0074";};if _fbae &FieldFlagSort > 0{_faff +="\u007c\u0053\u006fr\u0074";};if _fbae &FieldFlagMultiSelect > 0{_faff +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _fbae &FieldFlagCommitOnSelChange > 0{_faff +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _eb .Trim (_faff ,"\u007c");};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_edgfd pdfFontSimple )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){if _edgfd ._eadd !=nil {_egbdd ,_dadde :=_edgfd ._eadd .Read (r );if _dadde {return _egbdd ,true ;};};_decbg :=_edgfd .Encoder ();if _decbg ==nil {_dda .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_edgfd );
return _fc .CharMetrics {},false ;};_baef ,_deab :=_decbg .RuneToCharcode (r );if !_deab {if r !=' '{_dda .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_edgfd );
};return _fc .CharMetrics {},false ;};_fgbcd ,_ceeeb :=_edgfd .GetCharMetrics (_baef );return _fgbcd ,_ceeeb ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_bgfa *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_bcbc ,_bdcb :=color .(*PdfColorDeviceCMYK );if !_bdcb {_dda .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_fa .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fccf :=_bcbc .C ();_ddf :=_bcbc .M ();_begg :=_bcbc .Y ();_acfa :=_bcbc .K ();_fccf =_fccf *(1-_acfa )+_acfa ;_ddf =_ddf *(1-_acfa )+_acfa ;
_begg =_begg *(1-_acfa )+_acfa ;_badc :=1-_fccf ;_gegb :=1-_ddf ;_efab :=1-_begg ;return NewPdfColorDeviceRGB (_badc ,_gegb ,_efab ),nil ;};func _agga (_ggbca *[]*PdfField ,_fcbea FieldFilterFunc ,_gddge bool )[]*PdfField {if _ggbca ==nil {return nil ;
};_dggae :=*_ggbca ;if len (*_ggbca )==0{return nil ;};_bfcg :=_dggae [:0];if _fcbea ==nil {_fcbea =func (*PdfField )bool {return true };};var _cfgaa []*PdfField ;for _ ,_deag :=range _dggae {_afacb :=_fcbea (_deag );if _afacb {_cfgaa =append (_cfgaa ,_deag );
if len (_deag .Kids )> 0{_cfgaa =append (_cfgaa ,_agga (&_deag .Kids ,_fcbea ,_gddge )...);};};if !_gddge ||!_afacb ||len (_deag .Kids )> 0{_bfcg =append (_bfcg ,_deag );};};*_ggbca =_bfcg ;return _cfgaa ;};

// Write writes out the PDF.
func (_gefda *PdfWriter )Write (writer _bc .Writer )error {_dda .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _bbgaa ,_bdgaf :=writer .(*_bgd .File );_bdgaf {_gefda .SetFileName (_bbgaa .Name ());};_becd :=_gefda .checkLicense ();if _becd !=nil {return _becd ;
};if _becd =_gefda .writeOutlines ();_becd !=nil {return _becd ;};if _becd =_gefda .writeAcroFormFields ();_becd !=nil {return _becd ;};if _becd =_gefda .writeNamesDictionary ();_becd !=nil {return _becd ;};_gefda .checkPendingObjects ();if _becd =_gefda .writeOutputIntents ();
_becd !=nil {return _becd ;};_gefda .setCatalogVersion ();_gefda .copyObjects ();if _becd =_gefda .optimize ();_becd !=nil {return _becd ;};if _becd =_gefda .optimizeDocument ();_becd !=nil {return _becd ;};var _agddd _ee .Hash ;if _gefda ._cbadb {_agddd =_bg .New ();
writer =_bc .MultiWriter (_agddd ,writer );};_gefda .setWriter (writer );_gcdge :=_gefda .checkCrossReferenceStream ();_egcb ,_gcdge :=_gefda .mapObjectStreams (_gcdge );_gefda .adjustXRefAffectedVersion (_gcdge );_gefda .writeDocumentVersion ();_gefda .updateObjectNumbers ();
_gefda .writeObjects ();if _becd =_gefda .writeObjectsInStreams (_egcb );_becd !=nil {return _becd ;};_dfede :=_gefda ._eedgc ;var _bffbfc int ;for _fagag :=range _gefda ._fgbdf {if _fagag > _bffbfc {_bffbfc =_fagag ;};};if _gefda ._cbadb {if _becd =_gefda .setHashIDs (_agddd );
_becd !=nil {return _becd ;};};if _gcdge {if _becd =_gefda .writeXRefStreams (_bffbfc ,_dfede );_becd !=nil {return _becd ;};}else {_gefda .writeTrailer (_bffbfc );};_gefda .makeOffSetReference (_dfede );if _becd =_gefda .flushWriter ();_becd !=nil {return _becd ;
};return nil ;};

// GetChildren returns the children of the K dictionary object.
func (_cfafe *KDict )GetChildren ()[]*KValue {return _cfafe ._cgaed };func (_aeba *PdfReader )newPdfActionFromIndirectObject (_daa *_df .PdfIndirectObject )(*PdfAction ,error ){_gaa ,_dcfb :=_daa .PdfObject .(*_df .PdfObjectDictionary );if !_dcfb {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_aeba ._fgdef .GetModelFromPrimitive (_gaa );model !=nil {_dgbe ,_dfg :=model .(*PdfAction );if !_dfg {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _dgbe ,nil ;};_cce :=&PdfAction {};_cce ._dfc =_daa ;_aeba ._fgdef .Register (_gaa ,_cce );if _age :=_gaa .Get ("\u0054\u0079\u0070\u0065");_age !=nil {_cad ,_aadb :=_age .(*_df .PdfObjectName );if !_aadb {_dda .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_age );
}else {if *_cad !="\u0041\u0063\u0074\u0069\u006f\u006e"{_dda .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_cad );
};_cce .Type =_cad ;};};if _aag :=_gaa .Get ("\u004e\u0065\u0078\u0074");_aag !=nil {_cce .Next =_aag ;};if _bdgb :=_gaa .Get ("\u0053");_bdgb !=nil {_cce .S =_bdgb ;};_eede ,_eefg :=_cce .S .(*_df .PdfObjectName );if !_eefg {_dda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cce .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cce .S );};_bcgb :=PdfActionType (_eede .String ());
switch _bcgb {case ActionTypeGoTo :_dce ,_fdb :=_aeba .newPdfActionGotoFromDict (_gaa );if _fdb !=nil {return nil ,_fdb ;};_dce .PdfAction =_cce ;_cce ._agf =_dce ;return _cce ,nil ;case ActionTypeGoToR :_fde ,_gbf :=_aeba .newPdfActionGotoRFromDict (_gaa );
if _gbf !=nil {return nil ,_gbf ;};_fde .PdfAction =_cce ;_cce ._agf =_fde ;return _cce ,nil ;case ActionTypeGoToE :_gbd ,_ebb :=_aeba .newPdfActionGotoEFromDict (_gaa );if _ebb !=nil {return nil ,_ebb ;};_gbd .PdfAction =_cce ;_cce ._agf =_gbd ;return _cce ,nil ;
case ActionTypeLaunch :_bdf ,_bgbg :=_aeba .newPdfActionLaunchFromDict (_gaa );if _bgbg !=nil {return nil ,_bgbg ;};_bdf .PdfAction =_cce ;_cce ._agf =_bdf ;return _cce ,nil ;case ActionTypeThread :_afa ,_aaf :=_aeba .newPdfActionThreadFromDict (_gaa );
if _aaf !=nil {return nil ,_aaf ;};_afa .PdfAction =_cce ;_cce ._agf =_afa ;return _cce ,nil ;case ActionTypeURI :_gd ,_ged :=_aeba .newPdfActionURIFromDict (_gaa );if _ged !=nil {return nil ,_ged ;};_gd .PdfAction =_cce ;_cce ._agf =_gd ;return _cce ,nil ;
case ActionTypeSound :_gg ,_cfce :=_aeba .newPdfActionSoundFromDict (_gaa );if _cfce !=nil {return nil ,_cfce ;};_gg .PdfAction =_cce ;_cce ._agf =_gg ;return _cce ,nil ;case ActionTypeMovie :_gaag ,_ccd :=_aeba .newPdfActionMovieFromDict (_gaa );if _ccd !=nil {return nil ,_ccd ;
};_gaag .PdfAction =_cce ;_cce ._agf =_gaag ;return _cce ,nil ;case ActionTypeHide :_cfg ,_aeg :=_aeba .newPdfActionHideFromDict (_gaa );if _aeg !=nil {return nil ,_aeg ;};_cfg .PdfAction =_cce ;_cce ._agf =_cfg ;return _cce ,nil ;case ActionTypeNamed :_fgbbd ,_fbd :=_aeba .newPdfActionNamedFromDict (_gaa );
if _fbd !=nil {return nil ,_fbd ;};_fgbbd .PdfAction =_cce ;_cce ._agf =_fgbbd ;return _cce ,nil ;case ActionTypeSubmitForm :_eefc ,_ccdd :=_aeba .newPdfActionSubmitFormFromDict (_gaa );if _ccdd !=nil {return nil ,_ccdd ;};_eefc .PdfAction =_cce ;_cce ._agf =_eefc ;
return _cce ,nil ;case ActionTypeResetForm :_dad ,_ccddd :=_aeba .newPdfActionResetFormFromDict (_gaa );if _ccddd !=nil {return nil ,_ccddd ;};_dad .PdfAction =_cce ;_cce ._agf =_dad ;return _cce ,nil ;case ActionTypeImportData :_abe ,_abbe :=_aeba .newPdfActionImportDataFromDict (_gaa );
if _abbe !=nil {return nil ,_abbe ;};_abe .PdfAction =_cce ;_cce ._agf =_abe ;return _cce ,nil ;case ActionTypeSetOCGState :_gcff ,_dgab :=_aeba .newPdfActionSetOCGStateFromDict (_gaa );if _dgab !=nil {return nil ,_dgab ;};_gcff .PdfAction =_cce ;_cce ._agf =_gcff ;
return _cce ,nil ;case ActionTypeRendition :_degb ,_adf :=_aeba .newPdfActionRenditionFromDict (_gaa );if _adf !=nil {return nil ,_adf ;};_degb .PdfAction =_cce ;_cce ._agf =_degb ;return _cce ,nil ;case ActionTypeTrans :_faa ,_gge :=_aeba .newPdfActionTransFromDict (_gaa );
if _gge !=nil {return nil ,_gge ;};_faa .PdfAction =_cce ;_cce ._agf =_faa ;return _cce ,nil ;case ActionTypeGoTo3DView :_adb ,_ccdc :=_aeba .newPdfActionGoTo3DViewFromDict (_gaa );if _ccdc !=nil {return nil ,_ccdc ;};_adb .PdfAction =_cce ;_cce ._agf =_adb ;
return _cce ,nil ;case ActionTypeJavaScript :_bga ,_eda :=_aeba .newPdfActionJavaScriptFromDict (_gaa );if _eda !=nil {return nil ,_eda ;};_bga .PdfAction =_cce ;_cce ._agf =_bga ;return _cce ,nil ;};_dda .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_bcgb );
return nil ,nil ;};func (_efda *PdfReader )newPdfSignatureReferenceFromDict (_bdfce *_df .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _afbbg ,_ffdeb :=_efda ._fgdef .GetModelFromPrimitive (_bdfce ).(*PdfSignatureReference );_ffdeb {return _afbbg ,nil ;
};_eeeef :=&PdfSignatureReference {_gaaed :_bdfce ,Data :_bdfce .Get ("\u0044\u0061\u0074\u0061")};var _ccecf bool ;_eeeef .Type ,_ =_df .GetName (_bdfce .Get ("\u0054\u0079\u0070\u0065"));_eeeef .TransformMethod ,_ccecf =_df .GetName (_bdfce .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_ccecf {_dda .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_eeeef .TransformParams ,_ =_df .GetDict (_bdfce .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_eeeef .DigestMethod ,_ =_df .GetName (_bdfce .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _eeeef ,nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _df .PdfObject ;_beag []byte ;_gffg *_df .PdfIndirectObject ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_fcaac *_df .PdfParser ;_cdabb _df .PdfObject ;_fcag *_df .PdfIndirectObject ;_gcef *_df .PdfObjectDictionary ;_gaded []*_df .PdfIndirectObject ;PageList []*PdfPage ;_bdad int ;_aeeb *_df .PdfObjectDictionary ;_agbcd *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_bfbed *Permissions ;_cdgdd map[*PdfReader ]*PdfReader ;_agfcg []*PdfReader ;_fgdef *modelManager ;_caabc bool ;_ggebf map[_df .PdfObject ]struct{};_afccd _bc .ReadSeeker ;_gcbfb string ;_dgcdb bool ;_gfeacb string ;
_bfcca *ReaderOpts ;_decbb bool ;};

// AddMCIDChild adds a child MCID object.
func (_dgaae *KDict )AddMCIDChild (mcid int ){_dgaae ._cgaed =append (_dgaae ._cgaed ,&KValue {_agabbd :&mcid });};

// IsEncrypted returns true if the PDF file is encrypted.
func (_gaefb *PdfReader )IsEncrypted ()(bool ,error ){return _gaefb ._fcaac .IsEncrypted ()};

// ToPdfObject implements interface PdfModel.
func (_bbfdb *PdfAnnotationHighlight )ToPdfObject ()_df .PdfObject {_bbfdb .PdfAnnotation .ToPdfObject ();_dcfbf :=_bbfdb ._cdd ;_fadeg :=_dcfbf .PdfObject .(*_df .PdfObjectDictionary );_bbfdb .PdfAnnotationMarkup .appendToPdfDictionary (_fadeg );_fadeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_fadeg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbfdb .QuadPoints );return _dcfbf ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_degbb :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_degbb ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _df .PdfObject ;AN _df .PdfObject ;OP _df .PdfObject ;JS _df .PdfObject ;};

// SetVersion sets the PDF version of the output file.
func (_cebage *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_cebage ._bbagfg .Major =majorVersion ;_cebage ._bbagfg .Minor =minorVersion ;};func (_faga *PdfReader )newPdfAnnotationStampFromDict (_afbc *_df .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_dbed :=PdfAnnotationStamp {};
_agfdb ,_fdgd :=_faga .newPdfAnnotationMarkupFromDict (_afbc );if _fdgd !=nil {return nil ,_fdgd ;};_dbed .PdfAnnotationMarkup =_agfdb ;_dbed .Name =_afbc .Get ("\u004e\u0061\u006d\u0065");return &_dbed ,nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_babf *PdfFieldSignature )ToPdfObject ()_df .PdfObject {if _babf .PdfAnnotationWidget !=nil {_babf .PdfAnnotationWidget .ToPdfObject ();};_babf .PdfField .ToPdfObject ();_gafg :=_babf ._eabc ;_defcc :=_gafg .PdfObject .(*_df .PdfObjectDictionary );
_defcc .SetIfNotNil ("\u0046\u0054",_df .MakeName ("\u0053\u0069\u0067"));_defcc .SetIfNotNil ("\u004c\u006f\u0063\u006b",_babf .Lock );_defcc .SetIfNotNil ("\u0053\u0056",_babf .SV );if _babf .V !=nil {_defcc .SetIfNotNil ("\u0056",_babf .V .ToPdfObject ());
};return _gafg ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_gacab *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _gacab .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gagfe *PdfAnnotationPolygon )ToPdfObject ()_df .PdfObject {_gagfe .PdfAnnotation .ToPdfObject ();_eaga :=_gagfe ._cdd ;_bgaf :=_eaga .PdfObject .(*_df .PdfObjectDictionary );_gagfe .PdfAnnotationMarkup .appendToPdfDictionary (_bgaf );_bgaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_bgaf .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gagfe .Vertices );_bgaf .SetIfNotNil ("\u004c\u0045",_gagfe .LE );_bgaf .SetIfNotNil ("\u0042\u0053",_gagfe .BS );_bgaf .SetIfNotNil ("\u0049\u0043",_gagfe .IC );_bgaf .SetIfNotNil ("\u0042\u0045",_gagfe .BE );
_bgaf .SetIfNotNil ("\u0049\u0054",_gagfe .IT );_bgaf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gagfe .Measure );return _eaga ;};func (_egaec *PdfReader )buildOutlineTree (_deaaa _df .PdfObject ,_efgbb *PdfOutlineTreeNode ,_gbdb *PdfOutlineTreeNode ,_cggga map[_df .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _cggga ==nil {_cggga =map[_df .PdfObject ]struct{}{};
};_cggga [_deaaa ]=struct{}{};_ddfbb ,_eeae :=_deaaa .(*_df .PdfIndirectObject );if !_eeae {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_deaaa );
};_gaece ,_dedd :=_ddfbb .PdfObject .(*_df .PdfObjectDictionary );if !_dedd {return nil ,nil ,_fa .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dda .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_gaece ,_ddfbb ,_ddfbb );
if _fafb :=_gaece .Get ("\u0054\u0069\u0074l\u0065");_fafb !=nil {_ffdbde ,_bbadd :=_egaec .newPdfOutlineItemFromIndirectObject (_ddfbb );if _bbadd !=nil {return nil ,nil ,_bbadd ;};_ffdbde .Parent =_efgbb ;_ffdbde .Prev =_gbdb ;_bagfg :=_df .ResolveReference (_gaece .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_cgea :=_cggga [_bagfg ];_bagfg !=nil &&_bagfg !=_ddfbb &&!_cgea {if !_df .IsNullObject (_bagfg ){_cbeag ,_dfed ,_abfgf :=_egaec .buildOutlineTree (_bagfg ,&_ffdbde .PdfOutlineTreeNode ,nil ,_cggga );if _abfgf !=nil {_dda .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_abfgf );
}else {_ffdbde .First =_cbeag ;_ffdbde .Last =_dfed ;};};};_gfgga :=_df .ResolveReference (_gaece .Get ("\u004e\u0065\u0078\u0074"));if _ ,_bbbfc :=_cggga [_gfgga ];_gfgga !=nil &&_gfgga !=_ddfbb &&!_bbbfc {if !_df .IsNullObject (_gfgga ){_aagee ,_deced ,_ggded :=_egaec .buildOutlineTree (_gfgga ,_efgbb ,&_ffdbde .PdfOutlineTreeNode ,_cggga );
if _ggded !=nil {_dda .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ggded );
}else {_ffdbde .Next =_aagee ;return &_ffdbde .PdfOutlineTreeNode ,_deced ,nil ;};};};return &_ffdbde .PdfOutlineTreeNode ,&_ffdbde .PdfOutlineTreeNode ,nil ;};_ecffg ,_fcgfg :=_ebefb (_ddfbb );if _fcgfg !=nil {return nil ,nil ,_fcgfg ;};_ecffg .Parent =_efgbb ;
if _faeac :=_gaece .Get ("\u0046\u0069\u0072s\u0074");_faeac !=nil {_faeac =_df .ResolveReference (_faeac );if _ ,_bcgeg :=_cggga [_faeac ];_faeac !=nil &&_faeac !=_ddfbb &&!_bcgeg {_egabd :=_df .TraceToDirectObject (_faeac );if _ ,_gcabe :=_egabd .(*_df .PdfObjectNull );
!_gcabe &&_egabd !=nil {_debcd ,_cgagde ,_baegg :=_egaec .buildOutlineTree (_faeac ,&_ecffg .PdfOutlineTreeNode ,nil ,_cggga );if _baegg !=nil {_dda .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_baegg );
}else {_ecffg .First =_debcd ;_ecffg .Last =_cgagde ;};};};};return &_ecffg .PdfOutlineTreeNode ,&_ecffg .PdfOutlineTreeNode ,nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ffgf *XObjectForm )GetContainingPdfObject ()_df .PdfObject {return _ffgf ._gggdf };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _df .PdfObject ;Name _df .PdfObject ;};

// GetCatalogLanguage gets catalog Language object.
func (_gceb *PdfReader )GetCatalogLanguage ()(_df .PdfObject ,bool ){if _gceb ._aeeb ==nil {return nil ,false ;};_gcgbb :=_gceb ._aeeb .Get ("\u004c\u0061\u006e\u0067");return _gcgbb ,_gcgbb !=nil ;};func (_egeba *PdfReader )newPdfPageFromDict (_dgfc *_df .PdfObjectDictionary )(*PdfPage ,error ){_fedag :=NewPdfPage ();
_fedag ._becggd =_dgfc ;_fedag ._bbbde =*_dgfc ;_debee :=*_dgfc ;_ffad ,_ebefd :=_debee .Get ("\u0054\u0079\u0070\u0065").(*_df .PdfObjectName );if !_ebefd {return nil ,_fa .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_ffad !="\u0050\u0061\u0067\u0065"{return nil ,_fa .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _fbff :=_debee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_fbff !=nil {_fedag .Parent =_fbff ;};if _gbadd :=_debee .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_gbadd !=nil {_beebb ,_ceggg :=_df .GetString (_gbadd );if !_ceggg {return nil ,_fa .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_cfgac ,_fcfae :=NewPdfDate (_beebb .Str ());if _fcfae !=nil {return nil ,_fcfae ;};_fedag .LastModified =&_cfgac ;};if _gdabba :=_debee .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gdabba !=nil &&!_df .IsNullObject (_gdabba ){_dbebg ,_dgfcf :=_df .GetDict (_gdabba );
if !_dgfcf {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gdabba );};var _adceb error ;_fedag .Resources ,_adceb =NewPdfPageResourcesFromDict (_dbebg );
if _adceb !=nil {return nil ,_adceb ;};}else {_dfdf ,_acfgf :=_fedag .getParentResources ();if _acfgf !=nil {return nil ,_acfgf ;};if _dfdf ==nil {_dfdf =NewPdfPageResources ();};_fedag .Resources =_dfdf ;};if _gcee :=_debee .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_gcee !=nil {_caefd ,_fefd :=_df .GetArray (_gcee );if !_fefd {return nil ,_fa .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _febdg error ;
_fedag .MediaBox ,_febdg =NewPdfRectangle (*_caefd );if _febdg !=nil {return nil ,_febdg ;};};if _fceb :=_debee .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fceb !=nil {_gfac ,_eaeeg :=_df .GetArray (_fceb );if !_eaeeg {return nil ,_fa .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bcae error ;_fedag .CropBox ,_bcae =NewPdfRectangle (*_gfac );if _bcae !=nil {return nil ,_bcae ;};};if _bagg :=_debee .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_bagg !=nil {_agaea ,_ccdf :=_df .GetArray (_bagg );if !_ccdf {return nil ,_fa .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _agedf error ;_fedag .BleedBox ,_agedf =NewPdfRectangle (*_agaea );if _agedf !=nil {return nil ,_agedf ;};};if _fecb :=_debee .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_fecb !=nil {_efabc ,_gfca :=_df .GetArray (_fecb );if !_gfca {return nil ,_fa .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _edddfg error ;_fedag .TrimBox ,_edddfg =NewPdfRectangle (*_efabc );if _edddfg !=nil {return nil ,_edddfg ;};};if _bgea :=_debee .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_bgea !=nil {_dabfd ,_cgcae :=_df .GetArray (_bgea );if !_cgcae {return nil ,_fa .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _cdbcc error ;_fedag .ArtBox ,_cdbcc =NewPdfRectangle (*_dabfd );if _cdbcc !=nil {return nil ,_cdbcc ;};};if _agcbg :=_debee .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_agcbg !=nil {_fedag .BoxColorInfo =_agcbg ;
};if _egfce :=_debee .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_egfce !=nil {_fedag .Contents =_egfce ;};if _dage :=_debee .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dage !=nil {_abgba ,_aega :=_df .GetNumberAsInt64 (_dage );if _aega !=nil {return nil ,_fa .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fedag .Rotate =&_abgba ;};if _bdfa :=_debee .Get ("\u0047\u0072\u006fu\u0070");_bdfa !=nil {_fedag .Group =_bdfa ;};if _beff :=_debee .Get ("\u0054\u0068\u0075m\u0062");_beff !=nil {_fedag .Thumb =_beff ;};if _fbdbc :=_debee .Get ("\u0042");_fbdbc !=nil {_fedag .B =_fbdbc ;
};if _gfgf :=_debee .Get ("\u0044\u0075\u0072");_gfgf !=nil {_fedag .Dur =_gfgf ;};if _afbbdd :=_debee .Get ("\u0054\u0072\u0061n\u0073");_afbbdd !=nil {_fedag .Trans =_afbbdd ;};if _gfce :=_debee .Get ("\u0041\u0041");_gfce !=nil {_fedag .AA =_gfce ;};
if _geeac :=_debee .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_geeac !=nil {_fedag .Metadata =_geeac ;};if _cfag :=_debee .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cfag !=nil {_fedag .PieceInfo =_cfag ;};if _dcdfe :=_debee .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_dcdfe !=nil {_fedag .StructParents =_dcdfe ;};if _aedc :=_debee .Get ("\u0049\u0044");_aedc !=nil {_fedag .ID =_aedc ;};if _ccdgd :=_debee .Get ("\u0050\u005a");_ccdgd !=nil {_fedag .PZ =_ccdgd ;};if _fgdfg :=_debee .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_fgdfg !=nil {_fedag .SeparationInfo =_fgdfg ;};if _bgaab :=_debee .Get ("\u0054\u0061\u0062\u0073");_bgaab !=nil {_fedag .Tabs =_bgaab ;};if _bbceb :=_debee .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_bbceb !=nil {_fedag .TemplateInstantiated =_bbceb ;};if _bedcc :=_debee .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_bedcc !=nil {_fedag .PresSteps =_bedcc ;};if _fgge :=_debee .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_fgge !=nil {_fedag .UserUnit =_fgge ;
};if _ffdbd :=_debee .Get ("\u0056\u0050");_ffdbd !=nil {_fedag .VP =_ffdbd ;};if _ceaeg :=_debee .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_ceaeg !=nil {_fedag .Annots =_ceaeg ;};_fedag ._aebbc =_egeba ;return _fedag ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _df .StreamEncoder ;Intent _df .PdfObject ;ImageMask _df .PdfObject ;Mask _df .PdfObject ;Matte _df .PdfObject ;Decode _df .PdfObject ;Interpolate _df .PdfObject ;Alternatives _df .PdfObject ;
SMask _df .PdfObject ;SMaskInData _df .PdfObject ;Name _df .PdfObject ;StructParent _df .PdfObject ;ID _df .PdfObject ;OPI _df .PdfObject ;Metadata _df .PdfObject ;OC _df .PdfObject ;Stream []byte ;_gafba *_df .PdfObjectStream ;_ggdde bool ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_faed :=&PdfColorspaceCalGray {};_faed .BlackPoint =[]float64 {0.0,0.0,0.0};_faed .Gamma =1;return _faed ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_dddfb *Image )Resample (targetBitsPerComponent int64 ){if _dddfb .BitsPerComponent ==targetBitsPerComponent {return ;};_cccda :=_dddfb .GetSamples ();if targetBitsPerComponent < _dddfb .BitsPerComponent {_ddddb :=_dddfb .BitsPerComponent -targetBitsPerComponent ;
for _aeffc :=range _cccda {_cccda [_aeffc ]>>=uint (_ddddb );};}else if targetBitsPerComponent > _dddfb .BitsPerComponent {_cagfd :=targetBitsPerComponent -_dddfb .BitsPerComponent ;for _gbdga :=range _cccda {_cccda [_gbdga ]<<=uint (_cagfd );};};_dddfb .BitsPerComponent =targetBitsPerComponent ;
if _dddfb .BitsPerComponent < 8{_dddfb .resampleLowBits (_cccda );return ;};_ffeab :=_ae .BytesPerLine (int (_dddfb .Width ),int (_dddfb .BitsPerComponent ),_dddfb .ColorComponents );_bbeg :=make ([]byte ,_ffeab *int (_dddfb .Height ));var (_edcd ,_cgfbb ,_dcgg ,_afdb int ;
_defa uint32 ;);for _dcgg =0;_dcgg < int (_dddfb .Height );_dcgg ++{_edcd =_dcgg *_ffeab ;_cgfbb =(_dcgg +1)*_ffeab -1;_dcgaa :=_bgb .ResampleUint32 (_cccda [_edcd :_cgfbb ],int (targetBitsPerComponent ),8);for _afdb ,_defa =range _dcgaa {_bbeg [_afdb +_edcd ]=byte (_defa );
};};_dddfb .Data =_bbeg ;};func _bbgdd (_cebf _bc .ReadSeeker ,_ddgc *ReaderOpts ,_dadbb bool ,_gfdce string )(*PdfReader ,error ){if _ddgc ==nil {_ddgc =NewReaderOpts ();};_edgac :="";if _afgfe ,_cbgac :=_cebf .(*_bgd .File );_cbgac {_edgac =_afgfe .Name ();
};_bbef :=*_ddgc ;_cbabe :=&PdfReader {_afccd :_cebf ,_ggebf :map[_df .PdfObject ]struct{}{},_fgdef :_fgeg (),_caabc :_ddgc .LazyLoad ,_dgcdb :_ddgc .ComplianceMode ,_decbb :_dadbb ,_bfcca :&_bbef ,_gfeacb :_edgac };_bcfgd ,_ccddf :=_eaddc ("\u0072");if _ccddf !=nil {return nil ,_ccddf ;
};_ccddf =_ede .Track (_bcfgd ,_gfdce ,_cbabe ._gfeacb );if _ccddf !=nil {return nil ,_ccddf ;};_cbabe ._gcbfb =_bcfgd ;var _bdfab *_df .PdfParser ;if !_cbabe ._dgcdb {_bdfab ,_ccddf =_df .NewParser (_cebf );}else {_bdfab ,_ccddf =_df .NewCompliancePdfParser (_cebf );
};if _ccddf !=nil {return nil ,_ccddf ;};_cbabe ._fcaac =_bdfab ;_defae ,_ccddf :=_cbabe .IsEncrypted ();if _ccddf !=nil {return nil ,_ccddf ;};if !_defae {_ccddf =_cbabe .loadStructure ();if _ccddf !=nil {return nil ,_ccddf ;};}else if _dadbb {_bcfge ,_bcge :=_cbabe .Decrypt ([]byte (_ddgc .Password ));
if _bcge !=nil {return nil ,_bcge ;};if !_bcfge {return nil ,_fa .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_cbabe ._cdgdd =make (map[*PdfReader ]*PdfReader );_cbabe ._agfcg =make ([]*PdfReader ,_bdfab .GetRevisionNumber ());return _cbabe ,nil ;};func (_dagf *PdfWriter )optimizeDocument ()error {if _dagf ._ecfag ==nil {return nil ;};_febgee ,_ffebe :=_df .GetDict (_dagf ._edaec );
if !_ffebe {return _fa .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_abbab :=_af .Document {ID :[2]string {_dagf ._ddedfd ,_dagf ._abbbdg },Version :_dagf ._bbagfg ,Objects :_dagf ._bbedb ,Info :_febgee ,Crypt :_dagf ._geefe ,UseHashBasedID :_dagf ._cbadb };
if _dcafe :=_dagf ._ecfag .ApplyStandard (&_abbab );_dcafe !=nil {return _dcafe ;};_dagf ._ddedfd ,_dagf ._abbbdg =_abbab .ID [0],_abbab .ID [1];_dagf ._bbagfg =_abbab .Version ;_dagf ._bbedb =_abbab .Objects ;_dagf ._edaec .PdfObject =_abbab .Info ;_dagf ._cbadb =_abbab .UseHashBasedID ;
_dagf ._geefe =_abbab .Crypt ;_afcgf :=make (map[_df .PdfObject ]struct{},len (_dagf ._bbedb ));for _ ,_gfcec :=range _dagf ._bbedb {_afcgf [_gfcec ]=struct{}{};};_dagf ._bfaf =_afcgf ;return nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_baac PdfModel ;_eabc *_df .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_df .PdfObjectName ;T *_df .PdfObjectString ;TU *_df .PdfObjectString ;TM *_df .PdfObjectString ;Ff *_df .PdfObjectInteger ;
V _df .PdfObject ;DV _df .PdfObject ;AA _df .PdfObject ;VariableText *VariableText ;};type pdfFont interface{_fc .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_df .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// PrintClip returns the value of the printClip.
func (_acaag *ViewerPreferences )PrintClip ()PageBoundary {return _acaag ._dgce };var (StructureTypeDocument ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074";StructureTypePart ="\u0050\u0061\u0072\u0074";StructureTypeArticle ="\u0041\u0072\u0074";StructureTypeSection ="\u0053\u0065\u0063\u0074";
StructureTypeDivision ="\u0044\u0069\u0076";StructureTypeBlockQuote ="\u0042\u006c\u006f\u0063\u006b\u0051\u0075\u006f\u0074\u0065";StructureTypeCaption ="\u0043a\u0070\u0074\u0069\u006f\u006e";StructureTypeTOC ="\u0054\u004f\u0043";StructureTypeTOCI ="\u0054\u004f\u0043\u0049";
StructureTypeIndex ="\u0049\u006e\u0064e\u0078";StructureTypeNonStructural ="\u004eo\u006e\u0053\u0074\u0072\u0075\u0063t";StructureTypePrivate ="\u0050r\u0069\u0076\u0061\u0074\u0065";);

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _df .PdfObject ;IC _df .PdfObject ;BE _df .PdfObject ;RD _df .PdfObject ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func _cccgc (_gaea _df .PdfObject )(string ,error ){_gaea =_df .TraceToDirectObject (_gaea );switch _cbfef :=_gaea .(type ){case *_df .PdfObjectString :return _cbfef .Str (),nil ;case *_df .PdfObjectStream :_acce ,_dgfcfg :=_df .DecodeStream (_cbfef );
if _dgfcfg !=nil {return "",_dgfcfg ;};return string (_acce ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_gaea );
};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_dbd :=&PdfAnnotation {};_dbd ._cdd =_df .MakeIndirectObject (_df .MakeDict ());return _dbd ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _dd .Time ){_effdf .Lock ();defer _effdf .Unlock ();_egbfaee =creationDate ;};

// NewKDictFromPdfObject creates a new K dictionary object from a PDF object.
func NewKDictFromPdfObject (obj _df .PdfObject )(*KDict ,error ){_bdbde :=_df .ResolveReference (obj );if _bdbde ==nil {return nil ,_e .Errorf ("\u004b \u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_gecg ,_abafc :=_df .GetDict (_bdbde );
if !_abafc {return nil ,_e .Errorf ("\u004b\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074 \u0061 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_abfb :=&KDict {};if _fagdc :=_gecg .Get ("\u0053");_fagdc !=nil {_abfb .S =_fagdc ;
};if _ecaga :=_gecg .Get ("\u0050");_ecaga !=nil {_abfb .P =_ecaga ;};if _gbadc :=_gecg .Get ("\u0049\u0044");_gbadc !=nil {if _fdfef ,_cabfe :=_df .GetString (_gbadc );_cabfe {_abfb .ID =_fdfef ;};};if _gbgd :=_gecg .Get ("\u0050\u0067");_gbgd !=nil {_abfb .Pg =_gbgd ;
};if _eeaec :=_gecg .Get ("\u004b");_eeaec !=nil {_abfb .K =_eeaec ;switch _ecgg :=_eeaec .(type ){case *_df .PdfObjectArray :if _eagcf ,_ceffe :=_df .GetArray (_eeaec );_ceffe {for _ ,_deeee :=range _eagcf .Elements (){switch _gdagd :=_deeee .(type ){case *_df .PdfIndirectObject :_cbcg ,_egbfa :=NewKDictFromPdfObject (_gdagd );
if _egbfa !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_egbfa );continue ;};_abfb ._cgaed =append (_abfb ._cgaed ,&KValue {_dccg :_cbcg });
case *_df .PdfObjectInteger :if _facgf ,_fbcg :=_df .GetIntVal (_deeee );_fbcg {_abfb ._cgaed =append (_abfb ._cgaed ,&KValue {_agabbd :&_facgf });};case *_df .PdfObjectDictionary :_abfb ._cgaed =append (_abfb ._cgaed ,&KValue {_dffeb :_deeee });};};};
case *_df .PdfIndirectObject :_ddcac ,_bdgga :=NewKDictFromPdfObject (_ecgg );if _bdgga !=nil {_dda .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_bdgga );
};if _ddcac !=nil {_abfb ._cgaed =append (_abfb ._cgaed ,&KValue {_dccg :_ddcac });};case *_df .PdfObjectDictionary :_abfb ._cgaed =append (_abfb ._cgaed ,&KValue {_dffeb :_ecgg });case *_df .PdfObjectInteger :if _cabaa ,_egedbc :=_df .GetIntVal (_eeaec );
_egedbc {_abfb ._cgaed =append (_abfb ._cgaed ,&KValue {_agabbd :&_cabaa });};};};if _eedbb :=_gecg .Get ("\u0041");_eedbb !=nil {_abfb .A =_eedbb ;};if _bgdbge :=_gecg .Get ("\u0043");_bgdbge !=nil {_abfb .C =_bgdbge ;};if _fbdc :=_gecg .Get ("\u0052");
_fbdc !=nil {if _cceec ,_afgfcc :=_df .GetInt (_fbdc );_afgfcc {_abfb .R =_cceec ;};};if _becba :=_gecg .Get ("\u0054");_becba !=nil {if _gdffdf ,_bbade :=_df .GetString (_becba );_bbade {_abfb .T =_gdffdf ;};};if _eefbg :=_gecg .Get ("\u004c\u0061\u006e\u0067");
_eefbg !=nil {if _babca ,_aebaa :=_df .GetString (_eefbg );_aebaa {_abfb .Lang =_babca ;};};if _fcagg :=_gecg .Get ("\u0041\u006c\u0074");_fcagg !=nil {if _ffegd ,_cefgb :=_df .GetString (_fcagg );_cefgb {_abfb .Alt =_ffegd ;};};if _ecbfc :=_gecg .Get ("\u0045");
_ecbfc !=nil {if _degag ,_accea :=_df .GetString (_ecbfc );_accea {_abfb .E =_degag ;};};if _afagea :=_gecg .Get ("\u0041\u0063\u0074\u0075\u0061\u006c\u0054\u0065\u0078\u0074");_afagea !=nil {if _gfbe ,_fggae :=_df .GetString (_afagea );_fggae {_abfb .ActualText =_gfbe ;
};};return _abfb ,nil ;};var (StructureTypeSpan ="\u0053\u0070\u0061\u006e";StructureTypeQuote ="\u0051\u0075\u006ft\u0065";StructureTypeNote ="\u004e\u006f\u0074\u0065";StructureTypeReference ="\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e";StructureTypeBibliography ="\u0042\u0069\u0062\u0045\u006e\u0074\u0072\u0079";
StructureTypeCode ="\u0043\u006f\u0064\u0065";StructureTypeLink ="\u004c\u0069\u006e\u006b";StructureTypeAnnot ="\u0041\u006e\u006eo\u0074";StructureTypeRuby ="\u0052\u0075\u0062\u0079";StructureTypeWarichu ="\u0057a\u0072\u0069\u0063\u0068\u0075";StructureTypeRubyBase ="\u0052\u0042";
StructureTypeRubyText ="\u0052\u0054";StructureTypeRubyPunctuation ="\u0052\u0050";StructureTypeWarichuText ="\u0057\u0054";StructureTypeWarichuPunctuation ="\u0057\u0050";StructureTypeFigure ="\u0046\u0069\u0067\u0075\u0072\u0065";StructureTypeFormula ="\u0046o\u0072\u006d\u0075\u006c\u0061";
StructureTypeForm ="\u0046\u006f\u0072\u006d";);

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_eegc *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=_eegc .GetNumComponents (){return nil ,_fa .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abbbe ,_caee :=_df .GetNumbersAsFloat (objects );
if _caee !=nil {return nil ,_caee ;};return _eegc .ColorFromFloats (_abbbe );};func _cebcf (_abdc _df .PdfObject )*Names {_dbbee :=_defef ();_gdabd :=_df .TraceToDirectObject (_abdc ).(*_df .PdfObjectDictionary );if _ggbff :=_gdabd .Get ("\u0044\u0065\u0073t\u0073");
_ggbff !=nil {_dbbee .Dests =_df .TraceToDirectObject (_ggbff ).(*_df .PdfObjectDictionary );};if _dcca :=_gdabd .Get ("\u0041\u0050");_dcca !=nil {_dbbee .AP =_df .TraceToDirectObject (_dcca ).(*_df .PdfObjectDictionary );};if _gfgde :=_gdabd .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");
_gfgde !=nil {_dbbee .JavaScript =_df .TraceToDirectObject (_gfgde ).(*_df .PdfObjectDictionary );};if _abcb :=_gdabd .Get ("\u0050\u0061\u0067e\u0073");_abcb !=nil {_dbbee .Pages =_df .TraceToDirectObject (_abcb ).(*_df .PdfObjectDictionary );};if _egfde :=_gdabd .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");
_egfde !=nil {_dbbee .Templates =_df .TraceToDirectObject (_egfde ).(*_df .PdfObjectDictionary );};if _ggbeg :=_gdabd .Get ("\u0049\u0044\u0053");_ggbeg !=nil {_dbbee .IDS =_df .TraceToDirectObject (_ggbeg ).(*_df .PdfObjectDictionary );};if _debf :=_gdabd .Get ("\u0055\u0052\u004c\u0053");
_debf !=nil {_dbbee .URLS =_df .TraceToDirectObject (_debf ).(*_df .PdfObjectDictionary );};if _bdafd :=_gdabd .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");_bdafd !=nil {_dbbee .EmbeddedFiles =_df .TraceToDirectObject (_bdafd ).(*_df .PdfObjectDictionary );
};if _gdcaa :=_gdabd .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");_gdcaa !=nil {_dbbee .AlternatePresentations =_df .TraceToDirectObject (_gdcaa ).(*_df .PdfObjectDictionary );
};if _bfcge :=_gdabd .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_bfcge !=nil {_dbbee .Renditions =_df .TraceToDirectObject (_bfcge ).(*_df .PdfObjectDictionary );};return _dbbee ;};

// ToPdfObject implements interface PdfModel.
func (_fccb *PdfAnnotationUnderline )ToPdfObject ()_df .PdfObject {_fccb .PdfAnnotation .ToPdfObject ();_bcbd :=_fccb ._cdd ;_ggcfb :=_bcbd .PdfObject .(*_df .PdfObjectDictionary );_fccb .PdfAnnotationMarkup .appendToPdfDictionary (_ggcfb );_ggcfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ggcfb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fccb .QuadPoints );return _bcbd ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_agd :=NewPdfAction ();_gfe :=&PdfActionGoTo {};_gfe .PdfAction =_agd ;_agd .SetContext (_gfe );return _gfe ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_aabdg *PdfSignature )GetDocMDPPermission ()(_aae .DocMDPPermission ,bool ){for _ ,_ebdfb :=range _aabdg .Reference .Elements (){if _addec ,_fcafd :=_df .GetDict (_ebdfb );_fcafd {if _gfagd ,_bbca :=_df .GetNameVal (_addec .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_bbca &&_gfagd =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _cdbec ,_bceff :=_df .GetDict (_addec .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_bceff {if P ,_fgfaf :=_df .GetIntVal (_cdbec .Get ("\u0050"));_fgfaf {return _aae .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};func _ebefb (_cfbef *_df .PdfIndirectObject )(*PdfOutline ,error ){_bcdbc ,_efdda :=_cfbef .PdfObject .(*_df .PdfObjectDictionary );if !_efdda {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aafaaf :=NewPdfOutline ();if _acade :=_bcdbc .Get ("\u0054\u0079\u0070\u0065");_acade !=nil {_ecefg ,_cffde :=_acade .(*_df .PdfObjectName );if _cffde {if *_ecefg !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_dda .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_ecefg );
};};};if _acgdg :=_bcdbc .Get ("\u0043\u006f\u0075n\u0074");_acgdg !=nil {_effae ,_badaf :=_df .GetNumberAsInt64 (_acgdg );if _badaf !=nil {return nil ,_badaf ;};_aafaaf .Count =&_effae ;};return _aafaaf ,nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func (_gcc *PdfReader )newPdfActionMovieFromDict (_fec *_df .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_fec .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_fec .Get ("\u0054"),Operation :_fec .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_aga *PdfAnnotation )GetContext ()PdfModel {if _aga ==nil {return nil ;};return _aga ._bcaf ;};

// SetRefObject sets the reference object for the KValue.
func (_efeag *KValue )SetRefObject (refObject _df .PdfObject ){_efeag .Clear ();_efeag ._dffeb =refObject ;};

// String returns a string that describes `font`.
func (_gcae *PdfFont )String ()string {_adgaf :="";if _gcae ._bbeb .Encoder ()!=nil {_adgaf =_gcae ._bbeb .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gcae ._bbeb ,_gcae .baseFields ().coreString (),_adgaf );
};func _baae (_egac _df .PdfObject )(*PdfColorspaceCalGray ,error ){_fgfe :=NewPdfColorspaceCalGray ();if _faagd ,_fbfgc :=_egac .(*_df .PdfIndirectObject );_fbfgc {_fgfe ._agfe =_faagd ;};_egac =_df .TraceToDirectObject (_egac );_afcc ,_cagb :=_egac .(*_df .PdfObjectArray );
if !_cagb {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _afcc .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_egac =_df .TraceToDirectObject (_afcc .Get (0));_ebfg ,_cagb :=_egac .(*_df .PdfObjectName );if !_cagb {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ebfg !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_egac =_df .TraceToDirectObject (_afcc .Get (1));
_ddce ,_cagb :=_egac .(*_df .PdfObjectDictionary );if !_cagb {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};
_egac =_ddce .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_egac =_df .TraceToDirectObject (_egac );_gbca ,_cagb :=_egac .(*_df .PdfObjectArray );if !_cagb {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _gbca .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cfeb ,_caff :=_gbca .GetAsFloat64Slice ();
if _caff !=nil {return nil ,_caff ;};_fgfe .WhitePoint =_cfeb ;_egac =_ddce .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _egac !=nil {_egac =_df .TraceToDirectObject (_egac );_dabe ,_fgdg :=_egac .(*_df .PdfObjectArray );if !_fgdg {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _dabe .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ffbd ,_efabd :=_dabe .GetAsFloat64Slice ();
if _efabd !=nil {return nil ,_efabd ;};_fgfe .BlackPoint =_ffbd ;};_egac =_ddce .Get ("\u0047\u0061\u006dm\u0061");if _egac !=nil {_egac =_df .TraceToDirectObject (_egac );_faef ,_ecaa :=_df .GetNumberAsFloat (_egac );if _ecaa !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_fgfe .Gamma =_faef ;};return _fgfe ,nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _df .PdfObject ;Dest _df .PdfObject ;H _df .PdfObject ;PA _df .PdfObject ;QuadPoints _df .PdfObject ;BS _df .PdfObject ;_dadd *PdfAction ;_efe *PdfReader ;};

// ToInteger convert to an integer format.
func (_ebbgd *PdfColorCalGray )ToInteger (bits int )uint32 {_fgce :=_fe .Pow (2,float64 (bits ))-1;return uint32 (_fgce *_ebbgd .Val ());};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_eefacc *PdfPattern )GetContext ()PdfModel {return _eefacc ._ggcbe };

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_acdgd ,_eebd :=_bgd .ReadFile (path );if _eebd !=nil {return nil ,_eebd ;};_gggb :=_faf .Detect (_acdgd );_gedf :=_bg .Sum (_acdgd );_ecdb :=&EmbeddedFile {Name :_gcb .Base (path ),Content :_acdgd ,FileType :_gggb .String (),Hash :_eee .EncodeToString (_gedf [:])};
return _ecdb ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_dcebb *XObjectImage )ToImage ()(*Image ,error ){_agaba :=&Image {};if _dcebb .Height ==nil {return nil ,_fa .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_agaba .Height =*_dcebb .Height ;if _dcebb .Width ==nil {return nil ,_fa .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_agaba .Width =*_dcebb .Width ;if _dcebb .BitsPerComponent ==nil {switch _dcebb .Filter .(type ){case *_df .CCITTFaxEncoder ,*_df .JBIG2Encoder :_agaba .BitsPerComponent =1;
case *_df .LZWEncoder ,*_df .RunLengthEncoder :_agaba .BitsPerComponent =8;default:return nil ,_fa .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_agaba .BitsPerComponent =*_dcebb .BitsPerComponent ;};_agaba .ColorComponents =_dcebb .ColorSpace .GetNumComponents ();_dcebb ._gafba .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_df .MakeInteger (int64 (_agaba .ColorComponents )));
_dbfa ,_agbed :=_df .DecodeStream (_dcebb ._gafba );if _agbed !=nil {return nil ,_agbed ;};_agaba .Data =_dbfa ;if _dcebb .Decode !=nil {_bbfdf ,_degce :=_dcebb .Decode .(*_df .PdfObjectArray );if !_degce {_dda .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_fa .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_gagagdc ,_abaed :=_bbfdf .ToFloat64Array ();if _abaed !=nil {return nil ,_abaed ;};switch _dcebb .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_ddfae :=_dcebb .ColorSpace .DecodeArray ();
if _ddfae [0]==_gagagdc [0]&&_ddfae [1]==_gagagdc [1]&&_ddfae [2]==_gagagdc [2]&&_ddfae [3]==_gagagdc [3]{_agaba ._gdfe =_gagagdc ;};default:_agaba ._gdfe =_gagagdc ;};};return _agaba ,nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_gaeb *PdfPattern )IsShading ()bool {return _gaeb .PatternType ==2};

// SetBorderWidth sets the style's border width.
func (_dbegb *PdfBorderStyle )SetBorderWidth (width float64 ){_dbegb .W =&width };

// SetCatalogLanguage sets the catalog language.
func (_begbf *PdfWriter )SetCatalogLanguage (lang _df .PdfObject )error {if lang ==nil {_begbf ._afacf .Remove ("\u004c\u0061\u006e\u0067");return nil ;};_begbf .addObject (lang );_begbf ._afacf .Set ("\u004c\u0061\u006e\u0067",lang );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ca *PdfActionURI )ToPdfObject ()_df .PdfObject {_ca .PdfAction .ToPdfObject ();_fba :=_ca ._dfc ;_ddcd :=_fba .PdfObject .(*_df .PdfObjectDictionary );_ddcd .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeURI )));_ddcd .SetIfNotNil ("\u0055\u0052\u0049",_ca .URI );
_ddcd .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ca .IsMap );return _fba ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_fdbef *Image )ConvertToBinary ()error {if _fdbef .ColorComponents ==1&&_fdbef .BitsPerComponent ==1{return nil ;};_aeed ,_gfcgd :=_fdbef .ToGoImage ();if _gfcgd !=nil {return _gfcgd ;};_fcdfa ,_gfcgd :=_ae .MonochromeConverter .Convert (_aeed );
if _gfcgd !=nil {return _gfcgd ;};_fdbef .Data =_fcdfa .Base ().Data ;_fdbef ._bggcb ,_gfcgd =_ae .ScaleAlphaToMonochrome (_fdbef ._bggcb ,int (_fdbef .Width ),int (_fdbef .Height ));if _gfcgd !=nil {return _gfcgd ;};_fdbef .BitsPerComponent =1;_fdbef .ColorComponents =1;
_fdbef ._gdfe =nil ;return nil ;};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_cafdf *PdfReader )GetCatalogViewerPreferences ()(_df .PdfObject ,bool ){if _cafdf ._aeeb ==nil {return nil ,false ;};_eecbf :=_cafdf ._aeeb .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _eecbf ,_eecbf !=nil ;};

// WriteToFile writes the output PDF to file.
func (_edceg *PdfWriter )WriteToFile (outputFilePath string )error {_agefg ,_cbcbf :=_bgd .Create (outputFilePath );if _cbcbf !=nil {return _cbcbf ;};defer _agefg .Close ();return _edceg .Write (_agefg );};

// SetPageNumber sets the page number.
func (_dabga *KDict )SetPageNumber (pageNumber int64 ){_dabga ._efgaf =pageNumber };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_afafa SignatureValidationResult )String ()string {var _ffefe _c .Buffer ;_ffefe .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_afafa .Name ));
if _afafa .Date ._fcbeg > 0{_ffefe .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_afafa .Date .ToGoTime ().String ()));}else {_ffefe .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_afafa .Reason )> 0{_ffefe .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_afafa .Reason ));}else {_ffefe .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_afafa .Location )> 0{_ffefe .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_afafa .Location ));}else {_ffefe .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_afafa .ContactInfo )> 0{_ffefe .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_afafa .ContactInfo ));}else {_ffefe .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_ffefe .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_afafa .Fields )));if _afafa .IsSigned {_ffefe .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_ffefe .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _afafa .IsVerified {_ffefe .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_ffefe .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _afafa .IsTrusted {_ffefe .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_ffefe .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_afafa .GeneralizedTime .IsZero (){_ffefe .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_afafa .GeneralizedTime .String ()));
};if _afafa .DiffResults !=nil {_ffefe .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_afafa .DiffResults .IsPermitted ()));if len (_afafa .DiffResults .Warnings )> 0{_ffefe .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_ebgb :=range _afafa .DiffResults .Warnings {_ffefe .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_ebgb ));};};if len (_afafa .DiffResults .Errors )> 0{_ffefe .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_gdaca :=range _afafa .DiffResults .Errors {_ffefe .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_gdaca ));};};};if _afafa .IsCrlFound {_ffefe .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_ffefe .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _afafa .IsOcspFound {_ffefe .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_ffefe .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _ffefe .String ();};