//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_gb "bufio";_dff "bytes";_af "crypto/md5";_ff "crypto/rand";_df "crypto/sha1";_bd "crypto/x509";_e "encoding/binary";_de "encoding/hex";_gea "errors";_c "fmt";_fd "github.com/gabriel-vasile/mimetype";_ec "github.com/unidoc/pkcs7";
_ed "github.com/unidoc/unipdf/v3/common";_bda "github.com/unidoc/unipdf/v3/core";_aa "github.com/unidoc/unipdf/v3/core/security";_dc "github.com/unidoc/unipdf/v3/core/security/crypt";_dfe "github.com/unidoc/unipdf/v3/internal/cmap";_bg "github.com/unidoc/unipdf/v3/internal/imageutil";
_dfb "github.com/unidoc/unipdf/v3/internal/license";_cf "github.com/unidoc/unipdf/v3/internal/sampling";_dgb "github.com/unidoc/unipdf/v3/internal/textencoding";_ded "github.com/unidoc/unipdf/v3/internal/timeutils";_dfa "github.com/unidoc/unipdf/v3/internal/transform";
_bdd "github.com/unidoc/unipdf/v3/internal/uuid";_bc "github.com/unidoc/unipdf/v3/model/internal/docutil";_geg "github.com/unidoc/unipdf/v3/model/internal/fonts";_gef "github.com/unidoc/unipdf/v3/model/mdp";_bdf "github.com/unidoc/unipdf/v3/model/sigutil";
_gag "github.com/unidoc/unipdf/v3/ps";_gbb "github.com/unidoc/unitype";_gegg "golang.org/x/xerrors";_cg "hash";_f "image";_gbf "image/color";_ "image/gif";_ "image/png";_ga "io";_ce "math";_b "math/rand";_dfc "os";_cbb "path/filepath";_da "regexp";_cb "sort";
_dg "strconv";_ab "strings";_d "sync";_ad "time";_gd "unicode";_a "unicode/utf8";);

// GetNumComponents returns the number of color components (1 for Separation).
func (_agab *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// SetShadingByName sets a shading resource specified by keyName.
func (_eadac *PdfPageResources )SetShadingByName (keyName _bda .PdfObjectName ,shadingObj _bda .PdfObject )error {if _eadac .Shading ==nil {_eadac .Shading =_bda .MakeDict ();};_ffcfb ,_effgd :=_bda .GetDict (_eadac .Shading );if !_effgd {return _bda .ErrTypeError ;
};_ffcfb .Set (keyName ,shadingObj );return nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_afgg *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bda .PdfObject ;Popup *PdfAnnotationPopup ;CA _bda .PdfObject ;RC _bda .PdfObject ;CreationDate _bda .PdfObject ;IRT _bda .PdfObject ;Subj _bda .PdfObject ;RT _bda .PdfObject ;IT _bda .PdfObject ;ExData _bda .PdfObject ;
};

// GetPageNumber returns the page number that has been assigned to the K object.
func (_agecf *KDict )GetPageNumber ()int64 {return _agecf ._adceg };

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_gdfe :=NewPdfAnnotation ();_dde :=&PdfAnnotationStrikeOut {};_dde .PdfAnnotation =_gdfe ;_dde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdfe .SetContext (_dde );return _dde ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cbaf *PdfPageResourcesColorspaces )ToPdfObject ()_bda .PdfObject {_adbca :=_bda .MakeDict ();for _ ,_dafg :=range _cbaf .Names {_adbca .Set (_bda .PdfObjectName (_dafg ),_cbaf .Colorspaces [_dafg ].ToPdfObject ());};if _cbaf ._agbc !=nil {_cbaf ._agbc .PdfObject =_adbca ;
return _cbaf ._agbc ;};return _adbca ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_fdege []_bda .PdfObject )([]_bda .PdfObject ,error );};

// GetPageIndirectObject returns the indirect object of page for the specified page number.
func (_fabgda *PdfWriter )GetPageIndirectObject (pageNum int )(*_bda .PdfIndirectObject ,error ){if pageNum < 0||pageNum >=len (_fabgda ._dgdfe ){return nil ,_gea .New ("\u0070a\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006fu\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065");
};return _fabgda ._dgdfe [pageNum ],nil ;};var (StructureTypeDocument ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074";StructureTypePart ="\u0050\u0061\u0072\u0074";StructureTypeArticle ="\u0041\u0072\u0074";StructureTypeSection ="\u0053\u0065\u0063\u0074";
StructureTypeDivision ="\u0044\u0069\u0076";StructureTypeBlockQuote ="\u0042\u006c\u006f\u0063\u006b\u0051\u0075\u006f\u0074\u0065";StructureTypeCaption ="\u0043a\u0070\u0074\u0069\u006f\u006e";StructureTypeTOC ="\u0054\u004f\u0043";StructureTypeTOCI ="\u0054\u004f\u0043\u0049";
StructureTypeIndex ="\u0049\u006e\u0064e\u0078";StructureTypeNonStructural ="\u004eo\u006e\u0053\u0074\u0072\u0075\u0063t";StructureTypePrivate ="\u0050r\u0069\u0076\u0061\u0074\u0065";);

// SetContext sets the sub annotation (context).
func (_caga *PdfAnnotation )SetContext (ctx PdfModel ){_caga ._fdeb =ctx };

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_eb :=NewPdfAction ();_cfb :=&PdfActionSound {};_cfb .PdfAction =_eb ;_eb .SetContext (_cfb );return _cfb ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_gfefc *PdfPage )GetContainingPdfObject ()_bda .PdfObject {return _gfefc ._eebfa };

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_aab :=NewPdfAnnotation ();_fdc :=&PdfAnnotationPolygon {};_fdc .PdfAnnotation =_aab ;_fdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aab .SetContext (_fdc );return _fdc ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_acgbb *Image )Resample (targetBitsPerComponent int64 ){if _acgbb .BitsPerComponent ==targetBitsPerComponent {return ;};_dbce :=_acgbb .GetSamples ();if targetBitsPerComponent < _acgbb .BitsPerComponent {_bdeda :=_acgbb .BitsPerComponent -targetBitsPerComponent ;
for _gcccg :=range _dbce {_dbce [_gcccg ]>>=uint (_bdeda );};}else if targetBitsPerComponent > _acgbb .BitsPerComponent {_eegad :=targetBitsPerComponent -_acgbb .BitsPerComponent ;for _adeaf :=range _dbce {_dbce [_adeaf ]<<=uint (_eegad );};};_acgbb .BitsPerComponent =targetBitsPerComponent ;
if _acgbb .BitsPerComponent < 8{_acgbb .resampleLowBits (_dbce );return ;};_abdfd :=_bg .BytesPerLine (int (_acgbb .Width ),int (_acgbb .BitsPerComponent ),_acgbb .ColorComponents );_bcgaa :=make ([]byte ,_abdfd *int (_acgbb .Height ));var (_dgfcec ,_afbg ,_eabe ,_bdfdf int ;
_cbfc uint32 ;);for _eabe =0;_eabe < int (_acgbb .Height );_eabe ++{_dgfcec =_eabe *_abdfd ;_afbg =(_eabe +1)*_abdfd -1;_feade :=_cf .ResampleUint32 (_dbce [_dgfcec :_afbg ],int (targetBitsPerComponent ),8);for _bdfdf ,_cbfc =range _feade {_bcgaa [_bdfdf +_dgfcec ]=byte (_cbfc );
};};_acgbb .Data =_bcgaa ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_efbeg *PdfPage )AddExtGState (name _bda .PdfObjectName ,egs *_bda .PdfObjectDictionary )error {if _efbeg .Resources ==nil {_efbeg .Resources =NewPdfPageResources ();};if _efbeg .Resources .ExtGState ==nil {_efbeg .Resources .ExtGState =_bda .MakeDict ();
};_ccdde ,_aafa :=_bda .TraceToDirectObject (_efbeg .Resources .ExtGState ).(*_bda .PdfObjectDictionary );if !_aafa {_ed .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bda .TraceToDirectObject (_efbeg .Resources .ExtGState ));
return _gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ccdde .Set (name ,egs );return nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_bdaa :=&PdfColorspaceLab {};_bdaa .BlackPoint =[]float64 {0.0,0.0,0.0};_bdaa .Range =[]float64 {-100,100,-100,100};return _bdaa ;};func (_fcgd *PdfReader )newPdfAnnotationLinkFromDict (_ebc *_bda .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_affg :=PdfAnnotationLink {};
_affg .A =_ebc .Get ("\u0041");_affg .Dest =_ebc .Get ("\u0044\u0065\u0073\u0074");_affg .H =_ebc .Get ("\u0048");_affg .PA =_ebc .Get ("\u0050\u0041");_affg .QuadPoints =_ebc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_affg .BS =_ebc .Get ("\u0042\u0053");
return &_affg ,nil ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_cebba *KDict )ToPdfObject ()_bda .PdfObject {_cfagf :=_bda .MakeDict ();if _cebba .ID !=nil {_cfagf .Set ("\u0049\u0044",_cebba .ID );};if _cebba .K !=nil {_cfagf .Set ("\u004b",_cebba .K );}else if len (_cebba ._fcbda )> 0{if len (_cebba ._fcbda )==1{_cebba .K =_cebba ._fcbda [0].ToPdfObject ();
}else {_fegef :=_bda .MakeArray ();for _ ,_aegb :=range _cebba ._fcbda {_fegef .Append (_aegb .ToPdfObject ());};_cebba .K =_fegef ;};_cfagf .Set ("\u004b",_cebba .K );};if _cebba .S !=nil {_cfagf .Set ("\u0053",_cebba .S );};if _cebba .P !=nil {_cfagf .Set ("\u0050",_cebba .P );
};if _cebba .Pg !=nil {_cfagf .Set ("\u0050\u0067",_cebba .Pg );};if _cebba .C !=nil {_cfagf .Set ("\u0043",_cebba .C );};if _cebba .R !=nil {_cfagf .Set ("\u0052",_cebba .R );};if _cebba .T !=nil {_cfagf .Set ("\u0054",_cebba .T );};if _cebba .Lang !=nil {_cfagf .Set ("\u004c\u0061\u006e\u0067",_cebba .Lang );
};if _cebba .Alt !=nil {_cfagf .Set ("\u0041\u006c\u0074",_cebba .Alt );};if _cebba .E !=nil {_cfagf .Set ("\u0045",_cebba .E );};if _cebba .A !=nil {_cfagf .Set ("\u0041",_cebba .A );}else if _cebba ._fdec !=nil {_dcdgf :=_bda .MakeArrayFromFloats ([]float64 {_cebba ._fdec .Llx ,_cebba ._fdec .Lly ,_cebba ._fdec .Urx ,_cebba ._fdec .Ury });
_fegaa :=_bda .MakeDict ();_fegaa .Set ("\u0042\u0042\u006f\u0078",_dcdgf );_fegaa .Set ("\u004f",_bda .MakeString ("\u004c\u0061\u0079\u006f\u0075\u0074"));_cfagf .Set ("\u0041",_bda .MakeIndirectObject (_fegaa ));};return _cfagf ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_edeb *PdfColorspaceLab )GetNumComponents ()int {return 3};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_gef .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ad .Time ;};

// R returns the value of the red component of the color.
func (_fbge *PdfColorDeviceRGB )R ()float64 {return _fbge [0]};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_bdgd *PdfField )ToPdfObject ()_bda .PdfObject {_fccge :=_bdgd ._ceaeg ;_fdfcc :=_fccge .PdfObject .(*_bda .PdfObjectDictionary );_ecbca :=_bda .MakeArray ();for _ ,_fdeg :=range _bdgd .Kids {_ecbca .Append (_fdeg .ToPdfObject ());};for _ ,_egef :=range _bdgd .Annotations {if _egef ._ged !=_bdgd ._ceaeg {_ecbca .Append (_egef .GetContext ().ToPdfObject ());
};};if _bdgd .Parent !=nil {_fdfcc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bdgd .Parent .GetContainingPdfObject ());};if _ecbca .Len ()> 0{_fdfcc .Set ("\u004b\u0069\u0064\u0073",_ecbca );};_fdfcc .SetIfNotNil ("\u0046\u0054",_bdgd .FT );
_fdfcc .SetIfNotNil ("\u0054",_bdgd .T );_fdfcc .SetIfNotNil ("\u0054\u0055",_bdgd .TU );_fdfcc .SetIfNotNil ("\u0054\u004d",_bdgd .TM );_fdfcc .SetIfNotNil ("\u0046\u0066",_bdgd .Ff );_fdfcc .SetIfNotNil ("\u0056",_bdgd .V );_fdfcc .SetIfNotNil ("\u0044\u0056",_bdgd .DV );
_fdfcc .SetIfNotNil ("\u0041\u0041",_bdgd .AA );if _bdgd .VariableText !=nil {_fdfcc .SetIfNotNil ("\u0044\u0041",_bdgd .VariableText .DA );_fdfcc .SetIfNotNil ("\u0051",_bdgd .VariableText .Q );_fdfcc .SetIfNotNil ("\u0044\u0053",_bdgd .VariableText .DS );
_fdfcc .SetIfNotNil ("\u0052\u0056",_bdgd .VariableText .RV );};return _fccge ;};func (_faaeg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _ccae :=_faaeg ._bedea ;_ccae !=nil {return _ccae ;};return _faaeg ._edaf ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bda .PdfObject ;BS _bda .PdfObject ;LE _bda .PdfObject ;IC _bda .PdfObject ;LL _bda .PdfObject ;LLE _bda .PdfObject ;Cap _bda .PdfObject ;IT _bda .PdfObject ;LLO _bda .PdfObject ;CP _bda .PdfObject ;
Measure _bda .PdfObject ;CO _bda .PdfObject ;};func (_fdfe *PdfReader )newPdfActionTransFromDict (_ggfg *_bda .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ggfg .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gcdd pdfCIDFontType2 )GetCharMetrics (code _dgb .CharCode )(_geg .CharMetrics ,bool ){if _cefe ,_ddbd :=_gcdd ._eggf [code ];_ddbd {return _geg .CharMetrics {Wx :_cefe },true ;};_efcde :=rune (code );_cacdd ,_gbde :=_gcdd ._dgccg [_efcde ];if !_gbde {_cacdd =int (_gcdd ._bbagg );
};return _geg .CharMetrics {Wx :float64 (_cacdd )},true ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bda .PdfObject ;};

// SetCenterWindow sets the value of the centerWindow flag.
func (_bcecg *ViewerPreferences )SetCenterWindow (centerWindow bool ){_bcecg ._ecaag =&centerWindow };func (_ffece *PdfAppender )replaceObject (_bcae ,_deca _bda .PdfObject ){switch _bccd :=_bcae .(type ){case *_bda .PdfIndirectObject :_ffece ._ffge [_deca ]=_bccd .ObjectNumber ;
case *_bda .PdfObjectStream :_ffece ._ffge [_deca ]=_bccd .ObjectNumber ;};};

// Duplex represents the paper handling option that shall be used when printing
// the file from the print dialog.
type Duplex string ;

// Evaluate runs the function on the passed in slice and returns the results.
func (_aagg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ed .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bcccb :=[]float64 {0.0};if _aagg .C0 !=nil {_bcccb =_aagg .C0 ;};_gabcd :=[]float64 {1.0};if _aagg .C1 !=nil {_gabcd =_aagg .C1 ;};var _agaef []float64 ;for _gcdde :=0;_gcdde < len (_bcccb );_gcdde ++{_baefc :=_bcccb [_gcdde ]+_ce .Pow (x [0],_aagg .N )*(_gabcd [_gcdde ]-_bcccb [_gcdde ]);
_agaef =append (_agaef ,_baefc );};return _agaef ,nil ;};

// AddChild adds a child object.
func (_aacda *KDict )AddChild (kv *KValue ){_aacda ._fcbda =append (_aacda ._fcbda ,kv )};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bda .PdfObjectArray ;Domain *_bda .PdfObjectArray ;Function []PdfFunction ;Extend *_bda .PdfObjectArray ;};

// SetName sets the `Name` field of the signature.
func (_gdcbc *PdfSignature )SetName (name string ){_gdcbc .Name =_bda .MakeEncodedString (name ,true )};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bda .PdfObjectArray ;Matrix *_bda .PdfObjectArray ;Function []PdfFunction ;};

// A returns the value of the A component of the color.
func (_bbbe *PdfColorCalRGB )A ()float64 {return _bbbe [0]};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bda .PdfObject ;Name _bda .PdfObject ;State _bda .PdfObject ;StateModel _bda .PdfObject ;};

// BaseFont returns the font's "BaseFont" field.
func (_dfde *PdfFont )BaseFont ()string {return _dfde .baseFields ()._bcaebe };

// IsHideMenubar returns the value of the hideMenubar flag.
func (_fcfadd *ViewerPreferences )IsHideMenubar ()bool {if _fcfadd ._acbcd ==nil {return false ;};return *_fcfadd ._acbcd ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_ccbfc []byte ;_gddfa []uint32 ;_gdfcb *_bda .PdfObjectStream ;};

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_eaeee *PdfWriter )SetCatalogViewerPreferences (pref _bda .PdfObject )error {if pref ==nil {_eaeee ._geadba .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _dcbd ,_agcfa :=pref .(*_bda .PdfObjectReference );
_agcfa {pref =_dcbd .Resolve ();if pref ==nil {_eaeee ._geadba .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};_eaeee .addObject (pref );_eaeee ._geadba .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );
return nil ;};func _ggdb (_fbcd _bda .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_ecfe :=&PdfColorspaceDeviceNAttributes {};var _fbdf *_bda .PdfObjectDictionary ;switch _cdgca :=_fbcd .(type ){case *_bda .PdfIndirectObject :_ecfe ._dced =_cdgca ;
var _fbaga bool ;_fbdf ,_fbaga =_cdgca .PdfObject .(*_bda .PdfObjectDictionary );if !_fbaga {_ed .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_gea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bda .PdfObjectDictionary :_fbdf =_cdgca ;case *_bda .PdfObjectReference :_cgedf :=_cdgca .Resolve ();return _ggdb (_cgedf );default:_ed .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_gea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bgada :=_fbdf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bgada !=nil {_gegbd ,_dfcgc :=_bda .TraceToDirectObject (_bgada ).(*_bda .PdfObjectName );if !_dfcgc {_ed .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_gea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ecfe .Subtype =_gegbd ;};if _ccec :=_fbdf .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_ccec !=nil {_ecfe .Colorants =_ccec ;};if _fceg :=_fbdf .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_fceg !=nil {_ecfe .Process =_fceg ;};if _eddg :=_fbdf .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_eddg !=nil {_ecfe .MixingHints =_eddg ;};return _ecfe ,nil ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bda .PdfObjectString ;Q *_bda .PdfObjectInteger ;DS *_bda .PdfObjectString ;RV _bda .PdfObject ;MaxLen *_bda .PdfObjectInteger ;};func _fcee (_dcfbg *_bda .PdfObjectDictionary )(*PdfTilingPattern ,error ){_dabd :=&PdfTilingPattern {};
_abcgb :=_dcfbg .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _abcgb ==nil {_ed .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bfaab ,_fbdef :=_abcgb .(*_bda .PdfObjectInteger );
if !_fbdef {_ed .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_abcgb );return nil ,_bda .ErrTypeError ;
};_dabd .PaintType =_bfaab ;_abcgb =_dcfbg .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _abcgb ==nil {_ed .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gfge ,_fbdef :=_abcgb .(*_bda .PdfObjectInteger );if !_fbdef {_ed .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abcgb );
return nil ,_bda .ErrTypeError ;};_dabd .TilingType =_gfge ;_abcgb =_dcfbg .Get ("\u0042\u0042\u006f\u0078");if _abcgb ==nil {_ed .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_abcgb =_bda .TraceToDirectObject (_abcgb );_dggca ,_fbdef :=_abcgb .(*_bda .PdfObjectArray );if !_fbdef {_ed .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abcgb );
return nil ,_bda .ErrTypeError ;};_bgaa ,_agfa :=NewPdfRectangle (*_dggca );if _agfa !=nil {_ed .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_agfa );return nil ,_agfa ;};_dabd .BBox =_bgaa ;_abcgb =_dcfbg .Get ("\u0058\u0053\u0074e\u0070");
if _abcgb ==nil {_ed .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gdab ,_agfa :=_bda .GetNumberAsFloat (_abcgb );if _agfa !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gdab );
return nil ,_agfa ;};_dabd .XStep =_bda .MakeFloat (_gdab );_abcgb =_dcfbg .Get ("\u0059\u0053\u0074e\u0070");if _abcgb ==nil {_ed .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_bcff ,_agfa :=_bda .GetNumberAsFloat (_abcgb );if _agfa !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bcff );
return nil ,_agfa ;};_dabd .YStep =_bda .MakeFloat (_bcff );_abcgb =_dcfbg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _abcgb ==nil {_ed .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dcfbg ,_fbdef =_bda .TraceToDirectObject (_abcgb ).(*_bda .PdfObjectDictionary );if !_fbdef {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_abcgb );
};_cbbde ,_agfa :=NewPdfPageResourcesFromDict (_dcfbg );if _agfa !=nil {return nil ,_agfa ;};_dabd .Resources =_cbbde ;if _cedg :=_dcfbg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cedg !=nil {_gbdec ,_adaef :=_cedg .(*_bda .PdfObjectArray );if !_adaef {_ed .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cedg );
return nil ,_bda .ErrTypeError ;};_dabd .Matrix =_gbdec ;};return _dabd ,nil ;};func (_aaabe *PdfWriter )setDocInfo (_gdgdb _bda .PdfObject ){if _aaabe .hasObject (_aaabe ._eebef ){delete (_aaabe ._egfad ,_aaabe ._eebef );delete (_aaabe ._febfe ,_aaabe ._eebef );
for _dcdeff ,_cdgbad :=range _aaabe ._ccbbg {if _cdgbad ==_aaabe ._eebef {copy (_aaabe ._ccbbg [_dcdeff :],_aaabe ._ccbbg [_dcdeff +1:]);_aaabe ._ccbbg [len (_aaabe ._ccbbg )-1]=nil ;_aaabe ._ccbbg =_aaabe ._ccbbg [:len (_aaabe ._ccbbg )-1];break ;};};
};_abgdc :=_bda .PdfIndirectObject {};_abgdc .PdfObject =_gdgdb ;_aaabe ._eebef =&_abgdc ;_aaabe .addObject (&_abgdc );};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fgf *PdfActionGoToE )ToPdfObject ()_bda .PdfObject {_fgf .PdfAction .ToPdfObject ();_bgg :=_fgf ._gg ;_gdc :=_bgg .PdfObject .(*_bda .PdfObjectDictionary );_gdc .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeGoToE )));if _fgf .F !=nil {_gdc .Set ("\u0046",_fgf .F .ToPdfObject ());
};_gdc .SetIfNotNil ("\u0044",_fgf .D );_gdc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fgf .NewWindow );_gdc .SetIfNotNil ("\u0054",_fgf .T );return _bgg ;};func _ggdee ()string {_ggbe .Lock ();defer _ggbe .Unlock ();return _eebaa };


// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ced :=NewPdfAnnotation ();_dgge :=&PdfAnnotationCaret {};_dgge .PdfAnnotation =_ced ;_dgge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ced .SetContext (_dgge );return _dgge ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bda .PdfObject ;NewWindow _bda .PdfObject ;};func (_agfba *PdfWriter )makeOffSetReference (_gdecb int64 ){_afbga :=_c .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_gdecb );
_agfba .writeString (_afbga );_agfba .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bda .PdfObject ;Name _bda .PdfObject ;};func (_ggba *PdfReader )newPdfActionURIFromDict (_gdda *_bda .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_gdda .Get ("\u0055\u0052\u0049"),IsMap :_gdda .Get ("\u0049\u0073\u004da\u0070")},nil ;
};func _edfg (_afgfd *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_afgfd }};func _fgec (_cebfa _bda .PdfObject )[]*_bda .PdfObjectStream {if _cebfa ==nil {return nil ;};_ecdac ,_cecca :=_bda .GetArray (_cebfa );if !_cecca ||_ecdac .Len ()==0{return nil ;
};_febe :=make ([]*_bda .PdfObjectStream ,0,_ecdac .Len ());for _ ,_cbdbb :=range _ecdac .Elements (){if _fdccga ,_ggcee :=_bda .GetStream (_cbdbb );_ggcee {_febe =append (_febe ,_fdccga );};};return _febe ;};

// GetContainingPdfObject implements interface PdfModel.
func (_eeff *PdfFilespec )GetContainingPdfObject ()_bda .PdfObject {return _eeff ._daeg };

// AddImageResource adds an image to the XObject resources.
func (_bafba *PdfPage )AddImageResource (name _bda .PdfObjectName ,ximg *XObjectImage )error {var _ccgbab *_bda .PdfObjectDictionary ;if _bafba .Resources .XObject ==nil {_ccgbab =_bda .MakeDict ();_bafba .Resources .XObject =_ccgbab ;}else {var _dgbgf bool ;
_ccgbab ,_dgbgf =(_bafba .Resources .XObject ).(*_bda .PdfObjectDictionary );if !_dgbgf {return _gea .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_ccgbab .Set (name ,ximg .ToPdfObject ());
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_afef *PdfAnnotationPolygon )ToPdfObject ()_bda .PdfObject {_afef .PdfAnnotation .ToPdfObject ();_beab :=_afef ._ged ;_cfg :=_beab .PdfObject .(*_bda .PdfObjectDictionary );_afef .PdfAnnotationMarkup .appendToPdfDictionary (_cfg );_cfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_cfg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_afef .Vertices );_cfg .SetIfNotNil ("\u004c\u0045",_afef .LE );_cfg .SetIfNotNil ("\u0042\u0053",_afef .BS );_cfg .SetIfNotNil ("\u0049\u0043",_afef .IC );_cfg .SetIfNotNil ("\u0042\u0045",_afef .BE );
_cfg .SetIfNotNil ("\u0049\u0054",_afef .IT );_cfg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_afef .Measure );return _beab ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_cddfc *LTV )Enable (sig *PdfSignature ,extraCerts []*_bd .Certificate )error {if _dcdeg :=_cddfc .validateSig (sig );_dcdeg !=nil {return _dcdeg ;};_cecd ,_cdgcg :=_cddfc .generateVRIKey (sig );if _cdgcg !=nil {return _cdgcg ;};if _ ,_accb :=_cddfc ._efffa .VRI [_cecd ];
_accb &&_cddfc .SkipExisting {return nil ;};_gdae ,_cdgcg :=sig .GetCerts ();if _cdgcg !=nil {return _cdgcg ;};return _cddfc .enable (_gdae ,extraCerts ,_cecd );};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dcbcb *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dcbcb ._bcaef !=nil {return _dcbcb ._bcaef ,nil ;};if _dcbcb .Annots ==nil {_dcbcb ._bcaef =[]*PdfAnnotation {};return nil ,nil ;};if _dcbcb ._agfg ==nil {_dcbcb ._bcaef =[]*PdfAnnotation {};
return nil ,nil ;};_bcbb ,_fadab :=_dcbcb ._agfg .loadAnnotations (_dcbcb .Annots );if _fadab !=nil {return nil ,_fadab ;};if _bcbb ==nil {_dcbcb ._bcaef =[]*PdfAnnotation {};};_dcbcb ._bcaef =_bcbb ;return _dcbcb ._bcaef ,nil ;};

// SetCatalogLanguage sets the catalog language.
func (_cbcaf *PdfWriter )SetCatalogLanguage (lang _bda .PdfObject )error {if lang ==nil {_cbcaf ._geadba .Remove ("\u004c\u0061\u006e\u0067");return nil ;};_cbcaf .addObject (lang );_cbcaf ._geadba .Set ("\u004c\u0061\u006e\u0067",lang );return nil ;};


// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bda .PdfObjectArray ;Domain *_bda .PdfObjectArray ;Function []PdfFunction ;Extend *_bda .PdfObjectArray ;};func _baedg (_cgcc _bda .PdfObject )(*PdfColorspaceLab ,error ){_dgdd :=NewPdfColorspaceLab ();
if _gcee ,_gafc :=_cgcc .(*_bda .PdfIndirectObject );_gafc {_dgdd ._begd =_gcee ;};_cgcc =_bda .TraceToDirectObject (_cgcc );_dbef ,_cecc :=_cgcc .(*_bda .PdfObjectArray );if !_cecc {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _dbef .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cgcc =_bda .TraceToDirectObject (_dbef .Get (0));_eccf ,_cecc :=_cgcc .(*_bda .PdfObjectName );
if !_cecc {return nil ,_c .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_eccf !="\u004c\u0061\u0062"{return nil ,_c .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");
};_cgcc =_bda .TraceToDirectObject (_dbef .Get (1));_gfaa ,_cecc :=_cgcc .(*_bda .PdfObjectDictionary );if !_cecc {return nil ,_c .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");
};_cgcc =_gfaa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cgcc =_bda .TraceToDirectObject (_cgcc );_abfb ,_cecc :=_cgcc .(*_bda .PdfObjectArray );if !_cecc {return nil ,_c .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _abfb .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fgab ,_bfcg :=_abfb .GetAsFloat64Slice ();
if _bfcg !=nil {return nil ,_bfcg ;};_dgdd .WhitePoint =_fgab ;_cgcc =_gfaa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cgcc !=nil {_cgcc =_bda .TraceToDirectObject (_cgcc );_efdb ,_ebbf :=_cgcc .(*_bda .PdfObjectArray );if !_ebbf {return nil ,_c .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");
};if _efdb .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_ecaeb ,_dgfbf :=_efdb .GetAsFloat64Slice ();
if _dgfbf !=nil {return nil ,_dgfbf ;};_dgdd .BlackPoint =_ecaeb ;};_cgcc =_gfaa .Get ("\u0052\u0061\u006eg\u0065");if _cgcc !=nil {_cgcc =_bda .TraceToDirectObject (_cgcc );_bcda ,_egfa :=_cgcc .(*_bda .PdfObjectArray );if !_egfa {_ed .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
return nil ,_c .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcda .Len ()!=4{_ed .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_fgaba ,_aag :=_bcda .GetAsFloat64Slice ();if _aag !=nil {return nil ,_aag ;};_dgdd .Range =_fgaba ;};return _dgdd ,nil ;};

// Tab order types.
type TabOrderType string ;

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bda .PdfObjectInteger ;BitsPerComponent *_bda .PdfObjectInteger ;BitsPerFlag *_bda .PdfObjectInteger ;Decode *_bda .PdfObjectArray ;Function []PdfFunction ;};

// GetContentStreams returns the content stream as an array of strings.
func (_decac *PdfPage )GetContentStreams ()([]string ,error ){_cdad :=_decac .GetContentStreamObjs ();var _dedf []string ;for _ ,_gdacb :=range _cdad {_bfcac ,_ffbae :=_cdfgg (_gdacb );if _ffbae !=nil {return nil ,_ffbae ;};_dedf =append (_dedf ,_bfcac );
};return _dedf ,nil ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bda .PdfObject ;Flags _bda .PdfObject ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_gcab *DSS )ToPdfObject ()_bda .PdfObject {_dbea :=_gcab ._bebag .PdfObject .(*_bda .PdfObjectDictionary );_dbea .Clear ();_ggff :=_bda .MakeDict ();for _eecec ,_gcb :=range _gcab .VRI {_ggff .Set (*_bda .MakeName (_eecec ),_gcb .ToPdfObject ());
};_dbea .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_dabab (_gcab .Certs ));_dbea .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_dabab (_gcab .OCSPs ));_dbea .SetIfNotNil ("\u0043\u0052\u004c\u0073",_dabab (_gcab .CRLs ));_dbea .Set ("\u0056\u0052\u0049",_ggff );
return _gcab ._bebag ;};

// MergePageWith appends page content to source Pdf file page content.
func (_defb *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_dbfc :=pageNum -1;var _debfd *PdfPage ;for _ddfb ,_ecbf :=range _defb ._eebd {if _ddfb ==_dbfc {_debfd =_ecbf ;};};if _debfd ==nil {return _c .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _debfd ._eebfa !=nil &&_debfd ._eebfa .GetParser ()==_defb ._babd ._fdadg {_debfd =_debfd .Duplicate ();_defb ._eebd [_dbfc ]=_debfd ;};page =page .Duplicate ();_defaab (page );_cfcf :=_ecfc (_debfd );_bbag :=_ecfc (page );_bfce :=make (map[_bda .PdfObjectName ]_bda .PdfObjectName );
for _ceac :=range _bbag {if _ ,_edbe :=_cfcf [_ceac ];_edbe {for _becc :=1;true ;_becc ++{_ageg :=_bda .PdfObjectName (string (_ceac )+_dg .Itoa (_becc ));if _ ,_dbcc :=_cfcf [_ageg ];!_dbcc {_bfce [_ceac ]=_ageg ;break ;};};};};_efbg ,_deef :=page .GetContentStreams ();
if _deef !=nil {return _deef ;};_fgfcc ,_deef :=_debfd .GetContentStreams ();if _deef !=nil {return _deef ;};for _bffda ,_befe :=range _efbg {for _bdbd ,_gffd :=range _bfce {_befe =_ab .Replace (_befe ,"\u002f"+string (_bdbd ),"\u002f"+string (_gffd ),-1);
};_efbg [_bffda ]=_befe ;};_fgfcc =append (_fgfcc ,_efbg ...);if _dagb :=_debfd .SetContentStreams (_fgfcc ,_bda .NewFlateEncoder ());_dagb !=nil {return _dagb ;};_debfd ._bcaef =append (_debfd ._bcaef ,page ._bcaef ...);if _debfd .Resources ==nil {_debfd .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_debfd .Resources .Font =_defb .mergeResources (_debfd .Resources .Font ,page .Resources .Font ,_bfce );_debfd .Resources .XObject =_defb .mergeResources (_debfd .Resources .XObject ,page .Resources .XObject ,_bfce );_debfd .Resources .Properties =_defb .mergeResources (_debfd .Resources .Properties ,page .Resources .Properties ,_bfce );
if _debfd .Resources .ProcSet ==nil {_debfd .Resources .ProcSet =page .Resources .ProcSet ;};_debfd .Resources .Shading =_defb .mergeResources (_debfd .Resources .Shading ,page .Resources .Shading ,_bfce );_debfd .Resources .ExtGState =_defb .mergeResources (_debfd .Resources .ExtGState ,page .Resources .ExtGState ,_bfce );
};_eggd ,_deef :=_debfd .GetMediaBox ();if _deef !=nil {return _deef ;};_ffec ,_deef :=page .GetMediaBox ();if _deef !=nil {return _deef ;};var _dbgg bool ;if _eggd .Llx > _ffec .Llx {_eggd .Llx =_ffec .Llx ;_dbgg =true ;};if _eggd .Lly > _ffec .Lly {_eggd .Lly =_ffec .Lly ;
_dbgg =true ;};if _eggd .Urx < _ffec .Urx {_eggd .Urx =_ffec .Urx ;_dbgg =true ;};if _eggd .Ury < _ffec .Ury {_eggd .Ury =_ffec .Ury ;_dbgg =true ;};if _dbgg {_debfd .MediaBox =_eggd ;};return nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_dddd *PdfField )GetContainingPdfObject ()_bda .PdfObject {return _dddd ._ceaeg };

// GetContentStream returns the XObject Form's content stream.
func (_acgbbg *XObjectForm )GetContentStream ()([]byte ,error ){_cdfcf ,_ebdfc :=_bda .DecodeStream (_acgbbg ._cdfb );if _ebdfc !=nil {return nil ,_ebdfc ;};return _cdfcf ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_baaf *_bda .PdfIndirectObject ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_efgcg *PdfShading )GetContainingPdfObject ()_bda .PdfObject {return _efgcg ._gfdga };

// SetCatalogStructTreeRoot sets the catalog struct tree root object.
func (_fadfg *PdfWriter )SetCatalogStructTreeRoot (tree _bda .PdfObject )error {if tree ==nil {_fadfg ._geadba .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_fadfg ._geadba .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _fadfg .addObjects (tree );};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_aeeeg *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _aeeeg ._fdadg .GetRevisionNumber ()==0{return nil ,_gea .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _ecdgee ,_bgdec :=_aeeeg ._gdfcc [_aeeeg ];_bgdec {return _ecdgee ,nil ;};_cgdeb ,_debfc :=_aeeeg ._fdadg .GetPreviousRevisionReadSeeker ();if _debfc !=nil {return nil ,_debfc ;};_cbba ,_debfc :=_efgcc (_cgdeb ,_aeeeg ._afdbe ,_aeeeg ._cadf ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _debfc !=nil {return nil ,_debfc ;};_aeeeg ._aaefc [_aeeeg ._fdadg .GetRevisionNumber ()-1]=_cbba ;_aeeeg ._gdfcc [_aeeeg ]=_cbba ;_cbba ._gdfcc =_aeeeg ._gdfcc ;return _cbba ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cddge pdfFontType0 )GetCharMetrics (code _dgb .CharCode )(_geg .CharMetrics ,bool ){if _cddge .DescendantFont ==nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cddge );
return _geg .CharMetrics {},false ;};return _cddge .DescendantFont .GetCharMetrics (code );};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bda .PdfObject ;RichMediaContent _bda .PdfObject ;};func _gdac (_gfcdg *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_agfe ,_afaed :=_bda .GetDict (_gfcdg .AP );if !_afaed {return nil ,nil ,_gea .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _agfe ==nil {return nil ,nil ,nil ;};_ffbb ,_afaed :=_bda .GetArray (_gfcdg .Rect );if !_afaed ||_ffbb .Len ()!=4{return nil ,nil ,_gea .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_efbaa ,_cbbge :=NewPdfRectangle (*_ffbb );
if _cbbge !=nil {return nil ,nil ,_cbbge ;};_dadd :=_bda .TraceToDirectObject (_agfe .Get ("\u004e"));switch _affd :=_dadd .(type ){case *_bda .PdfObjectStream :_bcge :=_affd ;_abdeg ,_aaba :=NewXObjectFormFromStream (_bcge );return _abdeg ,_efbaa ,_aaba ;
case *_bda .PdfObjectDictionary :_cfcdc :=_affd ;if _cfcdc ==nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _bfbfb _bda .PdfObject ;_fedcb ,_edecg :=_bda .GetName (_gfcdg .AS );if _edecg {_bfbfb =_cfcdc .Get (*_fedcb );}else {_defff :=_gfcdg ._ged .PdfObject .(*_bda .PdfObjectDictionary );if _defff ==nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _bbbea :=_defff .Get ("\u0056");_bbbea !=nil {_bfbfb =_cfcdc .Get (_bda .PdfObjectName (_bbbea .String ()));};};if _bfbfb ==nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_gceg ,_edecg :=_bda .GetStream (_bfbfb );if !_edecg {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_fedcb );
return nil ,nil ,_gea .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_ceaab ,_ebdb :=NewXObjectFormFromStream (_gceg );return _ceaab ,_efbaa ,_ebdb ;};_ed .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_dadd );
return nil ,nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_daaae *_bc .Document )error ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fcdd *PdfReader )GetPageLabels ()(_bda .PdfObject ,error ){_ebdfb :=_bda .ResolveReference (_fcdd ._dabg .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _ebdfb ==nil {return nil ,nil ;};if !_fcdd ._aaece {_cbdfa :=_fcdd .traverseObjectData (_ebdfb );
if _cbdfa !=nil {return nil ,_cbdfa ;};};return _ebdfb ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_ebf :=NewPdfAnnotation ();_bgge :=&PdfAnnotationHighlight {};_bgge .PdfAnnotation =_ebf ;_bgge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebf .SetContext (_bgge );return _bgge ;};func (_aeda *PdfReader )newPdfFieldFromIndirectObject (_ebbfd *_bda .PdfIndirectObject ,_fegf *PdfField )(*PdfField ,error ){if _fbef ,_beagf :=_aeda ._gbdfa .GetModelFromPrimitive (_ebbfd ).(*PdfField );
_beagf {return _fbef ,nil ;};_cdeg ,_cgdda :=_bda .GetDict (_ebbfd );if !_cgdda {return nil ,_c .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gdec :=NewPdfField ();_gdec ._ceaeg =_ebbfd ;_gdec ._ceaeg .PdfObject =_cdeg ;if _bdgb ,_faedae :=_bda .GetName (_cdeg .Get ("\u0046\u0054"));_faedae {_gdec .FT =_bdgb ;};if _fegf !=nil {_gdec .Parent =_fegf ;};_gdec .T ,_ =_cdeg .Get ("\u0054").(*_bda .PdfObjectString );
_gdec .TU ,_ =_cdeg .Get ("\u0054\u0055").(*_bda .PdfObjectString );_gdec .TM ,_ =_cdeg .Get ("\u0054\u004d").(*_bda .PdfObjectString );_gdec .Ff ,_ =_cdeg .Get ("\u0046\u0066").(*_bda .PdfObjectInteger );_gdec .V =_cdeg .Get ("\u0056");_gdec .DV =_cdeg .Get ("\u0044\u0056");
_gdec .AA =_cdeg .Get ("\u0041\u0041");if DA :=_cdeg .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_bda .GetString (DA );_gdec .VariableText =&VariableText {DA :DA };Q ,_ :=_cdeg .Get ("\u0051").(*_bda .PdfObjectInteger );DS ,_ :=_cdeg .Get ("\u0044\u0053").(*_bda .PdfObjectString );
RV :=_cdeg .Get ("\u0052\u0056");_gdec .VariableText .Q =Q ;_gdec .VariableText .DS =DS ;_gdec .VariableText .RV =RV ;};_fggdc :=_gdec .FT ;if _fggdc ==nil &&_fegf !=nil {_fggdc =_fegf .FT ;};if _fggdc !=nil {switch *_fggdc {case "\u0054\u0078":_agdf ,_eada :=_gbdd (_cdeg );
if _eada !=nil {return nil ,_eada ;};_agdf .PdfField =_gdec ;_gdec ._aebb =_agdf ;case "\u0043\u0068":_cfdde ,_eecbdg :=_gbdca (_cdeg );if _eecbdg !=nil {return nil ,_eecbdg ;};_cfdde .PdfField =_gdec ;_gdec ._aebb =_cfdde ;case "\u0042\u0074\u006e":_egeb ,_aceef :=_agcf (_cdeg );
if _aceef !=nil {return nil ,_aceef ;};_egeb .PdfField =_gdec ;_gdec ._aebb =_egeb ;case "\u0053\u0069\u0067":_fegd ,_dffd :=_aeda .newPdfFieldSignatureFromDict (_cdeg );if _dffd !=nil {return nil ,_dffd ;};_fegd .PdfField =_gdec ;_gdec ._aebb =_fegd ;
default:_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gdec .FT );return nil ,_gea .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _dbebb ,_fbbf :=_bda .GetName (_cdeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_fbbf {if *_dbebb =="\u0057\u0069\u0064\u0067\u0065\u0074"{_afag ,_affbb :=_aeda .newPdfAnnotationFromIndirectObject (_ebbfd );if _affbb !=nil {return nil ,_affbb ;
};_babfd ,_efdf :=_afag .GetContext ().(*PdfAnnotationWidget );if !_efdf {return nil ,_gea .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_babfd ._aee =_gdec ;_babfd .Parent =_gdec ._ceaeg ;
_gdec .Annotations =append (_gdec .Annotations ,_babfd );return _gdec ,nil ;};};_faada :=true ;if _ecaa ,_cfeff :=_bda .GetArray (_cdeg .Get ("\u004b\u0069\u0064\u0073"));_cfeff {_gbbca :=make ([]*_bda .PdfIndirectObject ,0,_ecaa .Len ());for _ ,_cfbe :=range _ecaa .Elements (){_afbca ,_fdcc :=_bda .GetIndirect (_cfbe );
if !_fdcc {_gacc ,_gcacg :=_bda .GetStream (_cfbe );if _gcacg &&_gacc .PdfObjectDictionary !=nil {_cdcd ,_fbfb :=_bda .GetNameVal (_gacc .Get ("\u0054\u0079\u0070\u0065"));if _fbfb &&_cdcd =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ed .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_gea .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_bagfc ,_ggdc :=_bda .GetDict (_afbca );
if !_ggdc {return nil ,ErrTypeCheck ;};if _faada {_faada =!_deggg (_bagfc );};_gbbca =append (_gbbca ,_afbca );};for _ ,_cegdf :=range _gbbca {if _faada {_cdacg ,_dbdbd :=_aeda .newPdfAnnotationFromIndirectObject (_cegdf );if _dbdbd !=nil {_ed .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dbdbd );
return nil ,_dbdbd ;};_aggbg ,_baabg :=_cdacg ._fdeb .(*PdfAnnotationWidget );if !_baabg {return nil ,ErrTypeCheck ;};_aggbg ._aee =_gdec ;_gdec .Annotations =append (_gdec .Annotations ,_aggbg );}else {_eagf ,_fdgff :=_aeda .newPdfFieldFromIndirectObject (_cegdf ,_gdec );
if _fdgff !=nil {_ed .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_fdgff );return nil ,_fdgff ;};_gdec .Kids =append (_gdec .Kids ,_eagf );
};};};return _gdec ,nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_gagbb *PdfAcroForm )ToPdfObject ()_bda .PdfObject {_ebdf :=_gagbb ._bcgge ;_agae :=_ebdf .PdfObject .(*_bda .PdfObjectDictionary );if _gagbb .Fields !=nil {_acfcf :=_bda .PdfObjectArray {};for _ ,_gdca :=range *_gagbb .Fields {_abage :=_gdca .GetContext ();
if _abage !=nil {_acfcf .Append (_abage .ToPdfObject ());}else {_acfcf .Append (_gdca .ToPdfObject ());};};_agae .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_acfcf );};if _gagbb .NeedAppearances !=nil {_agae .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_gagbb .NeedAppearances );
}else {if _eaaa :=_agae .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_eaaa !=nil {_agae .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _gagbb .SigFlags !=nil {_agae .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_gagbb .SigFlags );
};if _gagbb .CO !=nil {_agae .Set ("\u0043\u004f",_gagbb .CO );};if _gagbb .DR !=nil {_agae .Set ("\u0044\u0052",_gagbb .DR .ToPdfObject ());};if _gagbb .DA !=nil {_agae .Set ("\u0044\u0041",_gagbb .DA );};if _gagbb .Q !=nil {_agae .Set ("\u0051",_gagbb .Q );
};if _gagbb .XFA !=nil {_agae .Set ("\u0058\u0046\u0041",_gagbb .XFA );};if _gagbb .ADBEEchoSign !=nil {_agae .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_gagbb .ADBEEchoSign );};return _ebdf ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_gfafea *PdfPattern )SetContext (ctx PdfModel ){_gfafea ._dgaed =ctx };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_afaa *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffeb :=vals [0];if _ffeb < 0.0||_ffeb > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ffeb );
return nil ,ErrColorOutOfRange ;};_cdaa :=NewPdfColorCalGray (_ffeb );return _cdaa ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// GetStructRoot gets the StructTreeRoot object
func (_ccdfd *PdfPage )GetStructTreeRoot ()(*_bda .PdfObject ,bool ){_ecbfff ,_cefb :=_ccdfd ._agfg .GetCatalogStructTreeRoot ();return &_ecbfff ,_cefb ;};var ErrColorOutOfRange =_gea .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");


// IDTree represents the ID tree dictionary where the format of the content
// is using Name Trees as described in chapter 7.9.6.
type IDTree struct{

// Limits shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array.
Limits *_bda .PdfObjectArray ;

// Names shall be an array of the form
//
// [ key1 value1 key2 value2 … keyn valuen]
//
// where each keyi shall be a string and the corresponding valuei shall be the object
// associated with that key. The keys shall be sorted in lexical order, as described below.
Names *_bda .PdfObjectArray ;

// Kids Shall be an array of indirect references to the immediate children of this node.
Kids []*IDTree ;};func (_ecgeg *PdfWriter )writeAcroFormFields ()error {if _ecgeg ._abgf ==nil {return nil ;};_ed .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_cccbg :=_ecgeg ._abgf .ToPdfObject ();
_ed .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cccbg );_ecgeg ._geadba .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cccbg );_fgfgd :=_ecgeg .addObjects (_cccbg );if _fgfgd !=nil {return _fgfgd ;
};return nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bda .PdfObject ;Movie _bda .PdfObject ;A _bda .PdfObject ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ebag *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ebag .AlternateSpace ==nil {return nil ,_gea .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ebag .AlternateSpace .ColorToRGB (color );};func (_ffeaa *PdfWriter )getPdfVersion ()string {return _c .Sprintf ("\u0025\u0064\u002e%\u0064",_ffeaa ._cdbbdg .Major ,_ffeaa ._cdbbdg .Minor );};func _fdced (_bfag []byte )bool {if len (_bfag )< 4{return true ;
};for _beabg :=range _bfag [:4]{_ccfc :=rune (_beabg );if !_gd .Is (_gd .ASCII_Hex_Digit ,_ccfc )&&!_gd .IsSpace (_ccfc ){return true ;};};return false ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_dcd :=NewPdfAction ();_fg :=&PdfActionGoTo {};_fg .PdfAction =_dcd ;_dcd .SetContext (_fg );return _fg ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_cccd :=NewPdfAnnotation ();_gaef :=&PdfAnnotationWidget {};_gaef .PdfAnnotation =_cccd ;_cccd .SetContext (_gaef );return _gaef ;};

// Initialize initializes the PdfSignature.
func (_cffa *PdfSignature )Initialize ()error {if _cffa .Handler ==nil {return _gea .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _cffa .Handler .InitSignature (_cffa );};func _eaac (_fefcb _geg .StdFont )pdfFontSimple {_degc :=_fefcb .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_fggeg :"\u0054\u0079\u0070e\u0031",_bcaebe :_fefcb .Name ()},_feada :_fefcb .GetMetricsTable (),_edaf :&PdfFontDescriptor {FontName :_bda .MakeName (string (_degc .Name )),FontFamily :_bda .MakeName (_degc .Family ),FontWeight :_bda .MakeFloat (float64 (_degc .Weight )),Flags :_bda .MakeInteger (int64 (_degc .Flags )),FontBBox :_bda .MakeArrayFromFloats (_degc .BBox [:]),ItalicAngle :_bda .MakeFloat (_degc .ItalicAngle ),Ascent :_bda .MakeFloat (_degc .Ascent ),Descent :_bda .MakeFloat (_degc .Descent ),CapHeight :_bda .MakeFloat (_degc .CapHeight ),XHeight :_bda .MakeFloat (_degc .XHeight ),StemV :_bda .MakeFloat (_degc .StemV ),StemH :_bda .MakeFloat (_degc .StemH )},_gdgeg :_fefcb .Encoder ()};
};

// GetCerts returns the signature certificate chain.
func (_affeg *PdfSignature )GetCerts ()([]*_bd .Certificate ,error ){var _cddedc []func ()([]*_bd .Certificate ,error );switch _cdcgb ,_ :=_bda .GetNameVal (_affeg .SubFilter );_cdcgb {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_cddedc =append (_cddedc ,_affeg .extractChainFromPKCS7 ,_affeg .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_cddedc =append (_cddedc ,_affeg .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_cddedc =append (_cddedc ,_affeg .extractChainFromPKCS7 );
default:return nil ,_c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_cdcgb );};for _ ,_affede :=range _cddedc {_deccdg ,_gbabe :=_affede ();if _gbabe !=nil {return nil ,_gbabe ;
};if len (_deccdg )> 0{return _deccdg ,nil ;};};return nil ,ErrSignNoCertificates ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dbebbf *Image )AlphaMap (mapFunc AlphaMapFunc ){for _gaeef ,_cdacf :=range _dbebbf ._ffbd {_dbebbf ._ffbd [_gaeef ]=mapFunc (_cdacf );};};

// B returns the value of the blue component of the color.
func (_gfac *PdfColorDeviceRGB )B ()float64 {return _gfac [2]};

// NonFullScreenPageMode represents the document’s page mode when exiting
// full-screen mode.
type NonFullScreenPageMode string ;

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_aeccd *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _cegba []*PdfOutlineTreeNode ;var _afcba []string ;var _bfbdg func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_bfbdg =func (_fede *PdfOutlineTreeNode ,_eabd *[]*PdfOutlineTreeNode ,_eeadd *[]string ,_fefe int ){if _fede ==nil {return ;
};if _fede ._ebabd ==nil {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bagfb ,_egcdd :=_fede ._ebabd .(*PdfOutlineItem );if _egcdd {*_eabd =append (*_eabd ,&_bagfb .PdfOutlineTreeNode );
_cgec :=_ab .Repeat ("\u0020",_fefe *2)+_bagfb .Title .Decoded ();*_eeadd =append (*_eeadd ,_cgec );};if _fede .First !=nil {_edddc :=_ab .Repeat ("\u0020",_fefe *2)+"\u002b";*_eeadd =append (*_eeadd ,_edddc );_bfbdg (_fede .First ,_eabd ,_eeadd ,_fefe +1);
};if _egcdd &&_bagfb .Next !=nil {_bfbdg (_bagfb .Next ,_eabd ,_eeadd ,_fefe );};};_bfbdg (_aeccd ._febfd ,&_cegba ,&_afcba ,0);return _cegba ,_afcba ,nil ;};func (_caac *PdfReader )newPdfAnnotationHighlightFromDict (_fgeg *_bda .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_fbg :=PdfAnnotationHighlight {};
_cggf ,_aeg :=_caac .newPdfAnnotationMarkupFromDict (_fgeg );if _aeg !=nil {return nil ,_aeg ;};_fbg .PdfAnnotationMarkup =_cggf ;_fbg .QuadPoints =_fgeg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fbg ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_bdaeb *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_abbf :=_cf .NewReader (img .getBase ());_bcea :=_bg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bbbf :=_cf .NewWriter (_bcea );
_deefb :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_eefd :=make ([]uint32 ,3);var (_efgae error ;_dgebd ,_eccg ,_baab ,_gaaea ,_ebba ,_bfbf float64 ;);for {_efgae =_abbf .ReadSamples (_eefd );if _efgae ==_ga .EOF {break ;}else if _efgae !=nil {return img ,_efgae ;
};_dgebd =float64 (_eefd [0])/_deefb ;_eccg =float64 (_eefd [1])/_deefb ;_baab =float64 (_eefd [2])/_deefb ;_gaaea =_bdaeb .Matrix [0]*_ce .Pow (_dgebd ,_bdaeb .Gamma [0])+_bdaeb .Matrix [3]*_ce .Pow (_eccg ,_bdaeb .Gamma [1])+_bdaeb .Matrix [6]*_ce .Pow (_baab ,_bdaeb .Gamma [2]);
_ebba =_bdaeb .Matrix [1]*_ce .Pow (_dgebd ,_bdaeb .Gamma [0])+_bdaeb .Matrix [4]*_ce .Pow (_eccg ,_bdaeb .Gamma [1])+_bdaeb .Matrix [7]*_ce .Pow (_baab ,_bdaeb .Gamma [2]);_bfbf =_bdaeb .Matrix [2]*_ce .Pow (_dgebd ,_bdaeb .Gamma [0])+_bdaeb .Matrix [5]*_ce .Pow (_eccg ,_bdaeb .Gamma [1])+_bdaeb .Matrix [8]*_ce .Pow (_baab ,_bdaeb .Gamma [2]);
_dgebd =3.240479*_gaaea +-1.537150*_ebba +-0.498535*_bfbf ;_eccg =-0.969256*_gaaea +1.875992*_ebba +0.041556*_bfbf ;_baab =0.055648*_gaaea +-0.204043*_ebba +1.057311*_bfbf ;_dgebd =_ce .Min (_ce .Max (_dgebd ,0),1.0);_eccg =_ce .Min (_ce .Max (_eccg ,0),1.0);
_baab =_ce .Min (_ce .Max (_baab ,0),1.0);_eefd [0]=uint32 (_dgebd *_deefb );_eefd [1]=uint32 (_eccg *_deefb );_eefd [2]=uint32 (_baab *_deefb );if _efgae =_bbbf .WriteSamples (_eefd );_efgae !=nil {return img ,_efgae ;};};return _fggae (&_bcea ),nil ;
};func (_dcdadg *PdfPage )removeXObj (_baaac *_bda .PdfObjectDictionary ,_gebbeg _bda .PdfObjectName ){_baaac .Remove (_gebbeg );_dcded :=_bda .NewFlateEncoder ();_gadgc :=_dcdadg .GetContentStreamObjs ();_dgbb :=_bda .MakeArray ();for _ ,_dggfc :=range _gadgc {_cgfbg ,_ :=_cdfgg (_dggfc );
if _ab .Contains (_cgfbg ,_gebbeg .String ()){_aceff :=_ab .Index (_cgfbg ,_gebbeg .String ());_ebeg :=_ab .LastIndex (_cgfbg [:_aceff ],"\u0071");_ccbd :=_ab .Index (_cgfbg [_aceff :],"\u0051")+_aceff +1;if _ebeg >=0&&_ccbd >=0{var _ecbcc _ab .Builder ;
_ecbcc .WriteString (_cgfbg [:_ebeg ]);_ecbcc .WriteString (_cgfbg [_ccbd :]);_fecbe ,_cfaf :=_bda .MakeStream ([]byte (_ecbcc .String ()),_dcded );if _cfaf ==nil {_dgbb .Append (_fecbe );continue ;};};};_dgbb .Append (_dggfc );};_dcdadg .Contents =_dgbb ;
};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_faed *PdfReader )newPdfAnnotationStrikeOut (_gbcb *_bda .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_baf :=PdfAnnotationStrikeOut {};_cee ,_cacg :=_faed .newPdfAnnotationMarkupFromDict (_gbcb );if _cacg !=nil {return nil ,_cacg ;
};_baf .PdfAnnotationMarkup =_cee ;_baf .QuadPoints =_gbcb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_baf ,nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_aeddb *PdfPageResources )AddExtGState (gsName _bda .PdfObjectName ,gsDict _bda .PdfObject )error {if _aeddb .ExtGState ==nil {_aeddb .ExtGState =_bda .MakeDict ();};_ceafb :=_aeddb .ExtGState ;_fdbcf ,_cafb :=_bda .TraceToDirectObject (_ceafb ).(*_bda .PdfObjectDictionary );
if !_cafb {_ed .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_ceafb ,_bda .TraceToDirectObject (_ceafb ));
return _bda .ErrTypeError ;};_fdbcf .Set (gsName ,gsDict );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbeb *PdfAnnotationPolyLine )ToPdfObject ()_bda .PdfObject {_cbeb .PdfAnnotation .ToPdfObject ();_acgc :=_cbeb ._ged ;_cfad :=_acgc .PdfObject .(*_bda .PdfObjectDictionary );_cbeb .PdfAnnotationMarkup .appendToPdfDictionary (_cfad );_cfad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_cfad .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cbeb .Vertices );_cfad .SetIfNotNil ("\u004c\u0045",_cbeb .LE );_cfad .SetIfNotNil ("\u0042\u0053",_cbeb .BS );_cfad .SetIfNotNil ("\u0049\u0043",_cbeb .IC );_cfad .SetIfNotNil ("\u0042\u0045",_cbeb .BE );
_cfad .SetIfNotNil ("\u0049\u0054",_cbeb .IT );_cfad .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cbeb .Measure );return _acgc ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_bfee *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _bfee .RunesToCharcodeBytes ([]rune (str ));};func _fageg (_aadgd _bda .PdfObject ,_dafcd *PdfReader )(*OutlineDest ,error ){_dbddf ,_ebad :=_bda .GetArray (_aadgd );if !_ebad {return nil ,_gea .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_gcdaf :=_dbddf .Len ();if _gcdaf < 2{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_gcdaf );
};_eecff :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_cfbcc :=_dbddf .Get (0);if _adaead ,_egcge :=_bda .GetIndirect (_cfbcc );_egcge {if _ ,_gbcfe ,_abga :=_dafcd .PageFromIndirectObject (_adaead );_abga ==nil {_eecff .Page =int64 (_gbcfe -1);}else {_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_adaead );
};_eecff .PageObj =_adaead ;}else if _bbbfg ,_fcfe :=_bda .GetIntVal (_cfbcc );_fcfe {if _bbbfg >=0&&_bbbfg < len (_dafcd .PageList ){_eecff .PageObj =_dafcd .PageList [_bbbfg ].GetPageAsIndirectObject ();}else {_ed .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_bbbfg );
};_eecff .Page =int64 (_bbbfg );}else {return nil ,_c .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_cfbcc );};_afcce ,_ebad :=_bda .GetNameVal (_dbddf .Get (1));
if !_ebad {_ed .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_dbddf .Get (1));
return _eecff ,nil ;};switch _afcce {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _gcdaf > 2{_eecff .Y ,_ =_bda .GetNumberAsFloat (_bda .TraceToDirectObject (_dbddf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _gcdaf > 2{_eecff .X ,_ =_bda .GetNumberAsFloat (_bda .TraceToDirectObject (_dbddf .Get (2)));
};case "\u0058\u0059\u005a":if _gcdaf > 4{_eecff .X ,_ =_bda .GetNumberAsFloat (_bda .TraceToDirectObject (_dbddf .Get (2)));_eecff .Y ,_ =_bda .GetNumberAsFloat (_bda .TraceToDirectObject (_dbddf .Get (3)));_eecff .Zoom ,_ =_bda .GetNumberAsFloat (_bda .TraceToDirectObject (_dbddf .Get (4)));
};default:_afcce ="\u0046\u0069\u0074";};_eecff .Mode =_afcce ;return _eecff ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_egeac *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _egeac ._bcaef ==nil {_egeac .GetAnnotations ();};_egeac ._bcaef =append (_egeac ._bcaef ,annot );};func (_dgfga *PdfWriter )optimize ()error {if _dgfga ._cfcfg ==nil {return nil ;};var _bgaba error ;
_dgfga ._ccbbg ,_bgaba =_dgfga ._cfcfg .Optimize (_dgfga ._ccbbg );if _bgaba !=nil {return _bgaba ;};_gafca :=make (map[_bda .PdfObject ]struct{},len (_dgfga ._ccbbg ));for _ ,_cfeeb :=range _dgfga ._ccbbg {_gafca [_cfeeb ]=struct{}{};};_dgfga ._egfad =_gafca ;
return nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ebgc *PdfField )IsTerminal ()bool {return len (_ebgc .Kids )==0};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_dffbf *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _gea .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_dffbf .S =subtype ;return nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bda .PdfObject ;GetContainingPdfObject ()_bda .PdfObject ;};func (_gedc *PdfReader )newPdfAnnotationPolygonFromDict (_cebe *_bda .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_befc :=PdfAnnotationPolygon {};
_adba ,_dedae :=_gedc .newPdfAnnotationMarkupFromDict (_cebe );if _dedae !=nil {return nil ,_dedae ;};_befc .PdfAnnotationMarkup =_adba ;_befc .Vertices =_cebe .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_befc .LE =_cebe .Get ("\u004c\u0045");
_befc .BS =_cebe .Get ("\u0042\u0053");_befc .IC =_cebe .Get ("\u0049\u0043");_befc .BE =_cebe .Get ("\u0042\u0045");_befc .IT =_cebe .Get ("\u0049\u0054");_befc .Measure =_cebe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_befc ,nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bda .PdfObject ;MK _bda .PdfObject ;A _bda .PdfObject ;AA _bda .PdfObject ;BS _bda .PdfObject ;Parent _bda .PdfObject ;_aee *PdfField ;_bbac bool ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_baaa *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _baaa .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// GetPageDict converts the Page to a PDF object dictionary.
func (_cbbga *PdfPage )GetPageDict ()*_bda .PdfObjectDictionary {_ccbaab :=_cbbga ._bdgdg ;_ccbaab .Clear ();_ccbaab .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0050\u0061\u0067\u0065"));_ccbaab .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cbbga .Parent );
if _cbbga .LastModified !=nil {_ccbaab .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cbbga .LastModified .ToPdfObject ());};if _cbbga .Resources !=nil {_ccbaab .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cbbga .Resources .ToPdfObject ());
};if _cbbga .CropBox !=nil {_ccbaab .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_cbbga .CropBox .ToPdfObject ());};if _cbbga .MediaBox !=nil {_ccbaab .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_cbbga .MediaBox .ToPdfObject ());};if _cbbga .BleedBox !=nil {_ccbaab .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_cbbga .BleedBox .ToPdfObject ());
};if _cbbga .TrimBox !=nil {_ccbaab .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_cbbga .TrimBox .ToPdfObject ());};if _cbbga .ArtBox !=nil {_ccbaab .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_cbbga .ArtBox .ToPdfObject ());};_ccbaab .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_cbbga .BoxColorInfo );
_ccbaab .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cbbga .Contents );if _cbbga .Rotate !=nil {_ccbaab .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bda .MakeInteger (*_cbbga .Rotate ));};_ccbaab .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cbbga .Group );
_ccbaab .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_cbbga .Thumb );_ccbaab .SetIfNotNil ("\u0042",_cbbga .B );_ccbaab .SetIfNotNil ("\u0044\u0075\u0072",_cbbga .Dur );_ccbaab .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cbbga .Trans );_ccbaab .SetIfNotNil ("\u0041\u0041",_cbbga .AA );
_ccbaab .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cbbga .Metadata );_ccbaab .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cbbga .PieceInfo );_ccbaab .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cbbga .StructParents );
_ccbaab .SetIfNotNil ("\u0049\u0044",_cbbga .ID );_ccbaab .SetIfNotNil ("\u0050\u005a",_cbbga .PZ );_ccbaab .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_cbbga .SeparationInfo );_ccbaab .SetIfNotNil ("\u0054\u0061\u0062\u0073",_cbbga .Tabs );
_ccbaab .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_cbbga .TemplateInstantiated );_ccbaab .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_cbbga .PresSteps );_ccbaab .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_cbbga .UserUnit );
_ccbaab .SetIfNotNil ("\u0056\u0050",_cbbga .VP );if _cbbga ._bcaef !=nil {_gcdgb :=_bda .MakeArray ();for _ ,_gcagg :=range _cbbga ._bcaef {if _gaede :=_gcagg .GetContext ();_gaede !=nil {_gcdgb .Append (_gaede .ToPdfObject ());}else {_gcdgb .Append (_gcagg .ToPdfObject ());
};};if _gcdgb .Len ()> 0{_ccbaab .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_gcdgb );};}else if _cbbga .Annots !=nil {_ccbaab .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_cbbga .Annots );};return _ccbaab ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_dggc DefaultImageHandler )NewGrayImageFromGoImage (goimg _f .Image )(*Image ,error ){_aaadg :=goimg .Bounds ();_fdcdc :=&Image {Width :int64 (_aaadg .Dx ()),Height :int64 (_aaadg .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _fafgg :=goimg .(type ){case *_f .Gray :if len (_fafgg .Pix )!=_aaadg .Dx ()*_aaadg .Dy (){_gbddc ,_dgae :=_bg .GrayConverter .Convert (goimg );
if _dgae !=nil {return nil ,_dgae ;};_fdcdc .Data =_gbddc .Pix ();}else {_fdcdc .Data =_fafgg .Pix ;};case *_f .Gray16 :_fdcdc .BitsPerComponent =16;if len (_fafgg .Pix )!=_aaadg .Dx ()*_aaadg .Dy ()*2{_ebabec ,_ebff :=_bg .Gray16Converter .Convert (goimg );
if _ebff !=nil {return nil ,_ebff ;};_fdcdc .Data =_ebabec .Pix ();}else {_fdcdc .Data =_fafgg .Pix ;};case _bg .Image :_gcgd :=_fafgg .Base ();if _gcgd .ColorComponents ==1{_fdcdc .BitsPerComponent =int64 (_gcgd .BitsPerComponent );_fdcdc .Data =_gcgd .Data ;
return _fdcdc ,nil ;};_egfae ,_degee :=_bg .GrayConverter .Convert (goimg );if _degee !=nil {return nil ,_degee ;};_fdcdc .Data =_egfae .Pix ();default:_adcfc ,_fddcd :=_bg .GrayConverter .Convert (goimg );if _fddcd !=nil {return nil ,_fddcd ;};_fdcdc .Data =_adcfc .Pix ();
};return _fdcdc ,nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_geg .StdFontName ;

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_addb *DSS )generateHashMap (_ebgf []*_bda .PdfObjectStream )(map[string ]*_bda .PdfObjectStream ,error ){_dead :=map[string ]*_bda .PdfObjectStream {};for _ ,_aead :=range _ebgf {_gdeab ,_aafg :=_bda .DecodeStream (_aead );
if _aafg !=nil {return nil ,_aafg ;};_babda ,_aafg :=_fgfee (_gdeab );if _aafg !=nil {return nil ,_aafg ;};_dead [string (_babda )]=_aead ;};return _dead ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ceb *PdfActionTrans )ToPdfObject ()_bda .PdfObject {_ceb .PdfAction .ToPdfObject ();_fbc :=_ceb ._gg ;_gdef :=_fbc .PdfObject .(*_bda .PdfObjectDictionary );_gdef .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeTrans )));_gdef .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ceb .Trans );
return _fbc ;};func _abdd ()*modelManager {_bfdab :=modelManager {};_bfdab ._afcbd =map[PdfModel ]_bda .PdfObject {};_bfdab ._afaad =map[_bda .PdfObject ]PdfModel {};return &_bfdab ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_aeafd *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bda .PdfObject {_efgb :=_bda .MakeDict ();if _aeafd .Subtype !=nil {_efgb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aeafd .Subtype );};_efgb .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_aeafd .Colorants );
_efgb .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_aeafd .Process );_efgb .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_aeafd .MixingHints );if _aeafd ._dced !=nil {_aeafd ._dced .PdfObject =_efgb ;return _aeafd ._dced ;
};return _efgb ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bcaeb *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bcaeb .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bcaeb ._ggae =acroForm ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// ToPdfObject implements interface PdfModel.
func (_fgfg *PdfAnnotationTrapNet )ToPdfObject ()_bda .PdfObject {_fgfg .PdfAnnotation .ToPdfObject ();_ebd :=_fgfg ._ged ;_dcag :=_ebd .PdfObject .(*_bda .PdfObjectDictionary );_dcag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ebd ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aabfe pdfFontSimple )GetRuneMetrics (r rune )(_geg .CharMetrics ,bool ){if _aabfe ._feada !=nil {_ccbg ,_dfefc :=_aabfe ._feada .Read (r );if _dfefc {return _ccbg ,true ;};};_ceaag :=_aabfe .Encoder ();if _ceaag ==nil {_ed .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_aabfe );
return _geg .CharMetrics {},false ;};_gaee ,_ebecg :=_ceaag .RuneToCharcode (r );if !_ebecg {if r !=' '{_ed .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_aabfe );
};return _geg .CharMetrics {},false ;};_aefbg ,_dfefb :=_aabfe .GetCharMetrics (_gaee );return _aefbg ,_dfefb ;};var _bgadc =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// ToPdfObject implements interface PdfModel.
func (_gcgf *PdfAnnotationRichMedia )ToPdfObject ()_bda .PdfObject {_gcgf .PdfAnnotation .ToPdfObject ();_adg :=_gcgf ._ged ;_fccb :=_adg .PdfObject .(*_bda .PdfObjectDictionary );_fccb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_fccb .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_gcgf .RichMediaSettings );_fccb .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_gcgf .RichMediaContent );
return _adg ;};func _gaebg (_gfce *_bda .PdfIndirectObject ,_gdbg *_bda .PdfObjectDictionary )(*DSS ,error ){if _gfce ==nil {_gfce =_bda .MakeIndirectObject (nil );};_gfce .PdfObject =_bda .MakeDict ();_bfgg :=map[string ]*VRI {};if _bgefc ,_fffeg :=_bda .GetDict (_gdbg .Get ("\u0056\u0052\u0049"));
_fffeg {for _ ,_gbbgf :=range _bgefc .Keys (){if _bfae ,_ffgae :=_bda .GetDict (_bgefc .Get (_gbbgf ));_ffgae {_bfgg [_ab .ToUpper (_gbbgf .String ())]=_ddcca (_bfae );};};};return &DSS {Certs :_fgec (_gdbg .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_fgec (_gdbg .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_fgec (_gdbg .Get ("\u0043\u0052\u004c\u0073")),VRI :_bfgg ,_bebag :_gfce },nil ;
};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_eegca *PdfOutline )GetContainingPdfObject ()_bda .PdfObject {return _eegca ._baaf };func _efea (_dada *_bda .PdfObjectStream )(*PdfFunctionType0 ,error ){_caeg :=&PdfFunctionType0 {};_caeg ._gdfcb =_dada ;_cefg :=_dada .PdfObjectDictionary ;_bcfc ,_cbdc :=_bda .TraceToDirectObject (_cefg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bda .PdfObjectArray );
if !_cbdc {_ed .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bcfc .Len ()< 0||_bcfc .Len ()%2!=0{_ed .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_gea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_caeg .NumInputs =_bcfc .Len ()/2;_cbeed ,_gbfc :=_bcfc .ToFloat64Array ();if _gbfc !=nil {return nil ,_gbfc ;};_caeg .Domain =_cbeed ;_bcfc ,_cbdc =_bda .TraceToDirectObject (_cefg .Get ("\u0052\u0061\u006eg\u0065")).(*_bda .PdfObjectArray );if !_cbdc {_ed .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bcfc .Len ()< 0||_bcfc .Len ()%2!=0{return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_caeg .NumOutputs =_bcfc .Len ()/2;_gecbf ,_gbfc :=_bcfc .ToFloat64Array ();if _gbfc !=nil {return nil ,_gbfc ;};_caeg .Range =_gecbf ;_bcfc ,_cbdc =_bda .TraceToDirectObject (_cefg .Get ("\u0053\u0069\u007a\u0065")).(*_bda .PdfObjectArray );if !_cbdc {_ed .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_baffg ,_gbfc :=_bcfc .ToIntegerArray ();
if _gbfc !=nil {return nil ,_gbfc ;};if len (_baffg )!=_caeg .NumInputs {_ed .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caeg .Size =_baffg ;_deebf ,_cbdc :=_bda .TraceToDirectObject (_cefg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bda .PdfObjectInteger );
if !_cbdc {_ed .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_deebf !=1&&*_deebf !=2&&*_deebf !=4&&*_deebf !=8&&*_deebf !=12&&*_deebf !=16&&*_deebf !=24&&*_deebf !=32{_ed .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_deebf );
return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caeg .BitsPerSample =int (*_deebf );_caeg .Order =1;_gdgf ,_cbdc :=_bda .TraceToDirectObject (_cefg .Get ("\u004f\u0072\u0064e\u0072")).(*_bda .PdfObjectInteger );
if _cbdc {if *_gdgf !=1&&*_gdgf !=3{_ed .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_gdgf );return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caeg .Order =int (*_gdgf );
};_bcfc ,_cbdc =_bda .TraceToDirectObject (_cefg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bda .PdfObjectArray );if _cbdc {_dffgf ,_gcfa :=_bcfc .ToFloat64Array ();if _gcfa !=nil {return nil ,_gcfa ;};_caeg .Encode =_dffgf ;};_bcfc ,_cbdc =_bda .TraceToDirectObject (_cefg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bda .PdfObjectArray );
if _cbdc {_adcce ,_fdcd :=_bcfc .ToFloat64Array ();if _fdcd !=nil {return nil ,_fdcd ;};_caeg .Decode =_adcce ;};_adaf ,_gbfc :=_bda .DecodeStream (_dada );if _gbfc !=nil {return nil ,_gbfc ;};_caeg ._ccbfc =_adaf ;return _caeg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fdce *PdfAnnotationPrinterMark )ToPdfObject ()_bda .PdfObject {_fdce .PdfAnnotation .ToPdfObject ();_dgfd :=_fdce ._ged ;_aafd :=_dgfd .PdfObject .(*_bda .PdfObjectDictionary );_aafd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_aafd .SetIfNotNil ("\u004d\u004e",_fdce .MN );return _dgfd ;};func (_adbf *PdfReader )newPdfAnnotationSquareFromDict (_adfe *_bda .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_dbge :=PdfAnnotationSquare {};_bca ,_fgba :=_adbf .newPdfAnnotationMarkupFromDict (_adfe );
if _fgba !=nil {return nil ,_fgba ;};_dbge .PdfAnnotationMarkup =_bca ;_dbge .BS =_adfe .Get ("\u0042\u0053");_dbge .IC =_adfe .Get ("\u0049\u0043");_dbge .BE =_adfe .Get ("\u0042\u0045");_dbge .RD =_adfe .Get ("\u0052\u0044");return &_dbge ,nil ;};

// KDict represents a K dictionary object.
type KDict struct{

// The structure type, a name object identifying the nature of the
// structure element and its role within the document,
// such as a chapter, paragraph, or footnote
S _bda .PdfObject ;

// The structure element that is the immediate parent of this one
// in the structure hierarchy.
P _bda .PdfObject ;

// The element identifier, a byte string designating this structure element.
ID *_bda .PdfObjectString ;

// A page object representing a page on which some or all of the content
// items designated by the K entry shall be rendered.
Pg _bda .PdfObject ;

// The children of this structure element.
K _bda .PdfObject ;

// A single attribute object or array of attribute objects associated
// with this structure element.
A _bda .PdfObject ;

// An attribute class name or array of class names associated with
// this structure element.
C _bda .PdfObject ;

// The current revision number of this structure element
R *_bda .PdfObjectInteger ;

// The title of the structure element, a text string representing
// it in human-readable form.
T *_bda .PdfObjectString ;

// A language identifier specifying the natural language for all text
// in the structure element except where overridden by
// language specifications for nested structure elements or marked content.
Lang *_bda .PdfObjectString ;

// An alternate description of the structure element and its
// children in human-readable form, which is useful when extracting
// the document’s contents in support of accessibility to users with
// disabilities or for other purposes.
Alt *_bda .PdfObjectString ;

// The expanded form of an abbreviation.
E *_bda .PdfObjectString ;

// Text that is an exact replacement for the structure element and its children.
ActualText *_bda .PdfObjectString ;_fcbda []*KValue ;_adceg int64 ;_fdec *PdfRectangle ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_ffegg *PdfOutlineTreeNode )ToPdfObject ()_bda .PdfObject {return _ffegg .GetContext ().ToPdfObject ();};func _dfda (_afdd *XObjectForm )(*PdfRectangle ,bool ,error ){if _fadd ,_adcbf :=_afdd .BBox .(*_bda .PdfObjectArray );_adcbf {_defbg ,_ffgbf :=NewPdfRectangle (*_fadd );
if _ffgbf !=nil {return nil ,false ,_ffgbf ;};if _bgafa ,_fbecg :=_afdd .Matrix .(*_bda .PdfObjectArray );_fbecg {_cbbbf ,_fbaf :=_bgafa .ToFloat64Array ();if _fbaf !=nil {return nil ,false ,_fbaf ;};_ffag :=_dfa .IdentityMatrix ();if len (_cbbbf )==6{_ffag =_dfa .NewMatrix (_cbbbf [0],_cbbbf [1],_cbbbf [2],_cbbbf [3],_cbbbf [4],_cbbbf [5]);
};_defbg .Transform (_ffag );return _defbg ,true ,nil ;};return _defbg ,false ,nil ;};return nil ,false ,_gea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};func _fcfag (_gdgg *PdfField )[]*PdfField {_dbec :=[]*PdfField {_gdgg };for _ ,_gaaef :=range _gdgg .Kids {_dbec =append (_dbec ,_fcfag (_gaaef )...);};return _dbec ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_dbgeb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbad ,_beadf :=_bda .GetNumbersAsFloat (objects );
if _beadf !=nil {return nil ,_beadf ;};return _dbgeb .ColorFromFloats (_gbad );};func (_bffbf *PdfReader )buildPageList (_bfbbg *_bda .PdfIndirectObject ,_eeec *_bda .PdfIndirectObject ,_ecfgf map[_bda .PdfObject ]struct{})error {if _bfbbg ==nil {return nil ;
};if _ ,_egfff :=_ecfgf [_bfbbg ];_egfff {_ed .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_bfbbg .ObjectNumber );
return nil ;};_ecfgf [_bfbbg ]=struct{}{};_gcedg ,_degea :=_bfbbg .PdfObject .(*_bda .PdfObjectDictionary );if !_degea {return _gea .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_abbdc ,_degea :=(*_gcedg ).Get ("\u0054\u0079\u0070\u0065").(*_bda .PdfObjectName );
if !_degea {if _gcedg .Get ("\u004b\u0069\u0064\u0073")==nil {return _gea .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ed .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_abbdc =_bda .MakeName ("\u0050\u0061\u0067e\u0073");_gcedg .Set ("\u0054\u0079\u0070\u0065",_abbdc );};_ed .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_abbdc ,_bfbbg );
if *_abbdc =="\u0050\u0061\u0067\u0065"{_ggefgg ,_gebbcb :=_bffbf .newPdfPageFromDict (_gcedg );if _gebbcb !=nil {return _gebbcb ;};_ggefgg .setContainer (_bfbbg );if _eeec !=nil {_gcedg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eeec );};_bffbf ._cgdac =append (_bffbf ._cgdac ,_bfbbg );
_bffbf .PageList =append (_bffbf .PageList ,_ggefgg );return nil ;};if *_abbdc !="\u0050\u0061\u0067e\u0073"{_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_abbdc );
return _gea .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _eeec !=nil {_gcedg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eeec );};if !_bffbf ._aaece {_babc :=_bffbf .traverseObjectData (_bfbbg );if _babc !=nil {return _babc ;};};_begaa ,_gcdbd :=_bffbf ._fdadg .Resolve (_gcedg .Get ("\u004b\u0069\u0064\u0073"));
if _gcdbd !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _gcdbd ;};var _abdbc *_bda .PdfObjectArray ;
_abdbc ,_degea =_begaa .(*_bda .PdfObjectArray );if !_degea {_acbcge ,_bfgce :=_begaa .(*_bda .PdfIndirectObject );if !_bfgce {return _gea .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_abdbc ,_degea =_acbcge .PdfObject .(*_bda .PdfObjectArray );if !_degea {return _gea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ed .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_abdbc );
for _gfbab ,_agbcf :=range _abdbc .Elements (){_dfgae ,_bgecc :=_bda .GetIndirect (_agbcf );if !_bgecc {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dfgae );
return _gea .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_abdbc .Set (_gfbab ,_dfgae );_gcdbd =_bffbf .buildPageList (_dfgae ,_bfbbg ,_ecfgf );if _gcdbd !=nil {return _gcdbd ;
};};return nil ;};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_afce :=&PdfFilespec {};_afce ._daeg =_bda .MakeIndirectObject (_bda .MakeDict ());_afce .Desc =_bda .MakeString (file .Description );_afce .EF =file .ToPdfObject ();_afce .F =_bda .MakeString (file .Name );
_afce .UF =_bda .MakeEncodedString (file .Name ,true );_cggdd :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_cggdd ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_cggdd ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_cggdd ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_cggdd ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_afce .AFRelationship =_bda .MakeName (_cggdd );
return _afce ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_fge :=NewPdfAction ();_fc :=&PdfActionImportData {};_fc .PdfAction =_fge ;_fge .SetContext (_fc );return _fc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bebfe *PdfShadingType5 )ToPdfObject ()_bda .PdfObject {_bebfe .PdfShading .ToPdfObject ();_gbggf ,_gfggf :=_bebfe .getShadingDict ();if _gfggf !=nil {_ed .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bebfe .BitsPerCoordinate !=nil {_gbggf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bebfe .BitsPerCoordinate );};if _bebfe .BitsPerComponent !=nil {_gbggf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bebfe .BitsPerComponent );
};if _bebfe .VerticesPerRow !=nil {_gbggf .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_bebfe .VerticesPerRow );};if _bebfe .Decode !=nil {_gbggf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bebfe .Decode );};
if _bebfe .Function !=nil {if len (_bebfe .Function )==1{_gbggf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bebfe .Function [0].ToPdfObject ());}else {_edbae :=_bda .MakeArray ();for _ ,_bfebfb :=range _bebfe .Function {_edbae .Append (_bfebfb .ToPdfObject ());
};_gbggf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edbae );};};return _bebfe ._gfdga ;};

// Encoder returns the font's text encoder.
func (_eebac pdfCIDFontType0 )Encoder ()_dgb .TextEncoder {return _eebac ._bffcf };func _gfdac (_bdegd *_bda .PdfObjectDictionary ,_agabf *fontCommon )(*pdfFontType0 ,error ){_eacd ,_dbbc :=_bda .GetArray (_bdegd .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_dbbc {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_agabf );
return nil ,_bda .ErrRangeError ;};if _eacd .Len ()!=1{_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_eacd .Len ());return nil ,_bda .ErrRangeError ;
};_dadfc ,_ebgb :=_eeag (_eacd .Get (0),false );if _ebgb !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_ebgb ,_agabf );
return nil ,_ebgb ;};_aaec :=_bdegd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_cdec :="";_fdba :=_edgab (_agabf );_fdba .DescendantFont =_dadfc ;switch _cceb :=_aaec .(type ){case *_bda .PdfObjectName :_cdec ,_dbbc =_bda .GetNameVal (_aaec );
if _dbbc {if _cdec =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_cdec =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_fdba ._geed =_dgb .NewIdentityTextEncoder (_cdec );}else if _dfe .IsPredefinedCMap (_cdec ){_fdba ._fbcb ,_ebgb =_dfe .LoadPredefinedCMap (_cdec );
if _ebgb !=nil {_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cdec ,_ebgb );
};}else {_ed .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_cdec );};};case *_bda .PdfObjectStream :if _fdba ._fbedf ==nil {_ebaef ,_afcef :=_dfe .NewCIDSystemInfo (_cceb .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _afcef !=nil {_ed .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_afcef );};_bcf :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_ebaef .Registry ,_ebaef .Ordering );
if _dfe .IsPredefinedCMap (_bcf ){_fdba ._fbcb ,_afcef =_dfe .LoadPredefinedCMap (_bcf );if _afcef !=nil {_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bcf ,_afcef );
};}else {_bcf =_cceb .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_gebgc ,_dagg :=_bda .DecodeStream (_cceb );if _dagg !=nil {_ed .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_dagg );
return _fdba ,_dagg ;};if _ccbba :=_bcf =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_bcf =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_ccbba {_fdba ._fbcb ,_dagg =_dfe .LoadCmapFromData (_gebgc ,_ccbba );
if _dagg !=nil {_ed .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_dagg ,string (_gebgc ));
return _fdba ,_dagg ;};_acefb :=make (map[_dfe .CharCode ]rune ,256);for _bffgca :=0x00;_bffgca <=0xFF;_bffgca ++{_acefb [_dfe .CharCode (_bffgca )]=rune (_bffgca );};_fdba ._eeed =_dfe .NewToUnicodeCMap (_acefb );};};};};if _eddc :=_dadfc .baseFields ()._eeed ;
_eddc !=nil {if _bgcd :=_eddc .Name ();_bgcd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_bgcd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_bgcd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_bgcd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_fdba ._geed =_dgb .NewCMapEncoder (_cdec ,_fdba ._fbcb ,_eddc );
};};return _fdba ,nil ;};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_acbdc *Names )ToPdfObject ()_bda .PdfObject {_accea :=_acbdc ._ggcg ;_adgdg ,_fdad :=_accea .PdfObject .(*_bda .PdfObjectDictionary );if !_fdad {_ed .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
return _accea ;};if _acbdc .EmbeddedFiles !=nil {_adgdg .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_bda .MakeIndirectObject (_acbdc .EmbeddedFiles ));};return _accea ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_deggc *PdfPageResources )SetPatternByName (keyName _bda .PdfObjectName ,pattern _bda .PdfObject )error {if _deggc .Pattern ==nil {_deggc .Pattern =_bda .MakeDict ();};_ceddd ,_eddad :=_bda .GetDict (_deggc .Pattern );if !_eddad {return _bda .ErrTypeError ;
};_ceddd .Set (keyName ,pattern );return nil ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_gebdf *PdfReader )GetRevisionNumber ()int {return _gebdf ._fdadg .GetRevisionNumber ()};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_bfggd *Image )GetSamples ()[]uint32 {_fagg :=_cf .ResampleBytes (_bfggd .Data ,int (_bfggd .BitsPerComponent ));if _bfggd .BitsPerComponent < 8{_fagg =_bfggd .samplesTrimPadding (_fagg );};_ccafa :=int (_bfggd .Width )*int (_bfggd .Height )*_bfggd .ColorComponents ;
if len (_fagg )< _ccafa {_ed .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_fagg ),_ccafa );
return _fagg ;}else if len (_fagg )> _ccafa {_ed .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_fagg ),_ccafa );
_fagg =_fagg [:_ccafa ];};return _fagg ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bda .StreamEncoder )(*XObjectImage ,error ){_aacfg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_aacfg ,img ,cs ,encoder );};

// GetContainingPdfObject implements interface PdfModel.
func (_feea *Permissions )GetContainingPdfObject ()_bda .PdfObject {return _feea ._gefba };var (StructureTypeSpan ="\u0053\u0070\u0061\u006e";StructureTypeQuote ="\u0051\u0075\u006ft\u0065";StructureTypeNote ="\u004e\u006f\u0074\u0065";StructureTypeReference ="\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e";
StructureTypeBibliography ="\u0042\u0069\u0062\u0045\u006e\u0074\u0072\u0079";StructureTypeCode ="\u0043\u006f\u0064\u0065";StructureTypeLink ="\u004c\u0069\u006e\u006b";StructureTypeAnnot ="\u0041\u006e\u006eo\u0074";StructureTypeRuby ="\u0052\u0075\u0062\u0079";
StructureTypeWarichu ="\u0057a\u0072\u0069\u0063\u0068\u0075";StructureTypeRubyBase ="\u0052\u0042";StructureTypeRubyText ="\u0052\u0054";StructureTypeRubyPunctuation ="\u0052\u0050";StructureTypeWarichuText ="\u0057\u0054";StructureTypeWarichuPunctuation ="\u0057\u0050";
StructureTypeFigure ="\u0046\u0069\u0067\u0075\u0072\u0065";StructureTypeFormula ="\u0046o\u0072\u006d\u0075\u006c\u0061";StructureTypeForm ="\u0046\u006f\u0072\u006d";);func (_afgdc *PdfWriter )AttachFile (file *EmbeddedFile )error {_edded :=_afgdc ._edacf ;
if _edded ==nil {_edded =_eefc ();};_ceed :=_edded .addEmbeddedFile (file );if _ceed !=nil {return _ceed ;};_afgdc ._edacf =_edded ;return nil ;};func (_feafe *PdfPattern )getDict ()*_bda .PdfObjectDictionary {if _gabfe ,_fbgag :=_feafe ._cbbgec .(*_bda .PdfIndirectObject );
_fbgag {_dabb ,_affbe :=_gabfe .PdfObject .(*_bda .PdfObjectDictionary );if !_affbe {return nil ;};return _dabb ;}else if _fddea ,_cdcdba :=_feafe ._cbbgec .(*_bda .PdfObjectStream );_cdcdba {return _fddea .PdfObjectDictionary ;}else {_ed .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_feafe ._cbbgec );
return nil ;};};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_afed :=PdfWriter {};_afed ._egfad =map[_bda .PdfObject ]struct{}{};_afed ._ccbbg =[]_bda .PdfObject {};_afed ._dacdaa =map[_bda .PdfObject ][]*_bda .PdfObjectDictionary {};_afed ._febfe =map[_bda .PdfObject ]struct{}{};_afed ._cdbbdg .Major =1;
_afed ._cdbbdg .Minor =3;_accfda :=_bda .MakeDict ();_fdbfb :=[]struct{_feaef _bda .PdfObjectName ;_edbgf string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bgbcb ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_gegda ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_bbfcg ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_bccdfa ()},{"\u0054\u0069\u0074l\u0065",_bbabc ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ggdee ()}};
for _ ,_faab :=range _fdbfb {if _faab ._edbgf !=""{_accfda .Set (_faab ._feaef ,_bda .MakeString (_faab ._edbgf ));};};if _gcaeb :=_agaadb ();!_gcaeb .IsZero (){if _dfcgd ,_ccegad :=NewPdfDateFromTime (_gcaeb );_ccegad ==nil {_accfda .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dfcgd .ToPdfObject ());
};};if _cfceb :=_gcfbf ();!_cfceb .IsZero (){if _cfacd ,_daaad :=NewPdfDateFromTime (_cfceb );_daaad ==nil {_accfda .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_cfacd .ToPdfObject ());};};_bbeb :=_bda .PdfIndirectObject {};_bbeb .PdfObject =_accfda ;
_afed ._eebef =&_bbeb ;_afed .addObject (&_bbeb );_feaeb :=_bda .PdfIndirectObject {};_cegdfa :=_bda .MakeDict ();_cegdfa .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_feaeb .PdfObject =_cegdfa ;_afed ._eefbd =&_feaeb ;
_afed .addObject (_afed ._eefbd );_dcgc ,_egdbec :=_fbcbf ("\u0077");if _egdbec !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egdbec );};_afed ._egegd =_dcgc ;_cgaade :=_bda .PdfIndirectObject {};_cbcg :=_bda .MakeDict ();_cbcg .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0050\u0061\u0067e\u0073"));
_gdafg :=_bda .PdfObjectArray {};_cbcg .Set ("\u004b\u0069\u0064\u0073",&_gdafg );_cbcg .Set ("\u0043\u006f\u0075n\u0074",_bda .MakeInteger (0));_cgaade .PdfObject =_cbcg ;_afed ._facgd =&_cgaade ;_afed ._cdbc =map[_bda .PdfObject ]struct{}{};_afed ._dgdfe =[]*_bda .PdfIndirectObject {};
_afed .addObject (_afed ._facgd );_cegdfa .Set ("\u0050\u0061\u0067e\u0073",&_cgaade );_afed ._geadba =_cegdfa ;_ed .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_feaeb );return _afed ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bgbcg *PdfColorspaceCalGray )ToPdfObject ()_bda .PdfObject {_ggefg :=&_bda .PdfObjectArray {};_ggefg .Append (_bda .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_agef :=_bda .MakeDict ();if _bgbcg .WhitePoint !=nil {_agef .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bda .MakeArray (_bda .MakeFloat (_bgbcg .WhitePoint [0]),_bda .MakeFloat (_bgbcg .WhitePoint [1]),_bda .MakeFloat (_bgbcg .WhitePoint [2])));
}else {_ed .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bgbcg .BlackPoint !=nil {_agef .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bda .MakeArray (_bda .MakeFloat (_bgbcg .BlackPoint [0]),_bda .MakeFloat (_bgbcg .BlackPoint [1]),_bda .MakeFloat (_bgbcg .BlackPoint [2])));
};_agef .Set ("\u0047\u0061\u006dm\u0061",_bda .MakeFloat (_bgbcg .Gamma ));_ggefg .Append (_agef );if _bgbcg ._dega !=nil {_bgbcg ._dega .PdfObject =_ggefg ;return _bgbcg ._dega ;};return _ggefg ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_bfdcde *PdfReader )GetCatalogMetadata ()(_bda .PdfObject ,bool ){if _bfdcde ._dabg ==nil {return nil ,false ;};_ecfg :=_bfdcde ._dabg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _ecfg ,_ecfg !=nil ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_bdae :=NewPdfAnnotation ();_acbf :=&PdfAnnotationTrapNet {};_acbf .PdfAnnotation =_bdae ;_bdae .SetContext (_acbf );return _acbf ;};

// AddKChild adds a child K dictionary object.
func (_baeb *KDict )AddKChild (kChild *KDict ){_baeb ._fcbda =append (_baeb ._fcbda ,&KValue {_dfafb :kChild });};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bda .PdfObject ;IsMap _bda .PdfObject ;};

// IsValid checks if the given pdf output intent type is valid.
func (_abbfc PdfOutputIntentType )IsValid ()bool {return _abbfc >=PdfOutputIntentTypeA1 &&_abbfc <=PdfOutputIntentTypeX ;};

// ToPdfObject implements interface PdfModel.
func (_gacf *PdfAnnotationInk )ToPdfObject ()_bda .PdfObject {_gacf .PdfAnnotation .ToPdfObject ();_dbafa :=_gacf ._ged ;_gdfg :=_dbafa .PdfObject .(*_bda .PdfObjectDictionary );_gacf .PdfAnnotationMarkup .appendToPdfDictionary (_gdfg );_gdfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0049\u006e\u006b"));
_gdfg .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_gacf .InkList );_gdfg .SetIfNotNil ("\u0042\u0053",_gacf .BS );return _dbafa ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bfdca :=NewPdfAnnotation ();_eecb :=&PdfAnnotationRichMedia {};_eecb .PdfAnnotation =_bfdca ;_bfdca .SetContext (_eecb );return _eecb ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _bda .PdfObject )(*PdfInfo ,error ){var _afdcd PdfInfo ;_dfdc ,_adfdg :=obj .(*_bda .PdfObjectDictionary );if !_adfdg {return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_eefba :=range _dfdc .Keys (){switch _eefba {case "\u0054\u0069\u0074l\u0065":_afdcd .Title ,_ =_bda .GetString (_dfdc .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_afdcd .Author ,_ =_bda .GetString (_dfdc .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_afdcd .Subject ,_ =_bda .GetString (_dfdc .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_afdcd .Keywords ,_ =_bda .GetString (_dfdc .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_afdcd .Creator ,_ =_bda .GetString (_dfdc .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_afdcd .Producer ,_ =_bda .GetString (_dfdc .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_afdcd .Trapped ,_ =_bda .GetName (_dfdc .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _dbdb ,_geabf :=_bda .GetString (_dfdc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_geabf &&_dbdb .String ()!=""{_dcede ,_cccdd :=NewPdfDate (_dbdb .String ());if _cccdd !=nil {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_cccdd );
};_afdcd .CreationDate =&_dcede ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _acfa ,_cegc :=_bda .GetString (_dfdc .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_cegc &&_acfa .String ()!=""{_eafce ,_facb :=NewPdfDate (_acfa .String ());if _facb !=nil {return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_facb );
};_afdcd .ModifiedDate =&_eafce ;};default:_gdddc ,_ :=_bda .GetString (_dfdc .Get (_eefba ));if _afdcd ._feec ==nil {_afdcd ._feec =_bda .MakeDict ();};_afdcd ._feec .Set (_eefba ,_gdddc );};};return &_afdcd ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_fecb *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_dfec :=PdfColorLab {l ,a ,b };return &_dfec };

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ca :=NewPdfAction ();_egb :=&PdfActionGoToE {};_egb .PdfAction =_ca ;_ca .SetContext (_egb );return _egb ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_ggfcc int64 ;_geacg int64 ;_cfgbe int64 ;_gggg int64 ;_cbdga int64 ;_gddcc int64 ;_ffcfe byte ;_dagdfa int64 ;_dgeec int64 ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_edd PdfModel ;Type _bda .PdfObject ;S _bda .PdfObject ;Next _bda .PdfObject ;_gg *_bda .PdfIndirectObject ;};func _cgde (_gcaca map[_geg .GID ]int ,_bdee uint16 )*_bda .PdfObjectArray {_ecbff :=&_bda .PdfObjectArray {};_aacde :=_geg .GID (_bdee );
for _ccddd :=_geg .GID (0);_ccddd < _aacde ;{_bgbce ,_gggde :=_gcaca [_ccddd ];if !_gggde {_ccddd ++;continue ;};_cfegg :=_ccddd ;for _edbb :=_cfegg +1;_edbb < _aacde ;_edbb ++{if _aedb ,_gggeda :=_gcaca [_edbb ];!_gggeda ||_bgbce !=_aedb {break ;};_cfegg =_edbb ;
};_ecbff .Append (_bda .MakeInteger (int64 (_ccddd )));_ecbff .Append (_bda .MakeInteger (int64 (_cfegg )));_ecbff .Append (_bda .MakeInteger (int64 (_bgbce )));_ccddd =_cfegg +1;};return _ecbff ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_gedbb *Image )ToJBIG2Image ()(*_bda .JBIG2Image ,error ){_fggdd ,_ebabc :=_gedbb .ToGoImage ();if _ebabc !=nil {return nil ,_ebabc ;};return _bda .GoImageToJBIG2 (_fggdd ,_bda .JB2ImageAutoThreshold );};

// AddPages adds pages to be appended to the end of the source PDF.
func (_fggf *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_aggb :=range pages {_aggb =_aggb .Duplicate ();_defaab (_aggb );_fggf ._eebd =append (_fggf ._eebd ,_aggb );};};

// ToPdfObject returns a PDF object representation of the ViewerPreferences.
func (_cbfb *ViewerPreferences )ToPdfObject ()_bda .PdfObject {_daeag :=_bda .MakeDict ();if _cbfb ._dgdec !=nil {_daeag .Set ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072",_bda .MakeBool (*_cbfb ._dgdec ));};if _cbfb ._acbcd !=nil {_daeag .Set ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072",_bda .MakeBool (*_cbfb ._acbcd ));
};if _cbfb ._bcddd !=nil {_daeag .Set ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049",_bda .MakeBool (*_cbfb ._bcddd ));};if _cbfb ._gaefd !=nil {_daeag .Set ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw",_bda .MakeBool (*_cbfb ._gaefd ));
};if _cbfb ._ecaag !=nil {_daeag .Set ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077",_bda .MakeBool (*_cbfb ._ecaag ));};if _cbfb ._ddeed !=nil {_daeag .Set ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065",_bda .MakeBool (*_cbfb ._ddeed ));
};if _cbfb ._egeea !=""{_daeag .Set ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065",_bda .MakeName (string (_cbfb ._egeea )));};if _cbfb ._gbacc !=""{_daeag .Set ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn",_bda .MakeName (string (_cbfb ._gbacc )));
};if _cbfb ._adbff !=""{_daeag .Set ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061",_bda .MakeName (string (_cbfb ._adbff )));};if _cbfb ._adecc !=""{_daeag .Set ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070",_bda .MakeName (string (_cbfb ._adecc )));
};if _cbfb ._geeda !=""{_daeag .Set ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a",_bda .MakeName (string (_cbfb ._geeda )));};if _cbfb ._eefag !=""{_daeag .Set ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p",_bda .MakeName (string (_cbfb ._eefag )));
};if _cbfb ._ecffgg !=""{_daeag .Set ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067",_bda .MakeName (string (_cbfb ._ecffgg )));};if _cbfb ._bebac !=""{_daeag .Set ("\u0044\u0075\u0070\u006c\u0065\u0078",_bda .MakeName (string (_cbfb ._bebac )));
};if _cbfb ._eedfcc !=nil {_daeag .Set ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065",_bda .MakeBool (*_cbfb ._eedfcc ));};if _cbfb ._edffc !=nil {_daeag .Set ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065",_bda .MakeArrayFromIntegers (_cbfb ._edffc ));
};if _cbfb ._eaga !=0{_daeag .Set ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s",_bda .MakeInteger (int64 (_cbfb ._eaga )));};return _daeag ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_ebabd interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// SetTabOrder sets the tab order for the page.
func (_fdeaa *PdfPage )SetTabOrder (order TabOrderType ){_fdeaa .Tabs =_bda .MakeName (string (order ))};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_gacfe :=&PdfFieldSignature {};_gacfe .PdfField =NewPdfField ();_gacfe .PdfField .SetContext (_gacfe );_gacfe .PdfAnnotationWidget =NewPdfAnnotationWidget ();_gacfe .PdfAnnotationWidget .SetContext (_gacfe );
_gacfe .PdfAnnotationWidget ._ged =_gacfe .PdfField ._ceaeg ;_gacfe .T =_bda .MakeString ("");_gacfe .F =_bda .MakeInteger (132);_gacfe .V =signature ;return _gacfe ;};func _fcbe (_fdcce *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_fdcce }};


// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// SetHideWindowUI sets the value of the hideWindowUI flag.
func (_adgg *ViewerPreferences )SetHideWindowUI (hideWindowUI bool ){_adgg ._bcddd =&hideWindowUI };

// SetDuplex sets the value of the duplex.
func (_ggaaf *ViewerPreferences )SetDuplex (duplex Duplex ){_ggaaf ._bebac =duplex };

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _bda .PdfObject )(*EmbeddedFile ,error ){_efe :=_bda .TraceToDirectObject (obj );_gefgb ,_ccege :=_efe .(*_bda .PdfObjectDictionary );if !_ccege {return nil ,_gea .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fbda :=_bda .TraceToDirectObject (_gefgb .Get ("\u0046"));if _fbda ==nil {return nil ,_gea .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_ggcb ,_ccege :=_fbda .(*_bda .PdfObjectStream );
if !_ccege {return nil ,_gea .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_gaaeae :=_ggcb .PdfObjectDictionary ;_feeda :=_gaaeae .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _feeda ==nil {return nil ,_gea .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_dcef ,_ccege :=_feeda .(*_bda .PdfObjectDictionary );if !_ccege {return nil ,_gea .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_ffgb :="";_dfcc :=_dcef .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _dfcc !=nil {_ffgb =_dfcc .(*_bda .PdfObjectString ).Str ();};_ggffg ,_dfdg :=_bda .DecodeStream (_ggcb );if _dfdg !=nil {return nil ,_dfdg ;};_bfgag :=&EmbeddedFile {Content :_ggffg ,Hash :_ffgb };return _bfgag ,nil ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_gefba *_bda .PdfObjectDictionary ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_beac *DSS )GetContainingPdfObject ()_bda .PdfObject {return _beac ._bebag };

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bda .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_badgg *PdfFont )ToUnicode ()string {if _badgg .baseFields ()._eeed ==nil {return "";};return _badgg .baseFields ()._eeed .Name ();};func (_fdb *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};func (_efba *PdfReader )newPdfAnnotationProjectionFromDict (_bdcd *_bda .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_fedc :=&PdfAnnotationProjection {};
_fdgf ,_fbbc :=_efba .newPdfAnnotationMarkupFromDict (_bdcd );if _fbbc !=nil {return nil ,_fbbc ;};_fedc .PdfAnnotationMarkup =_fdgf ;return _fedc ,nil ;};func (_fbbfd Image )getBase ()_bg .ImageBase {return _bg .NewImageBase (int (_fbbfd .Width ),int (_fbbfd .Height ),int (_fbbfd .BitsPerComponent ),_fbbfd .ColorComponents ,_fbbfd .Data ,_fbbfd ._ffbd ,_fbbfd ._bfafe );
};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bfdf *PdfAnnotationWidget )Field ()*PdfField {return _bfdf ._aee };func (_eaa *PdfReader )newPdfActionSubmitFormFromDict (_gaed *_bda .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_geab ,_dcdd :=_ggfe (_gaed .Get ("\u0046"));if _dcdd !=nil {return nil ,_dcdd ;
};return &PdfActionSubmitForm {F :_geab ,Fields :_gaed .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gaed .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_abgd *PdfPageResources )GetXObjectImageByName (keyName _bda .PdfObjectName )(*XObjectImage ,error ){_eafad ,_cdfga :=_abgd .GetXObjectByName (keyName );if _eafad ==nil {return nil ,nil ;};if _cdfga !=XObjectTypeImage {return nil ,_gea .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_ffaac ,_eafac :=NewXObjectImageFromStream (_eafad );if _eafac !=nil {return nil ,_eafac ;};return _ffaac ,nil ;};func _ggbaf (_gfgc _bda .PdfObject )(*_bda .PdfObjectDictionary ,*fontCommon ,error ){_ddaf :=&fontCommon {};if _geggg ,_cfcec :=_gfgc .(*_bda .PdfIndirectObject );
_cfcec {_ddaf ._cadee =_geggg .ObjectNumber ;};_bgefce ,_badge :=_bda .GetDict (_gfgc );if !_badge {_ed .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gfgc );
return nil ,nil ,ErrFontNotSupported ;};_fcgca ,_badge :=_bda .GetNameVal (_bgefce .Get ("\u0054\u0079\u0070\u0065"));if !_badge {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _fcgca !="\u0046\u006f\u006e\u0074"{_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fcgca ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bda .ErrTypeError ;};_fggbd ,_badge :=_bda .GetNameVal (_bgefce .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_badge {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_ddaf ._fggeg =_fggbd ;_cdag ,_badge :=_bda .GetNameVal (_bgefce .Get ("\u004e\u0061\u006d\u0065"));if _badge {_ddaf ._faee =_cdag ;};_daag :=_bgefce .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");
if _daag !=nil {_ddaf ._fbedf =_bda .TraceToDirectObject (_daag );_daffg ,_dfgde :=_ccega (_ddaf ._fbedf ,_ddaf );if _dfgde !=nil {return _bgefce ,_ddaf ,_dfgde ;};_ddaf ._eeed =_daffg ;}else if _fggbd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_fggbd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_efadb ,_agabd :=_dfe .NewCIDSystemInfo (_bgefce .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _agabd !=nil {return _bgefce ,_ddaf ,_agabd ;};_gfgbe :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_efadb .Registry ,_efadb .Ordering );if _dfe .IsPredefinedCMap (_gfgbe ){_ddaf ._eeed ,_agabd =_dfe .LoadPredefinedCMap (_gfgbe );
if _agabd !=nil {_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gfgbe ,_agabd );
};};};_eaaeb :=_bgefce .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _eaaeb !=nil {_bddbb ,_beeg :=_ecbag (_eaaeb );if _beeg !=nil {_ed .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_beeg );
return _bgefce ,_ddaf ,_beeg ;};_ddaf ._bedea =_bddbb ;};if _fggbd !="\u0054\u0079\u0070e\u0033"{_dgcbb ,_aadc :=_bda .GetNameVal (_bgefce .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_aadc {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _bgefce ,_ddaf ,ErrRequiredAttributeMissing ;};_ddaf ._bcaebe =_dgcbb ;};return _bgefce ,_ddaf ,nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ad .Time ){_ggbe .Lock ();defer _ggbe .Unlock ();_fafddb =creationDate ;};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _bda .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_eaada :=NewXObjectImage ();if lazy {_gddbb ,_gdcdaf :=UpdateXObjectImageFromImage (_eaada ,img ,cs ,encoder );if _gdcdaf !=nil {return nil ,_gdcdaf ;
};_gddbb .ToPdfObject ();_gdcdaf =_gddbb ._eedbf .MakeLazy ();if _gdcdaf !=nil {return nil ,_gdcdaf ;};_gddbb .Stream =nil ;return _gddbb ,nil ;};return UpdateXObjectImageFromImage (_eaada ,img ,cs ,encoder );};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_begd *_bda .PdfIndirectObject ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_ggbe .Lock ();defer _ggbe .Unlock ();_cafe =creator };

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_ddedb *PdfPageResources )GetContainingPdfObject ()_bda .PdfObject {return _ddedb ._cfabb };

// AddOutlineTree adds outlines to a PDF file.
func (_ccgbff *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_ccgbff ._fcade =outlineTree ;};

// SetFlag sets the flag for the field.
func (_fgfa *PdfField )SetFlag (flag FieldFlag ){_fgfa .Ff =_bda .MakeInteger (int64 (flag ))};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_ggbe .Lock ();defer _ggbe .Unlock ();_agbg =subject };func (_bebeg *Image )resampleLowBits (_efgge []uint32 ){_dfbg :=_bg .BytesPerLine (int (_bebeg .Width ),int (_bebeg .BitsPerComponent ),_bebeg .ColorComponents );
_eggaa :=make ([]byte ,_bebeg .ColorComponents *_dfbg *int (_bebeg .Height ));_bgfa :=int (_bebeg .BitsPerComponent )*_bebeg .ColorComponents *int (_bebeg .Width );_beaf :=uint8 (8);var (_eabfd ,_afacc int ;_bdfb uint32 ;);for _fffg :=0;_fffg < int (_bebeg .Height );
_fffg ++{_afacc =_fffg *_dfbg ;for _ggec :=0;_ggec < _bgfa ;_ggec ++{_bdfb =_efgge [_eabfd ];_beaf -=uint8 (_bebeg .BitsPerComponent );_eggaa [_afacc ]|=byte (_bdfb )<<_beaf ;if _beaf ==0{_beaf =8;_afacc ++;};_eabfd ++;};};_bebeg .Data =_eggaa ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_aebf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aea :=vals [0];_afdgd :=[]float64 {_aea };_gebc ,_gadg :=_aebf .TintTransform .Evaluate (_afdgd );
if _gadg !=nil {_ed .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_gadg );_ed .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_aebf .TintTransform );
return nil ,_gadg ;};_ed .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_gebc ,_aebf .AlternateSpace );
_cgeb ,_gadg :=_aebf .AlternateSpace .ColorFromFloats (_gebc );if _gadg !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_gadg );
return nil ,_gadg ;};return _cgeb ,nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_ebbb :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_ebbb ;};func (_edcfa *PdfReader )resolveReference (_cgbac *_bda .PdfObjectReference )(_bda .PdfObject ,bool ,error ){_bbca ,_ecdga :=_edcfa ._fdadg .ObjCache [int (_cgbac .ObjectNumber )];
if !_ecdga {_ed .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_cgbac );_facbc ,_geggb :=_edcfa ._fdadg .LookupByReference (*_cgbac );if _geggb !=nil {return nil ,false ,_geggb ;};_edcfa ._fdadg .ObjCache [int (_cgbac .ObjectNumber )]=_facbc ;
return _facbc ,false ,nil ;};return _bbca ,true ,nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_accfd *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func (_efee *PdfFont )baseFields ()*fontCommon {if _efee ._ggada ==nil {_ed .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _efee ._ggada .baseFields ();};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_gfed *PdfAppender )UpdatePage (page *PdfPage ){_gfed .updateObjectsDeep (page .ToPdfObject (),nil )};

// GetNumComponents returns the number of color components.
func (_addf *PdfColorspaceICCBased )GetNumComponents ()int {return _addf .N };

// RemoveStructParentsKey removes the StructParents key.
func (_ceabb *PdfPage )RemoveStructParentsKey (){_ceabb .StructParents =nil };

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bda .PdfObject ;Volume _bda .PdfObject ;Synchronous _bda .PdfObject ;Repeat _bda .PdfObject ;Mix _bda .PdfObject ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// ParserMetadata gets the parser  metadata.
func (_dgdg *CompliancePdfReader )ParserMetadata ()_bda .ParserMetadata {if _dgdg ._ceae ==(_bda .ParserMetadata {}){_dgdg ._ceae ,_ =_dgdg ._fdadg .ParserMetadata ();};return _dgdg ._ceae ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bda .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bda .PdfObject ;Contents _bda .PdfObject ;
Rotate *int64 ;Group _bda .PdfObject ;Thumb _bda .PdfObject ;B _bda .PdfObject ;Dur _bda .PdfObject ;Trans _bda .PdfObject ;AA _bda .PdfObject ;Metadata _bda .PdfObject ;PieceInfo _bda .PdfObject ;StructParents _bda .PdfObject ;ID _bda .PdfObject ;PZ _bda .PdfObject ;
SeparationInfo _bda .PdfObject ;Tabs _bda .PdfObject ;TemplateInstantiated _bda .PdfObject ;PresSteps _bda .PdfObject ;UserUnit _bda .PdfObject ;VP _bda .PdfObject ;Annots _bda .PdfObject ;_bcaef []*PdfAnnotation ;_bdgdg *_bda .PdfObjectDictionary ;_eebfa *_bda .PdfIndirectObject ;
_gfaec _bda .PdfObjectDictionary ;_agfg *PdfReader ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_affed *PdfPageResources )GenerateXObjectName ()_bda .PdfObjectName {_decab :=1;for {_adgc :=_bda .MakeName (_c .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_decab ));if !_affed .HasXObjectByName (*_adgc ){return *_adgc ;};_decab ++;};};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_babg *PdfFont )GetCIDToGIDMapObject ()_bda .PdfObject {_bacbe ,_ddece :=_babg ._ggada .(*pdfCIDFontType2 );if _ddece {return _bacbe .CIDToGIDMap ;};return nil ;};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_gddg :=_fd .Detect (content );_bafe :=_af .Sum (content );_bacd :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_gddg .String (),Hash :_de .EncodeToString (_bafe [:])};
return _bacd ,nil ;};

// AddRefChild adds a child reference object.
func (_fbbgef *KDict )AddRefChild (kChild *_bda .PdfObjectDictionary ){_fbbgef ._fcbda =append (_fbbgef ._fcbda ,&KValue {_bfafef :kChild });};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_daeba *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bda .StreamEncoder ,error ){_dcdbd ,_ecega :=_daeba ._cbbgec .(*_bda .PdfObjectStream );if !_ecega {_ed .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_daeba ._cbbgec );
return nil ,nil ,_bda .ErrTypeError ;};_bccge ,_bceab :=_bda .DecodeStream (_dcdbd );if _bceab !=nil {_ed .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_bceab );
return nil ,nil ,_bceab ;};_gddec ,_bceab :=_bda .NewEncoderFromStream (_dcdbd );if _bceab !=nil {_ed .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bceab );
return nil ,nil ,_bceab ;};return _bccge ,_gddec ,nil ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_afeff *PdfSignature ,_ggfgaa Hasher ,_deede SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// ToPdfObject implements interface PdfModel.
func (_febca *PdfAnnotationMovie )ToPdfObject ()_bda .PdfObject {_febca .PdfAnnotation .ToPdfObject ();_cdgf :=_febca ._ged ;_beag :=_cdgf .PdfObject .(*_bda .PdfObjectDictionary );_beag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u004d\u006f\u0076i\u0065"));
_beag .SetIfNotNil ("\u0054",_febca .T );_beag .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_febca .Movie );_beag .SetIfNotNil ("\u0041",_febca .A );return _cdgf ;};

// ToPdfObject implements interface PdfModel.
func (_adda *PdfFilespec )ToPdfObject ()_bda .PdfObject {_cgaeb :=_adda .getDict ();_cgaeb .Clear ();_cgaeb .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_cgaeb .SetIfNotNil ("\u0046\u0053",_adda .FS );
_cgaeb .SetIfNotNil ("\u0046",_adda .F );_cgaeb .SetIfNotNil ("\u0055\u0046",_adda .UF );_cgaeb .SetIfNotNil ("\u0044\u004f\u0053",_adda .DOS );_cgaeb .SetIfNotNil ("\u004d\u0061\u0063",_adda .Mac );_cgaeb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_adda .Unix );
_cgaeb .SetIfNotNil ("\u0049\u0044",_adda .ID );_cgaeb .SetIfNotNil ("\u0056",_adda .V );_cgaeb .SetIfNotNil ("\u0045\u0046",_adda .EF );_cgaeb .SetIfNotNil ("\u0052\u0046",_adda .RF );_cgaeb .SetIfNotNil ("\u0044\u0065\u0073\u0063",_adda .Desc );_cgaeb .SetIfNotNil ("\u0043\u0049",_adda .CI );
_cgaeb .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_adda .AFRelationship );return _adda ._daeg ;};func (_bcbca *Names )addEmbeddedFile (_cefga *EmbeddedFile )error {if _bcbca .EmbeddedFiles ==nil {_bcbca .EmbeddedFiles =_bda .MakeDict ();
_bcbca .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_bda .MakeArray ());};_bfbb :=NewPdfFileSpecFromEmbeddedFile (_cefga );_ffcfa :=_bcbca .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_degeef ,_abfc :=_ffcfa .(*_bda .PdfObjectArray );if !_abfc {return _gea .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_bcbcb string ;_cgcd *PdfFilespec ;};_abda :=[]FileSpecMap {};for _gcad :=0;_gcad < len (_degeef .Elements ());_gcad +=2{if _gcad %2==0{_dcda :=_degeef .Get (_gcad );if _dcda !=nil {_efed :=_dcda .(*_bda .PdfObjectString );_dgaec :=_degeef .Get (_gcad +1);
_dcaed ,_dccab :=NewPdfFilespecFromObj (_dgaec );if _dccab !=nil {return _dccab ;};_abda =append (_abda ,FileSpecMap {_bcbcb :_efed .String (),_cgcd :_dcaed });};};};_abda =append (_abda ,FileSpecMap {_bcbcb :_cefga .Name ,_cgcd :_bfbb });_cb .Slice (_abda ,func (_bgga ,_fccbf int )bool {return _abda [_bgga ]._bcbcb < _abda [_fccbf ]._bcbcb });
_degeef =_bda .MakeArray ();for _ ,_cadce :=range _abda {_degeef .Append (_bda .MakeString (_cadce ._bcbcb ));_degeef .Append (_cadce ._cgcd .ToPdfObject ());};_bcbca .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_degeef );return nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_ddfc *PdfColorCalRGB )GetNumComponents ()int {return 3};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_eefe byte )byte ;

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ga .ReadSeeker )(*PdfFont ,error ){const _ccfab =_dgb .CharCode (32);const _addbd =_dgb .CharCode (255);_ggaa ,_gbefa :=_ga .ReadAll (r );if _gbefa !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gbefa );
return nil ,_gbefa ;};_gegge ,_gbefa :=_geg .TtfParse (_dff .NewReader (_ggaa ));if _gbefa !=nil {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_gbefa );
return nil ,_gbefa ;};_gdfgc :=&pdfFontSimple {_dfad :make (map[_dgb .CharCode ]float64 ),fontCommon :fontCommon {_fggeg :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gdfgc ._cbedg =_dgb .NewWinAnsiEncoder ();_gdfgc ._bcaebe =_gegge .PostScriptName ;
_gdfgc .FirstChar =_bda .MakeInteger (int64 (_ccfab ));_gdfgc .LastChar =_bda .MakeInteger (int64 (_addbd ));_aefaa :=1000.0/float64 (_gegge .UnitsPerEm );if len (_gegge .Widths )<=0{return nil ,_gea .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bebgd :=_aefaa *float64 (_gegge .Widths [0]);_adbfe :=make ([]float64 ,0,_addbd -_ccfab +1);for _eccag :=_ccfab ;_eccag <=_addbd ;_eccag ++{_aaccb ,_cdfe :=_gdfgc .Encoder ().CharcodeToRune (_eccag );if !_cdfe {_ed .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_eccag );
_adbfe =append (_adbfe ,_bebgd );continue ;};_ceeaa ,_fabgd :=_gegge .Chars [_aaccb ];if !_fabgd {_ed .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_adbfe =append (_adbfe ,_bebgd );
continue ;};_bfea :=_aefaa *float64 (_gegge .Widths [_ceeaa ]);_adbfe =append (_adbfe ,_bfea );};_gdfgc .Widths =_bda .MakeIndirectObject (_bda .MakeArrayFromFloats (_adbfe ));if len (_adbfe )< int (_addbd -_ccfab +1){_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_adbfe ),255-32+1);
return nil ,_bda .ErrRangeError ;};for _beegf :=_ccfab ;_beegf <=_addbd ;_beegf ++{_gdfgc ._dfad [_beegf ]=_adbfe [_beegf -_ccfab ];};_gdfgc .Encoding =_bda .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");
_bgfb :=&PdfFontDescriptor {};_bgfb .FontName =_bda .MakeName (_gegge .PostScriptName );_bgfb .Ascent =_bda .MakeFloat (_aefaa *float64 (_gegge .TypoAscender ));_bgfb .Descent =_bda .MakeFloat (_aefaa *float64 (_gegge .TypoDescender ));_bgfb .CapHeight =_bda .MakeFloat (_aefaa *float64 (_gegge .CapHeight ));
_bgfb .FontBBox =_bda .MakeArrayFromFloats ([]float64 {_aefaa *float64 (_gegge .Xmin ),_aefaa *float64 (_gegge .Ymin ),_aefaa *float64 (_gegge .Xmax ),_aefaa *float64 (_gegge .Ymax )});_bgfb .ItalicAngle =_bda .MakeFloat (_gegge .ItalicAngle );_bgfb .MissingWidth =_bda .MakeFloat (_aefaa *float64 (_gegge .Widths [0]));
_feba ,_gbefa :=_bda .MakeStream (_ggaa ,_bda .NewFlateEncoder ());if _gbefa !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gbefa );
return nil ,_gbefa ;};_feba .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bda .MakeInteger (int64 (len (_ggaa ))));_bgfb .FontFile2 =_feba ;if _gegge .Bold {_bgfb .StemV =_bda .MakeInteger (120);}else {_bgfb .StemV =_bda .MakeInteger (70);
};_fdafe :=_feadfa ;if _gegge .IsFixedPitch {_fdafe |=_dbcd ;};if _gegge .ItalicAngle !=0{_fdafe |=_fdfdg ;};_bgfb .Flags =_bda .MakeInteger (int64 (_fdafe ));_gdfgc ._bedea =_bgfb ;_gcddf :=&PdfFont {_ggada :_gdfgc };return _gcddf ,nil ;};

// PartialName returns the partial name of the field.
func (_aefa *PdfField )PartialName ()string {_facd :="";if _aefa .T !=nil {_facd =_aefa .T .Decoded ();}else {_ed .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _facd ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bda .PdfObject ;Mac _bda .PdfObject ;Unix _bda .PdfObject ;NewWindow _bda .PdfObject ;};

// NewKDictionary creates a new K dictionary object.
func NewKDictionary ()*KDict {return &KDict {_fcbda :make ([]*KValue ,0),_adceg :-1}};func _ccega (_gggab _bda .PdfObject ,_begca *fontCommon )(*_dfe .CMap ,error ){_eeaf ,_edgg :=_bda .GetStream (_gggab );if !_edgg {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_gggab );
return nil ,_bda .ErrTypeError ;};_bbdab ,_deefc :=_bda .DecodeStream (_eeaf );if _deefc !=nil {return nil ,_deefc ;};_bdbe ,_deefc :=_dfe .LoadCmapFromData (_bbdab ,!_begca .isCIDFont ());if _deefc !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_eeaf .ObjectNumber ,_deefc );
};return _bdbe ,_deefc ;};

// String returns a human readable description of `fontfile`.
func (_fdgg *fontFile )String ()string {_feefg :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fdgg ._ffde !=nil {_feefg =_fdgg ._ffde .String ();};return _c .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fdgg ._dddg ,_feefg );
};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_ccbbf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_fegab :=NewPdfWriter ();_fegab .SetFileName (_ccbbf ._gcbfae );if opts ==nil {opts =&ReaderToWriterOpts {};};_fcbeb ,_eebe :=_ccbbf .GetNumPages ();if _eebe !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebe );
return nil ,_eebe ;};for _geabcf :=1;_geabcf <=_fcbeb ;_geabcf ++{_eccac ,_begb :=_ccbbf .GetPage (_geabcf );if _begb !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_begb );return nil ,_begb ;};if opts .PageProcessCallback !=nil {_begb =opts .PageProcessCallback (_geabcf ,_eccac );
if _begb !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_begb );return nil ,_begb ;};}else if opts .PageCallback !=nil {opts .PageCallback (_geabcf ,_eccac );};_begb =_fegab .AddPage (_eccac );if _begb !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_begb );
return nil ,_begb ;};};_fegab ._cdbbdg =_ccbbf .PdfVersion ();if !opts .SkipInfo {_bccb ,_aaeec :=_ccbbf .GetPdfInfo ();if _aaeec !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aaeec );}else {_fegab ._eebef .PdfObject =_bccb .ToPdfObject ();
};};if !opts .SkipMetadata {if _afafee :=_ccbbf ._dabg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_afafee !=nil {if _bdeee :=_fegab .SetCatalogMetadata (_afafee );_bdeee !=nil {return nil ,_bdeee ;};};};if !opts .SkipMarkInfo {if _afadc ,_cfebe :=_ccbbf .GetCatalogMarkInfo ();
_cfebe {if _bfcee :=_fegab .SetCatalogMarkInfo (_afadc );_bfcee !=nil {return nil ,_bfcee ;};};};if !opts .SkipAcroForm {_bdebg :=_fegab .SetForms (_ccbbf .AcroForm );if _bdebg !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdebg );
return nil ,_bdebg ;};};if !opts .SkipViewerPreferences {if _cceed ,_egbd :=_ccbbf .GetCatalogViewerPreferences ();_egbd {if _acfef :=_fegab .SetCatalogViewerPreferences (_cceed );_acfef !=nil {return nil ,_acfef ;};};};if !opts .SkipLanguage {if _eegfb ,_eddbb :=_ccbbf .GetCatalogLanguage ();
_eddbb {if _cgcba :=_fegab .SetCatalogLanguage (_eegfb );_cgcba !=nil {return nil ,_cgcba ;};};};if !opts .SkipOutlines {_fegab .AddOutlineTree (_ccbbf .GetOutlineTree ());};if !opts .SkipOCProperties {_dgcgg ,_fagba :=_ccbbf .GetOCProperties ();if _fagba !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fagba );
}else {_fagba =_fegab .SetOCProperties (_dgcgg );if _fagba !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fagba );};};};if !opts .SkipPageLabels {_fggbe ,_cfeag :=_ccbbf .GetPageLabels ();if _cfeag !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfeag );
}else {_cfeag =_fegab .SetPageLabels (_fggbe );if _cfeag !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfeag );};};};if !opts .SkipNamedDests {_agdac ,_fcafd :=_ccbbf .GetNamedDestinations ();if _fcafd !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcafd );
}else {_fcafd =_fegab .SetNamedDestinations (_agdac );if _fcafd !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcafd );};};};if !opts .SkipNameDictionary {_fbdaf ,_ggccbb :=_ccbbf .GetNameDictionary ();if _ggccbb !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggccbb );
}else {_ggccbb =_fegab .SetNameDictionary (_fbdaf );if _ggccbb !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggccbb );};};};_bbccd ,_gcage :=_ccbbf .GetCatalogStructTreeRoot ();if _gcage {_ecgf :=_fegab .SetCatalogStructTreeRoot (_bbccd );
if _ecgf !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecgf );};};if !opts .SkipRotation &&_ccbbf .Rotate !=nil {if _eaaec :=_fegab .SetRotation (*_ccbbf .Rotate );_eaaec !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eaaec );
};};return &_fegab ,nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_cc :=NewPdfAction ();_dfg :=&PdfActionSetOCGState {};_dfg .PdfAction =_cc ;_cc .SetContext (_dfg );return _dfg ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gbdfg *PdfColorCalGray )GetNumComponents ()int {return 1};func (_effd *PdfAppender )mergeResources (_efbd ,_eea _bda .PdfObject ,_ece map[_bda .PdfObjectName ]_bda .PdfObjectName )_bda .PdfObject {if _eea ==nil &&_efbd ==nil {return nil ;};if _eea ==nil {return _efbd ;
};_egade ,_bbbde :=_bda .GetDict (_eea );if !_bbbde {return _efbd ;};if _efbd ==nil {_fbgb :=_bda .MakeDict ();_fbgb .Merge (_egade );return _eea ;};_bdbgb ,_bbbde :=_bda .GetDict (_efbd );if !_bbbde {_ed .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_bdbgb =_bda .MakeDict ();};for _ ,_fbbg :=range _egade .Keys (){if _ccbc ,_eed :=_ece [_fbbg ];_eed {_bdbgb .Set (_ccbc ,_egade .Get (_fbbg ));}else {_bdbgb .Set (_fbbg ,_egade .Get (_fbbg ));};};return _bdbgb ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bda .PdfObject ;PreserveRB _bda .PdfObject ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bda .PdfObject ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_bda .PdfObjectArray ;ExtGState _bda .PdfObject ;};func (_ecc *PdfReader )newPdfAnnotationTextFromDict (_ade *_bda .PdfObjectDictionary )(*PdfAnnotationText ,error ){_fee :=PdfAnnotationText {};
_bdag ,_fdca :=_ecc .newPdfAnnotationMarkupFromDict (_ade );if _fdca !=nil {return nil ,_fdca ;};_fee .PdfAnnotationMarkup =_bdag ;_fee .Open =_ade .Get ("\u004f\u0070\u0065\u006e");_fee .Name =_ade .Get ("\u004e\u0061\u006d\u0065");_fee .State =_ade .Get ("\u0053\u0074\u0061t\u0065");
_fee .StateModel =_ade .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_fee ,nil ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_efced *PdfWriter )ApplyStandard (optimizer StandardApplier ){_efced ._cebab =optimizer };

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bda .PdfObject ;IC _bda .PdfObject ;RO _bda .PdfObject ;OverlayText _bda .PdfObject ;Repeat _bda .PdfObject ;DA _bda .PdfObject ;Q _bda .PdfObject ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_gfbga :=&PdfFilespec {};_gfbga ._daeg =_bda .MakeIndirectObject (_bda .MakeDict ());return _gfbga ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _bda .PdfObjectName ;};func (_eege *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};func (_edba *pdfFontSimple )getFontEncoding ()(_afgc string ,_addff map[_dgb .CharCode ]_dgb .GlyphName ,_ccgfdg error ){_afgc ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _ebac ,_gfea :=_bgadc [_edba ._bcaebe ];_gfea {_afgc =_ebac ;}else if _edba .fontFlags ()&_ebcd !=0{for _ggffc ,_eegeb :=range _bgadc {if _ab .Contains (_edba ._bcaebe ,_ggffc ){_afgc =_eegeb ;break ;};};};if _edba .Encoding ==nil {return _afgc ,nil ,nil ;
};switch _bddg :=_edba .Encoding .(type ){case *_bda .PdfObjectName :return string (*_bddg ),nil ,nil ;case *_bda .PdfObjectDictionary :_gagg ,_eccd :=_bda .GetName (_bddg .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _eccd {_afgc =_gagg .String ();
};if _fdgda :=_bddg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fdgda !=nil {_fgee ,_badgga :=_bda .GetArray (_fdgda );if !_badgga {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_bddg ,_bddg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bda .ErrTypeError ;};_addff ,_ccgfdg =_dgb .FromFontDifferences (_fgee );};return _afgc ,_addff ,_ccgfdg ;default:_ed .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_edba .Encoding ,_edba .Encoding );
return "",nil ,_bda .ErrTypeError ;};};func _cafab (_fdbce *XObjectImage )error {if _fdbce .SMask ==nil {return nil ;};_ggadg ,_bbcec :=_fdbce .SMask .(*_bda .PdfObjectStream );if !_bbcec {_ed .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _bda .ErrTypeError ;};_acgec :=_ggadg .PdfObjectDictionary ;_addbb :=_acgec .Get ("\u004d\u0061\u0074t\u0065");if _addbb ==nil {return nil ;};_cbgg ,_daggcf :=_dgdaf (_addbb .(*_bda .PdfObjectArray ));if _daggcf !=nil {return _daggcf ;};_gfeae :=_bda .MakeArrayFromFloats ([]float64 {_cbgg });
_acgec .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gfeae );return nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_ddgg :=&PdfColorspaceSpecialSeparation {};return _ddgg ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_gbdde *PdfOutlineItem )GetContainingPdfObject ()_bda .PdfObject {return _gbdde ._egafc };var _ceba =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_egbca :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_egbca .N =N ;return _egbca ,nil ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_bda .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_bda .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bgfgg *PdfShadingPattern )ToPdfObject ()_bda .PdfObject {_bgfgg .PdfPattern .ToPdfObject ();_cbdee :=_bgfgg .getDict ();if _bgfgg .Shading !=nil {_cbdee .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bgfgg .Shading .ToPdfObject ());};if _bgfgg .Matrix !=nil {_cbdee .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bgfgg .Matrix );
};if _bgfgg .ExtGState !=nil {_cbdee .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bgfgg .ExtGState );};return _bgfgg ._cbbgec ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ebde ,_fdab :=_dfc .Open (filePath );if _fdab !=nil {_ed .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fdab );
return nil ,_fdab ;};defer _ebde .Close ();return NewCompositePdfFontFromTTF (_ebde );};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_dade :=&PdfOutline {_baaf :_bda .MakeIndirectObject (_bda .MakeDict ())};_dade ._ebabd =_dade ;return _dade ;};

// IsCenterWindow returns the value of the centerWindow flag.
func (_affccf *ViewerPreferences )IsCenterWindow ()bool {if _affccf ._ecaag ==nil {return false ;};return *_affccf ._ecaag ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bda .PdfObjectName ;};

// ViewArea returns the value of the viewArea.
func (_eebbc *ViewerPreferences )ViewArea ()PageBoundary {return _eebbc ._adbff };

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bda .PdfObject ;IC _bda .PdfObject ;BE _bda .PdfObject ;RD _bda .PdfObject ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_gcgfb *PdfPageResources )GetShadingByName (keyName _bda .PdfObjectName )(*PdfShading ,bool ){if _gcgfb .Shading ==nil {return nil ,false ;};_dabae ,_gcddfa :=_bda .TraceToDirectObject (_gcgfb .Shading ).(*_bda .PdfObjectDictionary );if !_gcddfa {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcgfb .Shading );
return nil ,false ;};if _gcga :=_dabae .Get (keyName );_gcga !=nil {_eaafd ,_gcega :=_ddcgae (_gcga );if _gcega !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_gcega );
return nil ,false ;};return _eaafd ,true ;};return nil ,false ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_baeda *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_gea .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_cadg ,_cccga :=_bg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ffbd ,img ._bfafe );if _cccga !=nil {return img ,_cccga ;};_bbaad ,_cccga :=_bg .GrayConverter .Convert (_cadg );if _cccga !=nil {return img ,_cccga ;
};return _fggae (_bbaad .Base ()),nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_fgfgb *PdfPattern )GetContext ()PdfModel {return _fgfgb ._dgaed };

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bda .PdfObject ;T _bda .PdfObject ;Operation _bda .PdfObject ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_eac *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_bcgge :_bda .MakeIndirectObject (_bda .MakeDict ())};};func _bdfef (_edfd *_bda .PdfObjectDictionary )(*PdfShadingType2 ,error ){_bdege :=PdfShadingType2 {};_gadbd :=_edfd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _gadbd ==nil {_ed .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_gafb ,_ecac :=_gadbd .(*_bda .PdfObjectArray );if !_ecac {_ed .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gadbd );return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _gafb .Len ()!=4{_ed .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gafb .Len ());return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_bdege .Coords =_gafb ;if _ecafg :=_edfd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ecafg !=nil {_ecafg =_bda .TraceToDirectObject (_ecafg );_bddbba ,_caeec :=_ecafg .(*_bda .PdfObjectArray );if !_caeec {_ed .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecafg );
return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdege .Domain =_bddbba ;};_gadbd =_edfd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gadbd ==nil {_ed .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bdege .Function =[]PdfFunction {};if _dacda ,_cafacf :=_gadbd .(*_bda .PdfObjectArray );_cafacf {for _ ,_fabb :=range _dacda .Elements (){_cgdca ,_eccae :=_aaeca (_fabb );if _eccae !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eccae );
return nil ,_eccae ;};_bdege .Function =append (_bdege .Function ,_cgdca );};}else {_gedf ,_bedba :=_aaeca (_gadbd );if _bedba !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bedba );
return nil ,_bedba ;};_bdege .Function =append (_bdege .Function ,_gedf );};if _eaaaa :=_edfd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eaaaa !=nil {_eaaaa =_bda .TraceToDirectObject (_eaaaa );_efeee ,_fefdc :=_eaaaa .(*_bda .PdfObjectArray );if !_fefdc {_ed .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eaaaa );
return nil ,_bda .ErrTypeError ;};if _efeee .Len ()!=2{_ed .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_efeee .Len ());return nil ,ErrInvalidAttribute ;
};_bdege .Extend =_efeee ;};return &_bdege ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgacd *PdfAnnotationLink )ToPdfObject ()_bda .PdfObject {_cgacd .PdfAnnotation .ToPdfObject ();_dad :=_cgacd ._ged ;_adec :=_dad .PdfObject .(*_bda .PdfObjectDictionary );_adec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u004c\u0069\u006e\u006b"));
if _cgacd ._bdcb !=nil &&_cgacd ._bdcb ._edd !=nil {_adec .Set ("\u0041",_cgacd ._bdcb ._edd .ToPdfObject ());}else if _cgacd .A !=nil {_adec .Set ("\u0041",_cgacd .A );};_adec .SetIfNotNil ("\u0044\u0065\u0073\u0074",_cgacd .Dest );_adec .SetIfNotNil ("\u0048",_cgacd .H );
_adec .SetIfNotNil ("\u0050\u0041",_cgacd .PA );_adec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgacd .QuadPoints );_adec .SetIfNotNil ("\u0042\u0053",_cgacd .BS );return _dad ;};func (_gcgb *fontFile )loadFromSegments (_fcgfg ,_bffdb []byte )error {_ed .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_fcgfg ),len (_bffdb ));
_efgcd :=_gcgb .parseASCIIPart (_fcgfg );if _efgcd !=nil {return _efgcd ;};_ed .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gcgb );if len (_bffdb )==0{return nil ;};_ed .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gcgb );
return nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_dceg *PdfFieldButton )IsPush ()bool {return _dceg .GetType ()==ButtonTypePush };var (ErrRequiredAttributeMissing =_gea .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_gea .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_ceace =_gea .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_gea .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_gea .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_gegg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bda .ErrNotSupported );ErrType1CFontNotSupported =_gegg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bda .ErrNotSupported );
ErrType3FontNotSupported =_gegg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bda .ErrNotSupported );
ErrTTCmapNotSupported =_gegg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bda .ErrNotSupported );
ErrSignNotEnoughSpace =_gegg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_gegg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ga .ReadSeeker )(*PdfReader ,error ){const _gaaff ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _efgcc (rs ,&ReaderOpts {},false ,_gaaff );};func (_fbdd fontCommon )isCIDFont ()bool {if _fbdd ._fggeg ==""{_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fbdd );
};_edcfb :=false ;switch _fbdd ._fggeg {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_edcfb =true ;};_ed .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_edcfb ,_fbdd );
return _edcfb ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// GetNumPages returns the number of pages in the document.
func (_caegg *PdfReader )GetNumPages ()(int ,error ){if _caegg ._fdadg .GetCrypter ()!=nil &&!_caegg ._fdadg .IsAuthenticated (){return 0,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_caegg ._cgdac ),nil ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_cbbd *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_cbbd .ToPdfOutline ().PdfOutlineTreeNode ;};type pdfFontType0 struct{fontCommon ;_efgbc *_bda .PdfIndirectObject ;_geed _dgb .TextEncoder ;Encoding _bda .PdfObject ;DescendantFont *PdfFont ;
_fbcb *_dfe .CMap ;};

// RemveTabOrder removes the tab order for the page.
func (_afda *PdfPage )RemoveTabOrder (){_afda .Tabs =nil };

// ToPdfObject implements interface PdfModel.
func (_gecda *Permissions )ToPdfObject ()_bda .PdfObject {return _gecda ._gefba };func _cdbb (_fdgcd *_bda .PdfIndirectObject )(*PdfOutline ,error ){_agaf ,_baca :=_fdgcd .PdfObject .(*_bda .PdfObjectDictionary );if !_baca {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dddfd :=NewPdfOutline ();if _ffffc :=_agaf .Get ("\u0054\u0079\u0070\u0065");_ffffc !=nil {_aege ,_ccgc :=_ffffc .(*_bda .PdfObjectName );if _ccgc {if *_aege !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_aege );
};};};if _geef :=_agaf .Get ("\u0043\u006f\u0075n\u0074");_geef !=nil {_afafe ,_acgfb :=_bda .GetNumberAsInt64 (_geef );if _acgfb !=nil {return nil ,_acgfb ;};_dddfd .Count =&_afafe ;};return _dddfd ,nil ;};

// SetImage updates XObject Image with new image data.
func (_fbeec *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_fbeec .Filter .UpdateParams (img .GetParamsDict ());_agddd ,_debdge :=_fbeec .Filter .EncodeBytes (img .Data );if _debdge !=nil {return _debdge ;};_fbeec .Stream =_agddd ;_gggac :=img .Width ;
_fbeec .Width =&_gggac ;_aabed :=img .Height ;_fbeec .Height =&_aabed ;_gbafgf :=img .BitsPerComponent ;_fbeec .BitsPerComponent =&_gbafgf ;if cs ==nil {if img .ColorComponents ==1{_fbeec .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_fbeec .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_fbeec .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _gea .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_fbeec .ColorSpace =cs ;};return nil ;
};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bda .PdfObjectName ;Colorants _bda .PdfObject ;Process _bda .PdfObject ;MixingHints _bda .PdfObject ;_dced *_bda .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_aeb *PdfAnnotationWatermark )ToPdfObject ()_bda .PdfObject {_aeb .PdfAnnotation .ToPdfObject ();_aba :=_aeb ._ged ;_befd :=_aba .PdfObject .(*_bda .PdfObjectDictionary );_befd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_befd .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_aeb .FixedPrint );return _aba ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_ecccd :=&XObjectImage {};_eecbee :=&_bda .PdfObjectStream {};_eecbee .PdfObjectDictionary =_bda .MakeDict ();_ecccd ._eedbf =_eecbee ;return _ecccd ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_ffbd []byte ;_bfafe []float64 ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bda .PdfObjectArray )(*PdfRectangle ,error ){_abfee :=PdfRectangle {};if arr .Len ()!=4{return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _ecfbfa error ;_abfee .Llx ,_ecfbfa =_bda .GetNumberAsFloat (arr .Get (0));if _ecfbfa !=nil {return nil ,_ecfbfa ;};_abfee .Lly ,_ecfbfa =_bda .GetNumberAsFloat (arr .Get (1));if _ecfbfa !=nil {return nil ,_ecfbfa ;};_abfee .Urx ,_ecfbfa =_bda .GetNumberAsFloat (arr .Get (2));
if _ecfbfa !=nil {return nil ,_ecfbfa ;};_abfee .Ury ,_ecfbfa =_bda .GetNumberAsFloat (arr .Get (3));if _ecfbfa !=nil {return nil ,_ecfbfa ;};return &_abfee ,nil ;};

// StructTreeRoot represents the structure tree root dictionary.
// Reference: PDF documentation chapter 14.7 Logical Structure, table 322.
type StructTreeRoot struct{K []*KDict ;IDTree *IDTree ;ParentTree *_bda .PdfObjectDictionary ;ParentTreeNextKey int64 ;RoleMap _bda .PdfObject ;ClassMap *_bda .PdfObjectDictionary ;_addd *_bda .PdfIndirectObject ;_gdede []_bdd .UUID ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bda .PdfObject ;LE _bda .PdfObject ;BS _bda .PdfObject ;IC _bda .PdfObject ;BE _bda .PdfObject ;IT _bda .PdfObject ;Measure _bda .PdfObject ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func _dcaab (_defd _bda .PdfObject )*Names {_cebfb :=_eefc ();_faagef :=_bda .TraceToDirectObject (_defd ).(*_bda .PdfObjectDictionary );if _gcddc :=_faagef .Get ("\u0044\u0065\u0073t\u0073");
_gcddc !=nil {_cebfb .Dests =_bda .TraceToDirectObject (_gcddc ).(*_bda .PdfObjectDictionary );};if _gaba :=_faagef .Get ("\u0041\u0050");_gaba !=nil {_cebfb .AP =_bda .TraceToDirectObject (_gaba ).(*_bda .PdfObjectDictionary );};if _fddeb :=_faagef .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");
_fddeb !=nil {_cebfb .JavaScript =_bda .TraceToDirectObject (_fddeb ).(*_bda .PdfObjectDictionary );};if _agdcd :=_faagef .Get ("\u0050\u0061\u0067e\u0073");_agdcd !=nil {_cebfb .Pages =_bda .TraceToDirectObject (_agdcd ).(*_bda .PdfObjectDictionary );
};if _baefe :=_faagef .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_baefe !=nil {_cebfb .Templates =_bda .TraceToDirectObject (_baefe ).(*_bda .PdfObjectDictionary );};if _aegf :=_faagef .Get ("\u0049\u0044\u0053");_aegf !=nil {_cebfb .IDS =_bda .TraceToDirectObject (_aegf ).(*_bda .PdfObjectDictionary );
};if _cbdba :=_faagef .Get ("\u0055\u0052\u004c\u0053");_cbdba !=nil {_cebfb .URLS =_bda .TraceToDirectObject (_cbdba ).(*_bda .PdfObjectDictionary );};if _efeed :=_faagef .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");
_efeed !=nil {_cebfb .EmbeddedFiles =_bda .TraceToDirectObject (_efeed ).(*_bda .PdfObjectDictionary );};if _gdegf :=_faagef .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");
_gdegf !=nil {_cebfb .AlternatePresentations =_bda .TraceToDirectObject (_gdegf ).(*_bda .PdfObjectDictionary );};if _fegfe :=_faagef .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_fegfe !=nil {_cebfb .Renditions =_bda .TraceToDirectObject (_fegfe ).(*_bda .PdfObjectDictionary );
};return _cebfb ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bfdffb *LTV )EnableChain (chain []*_bd .Certificate )error {return _bfdffb .enable (nil ,chain ,"");};func _cgcbg (_aace string )(map[_dgb .CharCode ]_dgb .GlyphName ,error ){_edgaa :=_ab .Split (_aace ,"\u000a");_begfb :=make (map[_dgb .CharCode ]_dgb .GlyphName );
for _ ,_geba :=range _edgaa {_bdgaf :=_ccagf .FindStringSubmatch (_geba );if _bdgaf ==nil {continue ;};_efcg ,_dege :=_bdgaf [1],_bdgaf [2];_aeacd ,_dccb :=_dg .Atoi (_efcg );if _dccb !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_geba );
return nil ,_bda .ErrTypeError ;};_begfb [_dgb .CharCode (_aeacd )]=_dgb .GlyphName (_dege );};_ed .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_begfb );
return _begfb ,nil ;};func (_bgdee *LTV )generateVRIKey (_cgcca *PdfSignature )(string ,error ){_aegad ,_aabac :=_fgfee (_cgcca .Contents .Bytes ());if _aabac !=nil {return "",_aabac ;};return _ab .ToUpper (_de .EncodeToString (_aegad )),nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_acda pdfCIDFontType0 )GetCharMetrics (code _dgb .CharCode )(_geg .CharMetrics ,bool ){_fgdfd :=_acda ._egcg ;if _ebcda ,_beaef :=_acda ._aabdbg [code ];_beaef {_fgdfd =_ebcda ;};return _geg .CharMetrics {Wx :_fgdfd },true ;};func _acgga (_cggbf *[]*PdfField ,_dafa FieldFilterFunc ,_cgebg bool )[]*PdfField {if _cggbf ==nil {return nil ;
};_cfbeg :=*_cggbf ;if len (*_cggbf )==0{return nil ;};_afddf :=_cfbeg [:0];if _dafa ==nil {_dafa =func (*PdfField )bool {return true };};var _bbffb []*PdfField ;for _ ,_ggccc :=range _cfbeg {_gfebc :=_dafa (_ggccc );if _gfebc {_bbffb =append (_bbffb ,_ggccc );
if len (_ggccc .Kids )> 0{_bbffb =append (_bbffb ,_acgga (&_ggccc .Kids ,_dafa ,_cgebg )...);};};if !_cgebg ||!_gfebc ||len (_ggccc .Kids )> 0{_afddf =append (_afddf ,_ggccc );};};*_cggbf =_afddf ;return _bbffb ;};func (_defgfg *PdfWriter )writeNamesDictionary ()error {if _defgfg ._edacf ==nil {return nil ;
};_dbee :=_defgfg ._edacf .ToPdfObject ();_defgfg ._geadba .Set ("\u004e\u0061\u006de\u0073",_dbee );_edegg :=_defgfg .addObjects (_dbee );if _edegg !=nil {return _edegg ;};return nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ddbb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ddbb .Alternate ==nil {_ed .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ddbb .N ==1{_ed .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_affa :=NewPdfColorspaceDeviceGray ();return _affa .ImageToRGB (img );}else if _ddbb .N ==3{_ed .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _ddbb .N ==4{_ed .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_eggbg :=NewPdfColorspaceDeviceCMYK ();return _eggbg .ImageToRGB (img );}else {return img ,_gea .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ed .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ddbb );
_afea ,_fafdb :=_ddbb .Alternate .ImageToRGB (img );_ed .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ed .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_afea );
return _afea ,_fafdb ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gaeaf *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gaeaf ._dgaed .(*PdfShadingPattern );};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bda .PdfIndirectObject )*PdfOutlineItem {_ccffb :=PdfOutlineItem {};_ccffb ._ebabd =&_ccffb ;_ccffb .Title =_bda .MakeString (title );_gafa :=_bda .MakeArray ();_gafa .Append (page );_gafa .Append (_bda .MakeName ("\u0046\u0069\u0074"));
_ccffb .Dest =_gafa ;return &_ccffb ;};var (_ggbe _d .Mutex ;_cgccb ="";_fafddb _ad .Time ;_cafe ="";_eebaa ="";_eddfc _ad .Time ;_afabf ="";_agbg ="";_cdfef ="";);

// SetLocation sets the `Location` field of the signature.
func (_eedag *PdfSignature )SetLocation (location string ){_eedag .Location =_bda .MakeEncodedString (location ,true );};const (_dbcd =0x00001;_ccfdc =0x00002;_ebcd =0x00004;_fgdc =0x00008;_feadfa =0x00020;_fdfdg =0x00040;_dgadc =0x10000;_ebgfb =0x20000;
_edegc =0x40000;);

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_ggac :=&PdfAppender {_eecc :reader ._adacg ,Reader :reader ,_afcg :reader ._fdadg ,_facc :reader ._efag };_cefc ,_aaege :=_ggac ._eecc .Seek (0,_ga .SeekEnd );
if _aaege !=nil {return nil ,_aaege ;};_ggac ._aaaa =_cefc ;if _ ,_aaege =_ggac ._eecc .Seek (0,_ga .SeekStart );_aaege !=nil {return nil ,_aaege ;};_ggac ._babd ,_aaege =NewPdfReaderWithOpts (_ggac ._eecc ,opts );if _aaege !=nil {return nil ,_aaege ;};
for _ ,_aefc :=range _ggac .Reader .GetObjectNums (){if _ggac ._eaedg < _aefc {_ggac ._eaedg =_aefc ;};};_ggac ._gagb =_ggac ._afcg .GetXrefTable ();_ggac ._edff =_ggac ._afcg .GetXrefOffset ();_ggac ._eebd =append (_ggac ._eebd ,_ggac ._babd .PageList ...);
_ggac ._agg =make (map[_bda .PdfObject ]struct{});_ggac ._ffge =make (map[_bda .PdfObject ]int64 );_ggac ._ffff =make (map[_bda .PdfObject ]struct{});_ggac ._ggae =_ggac ._babd .AcroForm ;_ggac ._afaf =_ggac ._babd .DSS ;if opts !=nil {_ggac ._bfec =opts .Password ;
};if encryptOptions !=nil {_ggac ._feed =encryptOptions ;};return _ggac ,nil ;};func _bccdfa ()string {_ggbe .Lock ();defer _ggbe .Unlock ();return _agbg };

// ToPdfObject implements interface PdfModel.
func (_fdfa *PdfAnnotationCircle )ToPdfObject ()_bda .PdfObject {_fdfa .PdfAnnotation .ToPdfObject ();_deaa :=_fdfa ._ged ;_dbd :=_deaa .PdfObject .(*_bda .PdfObjectDictionary );_fdfa .PdfAnnotationMarkup .appendToPdfDictionary (_dbd );_dbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_dbd .SetIfNotNil ("\u0042\u0053",_fdfa .BS );_dbd .SetIfNotNil ("\u0049\u0043",_fdfa .IC );_dbd .SetIfNotNil ("\u0042\u0045",_fdfa .BE );_dbd .SetIfNotNil ("\u0052\u0044",_fdfa .RD );return _deaa ;};func (_cfgfc *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _cfgfc ._fdadg .GetCrypter ()!=nil &&!_cfgfc ._fdadg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gcdba :=_cfgfc ._dabg ;_gfffg :=_gcdba .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _gfffg ==nil {return nil ,nil ;};_ed .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_gabb :=_bda .ResolveReference (_gfffg );
_ed .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_gabb );if _cgfc :=_bda .IsNullObject (_gabb );_cgfc {_ed .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_gaaegc ,_gafad :=_gabb .(*_bda .PdfIndirectObject );if !_gafad {if _ ,_egccg :=_bda .GetDict (_gabb );!_egccg {_ed .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_ed .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_gaaegc =_bda .MakeIndirectObject (_gabb );};_geafa ,_gafad :=_gaaegc .PdfObject .(*_bda .PdfObjectDictionary );if !_gafad {return nil ,_gea .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_ed .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_geafa );_eegab ,_ ,_ceabg :=_cfgfc .buildOutlineTree (_gaaegc ,nil ,nil ,nil );if _ceabg !=nil {return nil ,_ceabg ;};_ed .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_eegab );
return _eegab ,nil ;};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_ggcg *_bda .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_bda .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_bda .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_bda .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_bda .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_bda .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_bda .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_bda .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_bda .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_bda .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_bda .PdfObjectDictionary ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_efdc *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bfaf :=_cf .NewReader (img .getBase ());_aceb :=_bg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_daee :=_cf .NewWriter (_aceb );
_ceaa :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_ffgee :=make ([]uint32 ,3);var (_gdcc uint32 ;ANorm ,X ,Y ,Z ,_fdgb ,_dceb ,_geaf float64 ;_cdgcc error ;);for {_gdcc ,_cdgcc =_bfaf .ReadSample ();if _cdgcc ==_ga .EOF {break ;}else if _cdgcc !=nil {return img ,_cdgcc ;
};ANorm =float64 (_gdcc )/_ceaa ;X =_efdc .WhitePoint [0]*_ce .Pow (ANorm ,_efdc .Gamma );Y =_efdc .WhitePoint [1]*_ce .Pow (ANorm ,_efdc .Gamma );Z =_efdc .WhitePoint [2]*_ce .Pow (ANorm ,_efdc .Gamma );_fdgb =3.240479*X +-1.537150*Y +-0.498535*Z ;_dceb =-0.969256*X +1.875992*Y +0.041556*Z ;
_geaf =0.055648*X +-0.204043*Y +1.057311*Z ;_fdgb =_ce .Min (_ce .Max (_fdgb ,0),1.0);_dceb =_ce .Min (_ce .Max (_dceb ,0),1.0);_geaf =_ce .Min (_ce .Max (_geaf ,0),1.0);_ffgee [0]=uint32 (_fdgb *_ceaa );_ffgee [1]=uint32 (_dceb *_ceaa );_ffgee [2]=uint32 (_geaf *_ceaa );
if _cdgcc =_daee .WriteSamples (_ffgee );_cdgcc !=nil {return img ,_cdgcc ;};};return _fggae (&_aceb ),nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_baga *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _baga .Range };

// GetCatalogLanguage gets catalog Language object.
func (_geadc *PdfReader )GetCatalogLanguage ()(_bda .PdfObject ,bool ){if _geadc ._dabg ==nil {return nil ,false ;};_afgcd :=_geadc ._dabg .Get ("\u004c\u0061\u006e\u0067");return _afgcd ,_afgcd !=nil ;};func _ddcgae (_ffgeb _bda .PdfObject )(*PdfShading ,error ){_bffaa :=&PdfShading {};
var _bgag *_bda .PdfObjectDictionary ;if _acfed ,_dfafa :=_bda .GetIndirect (_ffgeb );_dfafa {_bffaa ._gfdga =_acfed ;_egbda ,_ggadc :=_acfed .PdfObject .(*_bda .PdfObjectDictionary );if !_ggadc {_ed .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_bda .ErrTypeError ;};_bgag =_egbda ;}else if _gffg ,_cacbc :=_bda .GetStream (_ffgeb );_cacbc {_bffaa ._gfdga =_gffg ;_bgag =_gffg .PdfObjectDictionary ;}else if _gbfca ,_fccfc :=_bda .GetDict (_ffgeb );_fccfc {_bffaa ._gfdga =_gbfca ;_bgag =_gbfca ;
}else {_ed .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_ffgeb );return nil ,_bda .ErrTypeError ;};if _bgag ==nil {_ed .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_gea .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ffgeb =_bgag .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ffgeb ==nil {_ed .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ffgeb =_bda .TraceToDirectObject (_ffgeb );_efcdc ,_beca :=_ffgeb .(*_bda .PdfObjectInteger );if !_beca {_ed .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ffgeb );
return nil ,_bda .ErrTypeError ;};if *_efcdc < 1||*_efcdc > 7{_ed .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_efcdc );
return nil ,_bda .ErrTypeError ;};_bffaa .ShadingType =_efcdc ;_ffgeb =_bgag .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _ffgeb ==nil {_ed .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gdeb ,_cafff :=NewPdfColorspaceFromPdfObject (_ffgeb );if _cafff !=nil {_ed .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_cafff );
return nil ,_cafff ;};_bffaa .ColorSpace =_gdeb ;_ffgeb =_bgag .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _ffgeb !=nil {_ffgeb =_bda .TraceToDirectObject (_ffgeb );_agdbb ,_fdbeg :=_ffgeb .(*_bda .PdfObjectArray );if !_fdbeg {_ed .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ffgeb );
return nil ,_bda .ErrTypeError ;};_bffaa .Background =_agdbb ;};_ffgeb =_bgag .Get ("\u0042\u0042\u006f\u0078");if _ffgeb !=nil {_ffgeb =_bda .TraceToDirectObject (_ffgeb );_cgafc ,_bffgg :=_ffgeb .(*_bda .PdfObjectArray );if !_bffgg {_ed .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ffgeb );
return nil ,_bda .ErrTypeError ;};_befdc ,_cbae :=NewPdfRectangle (*_cgafc );if _cbae !=nil {_ed .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cbae );return nil ,_cbae ;};_bffaa .BBox =_befdc ;};_ffgeb =_bgag .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _ffgeb !=nil {_ffgeb =_bda .TraceToDirectObject (_ffgeb );_bebcf ,_cafafd :=_ffgeb .(*_bda .PdfObjectBool );if !_cafafd {_ed .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffgeb );
return nil ,_bda .ErrTypeError ;};_bffaa .AntiAlias =_bebcf ;};switch *_efcdc {case 1:_ccad ,_gcfdc :=_cfffe (_bgag );if _gcfdc !=nil {return nil ,_gcfdc ;};_ccad .PdfShading =_bffaa ;_bffaa ._cdded =_ccad ;return _bffaa ,nil ;case 2:_ddccd ,_edfea :=_bdfef (_bgag );
if _edfea !=nil {return nil ,_edfea ;};_ddccd .PdfShading =_bffaa ;_bffaa ._cdded =_ddccd ;return _bffaa ,nil ;case 3:_cadbb ,_fcff :=_dagbc (_bgag );if _fcff !=nil {return nil ,_fcff ;};_cadbb .PdfShading =_bffaa ;_bffaa ._cdded =_cadbb ;return _bffaa ,nil ;
case 4:_eegfg ,_fefd :=_gafdc (_bgag );if _fefd !=nil {return nil ,_fefd ;};_eegfg .PdfShading =_bffaa ;_bffaa ._cdded =_eegfg ;return _bffaa ,nil ;case 5:_bffbe ,_adebb :=_bfagf (_bgag );if _adebb !=nil {return nil ,_adebb ;};_bffbe .PdfShading =_bffaa ;
_bffaa ._cdded =_bffbe ;return _bffaa ,nil ;case 6:_baeaeb ,_aebdg :=_ccfcc (_bgag );if _aebdg !=nil {return nil ,_aebdg ;};_baeaeb .PdfShading =_bffaa ;_bffaa ._cdded =_baeaeb ;return _bffaa ,nil ;case 7:_bbgf ,_addbg :=_dcdfg (_bgag );if _addbg !=nil {return nil ,_addbg ;
};_bbgf .PdfShading =_bffaa ;_bffaa ._cdded =_bbgf ;return _bffaa ,nil ;};return nil ,_gea .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// HasFontByName checks if has font resource by name.
func (_cceef *PdfPage )HasFontByName (name _bda .PdfObjectName )bool {_eged ,_ggbb :=_cceef .Resources .Font .(*_bda .PdfObjectDictionary );if !_ggbb {return false ;};if _acaaa :=_eged .Get (name );_acaaa !=nil {return true ;};return false ;};type crossReference struct{Type int ;


// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_bcde :=&PdfColorspaceCalGray {};_bcde .BlackPoint =[]float64 {0.0,0.0,0.0};_bcde .Gamma =1;return _bcde ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_aad :=NewPdfAnnotation ();_abcd :=&PdfAnnotationUnderline {};_abcd .PdfAnnotation =_aad ;_abcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aad .SetContext (_abcd );return _abcd ;};

// PdfVersion returns version of the PDF file.
func (_dbfdac *PdfReader )PdfVersion ()_bda .Version {return _dbfdac ._fdadg .PdfVersion ()};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_gfafb []byte )(_ceegf int ,_bfefb error );};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bda .PdfObject ;T3DV _bda .PdfObject ;T3DA _bda .PdfObject ;T3DI _bda .PdfObject ;T3DB _bda .PdfObject ;};

// String returns a string representation of the field.
func (_beef *PdfField )String ()string {if _bgbe ,_abae :=_beef .ToPdfObject ().(*_bda .PdfIndirectObject );_abae {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_beef ._aebb ,_bgbe .PdfObject .String ());};return "";};const (XObjectTypeUndefined XObjectType =iota ;
XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_bcdb *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_ebbbd :=_cf .NewReader (img .getBase ());_egdag :=_bg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_bcdb .AlternateSpace .GetNumComponents (),nil ,img ._ffbd ,nil );
_gbgd :=_cf .NewWriter (_egdag );_daff :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_ed .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_ed .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_bcdb .TintTransform );_adde :=_bcdb .AlternateSpace .DecodeArray ();var (_cfbge uint32 ;_fdga error ;);for {_cfbge ,_fdga =_ebbbd .ReadSample ();
if _fdga ==_ga .EOF {break ;};if _fdga !=nil {return img ,_fdga ;};_dcgeb :=float64 (_cfbge )/_daff ;_aeaf ,_dfae :=_bcdb .TintTransform .Evaluate ([]float64 {_dcgeb });if _dfae !=nil {return img ,_dfae ;};for _ebaf ,_ccd :=range _aeaf {_aefd :=_bg .LinearInterpolate (_ccd ,_adde [_ebaf *2],_adde [_ebaf *2+1],0,1);
if _dfae =_gbgd .WriteSample (uint32 (_aefd *_daff ));_dfae !=nil {return img ,_dfae ;};};};return _bcdb .AlternateSpace .ImageToRGB (_fggae (&_egdag ));};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_babf *PdfColorspaceICCBased )GetContainingPdfObject ()_bda .PdfObject {return _babf ._ebge };

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_edce *PdfFieldButton )SetType (btype ButtonType ){_acbfe :=uint32 (0);if _edce .Ff !=nil {_acbfe =uint32 (*_edce .Ff );};switch btype {case ButtonTypePush :_acbfe |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_acbfe |=FieldFlagRadio .Mask ();
};_edce .Ff =_bda .MakeInteger (int64 (_acbfe ));};func (_adffe *PdfWriter )writeObjectsInStreams (_fbdca map[_bda .PdfObject ]bool )error {for _ ,_bcfbc :=range _adffe ._ccbbg {if _fadcd :=_fbdca [_bcfbc ];_fadcd {continue ;};_egefb :=int64 (0);switch _efecb :=_bcfbc .(type ){case *_bda .PdfIndirectObject :_egefb =_efecb .ObjectNumber ;
case *_bda .PdfObjectStream :_egefb =_efecb .ObjectNumber ;case *_bda .PdfObjectStreams :_egefb =_efecb .ObjectNumber ;case *_bda .PdfObjectDictionary ,*_bda .PdfObjectString :default:_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_bcfbc ,_efecb );
return ErrTypeCheck ;};if _adffe ._cbdd !=nil &&_bcfbc !=_adffe ._dgeba {_baabb :=_adffe ._cbdd .Encrypt (_bcfbc ,_egefb ,0);if _baabb !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_baabb );
return _baabb ;};};_adffe .writeObject (int (_egefb ),_bcfbc );};return nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_ebbac *PdfFieldChoice )ToPdfObject ()_bda .PdfObject {_ebbac .PdfField .ToPdfObject ();_fabed :=_ebbac ._ceaeg ;_aabb :=_fabed .PdfObject .(*_bda .PdfObjectDictionary );_aabb .Set ("\u0046\u0054",_bda .MakeName ("\u0043\u0068"));if _ebbac .Opt !=nil {_aabb .Set ("\u004f\u0070\u0074",_ebbac .Opt );
};if _ebbac .TI !=nil {_aabb .Set ("\u0054\u0049",_ebbac .TI );};if _ebbac .I !=nil {_aabb .Set ("\u0049",_ebbac .I );};return _fabed ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func (_egdd *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_ceab *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if _ceab .Alternate ==nil {if _ceab .N ==1{_gdeef :=NewPdfColorspaceDeviceGray ();return _gdeef .ColorFromPdfObjects (objects );}else if _ceab .N ==3{_ecdec :=NewPdfColorspaceDeviceRGB ();
return _ecdec .ColorFromPdfObjects (objects );}else if _ceab .N ==4{_cgdd :=NewPdfColorspaceDeviceCMYK ();return _cgdd .ColorFromPdfObjects (objects );}else {return nil ,_gea .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _ceab .Alternate .ColorFromPdfObjects (objects );};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_gfg *PdfAppender )GetDSS ()(_eecbd *DSS ){return _gfg ._afaf };func (_gac *PdfReader )newPdfActionSetOCGStateFromDict (_cdgb *_bda .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_cdgb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_cdgb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// GetPdfInfo returns the PDF info dictionary.
func (_feedf *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_fafccec ,_cdcf :=_feedf .GetTrailer ();if _cdcf !=nil {return nil ,_cdcf ;};var _ebddf *_bda .PdfObjectDictionary ;_addbdg :=_fafccec .Get ("\u0049\u006e\u0066\u006f");switch _aegeb :=_addbdg .(type ){case *_bda .PdfObjectReference :_fdac :=_aegeb ;
_addbdg ,_cdcf =_feedf .GetIndirectObjectByNumber (int (_fdac .ObjectNumber ));_addbdg =_bda .TraceToDirectObject (_addbdg );if _cdcf !=nil {return nil ,_cdcf ;};_ebddf ,_ =_addbdg .(*_bda .PdfObjectDictionary );case *_bda .PdfObjectDictionary :_ebddf =_aegeb ;
};if _ebddf ==nil {return nil ,_gea .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_eabc ,_cdcf :=NewPdfInfoFromObject (_ebddf );if _cdcf !=nil {return nil ,_cdcf ;
};return _eabc ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_ebdcb *PdfPattern )GetContainingPdfObject ()_bda .PdfObject {return _ebdcb ._cbbgec };

// IsSimple returns true if `font` is a simple font.
func (_acccf *PdfFont )IsSimple ()bool {_ ,_edge :=_acccf ._ggada .(*pdfFontSimple );return _edge };

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_aadbg PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bda .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_cfef []_bda .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_gefc []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bbe *PdfFont )SubsetRegistered ()error {switch _cfdae :=_bbe ._ggada .(type ){case *pdfFontType0 :_fgdd :=_cfdae .subsetRegistered ();if _fgdd !=nil {_ed .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fgdd );
return _fgdd ;};if _cfdae ._efgbc !=nil {if _cfdae ._geed !=nil {_cfdae ._geed .ToPdfObject ();};_cfdae .ToPdfObject ();};default:_ed .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_cfdae );
};return nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_dgbaa *PdfFont )ToPdfObject ()_bda .PdfObject {if _dgbaa ._ggada ==nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bda .MakeNull ();
};return _dgbaa ._ggada .ToPdfObject ();};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);func (_fdgcf *LTV )getCerts (_dbae []*_bd .Certificate )([][]byte ,error ){_bbdc :=make ([][]byte ,0,len (_dbae ));
for _ ,_aeebc :=range _dbae {_bbdc =append (_bbdc ,_aeebc .Raw );};return _bbdc ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_gece :=&PdfAppender {_eecc :reader ._adacg ,Reader :reader ,_afcg :reader ._fdadg ,_facc :reader ._efag };_bfadc ,_cgaf :=_gece ._eecc .Seek (0,_ga .SeekEnd );if _cgaf !=nil {return nil ,_cgaf ;
};_gece ._aaaa =_bfadc ;if _ ,_cgaf =_gece ._eecc .Seek (0,_ga .SeekStart );_cgaf !=nil {return nil ,_cgaf ;};_gece ._babd ,_cgaf =NewPdfReader (_gece ._eecc );if _cgaf !=nil {return nil ,_cgaf ;};for _ ,_fggd :=range _gece .Reader .GetObjectNums (){if _gece ._eaedg < _fggd {_gece ._eaedg =_fggd ;
};};_gece ._gagb =_gece ._afcg .GetXrefTable ();_gece ._edff =_gece ._afcg .GetXrefOffset ();_gece ._eebd =append (_gece ._eebd ,_gece ._babd .PageList ...);_gece ._agg =make (map[_bda .PdfObject ]struct{});_gece ._ffge =make (map[_bda .PdfObject ]int64 );
_gece ._ffff =make (map[_bda .PdfObject ]struct{});_gece ._ggae =_gece ._babd .AcroForm ;_gece ._afaf =_gece ._babd .DSS ;return _gece ,nil ;};func _eafcd (_cbdb *_bda .PdfObjectDictionary ,_cggdb *fontCommon )(*pdfCIDFontType0 ,error ){if _cggdb ._fggeg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ed .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cggdb );
return nil ,_bda .ErrRangeError ;};_gbgb :=_fcbe (_cggdb );_abaac ,_gacd :=_bda .GetDict (_cbdb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gacd {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cggdb );
return nil ,ErrRequiredAttributeMissing ;};_gbgb .CIDSystemInfo =_abaac ;_gbgb .DW =_cbdb .Get ("\u0044\u0057");_gbgb .W =_cbdb .Get ("\u0057");_gbgb .DW2 =_cbdb .Get ("\u0044\u0057\u0032");_gbgb .W2 =_cbdb .Get ("\u0057\u0032");_gbgb ._egcg =1000.0;if _faegb ,_fgead :=_bda .GetNumberAsFloat (_gbgb .DW );
_fgead ==nil {_gbgb ._egcg =_faegb ;};_bfcgg ,_dfcgf :=_edda (_gbgb .W );if _dfcgf !=nil {return nil ,_dfcgf ;};if _bfcgg ==nil {_bfcgg =map[_dgb .CharCode ]float64 {};};_gbgb ._aabdbg =_bfcgg ;return _gbgb ,nil ;};

// AddOCSPs adds OCSPs to DSS.
func (_cfab *DSS )AddOCSPs (ocsps [][]byte )([]*_bda .PdfObjectStream ,error ){return _cfab .add (&_cfab .OCSPs ,_cfab ._bcdc ,ocsps );};

// Items returns all children outline items.
func (_fbbge *Outline )Items ()[]*OutlineItem {return _fbbge .Entries };

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_ceae _bda .ParserMetadata ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_cccdf :=&PdfColorPatternType3 {};return _cccdf ;};func (_fdeab *PdfWriter )checkPendingObjects (){for _faaag ,_degeee :=range _fdeab ._dacdaa {if !_fdeab .hasObject (_faaag ){_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_faaag ,_faaag ,_faaag );
for _ ,_ccgee :=range _degeee {for _ ,_cbcagd :=range _ccgee .Keys (){_egadb :=_ccgee .Get (_cbcagd );if _egadb ==_faaag {_ed .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_ccgee .Set (_cbcagd ,_bda .MakeNull ());break ;};};};};};};func (_dbfcd *PdfWriter )writeXRefStreams (_bdedad int ,_gcdgd int64 )error {_adaaf :=_bdedad +1;_dbfcd ._fcbcd [_adaaf ]=crossReference {Type :1,ObjectNumber :_adaaf ,Offset :_gcdgd };_acfbb :=_dff .NewBuffer (nil );
_cacf :=_bda .MakeArray ();for _fecbb :=0;_fecbb <=_bdedad ;{for ;_fecbb <=_bdedad ;_fecbb ++{_gbcdd ,_eedef :=_dbfcd ._fcbcd [_fecbb ];if _eedef &&(!_dbfcd ._eccfc ||_dbfcd ._eccfc &&(_gbcdd .Type ==1&&_gbcdd .Offset >=_dbfcd ._cbedca ||_gbcdd .Type ==0)){break ;
};};var _ggaab int ;for _ggaab =_fecbb +1;_ggaab <=_bdedad ;_ggaab ++{_gdcdb ,_ddbbd :=_dbfcd ._fcbcd [_ggaab ];if _ddbbd &&(!_dbfcd ._eccfc ||_dbfcd ._eccfc &&(_gdcdb .Type ==1&&_gdcdb .Offset > _dbfcd ._cbedca )){continue ;};break ;};_cacf .Append (_bda .MakeInteger (int64 (_fecbb )),_bda .MakeInteger (int64 (_ggaab -_fecbb )));
for _adcdf :=_fecbb ;_adcdf < _ggaab ;_adcdf ++{_dbefc :=_dbfcd ._fcbcd [_adcdf ];switch _dbefc .Type {case 0:_e .Write (_acfbb ,_e .BigEndian ,byte (0));_e .Write (_acfbb ,_e .BigEndian ,uint32 (0));_e .Write (_acfbb ,_e .BigEndian ,uint16 (0xFFFF));case 1:_e .Write (_acfbb ,_e .BigEndian ,byte (1));
_e .Write (_acfbb ,_e .BigEndian ,uint32 (_dbefc .Offset ));_e .Write (_acfbb ,_e .BigEndian ,uint16 (_dbefc .Generation ));case 2:_e .Write (_acfbb ,_e .BigEndian ,byte (2));_e .Write (_acfbb ,_e .BigEndian ,uint32 (_dbefc .ObjectNumber ));_e .Write (_acfbb ,_e .BigEndian ,uint16 (_dbefc .Index ));
};};_fecbb =_ggaab +1;};_edgaag ,_fdfeb :=_bda .MakeStream (_acfbb .Bytes (),_bda .NewFlateEncoder ());if _fdfeb !=nil {return _fdfeb ;};_edgaag .ObjectNumber =int64 (_adaaf );_edgaag .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0058\u0052\u0065\u0066"));
_edgaag .PdfObjectDictionary .Set ("\u0057",_bda .MakeArray (_bda .MakeInteger (1),_bda .MakeInteger (4),_bda .MakeInteger (2)));_edgaag .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_cacf );_edgaag .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bda .MakeInteger (int64 (_adaaf )));
_edgaag .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_dbfcd ._eebef );_edgaag .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_dbfcd ._eefbd );if _dbfcd ._eccfc &&_dbfcd ._eafcga > 0{_edgaag .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bda .MakeInteger (_dbfcd ._eafcga ));
};if _dbfcd ._cbdd !=nil {_edgaag .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dbfcd ._dgeba );};if _dbfcd ._ffgbfc ==nil &&_dbfcd ._gcbgf !=""&&_dbfcd ._ebgegf !=""{_dbfcd ._ffgbfc =_bda .MakeArray (_bda .MakeHexString (_dbfcd ._gcbgf ),_bda .MakeHexString (_dbfcd ._ebgegf ));
};if _dbfcd ._ffgbfc !=nil {_ed .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dbfcd ._ffgbfc );_edgaag .Set ("\u0049\u0044",_dbfcd ._ffgbfc );};_dbfcd .writeObject (int (_edgaag .ObjectNumber ),_edgaag );return nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ad .Time ){_ggbe .Lock ();defer _ggbe .Unlock ();_eddfc =modifiedDate ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_egebg *PdfPage )error ;};

// Encoder returns the font's text encoder.
func (_eagfc pdfFontType3 )Encoder ()_dgb .TextEncoder {return _eagfc ._gabce };

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_fgbb :=PdfColorCalGray (grayVal );return &_fgbb ;};func (_efbc *PdfReader )lookupPageByObject (_ddcga _bda .PdfObject )(*PdfPage ,error ){return nil ,_gea .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_babfcc *PdfFont )CharcodesToUnicodeWithStats (charcodes []_dgb .CharCode )(_fcad []rune ,_ecbef ,_febfb int ){_ffcd ,_ecbef ,_febfb :=_babfcc .CharcodesToStrings (charcodes ,"");return []rune (_ab .Join (_ffcd ,"")),_ecbef ,_febfb ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func _edgab (_bbef *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_bbef }};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_ggcdd *PdfReader )GetObjectNums ()[]int {return _ggcdd ._fdadg .GetObjectNums ()};

// AddCRLs adds CRLs to DSS.
func (_ggfda *DSS )AddCRLs (crls [][]byte )([]*_bda .PdfObjectStream ,error ){return _ggfda .add (&_ggfda .CRLs ,_ggfda ._fbed ,crls );};func (_agbe *pdfCIDFontType2 )baseFields ()*fontCommon {return &_agbe .fontCommon };func (_cdgcf *PdfWriter )optimizeDocument ()error {if _cdgcf ._cebab ==nil {return nil ;
};_aebbd ,_aaaec :=_bda .GetDict (_cdgcf ._eebef );if !_aaaec {return _gea .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gfcfg :=_bc .Document {ID :[2]string {_cdgcf ._gcbgf ,_cdgcf ._ebgegf },Version :_cdgcf ._cdbbdg ,Objects :_cdgcf ._ccbbg ,Info :_aebbd ,Crypt :_cdgcf ._cbdd ,UseHashBasedID :_cdgcf ._gagff };if _bgecbg :=_cdgcf ._cebab .ApplyStandard (&_gfcfg );_bgecbg !=nil {return _bgecbg ;
};_cdgcf ._gcbgf ,_cdgcf ._ebgegf =_gfcfg .ID [0],_gfcfg .ID [1];_cdgcf ._cdbbdg =_gfcfg .Version ;_cdgcf ._ccbbg =_gfcfg .Objects ;_cdgcf ._eebef .PdfObject =_gfcfg .Info ;_cdgcf ._gagff =_gfcfg .UseHashBasedID ;_cdgcf ._cbdd =_gfcfg .Crypt ;_bgcgg :=make (map[_bda .PdfObject ]struct{},len (_cdgcf ._ccbbg ));
for _ ,_eccda :=range _cdgcf ._ccbbg {_bgcgg [_eccda ]=struct{}{};};_cdgcf ._egfad =_bgcgg ;return nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_gfcdb DefaultImageHandler )NewImageFromGoImage (goimg _f .Image )(*Image ,error ){_deefg ,_gadce :=_bg .FromGoImage (goimg );if _gadce !=nil {return nil ,_gadce ;};_ddgef :=_fggae (_deefg .Base ());return &_ddgef ,nil ;};func _fbdad (_bbefa *_bda .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gcdcf :=&PdfShadingPattern {};
_gddb :=_bbefa .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _gddb ==nil {_ed .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gaeda ,_cadcg :=_ddcgae (_gddb );
if _cadcg !=nil {_ed .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_cadcg );return nil ,_cadcg ;};_gcdcf .Shading =_gaeda ;if _ggcgf :=_bbefa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_ggcgf !=nil {_cfgf ,_bdfeb :=_ggcgf .(*_bda .PdfObjectArray );if !_bdfeb {_ed .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggcgf );
return nil ,_bda .ErrTypeError ;};_gcdcf .Matrix =_cfgf ;};if _dgfagc :=_bbefa .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_dgfagc !=nil {_gcdcf .ExtGState =_dgfagc ;};return _gcdcf ,nil ;};func _bdcgb (_eefcg _bda .PdfObject )*IDTree {_eefcg =_bda .ResolveReference (_eefcg );
_cgead :=_bda .MakeArray ();_bbcda :=_bda .MakeArray ();_gede :=[]*IDTree {};if _cdgbb ,_cggfg :=_bda .GetDict (_eefcg );_cggfg {if _daad :=_cdgbb .Get ("\u004e\u0061\u006de\u0073");_daad !=nil {_daad =_bda .ResolveReference (_daad );if _cfag ,_fbdb :=_bda .GetArray (_daad );
_fbdb {for _ ,_bgeaf :=range _cfag .Elements (){_cgead .Append (_bgeaf );};};};if _gafde :=_cdgbb .Get ("\u004c\u0069\u006d\u0069\u0074\u0073");_gafde !=nil {_gafde =_bda .ResolveReference (_gafde );if _begba ,_ecaba :=_bda .GetArray (_gafde );_ecaba {for _cedda :=0;
_cedda < 2;_cedda ++{_bbcda .Append (_begba .Get (_cedda ));};};};if _edcbb :=_cdgbb .Get ("\u004b\u0069\u0064\u0073");_edcbb !=nil {_edcbb =_bda .ResolveReference (_edcbb );if _dcaea ,_aaccfb :=_bda .GetArray (_edcbb );_aaccfb {for _ ,_dacee :=range _dcaea .Elements (){_cgfbd :=_bdcgb (_dacee );
_gede =append (_gede ,_cgfbd );};};};};_ddcdb :=&IDTree {Names :_cgead ,Limits :_bbcda };if len (_gede )> 0{_ddcdb .Kids =_gede ;};return _ddcdb ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_adfce *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_adfce ._cdfgb =colorspace ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func _ffa (_aaeab _bda .PdfObject )(*PdfColorspaceCalGray ,error ){_bega :=NewPdfColorspaceCalGray ();if _cgcb ,_ebeea :=_aaeab .(*_bda .PdfIndirectObject );
_ebeea {_bega ._dega =_cgcb ;};_aaeab =_bda .TraceToDirectObject (_aaeab );_gbfbb ,_gdbag :=_aaeab .(*_bda .PdfObjectArray );if !_gdbag {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gbfbb .Len ()!=2{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_aaeab =_bda .TraceToDirectObject (_gbfbb .Get (0));_cgce ,_gdbag :=_aaeab .(*_bda .PdfObjectName );if !_gdbag {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_cgce !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_c .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_aaeab =_bda .TraceToDirectObject (_gbfbb .Get (1));
_bddbc ,_gdbag :=_aaeab .(*_bda .PdfObjectDictionary );if !_gdbag {return nil ,_c .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_aaeab =_bddbc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_aaeab =_bda .TraceToDirectObject (_aaeab );_gaae ,_gdbag :=_aaeab .(*_bda .PdfObjectArray );if !_gdbag {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _gaae .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_gfcd ,_dfaf :=_gaae .GetAsFloat64Slice ();
if _dfaf !=nil {return nil ,_dfaf ;};_bega .WhitePoint =_gfcd ;_aaeab =_bddbc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aaeab !=nil {_aaeab =_bda .TraceToDirectObject (_aaeab );_aeeda ,_dgd :=_aaeab .(*_bda .PdfObjectArray );
if !_dgd {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _aeeda .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_cbf ,_abace :=_aeeda .GetAsFloat64Slice ();if _abace !=nil {return nil ,_abace ;};_bega .BlackPoint =_cbf ;};_aaeab =_bddbc .Get ("\u0047\u0061\u006dm\u0061");if _aaeab !=nil {_aaeab =_bda .TraceToDirectObject (_aaeab );_afbd ,_ecea :=_bda .GetNumberAsFloat (_aaeab );
if _ecea !=nil {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_bega .Gamma =_afbd ;};return _bega ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cbgb *PdfColorspaceDeviceRGB )ToPdfObject ()_bda .PdfObject {return _bda .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetFillImage get attached model.Image in push button.
func (_agdcc *PdfFieldButton )GetFillImage ()*Image {if _agdcc .IsPush (){return _agdcc ._gbcbd ;};return nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_bae :=NewPdfAnnotation ();_cecf :=&PdfAnnotationScreen {};_cecf .PdfAnnotation =_bae ;_bae .SetContext (_cecf );return _cecf ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_dfce *PdfOutlineTreeNode )GetContext ()PdfModel {if _eeddb ,_cfebc :=_dfce ._ebabd .(*PdfOutline );_cfebc {return _eeddb ;};if _ggefgec ,_egddcb :=_dfce ._ebabd .(*PdfOutlineItem );_egddcb {return _ggefgec ;};_ed .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_gebb *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfedf ,_eagd :=_bda .GetNumbersAsFloat (objects );
if _eagd !=nil {return nil ,_eagd ;};return _gebb .ColorFromFloats (_dfedf );};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_gagc *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bda .GetNumberAsFloat (_gagc .CapHeight );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bfdd *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbga ,_ccgb :=_bda .GetNumbersAsFloat (objects );
if _ccgb !=nil {return nil ,_ccgb ;};return _bfdd .ColorFromFloats (_gbga );};func _fadef (_gbgg _bda .PdfObject )(*PdfColorspaceICCBased ,error ){_dgfde :=&PdfColorspaceICCBased {};if _gdbf ,_bbba :=_gbgg .(*_bda .PdfIndirectObject );_bbba {_dgfde ._aebd =_gdbf ;
};_gbgg =_bda .TraceToDirectObject (_gbgg );_cfdg ,_ffga :=_gbgg .(*_bda .PdfObjectArray );if !_ffga {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfdg .Len ()!=2{return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_gbgg =_bda .TraceToDirectObject (_cfdg .Get (0));_eage ,_ffga :=_gbgg .(*_bda .PdfObjectName );if !_ffga {return nil ,_c .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_eage !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_c .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_gbgg =_cfdg .Get (1);
_gdfa ,_ffga :=_bda .GetStream (_gbgg );if !_ffga {_ed .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_gbgg );
return nil ,_c .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_faedc :=_gdfa .PdfObjectDictionary ;_fbaa ,_ffga :=_faedc .Get ("\u004e").(*_bda .PdfObjectInteger );
if !_ffga {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fbaa !=1&&*_fbaa !=3&&*_fbaa !=4{return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_dgfde .N =int (*_fbaa );if _cddgc :=_faedc .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_cddgc !=nil {_acccd ,_bfdg :=NewPdfColorspaceFromPdfObject (_cddgc );if _bfdg !=nil {return nil ,_bfdg ;};_dgfde .Alternate =_acccd ;};if _bdfgc :=_faedc .Get ("\u0052\u0061\u006eg\u0065");
_bdfgc !=nil {_bdfgc =_bda .TraceToDirectObject (_bdfgc );_bgffa ,_aedg :=_bdfgc .(*_bda .PdfObjectArray );if !_aedg {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _bgffa .Len ()!=2*_dgfde .N {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_bacb ,_ebbd :=_bgffa .GetAsFloat64Slice ();if _ebbd !=nil {return nil ,_ebbd ;};_dgfde .Range =_bacb ;}else {_dgfde .Range =make ([]float64 ,2*_dgfde .N );for _cbed :=0;_cbed < _dgfde .N ;_cbed ++{_dgfde .Range [2*_cbed ]=0.0;_dgfde .Range [2*_cbed +1]=1.0;
};};if _bee :=_faedc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bee !=nil {_dcec ,_cbbe :=_bee .(*_bda .PdfObjectStream );if !_cbbe {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_dgfde .Metadata =_dcec ;};_cccb ,_eedfc :=_bda .DecodeStream (_gdfa );if _eedfc !=nil {return nil ,_eedfc ;};_dgfde .Data =_cccb ;_dgfde ._ebge =_gdfa ;return _dgfde ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fab *PdfActionNamed )ToPdfObject ()_bda .PdfObject {_fab .PdfAction .ToPdfObject ();_eaf :=_fab ._gg ;_dda :=_eaf .PdfObject .(*_bda .PdfObjectDictionary );_dda .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeNamed )));_dda .SetIfNotNil ("\u004e",_fab .N );
return _eaf ;};type pdfSignDictionary struct{*_bda .PdfObjectDictionary ;_fcdfe *SignatureHandler ;_cfefa *PdfSignature ;_dbebg int64 ;_gcgda int ;_dgeg int ;_cafdg int ;_eafbd int ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_gebgb *PdfPage )Size ()(float64 ,float64 ,error ){_caccd ,_bgcg :=_gebgb .GetMediaBox ();if _bgcg !=nil {return 0,0,_bgcg ;};_dedac ,_becdd :=_caccd .Width (),_caccd .Height ();_fbga ,_bgcg :=_gebgb .GetRotate ();if _bgcg !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_bgcg .Error ());
};if _ecdgc :=_fbga ;_ecdgc %360!=0&&_ecdgc %90==0{if _cfff :=(360+_ecdgc %360)%360;_cfff ==90||_cfff ==270{_dedac ,_becdd =_becdd ,_dedac ;};};return _dedac ,_becdd ,nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_gbed :=appender .Reader .DSS ;if _gbed ==nil {_gbed =NewDSS ();};if _agggc :=_gbed .GenerateHashMaps ();_agggc !=nil {return nil ,_agggc ;};return &LTV {CertClient :_bdf .NewCertClient (),OCSPClient :_bdf .NewOCSPClient (),CRLClient :_bdf .NewCRLClient (),SkipExisting :true ,_ecfbf :appender ,_efffa :_gbed },nil ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_eade *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcbg :=vals [0];if _fcbg < 0.0||_fcbg > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fcbg );
return nil ,ErrColorOutOfRange ;};_afbcb :=vals [1];if _afbcb < 0.0||_afbcb > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afbcb );return nil ,ErrColorOutOfRange ;
};_defbf :=vals [2];if _defbf < 0.0||_defbf > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_defbf );return nil ,ErrColorOutOfRange ;};_dfff :=NewPdfColorCalRGB (_fcbg ,_afbcb ,_defbf );
return _dfff ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ggcfb pdfFontType0 )GetRuneMetrics (r rune )(_geg .CharMetrics ,bool ){if _ggcfb .DescendantFont ==nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ggcfb );
return _geg .CharMetrics {},false ;};return _ggcfb .DescendantFont .GetRuneMetrics (r );};var (_dacd =_da .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_cgfed =_da .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_ccagf =_da .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_cgfee ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_beda ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_egcba ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_egccd *PdfWriter )SetDocInfo (info *PdfInfo ){_egccd .setDocInfo (info .ToPdfObject ())};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_dgcf :=NewPdfAnnotation ();_dfd :=&PdfAnnotationPrinterMark {};_dfd .PdfAnnotation =_dgcf ;_dgcf .SetContext (_dfd );return _dfd ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_cgffa *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bda .GetNumberAsFloat (_cgffa .Ascent );};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_aaee :=&PdfAnnotation {};_aaee ._ged =_bda .MakeIndirectObject (_bda .MakeDict ());return _aaee ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cabg *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cabg .GetNumComponents (){return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adebg ,_ffac :=_cabg .TintTransform .Evaluate (vals );
if _ffac !=nil {return nil ,_ffac ;};_fbgc ,_ffac :=_cabg .AlternateSpace .ColorFromFloats (_adebg );if _ffac !=nil {return nil ,_ffac ;};return _fbgc ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_edbfb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecdc ,_bagd :=_bda .GetNumbersAsFloat (objects );
if _bagd !=nil {return nil ,_bagd ;};return _edbfb .ColorFromFloats (_ecdc );};func _ggfe (_bccc _bda .PdfObject )(*PdfFilespec ,error ){if _bccc ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_bccc );};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bda .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _eabbb *_bda .PdfIndirectObject ;var _gaedf *_bda .PdfObjectName ;var _bddbf *_bda .PdfObjectArray ;if _cfda ,_ggabb :=obj .(*_bda .PdfIndirectObject );
_ggabb {_eabbb =_cfda ;};obj =_bda .TraceToDirectObject (obj );switch _gaea :=obj .(type ){case *_bda .PdfObjectArray :_bddbf =_gaea ;case *_bda .PdfObjectName :_gaedf =_gaea ;};if _gaedf !=nil {switch *_gaedf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_ed .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_gaedf );return nil ,_ceace ;};};if _bddbf !=nil &&_bddbf .Len ()> 0{var _dcfba _bda .PdfObject =_eabbb ;
if _eabbb ==nil {_dcfba =_bddbf ;};if _eecda ,_aabf :=_bda .GetName (_bddbf .Get (0));_aabf {switch _eecda .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _bddbf .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _bddbf .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bddbf .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ffa (_dcfba );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _egcd (_dcfba );
case "\u004c\u0061\u0062":return _baedg (_dcfba );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _fadef (_dcfba );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _cadgf (_dcfba );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _ddca (_dcfba );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _bcg (_dcfba );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _eafb (_dcfba );default:_ed .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_eecda );
};};};_ed .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_dggeb *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func (_eefbg *DSS )add (_gdcd *[]*_bda .PdfObjectStream ,_eddb map[string ]*_bda .PdfObjectStream ,_abcfb [][]byte )([]*_bda .PdfObjectStream ,error ){_cfgc :=make ([]*_bda .PdfObjectStream ,0,len (_abcfb ));
for _ ,_adfda :=range _abcfb {_bfdde ,_cegb :=_fgfee (_adfda );if _cegb !=nil {return nil ,_cegb ;};_cbdg ,_bebg :=_eddb [string (_bfdde )];if !_bebg {_cbdg ,_cegb =_bda .MakeStream (_adfda ,_bda .NewRawEncoder ());if _cegb !=nil {return nil ,_cegb ;};
_eddb [string (_bfdde )]=_cbdg ;*_gdcd =append (*_gdcd ,_cbdg );};_cfgc =append (_cfgc ,_cbdg );};return _cfgc ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_dbcb *PdfRectangle )ToPdfObject ()_bda .PdfObject {return _bda .MakeArray (_bda .MakeFloat (_dbcb .Llx ),_bda .MakeFloat (_dbcb .Lly ),_bda .MakeFloat (_dbcb .Urx ),_bda .MakeFloat (_dbcb .Ury ));};func (_gebee *PdfWriter )setWriter (_dgdeg _ga .Writer ){_gebee ._fcdda =_gebee ._eafd ;
_gebee ._ecgbge =_gb .NewWriter (_dgdeg );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_bacf *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func _fdagd (_ffbbc _bda .PdfObject )(*KDict ,error ){_eabg :=_bda .ResolveReference (_ffbbc );if _eabg ==nil {return nil ,_c .Errorf ("\u004b \u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};_acdbe ,_deffb :=_bda .GetDict (_eabg );if !_deffb {return nil ,_c .Errorf ("\u004b\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074 \u0061 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_aaeda :=&KDict {};if _becgg :=_acdbe .Get ("\u0053");
_becgg !=nil {_aaeda .S =_becgg ;};if _efbde :=_acdbe .Get ("\u0050");_efbde !=nil {_aaeda .P =_efbde ;};if _bcfff :=_acdbe .Get ("\u0049\u0044");_bcfff !=nil {if _bdefg ,_bgab :=_bda .GetString (_bcfff );_bgab {_aaeda .ID =_bdefg ;};};if _abed :=_acdbe .Get ("\u0050\u0067");
_abed !=nil {_aaeda .Pg =_abed ;};if _dfea :=_acdbe .Get ("\u004b");_dfea !=nil {_aaeda .K =_dfea ;switch _fbagg :=_dfea .(type ){case *_bda .PdfObjectArray :if _bfbc ,_eagdff :=_bda .GetArray (_dfea );_eagdff {for _ ,_cccfa :=range _bfbc .Elements (){switch _gaedff :=_cccfa .(type ){case *_bda .PdfIndirectObject :_bceec ,_adfbf :=_fdagd (_gaedff );
if _adfbf !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_adfbf );continue ;};_aaeda ._fcbda =append (_aaeda ._fcbda ,&KValue {_dfafb :_bceec });
case *_bda .PdfObjectInteger :if _dbefa ,_ccca :=_bda .GetIntVal (_cccfa );_ccca {_aaeda ._fcbda =append (_aaeda ._fcbda ,&KValue {_ecgbg :&_dbefa });};case *_bda .PdfObjectDictionary :_aaeda ._fcbda =append (_aaeda ._fcbda ,&KValue {_bfafef :_cccfa });
};};};case *_bda .PdfIndirectObject :_geafb ,_efef :=_fdagd (_fbagg );if _efef !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u0072\u0065\u0061\u0074i\u006e\u0067\u0020\u004b\u0020\u0063\u0068\u0069\u006c\u0064:\u0020\u0025\u0076",_efef );
};if _geafb !=nil {_aaeda ._fcbda =append (_aaeda ._fcbda ,&KValue {_dfafb :_geafb });};case *_bda .PdfObjectDictionary :_aaeda ._fcbda =append (_aaeda ._fcbda ,&KValue {_bfafef :_fbagg });case *_bda .PdfObjectInteger :if _gefd ,_dcccc :=_bda .GetIntVal (_dfea );
_dcccc {_aaeda ._fcbda =append (_aaeda ._fcbda ,&KValue {_ecgbg :&_gefd });};};};if _agecc :=_acdbe .Get ("\u0041");_agecc !=nil {_aaeda .A =_agecc ;};if _ebbeb :=_acdbe .Get ("\u0043");_ebbeb !=nil {_aaeda .C =_ebbeb ;};if _eggdd :=_acdbe .Get ("\u0052");
_eggdd !=nil {if _gdabe ,_cbdeg :=_bda .GetInt (_eggdd );_cbdeg {_aaeda .R =_gdabe ;};};if _dcddb :=_acdbe .Get ("\u0054");_dcddb !=nil {if _dcbac ,_abfef :=_bda .GetString (_dcddb );_abfef {_aaeda .T =_dcbac ;};};if _afgeac :=_acdbe .Get ("\u004c\u0061\u006e\u0067");
_afgeac !=nil {if _ccbed ,_ebdgb :=_bda .GetString (_afgeac );_ebdgb {_aaeda .Lang =_ccbed ;};};if _dfbfc :=_acdbe .Get ("\u0041\u006c\u0074");_dfbfc !=nil {if _bgaee ,_fedd :=_bda .GetString (_dfbfc );_fedd {_aaeda .Alt =_bgaee ;};};if _fagfe :=_acdbe .Get ("\u0045");
_fagfe !=nil {if _fgggb ,_bdegbb :=_bda .GetString (_fagfe );_bdegbb {_aaeda .E =_fgggb ;};};return _aaeda ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_db *PdfActionJavaScript )ToPdfObject ()_bda .PdfObject {_db .PdfAction .ToPdfObject ();_cef :=_db ._gg ;_gbd :=_cef .PdfObject .(*_bda .PdfObjectDictionary );_gbd .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeJavaScript )));_gbd .SetIfNotNil ("\u004a\u0053",_db .JS );
return _cef ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_dab *PdfAction )GetContext ()PdfModel {if _dab ==nil {return nil ;};return _dab ._edd ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bda .PdfObjectArray ;TI *_bda .PdfObjectInteger ;I *_bda .PdfObjectArray ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_egga *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_gbgc ,_egce :=color .(*PdfColorCalRGB );if !_egce {_ed .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cedd :=_gbgc .A ();_bbgg :=_gbgc .B ();_facg :=_gbgc .C ();X :=_egga .Matrix [0]*_ce .Pow (_cedd ,_egga .Gamma [0])+_egga .Matrix [3]*_ce .Pow (_bbgg ,_egga .Gamma [1])+_egga .Matrix [6]*_ce .Pow (_facg ,_egga .Gamma [2]);
Y :=_egga .Matrix [1]*_ce .Pow (_cedd ,_egga .Gamma [0])+_egga .Matrix [4]*_ce .Pow (_bbgg ,_egga .Gamma [1])+_egga .Matrix [7]*_ce .Pow (_facg ,_egga .Gamma [2]);Z :=_egga .Matrix [2]*_ce .Pow (_cedd ,_egga .Gamma [0])+_egga .Matrix [5]*_ce .Pow (_bbgg ,_egga .Gamma [1])+_egga .Matrix [8]*_ce .Pow (_facg ,_egga .Gamma [2]);
_cab :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fcgf :=-0.969256*X +1.875992*Y +0.041556*Z ;_dcbb :=0.055648*X +-0.204043*Y +1.057311*Z ;_cab =_ce .Min (_ce .Max (_cab ,0),1.0);_fcgf =_ce .Min (_ce .Max (_fcgf ,0),1.0);_dcbb =_ce .Min (_ce .Max (_dcbb ,0),1.0);
return NewPdfColorDeviceRGB (_cab ,_fcgf ,_dcbb ),nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// Transform rectangle with the supplied matrix.
func (_gcbe *PdfRectangle )Transform (transformMatrix _dfa .Matrix ){_gcbe .Llx ,_gcbe .Lly =transformMatrix .Transform (_gcbe .Llx ,_gcbe .Lly );_gcbe .Urx ,_gcbe .Ury =transformMatrix .Transform (_gcbe .Urx ,_gcbe .Ury );_gcbe .Normalize ();};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bda .PdfObject ;Flags _bda .PdfObject ;};

// IsCID returns true if the underlying font is CID.
func (_cbbc *PdfFont )IsCID ()bool {return _cbbc .baseFields ().isCIDFont ()};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_abfgf *PdfColorspaceDeviceN )ToPdfObject ()_bda .PdfObject {_fgac :=_bda .MakeArray (_bda .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_fgac .Append (_abfgf .ColorantNames );_fgac .Append (_abfgf .AlternateSpace .ToPdfObject ());_fgac .Append (_abfgf .TintTransform .ToPdfObject ());
if _abfgf .Attributes !=nil {_fgac .Append (_abfgf .Attributes .ToPdfObject ());};if _abfgf ._ecaf !=nil {_abfgf ._ecaf .PdfObject =_fgac ;return _abfgf ._ecaf ;};return _fgac ;};func (_efg *PdfReader )newPdfActionLaunchFromDict (_fde *_bda .PdfObjectDictionary )(*PdfActionLaunch ,error ){_bad ,_defg :=_ggfe (_fde .Get ("\u0046"));
if _defg !=nil {return nil ,_defg ;};return &PdfActionLaunch {Win :_fde .Get ("\u0057\u0069\u006e"),Mac :_fde .Get ("\u004d\u0061\u0063"),Unix :_fde .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_fde .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bad },nil ;
};

// ToPdfObject implements interface PdfModel.
func (_caca *PdfAnnotationFreeText )ToPdfObject ()_bda .PdfObject {_caca .PdfAnnotation .ToPdfObject ();_gcc :=_caca ._ged ;_egdbf :=_gcc .PdfObject .(*_bda .PdfObjectDictionary );_caca .PdfAnnotationMarkup .appendToPdfDictionary (_egdbf );_egdbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_egdbf .SetIfNotNil ("\u0044\u0041",_caca .DA );_egdbf .SetIfNotNil ("\u0051",_caca .Q );_egdbf .SetIfNotNil ("\u0052\u0043",_caca .RC );_egdbf .SetIfNotNil ("\u0044\u0053",_caca .DS );_egdbf .SetIfNotNil ("\u0043\u004c",_caca .CL );_egdbf .SetIfNotNil ("\u0049\u0054",_caca .IT );
_egdbf .SetIfNotNil ("\u0042\u0045",_caca .BE );_egdbf .SetIfNotNil ("\u0052\u0044",_caca .RD );_egdbf .SetIfNotNil ("\u0042\u0053",_caca .BS );_egdbf .SetIfNotNil ("\u004c\u0045",_caca .LE );return _gcc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dbbd *PdfAnnotation )GetContainingPdfObject ()_bda .PdfObject {return _dbbd ._ged };func _caae (_aaeeg *PdfField ,_bdggd _bda .PdfObject )error {switch _aaeeg .GetContext ().(type ){case *PdfFieldText :switch _cbcag :=_bdggd .(type ){case *_bda .PdfObjectName :_ccegb :=_cbcag ;
_ed .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ccegb .String ());
_aaeeg .V =_bda .MakeEncodedString (_cbcag .String (),true );case *_bda .PdfObjectString :_aaeeg .V =_bda .MakeEncodedString (_cbcag .String (),true );default:_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_cbcag ,_cbcag );
};case *PdfFieldButton :switch _bdggd .(type ){case *_bda .PdfObjectName :if len (_bdggd .String ())> 0{_aaeeg .V =_bdggd ;_eadef (_aaeeg ,_bdggd );};case *_bda .PdfObjectString :if len (_bdggd .String ())> 0{_aaeeg .V =_bda .MakeName (_bdggd .String ());
_eadef (_aaeeg ,_aaeeg .V );};default:_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aaeeg .PartialName (),_bdggd );_aaeeg .V =_bdggd ;
};case *PdfFieldChoice :switch _bdggd .(type ){case *_bda .PdfObjectName :if len (_bdggd .String ())> 0{_aaeeg .V =_bda .MakeString (_bdggd .String ());_eadef (_aaeeg ,_bdggd );};case *_bda .PdfObjectString :if len (_bdggd .String ())> 0{_aaeeg .V =_bdggd ;
_eadef (_aaeeg ,_bda .MakeName (_bdggd .String ()));};default:_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aaeeg .PartialName (),_bdggd );
_aaeeg .V =_bdggd ;};case *PdfFieldSignature :_ed .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_aaeeg .PartialName (),_bdggd );
};return nil ;};

// Register registers (caches) a model to primitive object relationship.
func (_cgedc *modelManager )Register (primitive _bda .PdfObject ,model PdfModel ){_cgedc ._afcbd [model ]=primitive ;_cgedc ._afaad [primitive ]=model ;};

// Items returns all children outline items.
func (_cddbb *OutlineItem )Items ()[]*OutlineItem {return _cddbb .Entries };const (NonFullScreenPageModeUseNone NonFullScreenPageMode ="\u0055s\u0065\u004e\u006f\u006e\u0065";NonFullScreenPageModeUseOutlines NonFullScreenPageMode ="U\u0073\u0065\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073";
NonFullScreenPageModeUseThumbs NonFullScreenPageMode ="\u0055s\u0065\u0054\u0068\u0075\u006d\u0062s";NonFullScreenPageModeUseOC NonFullScreenPageMode ="\u0055\u0073\u0065O\u0043";DirectionL2R Direction ="\u004c\u0032\u0052";DirectionR2L Direction ="\u0052\u0032\u004c";
PageBoundaryMediaBox PageBoundary ="\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078";PageBoundaryCropBox PageBoundary ="\u0043r\u006f\u0070\u0042\u006f\u0078";PageBoundaryBleedBox PageBoundary ="\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078";PageBoundaryTrimBox PageBoundary ="\u0054r\u0069\u006d\u0042\u006f\u0078";
PageBoundaryArtBox PageBoundary ="\u0041\u0072\u0074\u0042\u006f\u0078";PrintScalingNone PrintScaling ="\u004e\u006f\u006e\u0065";PrintScalingAppDefault PrintScaling ="\u0041\u0070\u0070\u0044\u0065\u0066\u0061\u0075\u006c\u0074";DuplexNone Duplex ="\u006e\u006f\u006e\u0065";
DuplexSimplex Duplex ="\u0053i\u006d\u0070\u006c\u0065\u0078";DuplexFlipShortEdge Duplex ="\u0044\u0075\u0070\u006cex\u0046\u006c\u0069\u0070\u0053\u0068\u006f\u0072\u0074\u0045\u0064\u0067\u0065";DuplexFlipLongEdge Duplex ="\u0044u\u0070l\u0065\u0078\u0046\u006c\u0069p\u004c\u006fn\u0067\u0045\u0064\u0067\u0065";
);

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_bebag :_bda .MakeIndirectObject (_bda .MakeDict ()),VRI :map[string ]*VRI {}};};func (_cfd *PdfReader )newPdfAnnotationCircleFromDict (_agb *_bda .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_aeecg :=PdfAnnotationCircle {};
_acfc ,_egdb :=_cfd .newPdfAnnotationMarkupFromDict (_agb );if _egdb !=nil {return nil ,_egdb ;};_aeecg .PdfAnnotationMarkup =_acfc ;_aeecg .BS =_agb .Get ("\u0042\u0053");_aeecg .IC =_agb .Get ("\u0049\u0043");_aeecg .BE =_agb .Get ("\u0042\u0045");_aeecg .RD =_agb .Get ("\u0052\u0044");
return &_aeecg ,nil ;};func (_aeef *PdfFilespec )getDict ()*_bda .PdfObjectDictionary {if _cgcbd ,_acacc :=_aeef ._daeg .(*_bda .PdfIndirectObject );_acacc {_gfff ,_dcfbc :=_cgcbd .PdfObject .(*_bda .PdfObjectDictionary );if !_dcfbc {return nil ;};return _gfff ;
}else if _bbbbc ,_fgbag :=_aeef ._daeg .(*_bda .PdfObjectDictionary );_fgbag {return _bbbbc ;}else {_ed .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_aeef ._daeg );
return nil ;};};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_bdab :=NewPdfAnnotation ();_dgbd :=&PdfAnnotationCircle {};_dgbd .PdfAnnotation =_bdab ;_dgbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdab .SetContext (_dgbd );return _dgbd ;};func (_bcag *PdfReader )newPdfAnnotationCaretFromDict (_eca *_bda .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_gff :=PdfAnnotationCaret {};
_ecdd ,_gbcf :=_bcag .newPdfAnnotationMarkupFromDict (_eca );if _gbcf !=nil {return nil ,_gbcf ;};_gff .PdfAnnotationMarkup =_ecdd ;_gff .RD =_eca .Get ("\u0052\u0044");_gff .Sy =_eca .Get ("\u0053\u0079");return &_gff ,nil ;};

// IsColored specifies if the pattern is colored.
func (_ffgad *PdfTilingPattern )IsColored ()bool {if _ffgad .PaintType !=nil &&*_ffgad .PaintType ==1{return true ;};return false ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_bda .PdfObjectArray ;ExtGState _bda .PdfObject ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bda .PdfObject ;_gfda []byte ;_agcda *_bda .PdfIndirectObject ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_bgaeeb *PdfWriter )SetNameDictionary (names _bda .PdfObject )error {if names ==nil {return nil ;};_bgaeeb ._edacf =_dcaab (names );_ed .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_bgaeeb ._geadba .Set ("\u004e\u0061\u006de\u0073",names );return _bgaeeb .addObjects (names );};func (_dage *PdfReader )newPdfActionGoTo3DViewFromDict (_agc *_bda .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_agc .Get ("\u0054\u0041"),V :_agc .Get ("\u0056")},nil ;
};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_fdeb PdfModel ;Rect _bda .PdfObject ;Contents _bda .PdfObject ;P _bda .PdfObject ;NM _bda .PdfObject ;M _bda .PdfObject ;F _bda .PdfObject ;AP _bda .PdfObject ;AS _bda .PdfObject ;Border _bda .PdfObject ;C _bda .PdfObject ;StructParent _bda .PdfObject ;
OC _bda .PdfObject ;_ged *_bda .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dfbe *PdfColorspaceSpecialSeparation )ToPdfObject ()_bda .PdfObject {_bced :=_bda .MakeArray (_bda .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_bced .Append (_dfbe .ColorantName );_bced .Append (_dfbe .AlternateSpace .ToPdfObject ());
_bced .Append (_dfbe .TintTransform .ToPdfObject ());if _dfbe ._efde !=nil {_dfbe ._efde .PdfObject =_bced ;return _dfbe ._efde ;};return _bced ;};type fontCommon struct{_bcaebe string ;_fggeg string ;_faee string ;_fbedf _bda .PdfObject ;_eeed *_dfe .CMap ;
_bedea *PdfFontDescriptor ;_cadee int64 ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_cgg :=NewPdfAction ();_be :=&PdfActionGoTo3DView {};_be .PdfAction =_cgg ;_cgg .SetContext (_be );return _be ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gdbcf *modelManager )GetPrimitiveFromModel (model PdfModel )_bda .PdfObject {_adaff ,_ceccg :=_gdbcf ._afcbd [model ];if !_ceccg {return nil ;};return _adaff ;};func (_fffb *PdfReader )newPdfAnnotationWidgetFromDict (_fbf *_bda .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_bec :=PdfAnnotationWidget {};
_bec .H =_fbf .Get ("\u0048");_bec .MK =_fbf .Get ("\u004d\u004b");_bec .A =_fbf .Get ("\u0041");_bec .AA =_fbf .Get ("\u0041\u0041");_bec .BS =_fbf .Get ("\u0042\u0053");_bec .Parent =_fbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_bec ,nil ;
};

// ToPdfObject converts the font to a PDF representation.
func (_fgdcg *pdfFontType0 )ToPdfObject ()_bda .PdfObject {if _fgdcg ._efgbc ==nil {_fgdcg ._efgbc =&_bda .PdfIndirectObject {};};_bfdeb :=_fgdcg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_fgdcg ._efgbc .PdfObject =_bfdeb ;if _fgdcg .Encoding !=nil {_bfdeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fgdcg .Encoding );
}else if _fgdcg ._geed !=nil {_bfdeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fgdcg ._geed .ToPdfObject ());};if _fgdcg .DescendantFont !=nil {_bfdeb .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bda .MakeArray (_fgdcg .DescendantFont .ToPdfObject ()));
};return _fgdcg ._efgbc ;};func (_cfbbd *PdfReader )newPdfActionGotoFromDict (_gfb *_bda .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_gfb .Get ("\u0044")},nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_geg .CharMetrics ;

// GetNumComponents returns the number of color components (1 for Indexed).
func (_babfc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bda .PdfObjectBool ;SigFlags *_bda .PdfObjectInteger ;CO *_bda .PdfObjectArray ;DR *PdfPageResources ;DA *_bda .PdfObjectString ;Q *_bda .PdfObjectInteger ;XFA _bda .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _bda .PdfObject ;_bcgge *_bda .PdfIndirectObject ;_dacab bool ;};func (_aaa *PdfReader )newPdfActionMovieFromDict (_bdca *_bda .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_bdca .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_bdca .Get ("\u0054"),Operation :_bdca .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func (_cbca *PdfReader )newPdfAnnotationFileAttachmentFromDict (_afba *_bda .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_bgefb :=PdfAnnotationFileAttachment {};_efce ,_bffa :=_cbca .newPdfAnnotationMarkupFromDict (_afba );if _bffa !=nil {return nil ,_bffa ;
};_bgefb .PdfAnnotationMarkup =_efce ;_bgefb .FS =_afba .Get ("\u0046\u0053");_bgefb .Name =_afba .Get ("\u004e\u0061\u006d\u0065");return &_bgefb ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_eeee *PdfFunctionType4 )ToPdfObject ()_bda .PdfObject {_aggbe :=_eeee ._eadd ;if _aggbe ==nil {_eeee ._eadd =&_bda .PdfObjectStream {};_aggbe =_eeee ._eadd ;};_edeeg :=_bda .MakeDict ();_edeeg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bda .MakeInteger (4));
_bfece :=&_bda .PdfObjectArray {};for _ ,_cfbfb :=range _eeee .Domain {_bfece .Append (_bda .MakeFloat (_cfbfb ));};_edeeg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bfece );_bbea :=&_bda .PdfObjectArray {};for _ ,_affde :=range _eeee .Range {_bbea .Append (_bda .MakeFloat (_affde ));
};_edeeg .Set ("\u0052\u0061\u006eg\u0065",_bbea );if _eeee ._bedf ==nil &&_eeee .Program !=nil {_eeee ._bedf =[]byte (_eeee .Program .String ());};_edeeg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bda .MakeInteger (int64 (len (_eeee ._bedf ))));_aggbe .Stream =_eeee ._bedf ;
_aggbe .PdfObjectDictionary =_edeeg ;return _aggbe ;};func (_ecfec *pdfFontSimple )baseFields ()*fontCommon {return &_ecfec .fontCommon };

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_afcf *PdfFont )CharcodesToStrings (charcodes []_dgb .CharCode ,replacementText string )([]string ,int ,int ){_dcce :=_afcf .baseFields ();_feadf :=make ([]string ,0,len (charcodes ));_cfefd :=0;_fcceg :=_afcf .Encoder ();_dcfag :=_dcce ._eeed !=nil &&_afcf .IsSimple ()&&_afcf .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_ab .Contains (_dcce ._eeed .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_dcfag &&_fcceg !=nil {switch _bcdba :=_fcceg .(type ){case _dgb .SimpleEncoder :_fcfg :=_bcdba .BaseName ();if _ ,_adcdc :=_dgcb [_fcfg ];_adcdc {for _ ,_bbaac :=range charcodes {if _gged ,_baea :=_fcceg .CharcodeToRune (_bbaac );_baea {_feadf =append (_feadf ,string (_gged ));
}else {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bbaac ,charcodes ,_dcce .isCIDFont (),_afcf ,_fcceg );
_cfefd ++;_feadf =append (_feadf ,_dfe .MissingCodeString );};};return _feadf ,len (_feadf ),_cfefd ;};};};for _ ,_gdge :=range charcodes {if _dcce ._eeed !=nil {if _ddcbd ,_dgcg :=_dcce ._eeed .CharcodeToUnicode (_dfe .CharCode (_gdge ));_dgcg {_acgg ,_ :=_a .DecodeLastRuneInString (_ddcbd );
_efdad :=_cabge (_acgg );if !(_efdad =="\u0043\u006f"){_feadf =append (_feadf ,_ddcbd );continue ;};_ed .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_gdge ,_ddcbd );
};};if _fcceg !=nil {if _dfabf ,_cbbgg :=_fcceg .CharcodeToRune (_gdge );_cbbgg {_cgace :=_cabge (_dfabf );if !(_cgace =="\u0043\u006f"){_feadf =append (_feadf ,string (_dfabf ));continue ;};_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_gdge ,string (_dfabf ));
};};if replacementText !=""{_feadf =append (_feadf ,replacementText );}else {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gdge ,charcodes ,_dcce .isCIDFont (),_afcf ,_fcceg );
_cfefd ++;_feadf =append (_feadf ,_dfe .MissingCodeString );};};if _cfefd !=0{_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cfefd ,_afcf );
};return _feadf ,len (_feadf ),_cfefd ;};

// SetBoundingBox sets the bounding box in the attribute object.
func (_adcceb *KDict )SetBoundingBox (x ,y ,width ,height float64 ){_adcceb ._fdec =&PdfRectangle {Llx :x ,Lly :y ,Urx :x +width ,Ury :y +height };};

// ToPdfObject implements interface PdfModel.
func (_ddeb *PdfAnnotationProjection )ToPdfObject ()_bda .PdfObject {_ddeb .PdfAnnotation .ToPdfObject ();_dbgc :=_ddeb ._ged ;_gec :=_dbgc .PdfObject .(*_bda .PdfObjectDictionary );_ddeb .PdfAnnotationMarkup .appendToPdfDictionary (_gec );return _dbgc ;
};

// SetRefObject sets the reference object for the KValue.
func (_bagg *KValue )SetRefObject (refObject _bda .PdfObject ){_bagg .Clear ();_bagg ._bfafef =refObject };

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_gffdcf *MultipleFontEncoder )GetRuneMetrics (r rune )(_geg .CharMetrics ,bool ){_cfcdcd :=_gffdcf .CurrentFont ;_ecdge ,_dfgg :=_cfcdcd .GetRuneMetrics (r );for _cgbec :=1;_cgbec < len (_gffdcf ._ffea )&&_ecdge .Wx ==0;_cgbec ++{_cfcdcd =_gffdcf ._ffea [_cgbec ];
_ecdge ,_dfgg =_cfcdcd .GetRuneMetrics (r );};return _ecdge ,_dfgg ;};func (_fccfe *PdfFunctionType0 )processSamples ()error {_bgcdd :=_cf .ResampleBytes (_fccfe ._ccbfc ,_fccfe .BitsPerSample );_fccfe ._gddfa =_bgcdd ;return nil ;};

// GetMCID returns the MCID of the KValue.
func (_fbbbf *KValue )GetMCID ()*int {return _fbbbf ._ecgbg };

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_gbaa :=&PdfPageResources {};_gbaa ._cfabb =_bda .MakeDict ();return _gbaa ;};

// GetOptimizer returns current PDF optimizer.
func (_abgcd *PdfWriter )GetOptimizer ()Optimizer {return _abgcd ._cfcfg };

// IsEncrypted returns true if the PDF file is encrypted.
func (_cgbbf *PdfReader )IsEncrypted ()(bool ,error ){return _cgbbf ._fdadg .IsEncrypted ()};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _aa .Permissions ;Algorithm EncryptionAlgorithm ;};func (_feab *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// SetNumCopies sets the value of the numCopies.
func (_gbaaa *ViewerPreferences )SetNumCopies (numCopies int ){_gbaaa ._eaga =numCopies };

// ColorToRGB converts a Lab color to an RGB color.
func (_cebg *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_deec :=func (_abfbd float64 )float64 {if _abfbd >=6.0/29{return _abfbd *_abfbd *_abfbd ;};return 108.0/841*(_abfbd -4.0/29.0);};_afab ,_acgf :=color .(*PdfColorLab );if !_acgf {_ed .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_afab .L ();AStar :=_afab .A ();BStar :=_afab .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_cebg .WhitePoint [0]*_deec (L );Y :=_cebg .WhitePoint [1]*_deec (M );Z :=_cebg .WhitePoint [2]*_deec (N );_fadg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_afgb :=-0.969256*X +1.875992*Y +0.041556*Z ;_dcge :=0.055648*X +-0.204043*Y +1.057311*Z ;_fadg =_ce .Min (_ce .Max (_fadg ,0),1.0);
_afgb =_ce .Min (_ce .Max (_afgb ,0),1.0);_dcge =_ce .Min (_ce .Max (_dcge ,0),1.0);return NewPdfColorDeviceRGB (_fadg ,_afgb ,_dcge ),nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bda .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _eaagb error ;encoder ,_eaagb =img .getSuitableEncoder ();if _eaagb !=nil {_ed .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_eaagb );
encoder =_bda .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_bcbcac ,_cgagab :=encoder .EncodeBytes (img .Data );if _cgagab !=nil {_ed .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cgagab );
return nil ,_cgagab ;};_ecbfa :=NewXObjectImage ();_feece :=img .Width ;_ddfdc :=img .Height ;_ecbfa .Width =&_feece ;_ecbfa .Height =&_ddfdc ;_ecgdde :=img .BitsPerComponent ;_ecbfa .BitsPerComponent =&_ecgdde ;_ecbfa .Filter =encoder ;_ecbfa .Stream =_bcbcac ;
if cs ==nil {if img .ColorComponents ==1{_ecbfa .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_bda .DCTEncoder :_ecbfa .ColorSpace =NewPdfColorspaceDeviceRGB ();_ecgdde =8;_ecbfa .BitsPerComponent =&_ecgdde ;
};};}else if img .ColorComponents ==3{_ecbfa .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_bda .DCTEncoder :_ecbfa .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_ecbfa .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_gea .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_ecbfa .ColorSpace =cs ;};if len (img ._ffbd )!=0{_cbaec :=NewXObjectImage ();_cbaec .Filter =encoder ;_cgaaa ,_efgbe :=encoder .EncodeBytes (img ._ffbd );
if _efgbe !=nil {_ed .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_efgbe );return nil ,_efgbe ;};_cbaec .Stream =_cgaaa ;_cbaec .BitsPerComponent =_ecbfa .BitsPerComponent ;
_cbaec .Width =&img .Width ;_cbaec .Height =&img .Height ;_cbaec .ColorSpace =NewPdfColorspaceDeviceGray ();_ecbfa .SMask =_cbaec .ToPdfObject ();}else {_ecbfa .SMask =xobjIn .SMask ;_ecbfa .ImageMask =xobjIn .ImageMask ;if _ecbfa .ColorSpace .GetNumComponents ()==1{_cafab (_ecbfa );
};};return _ecbfa ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_efga *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bdba ,_acdf :=color .(*PdfColorDeviceGray );if !_acdf {_ed .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_bdba ),float64 (*_bdba ),float64 (*_bdba )),nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_efff FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_efff .Mask ()|fl .Mask ())};

// WriteToFile writes the Appender output to file specified by path.
func (_aaaf *PdfAppender )WriteToFile (outputPath string )error {_defge ,_dgfag :=_dfc .Create (outputPath );if _dgfag !=nil {return _dgfag ;};defer _defge .Close ();return _aaaf .Write (_defge );};func (_cgf *PdfReader )newPdfActionRenditionFromDict (_cddd *_bda .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_cddd .Get ("\u0052"),AN :_cddd .Get ("\u0041\u004e"),OP :_cddd .Get ("\u004f\u0050"),JS :_cddd .Get ("\u004a\u0053")},nil ;
};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bda .PdfObject )(*PdfFilespec ,error ){_adbc :=&PdfFilespec {};var _ecgbb *_bda .PdfObjectDictionary ;if _dbfbcc ,_gfcdc :=_bda .GetIndirect (obj );_gfcdc {_adbc ._daeg =_dbfbcc ;_cceg ,_cdbg :=_bda .GetDict (_dbfbcc .PdfObject );
if !_cdbg {_ed .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bda .ErrTypeError ;};_ecgbb =_cceg ;}else if _cabc ,_fafg :=_bda .GetDict (obj );
_fafg {_adbc ._daeg =_cabc ;_ecgbb =_cabc ;}else {_ed .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bda .ErrTypeError ;};if _ecgbb ==nil {_ed .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_gea .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gabf :=_ecgbb .Get ("\u0054\u0079\u0070\u0065");_gabf !=nil {_ebgcb ,_cefa :=_gabf .(*_bda .PdfObjectName );if !_cefa {_ed .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gabf );
}else {if *_ebgcb !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ed .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_ebgcb );
};};};if _cdba :=_ecgbb .Get ("\u0046\u0053");_cdba !=nil {_adbc .FS =_cdba ;};if _ebbde :=_ecgbb .Get ("\u0046");_ebbde !=nil {_adbc .F =_ebbde ;};if _bgeg :=_ecgbb .Get ("\u0055\u0046");_bgeg !=nil {_adbc .UF =_bgeg ;};if _ddffa :=_ecgbb .Get ("\u0044\u004f\u0053");
_ddffa !=nil {_adbc .DOS =_ddffa ;};if _ecfcf :=_ecgbb .Get ("\u004d\u0061\u0063");_ecfcf !=nil {_adbc .Mac =_ecfcf ;};if _gfbd :=_ecgbb .Get ("\u0055\u006e\u0069\u0078");_gfbd !=nil {_adbc .Unix =_gfbd ;};if _adcac :=_ecgbb .Get ("\u0049\u0044");_adcac !=nil {_adbc .ID =_adcac ;
};if _acfe :=_ecgbb .Get ("\u0056");_acfe !=nil {_adbc .V =_acfe ;};if _adbbd :=_ecgbb .Get ("\u0045\u0046");_adbbd !=nil {_adbc .EF =_adbbd ;};if _geda :=_ecgbb .Get ("\u0052\u0046");_geda !=nil {_adbc .RF =_geda ;};if _deadd :=_ecgbb .Get ("\u0044\u0065\u0073\u0063");
_deadd !=nil {_adbc .Desc =_deadd ;};if _fagf :=_ecgbb .Get ("\u0043\u0049");_fagf !=nil {_adbc .CI =_fagf ;};if _cgff :=_ecgbb .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_cgff !=nil {_adbc .AFRelationship =_cgff ;
};return _adbc ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_gfgcd *XObjectImage )GetContainingPdfObject ()_bda .PdfObject {return _gfgcd ._eedbf };

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_dgb .SimpleEncoder ,error ){_cabf ,_baef :=_edad (basefont );if _baef !=nil {return nil ,nil ,_baef ;};_abecb ,_dbebe :=_cabf .Encoder ().(_dgb .SimpleEncoder );
if !_dbebe {return nil ,nil ,_c .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cabf .Encoder ());
};_egeff :=make (map[rune ]_dgb .GlyphName );for _bdgee :=range alphabet {if _ ,_ccbf :=_abecb .RuneToCharcode (_bdgee );!_ccbf {_ ,_agccc :=_cabf ._feada .Read (_bdgee );if !_agccc {_ed .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_bdgee ,_bdgee );
continue ;};_bcgga ,_agccc :=_dgb .RuneToGlyph (_bdgee );if !_agccc {_ed .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_bdgee ,_bdgee );continue ;};
if len (_egeff )>=255{return nil ,nil ,_gea .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_egeff [_bdgee ]=_bcgga ;};};var (_cfcfb []_dgb .CharCode ;_ddac []_dgb .CharCode ;);for _cebeb :=_dgb .CharCode (1);_cebeb <=0xff;_cebeb ++{_befcg ,_acacb :=_abecb .CharcodeToRune (_cebeb );if !_acacb {_cfcfb =append (_cfcfb ,_cebeb );continue ;};if _ ,_acacb =alphabet [_befcg ];
!_acacb {_ddac =append (_ddac ,_cebeb );};};_fadc :=append (_cfcfb ,_ddac ...);if len (_fadc )< len (_egeff ){return nil ,nil ,_c .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_egeff ),len (_fadc ));
};_dcfce :=make ([]rune ,0,len (_egeff ));for _ccgbf :=range _egeff {_dcfce =append (_dcfce ,_ccgbf );};_cb .Slice (_dcfce ,func (_dbdbg ,_dfab int )bool {return _dcfce [_dbdbg ]< _dcfce [_dfab ]});_gbca :=make (map[_dgb .CharCode ]_dgb .GlyphName ,len (_dcfce ));
for _ ,_ecda :=range _dcfce {_bcbc :=_fadc [0];_fadc =_fadc [1:];_gbca [_bcbc ]=_egeff [_ecda ];};_abecb =_dgb .ApplyDifferences (_abecb ,_gbca );_cabf .SetEncoder (_abecb );return &PdfFont {_ggada :&_cabf },_abecb ,nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bda .PdfObject ;B _bda .PdfObject ;};

// ValidateSignatures validates digital signatures in the document.
func (_ffeec *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ffeec .AcroForm ==nil {return nil ,nil ;};if _ffeec .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_fcda *PdfSignature ;
_bgffce *PdfField ;_ggfdgd SignatureHandler ;};var _cdfcb []*sigFieldPair ;for _ ,_cceaf :=range _ffeec .AcroForm .AllFields (){if _cceaf .V ==nil {continue ;};if _gdeeg ,_cfbed :=_bda .GetDict (_cceaf .V );_cfbed {if _abgdf ,_edadf :=_bda .GetNameVal (_gdeeg .Get ("\u0054\u0079\u0070\u0065"));
_edadf &&(_abgdf =="\u0053\u0069\u0067"||_abgdf =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_dgdcd ,_edcbe :=_bda .GetIndirect (_cceaf .V );if !_edcbe {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_eeffd ,_acced :=_ffeec .newPdfSignatureFromIndirect (_dgdcd );if _acced !=nil {return nil ,_acced ;};var _fffgb SignatureHandler ;for _ ,_aeadb :=range handlers {if _aeadb .IsApplicable (_eeffd ){_fffgb =_aeadb ;break ;};};
_cdfcb =append (_cdfcb ,&sigFieldPair {_fcda :_eeffd ,_bgffce :_cceaf ,_ggfdgd :_fffgb });};};};var _fcdfa []SignatureValidationResult ;for _ ,_ggccbbf :=range _cdfcb {_dbed :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_ggccbbf ._bgffce }};
if _ggccbbf ._ggfdgd ==nil {_dbed .Errors =append (_dbed .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_fcdfa =append (_fcdfa ,_dbed );continue ;};_aeafe ,_eadf :=_ggccbbf ._ggfdgd .NewDigest (_ggccbbf ._fcda );
if _eadf !=nil {_dbed .Errors =append (_dbed .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_eadf .Error ());_fcdfa =append (_fcdfa ,_dbed );continue ;};_bfcab :=_ggccbbf ._fcda .ByteRange ;if _bfcab ==nil {_dbed .Errors =append (_dbed .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_fcdfa =append (_fcdfa ,_dbed );continue ;};for _bdafe :=0;_bdafe < _bfcab .Len ();_bdafe =_bdafe +2{_accfc ,_ :=_bda .GetNumberAsInt64 (_bfcab .Get (_bdafe ));_abbdb ,_ :=_bda .GetIntVal (_bfcab .Get (_bdafe +1));if _ ,_accaea :=_ffeec ._adacg .Seek (_accfc ,_ga .SeekStart );
_accaea !=nil {return nil ,_accaea ;};_dccde :=make ([]byte ,_abbdb );if _ ,_adfdf :=_ffeec ._adacg .Read (_dccde );_adfdf !=nil {return nil ,_adfdf ;};_aeafe .Write (_dccde );};var _gadde SignatureValidationResult ;if _affff ,_fdbae :=_ggccbbf ._ggfdgd .(SignatureHandlerDocMDP );
_fdbae {_gadde ,_eadf =_affff .ValidateWithOpts (_ggccbbf ._fcda ,_aeafe ,SignatureHandlerDocMDPParams {Parser :_ffeec ._fdadg });}else {_gadde ,_eadf =_ggccbbf ._ggfdgd .Validate (_ggccbbf ._fcda ,_aeafe );};if _eadf !=nil {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_eadf ,_ggccbbf ._ggfdgd );
_gadde .Errors =append (_gadde .Errors ,_eadf .Error ());};_gadde .Name =_ggccbbf ._fcda .Name .Decoded ();_gadde .Reason =_ggccbbf ._fcda .Reason .Decoded ();if _ggccbbf ._fcda .M !=nil {_cdbed ,_degge :=NewPdfDate (_ggccbbf ._fcda .M .String ());if _degge !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_degge );
_gadde .Errors =append (_gadde .Errors ,_degge .Error ());continue ;};_gadde .Date =_cdbed ;};_gadde .ContactInfo =_ggccbbf ._fcda .ContactInfo .Decoded ();_gadde .Location =_ggccbbf ._fcda .Location .Decoded ();_gadde .Fields =_dbed .Fields ;_fcdfa =append (_fcdfa ,_gadde );
};return _fcdfa ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bcce ,_gaebf :=NewStandard14Font (basefont );if _gaebf !=nil {panic (_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _bcce ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dffeb *PdfPageResources )HasFontByName (keyName _bda .PdfObjectName )bool {_ ,_acbfc :=_dffeb .GetFontByName (keyName );return _acbfc ;};

// RemoveWatermarkImage removes watermark.
// If you don't know exact name of watermark PDF object, pass empty string as an argument.
func (_eace *PdfPage )RemoveWatermarkImage (name string )error {if _eace .Resources !=nil &&_eace .Resources .XObject !=nil {if _dcff ,_dadea :=_bda .GetDict (_eace .Resources .XObject );_dadea {for _ ,_gbaca :=range _dcff .Keys (){if name ==_gbaca .String (){_eace .removeXObj (_dcff ,_gbaca );
continue ;};_bagaf ,_cecfa :=_bda .GetStream (_dcff .Get (_gbaca ));if !_cecfa {continue ;};_bcdga ,_cecfa :=_bda .GetDict (_bagaf .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o"));if !_cecfa {continue ;};_ggaae ,_cecfa :=_bda .GetDict (_bcdga .Get ("\u0041\u0044\u0042\u0045\u005f\u0043\u006f\u006d\u0070\u006f\u0075\u006ed\u0054\u0079\u0070\u0065"));
if !_cecfa {continue ;};if _ggaae .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065")!=nil &&_ggaae .Get ("\u0050r\u0069\u0076\u0061\u0074\u0065").String ()=="\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"{_eace .removeXObj (_dcff ,_gbaca );};};};};_cgacda ,_cfbgeg :=_eace .GetAnnotations ();
if _cfbgeg ==nil {_bddf :=make ([]*PdfAnnotation ,0);for _ ,_dccdc :=range _cgacda {switch _dccdc .GetContext ().(type ){case *PdfAnnotationWatermark :default:_bddf =append (_bddf ,_dccdc );};};_eace .SetAnnotations (_bddf );};return nil ;};

// ToPdfObject converts date to a PDF string object.
func (_cedfge *PdfDate )ToPdfObject ()_bda .PdfObject {_adga :=_c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_cedfge ._ggfcc ,_cedfge ._geacg ,_cedfge ._cfgbe ,_cedfge ._gggg ,_cedfge ._cbdga ,_cedfge ._gddcc ,_cedfge ._ffcfe ,_cedfge ._dagdfa ,_cedfge ._dgeec );
return _bda .MakeString (_adga );};func (_ggge *PdfField )inherit (_bebaga func (*PdfField )bool )(bool ,error ){_ebaa :=map[*PdfField ]bool {};_dbafc :=false ;_bcaa :=_ggge ;for _bcaa !=nil {if _ ,_gbfgg :=_ebaa [_bcaa ];_gbfgg {return false ,_gea .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_edcf :=_bebaga (_bcaa );if _edcf {_dbafc =true ;break ;};_ebaa [_bcaa ]=true ;_bcaa =_bcaa .Parent ;};return _dbafc ,nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdfdd *PdfShadingType3 )ToPdfObject ()_bda .PdfObject {_fdfdd .PdfShading .ToPdfObject ();_gfgag ,_dbcfe :=_fdfdd .getShadingDict ();if _dbcfe !=nil {_ed .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdfdd .Coords !=nil {_gfgag .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fdfdd .Coords );};if _fdfdd .Domain !=nil {_gfgag .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fdfdd .Domain );};if _fdfdd .Function !=nil {if len (_fdfdd .Function )==1{_gfgag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdfdd .Function [0].ToPdfObject ());
}else {_bbgab :=_bda .MakeArray ();for _ ,_edggd :=range _fdfdd .Function {_bbgab .Append (_edggd .ToPdfObject ());};_gfgag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbgab );};};if _fdfdd .Extend !=nil {_gfgag .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fdfdd .Extend );
};return _fdfdd ._gfdga ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bda .PdfObject ;FontFamily _bda .PdfObject ;FontStretch _bda .PdfObject ;FontWeight _bda .PdfObject ;Flags _bda .PdfObject ;FontBBox _bda .PdfObject ;ItalicAngle _bda .PdfObject ;Ascent _bda .PdfObject ;Descent _bda .PdfObject ;
Leading _bda .PdfObject ;CapHeight _bda .PdfObject ;XHeight _bda .PdfObject ;StemV _bda .PdfObject ;StemH _bda .PdfObject ;AvgWidth _bda .PdfObject ;MaxWidth _bda .PdfObject ;MissingWidth _bda .PdfObject ;FontFile _bda .PdfObject ;FontFile2 _bda .PdfObject ;
FontFile3 _bda .PdfObject ;CharSet _bda .PdfObject ;_fcba int ;_fgbad float64 ;*fontFile ;_cgfd *_geg .TtfType ;

// Additional entries for CIDFonts
Style _bda .PdfObject ;Lang _bda .PdfObject ;FD _bda .PdfObject ;CIDSet _bda .PdfObject ;_gbcd *_bda .PdfIndirectObject ;};func (_abg *PdfReader )newPdfAnnotationPrinterMarkFromDict (_eega *_bda .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_ccgd :=PdfAnnotationPrinterMark {};
_ccgd .MN =_eega .Get ("\u004d\u004e");return &_ccgd ,nil ;};func (_ebacg *PdfWriter )addObject (_eebdd _bda .PdfObject )bool {_aeeg :=_ebacg .hasObject (_eebdd );if !_aeeg {_cdcff :=_bda .ResolveReferencesDeep (_eebdd ,_ebacg ._febfe );if _cdcff !=nil {_ed .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_cdcff );
};_ebacg ._ccbbg =append (_ebacg ._ccbbg ,_eebdd );_ebacg ._egfad [_eebdd ]=struct{}{};return true ;};return false ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ddbe *PdfOutline )ToPdfObject ()_bda .PdfObject {_bbab :=_ddbe ._baaf ;_bgbbe :=_bbab .PdfObject .(*_bda .PdfObjectDictionary );_bgbbe .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _ddbe .First !=nil {_bgbbe .Set ("\u0046\u0069\u0072s\u0074",_ddbe .First .ToPdfObject ());
};if _ddbe .Last !=nil {_bgbbe .Set ("\u004c\u0061\u0073\u0074",_ddbe .Last .GetContext ().GetContainingPdfObject ());};if _ddbe .Parent !=nil {_bgbbe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddbe .Parent .GetContext ().GetContainingPdfObject ());
};if _ddbe .Count !=nil {_bgbbe .Set ("\u0043\u006f\u0075n\u0074",_bda .MakeInteger (*_ddbe .Count ));};return _bbab ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_cdacge *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _bda .GetNumberAsFloat (_cdacge .XHeight );};func (_bcbaa *PdfWriter )checkCrossReferenceStream ()bool {_cffbdf :=_bcbaa ._cdbbdg .Major > 1||(_bcbaa ._cdbbdg .Major ==1&&_bcbaa ._cdbbdg .Minor > 4);
if _bcbaa ._fffee !=nil {_cffbdf =*_bcbaa ._fffee ;};return _cffbdf ;};

// ToPdfObject returns the PDF representation of the function.
func (_beaed *PdfFunctionType2 )ToPdfObject ()_bda .PdfObject {_cbff :=_bda .MakeDict ();_cbff .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bda .MakeInteger (2));_gagdd :=&_bda .PdfObjectArray {};for _ ,_febb :=range _beaed .Domain {_gagdd .Append (_bda .MakeFloat (_febb ));
};_cbff .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gagdd );if _beaed .Range !=nil {_cgegc :=&_bda .PdfObjectArray {};for _ ,_dbfcc :=range _beaed .Range {_cgegc .Append (_bda .MakeFloat (_dbfcc ));};_cbff .Set ("\u0052\u0061\u006eg\u0065",_cgegc );};
if _beaed .C0 !=nil {_gfbag :=&_bda .PdfObjectArray {};for _ ,_beaee :=range _beaed .C0 {_gfbag .Append (_bda .MakeFloat (_beaee ));};_cbff .Set ("\u0043\u0030",_gfbag );};if _beaed .C1 !=nil {_gedd :=&_bda .PdfObjectArray {};for _ ,_gbdeb :=range _beaed .C1 {_gedd .Append (_bda .MakeFloat (_gbdeb ));
};_cbff .Set ("\u0043\u0031",_gedd );};_cbff .Set ("\u004e",_bda .MakeFloat (_beaed .N ));if _beaed ._eaacc !=nil {_beaed ._eaacc .PdfObject =_cbff ;return _beaed ._eaacc ;};return _cbff ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _bda .PdfObject )(*PdfOutputIntent ,error ){_dbdaf :=&PdfOutputIntent {};if _efaa :=_dbdaf .ParsePdfObject (object );_efaa !=nil {return nil ,_efaa ;};return _dbdaf ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_cagg *XObjectImage )ToImage ()(*Image ,error ){_cbage :=&Image {};if _cagg .Height ==nil {return nil ,_gea .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_cbage .Height =*_cagg .Height ;if _cagg .Width ==nil {return nil ,_gea .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cbage .Width =*_cagg .Width ;if _cagg .BitsPerComponent ==nil {switch _cagg .Filter .(type ){case *_bda .CCITTFaxEncoder ,*_bda .JBIG2Encoder :_cbage .BitsPerComponent =1;
case *_bda .LZWEncoder ,*_bda .RunLengthEncoder :_cbage .BitsPerComponent =8;default:return nil ,_gea .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_cbage .BitsPerComponent =*_cagg .BitsPerComponent ;};_cbage .ColorComponents =_cagg .ColorSpace .GetNumComponents ();_cagg ._eedbf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bda .MakeInteger (int64 (_cbage .ColorComponents )));
_fbcge ,_dfffe :=_bda .DecodeStream (_cagg ._eedbf );if _dfffe !=nil {return nil ,_dfffe ;};_cbage .Data =_fbcge ;if _cagg .Decode !=nil {_bfbge ,_bbgcc :=_cagg .Decode .(*_bda .PdfObjectArray );if !_bbgcc {_ed .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_gea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_eebff ,_fcaa :=_bfbge .ToFloat64Array ();if _fcaa !=nil {return nil ,_fcaa ;};switch _cagg .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_gefgfa :=_cagg .ColorSpace .DecodeArray ();
if _gefgfa [0]==_eebff [0]&&_gefgfa [1]==_eebff [1]&&_gefgfa [2]==_eebff [2]&&_gefgfa [3]==_eebff [3]{_cbage ._bfafe =_eebff ;};default:_cbage ._bfafe =_eebff ;};};return _cbage ,nil ;};

// GetXObjectByName gets XObject by name.
func (_fffgg *PdfPage )GetXObjectByName (name _bda .PdfObjectName )(_bda .PdfObject ,bool ){_aefaac ,_adfa :=_fffgg .Resources .XObject .(*_bda .PdfObjectDictionary );if !_adfa {return nil ,false ;};if _bafdef :=_aefaac .Get (name );_bafdef !=nil {return _bafdef ,true ;
};return nil ,false ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_aadgc *PdfPageResources )GetXObjectFormByName (keyName _bda .PdfObjectName )(*XObjectForm ,error ){_cacea ,_fdgffa :=_aadgc .GetXObjectByName (keyName );if _cacea ==nil {return nil ,nil ;};if _fdgffa !=XObjectTypeForm {return nil ,_gea .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_ceaaa ,_dcad :=NewXObjectFormFromStream (_cacea );if _dcad !=nil {return nil ,_dcad ;};return _ceaaa ,nil ;};func _cfgdf (_aedad _bda .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cgbd :=&PdfPageResourcesColorspaces {};if _afbgd ,_aeaca :=_aedad .(*_bda .PdfIndirectObject );
_aeaca {_cgbd ._agbc =_afbgd ;_aedad =_afbgd .PdfObject ;};_abceff ,_ffcee :=_bda .GetDict (_aedad );if !_ffcee {return nil ,_gea .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_cgbd .Names =[]string {};_cgbd .Colorspaces =map[string ]PdfColorspace {};for _ ,_dgcge :=range _abceff .Keys (){_acaag :=_abceff .Get (_dgcge );_cgbd .Names =append (_cgbd .Names ,string (_dgcge ));_bbbdf ,_cadgfb :=NewPdfColorspaceFromPdfObject (_acaag );
if _cadgfb !=nil {return nil ,_cadgfb ;};_cgbd .Colorspaces [string (_dgcge )]=_bbbdf ;};return _cgbd ,nil ;};func (_cabga *pdfFontType3 )baseFields ()*fontCommon {return &_cabga .fontCommon };

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_fceca *PdfPage )AppendContentStream (contentStr string )error {_baafa ,_eafcg :=_fceca .GetContentStreams ();if _eafcg !=nil {return _eafcg ;};if len (_baafa )==0{_baafa =[]string {contentStr };return _fceca .SetContentStreams (_baafa ,_bda .NewFlateEncoder ());
};var _acdec _dff .Buffer ;_acdec .WriteString (_baafa [len (_baafa )-1]);_acdec .WriteString ("\u000a");_acdec .WriteString (contentStr );_baafa [len (_baafa )-1]=_acdec .String ();return _fceca .SetContentStreams (_baafa ,_bda .NewFlateEncoder ());};


// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_fccbe *PdfPageResources )GetXObjectByName (keyName _bda .PdfObjectName )(*_bda .PdfObjectStream ,XObjectType ){if _fccbe .XObject ==nil {return nil ,XObjectTypeUndefined ;};_bgadad ,_gbfac :=_bda .TraceToDirectObject (_fccbe .XObject ).(*_bda .PdfObjectDictionary );
if !_gbfac {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bda .TraceToDirectObject (_fccbe .XObject ));
return nil ,XObjectTypeUndefined ;};if _ffgbb :=_bgadad .Get (keyName );_ffgbb !=nil {_gbace ,_baad :=_bda .GetStream (_ffgbb );if !_baad {_ed .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_ffgbb );
return nil ,XObjectTypeUndefined ;};_bgbca :=_gbace .PdfObjectDictionary ;_afcbe ,_baad :=_bda .TraceToDirectObject (_bgbca .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bda .PdfObjectName );if !_baad {_ed .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_bgbca .String ());
return nil ,XObjectTypeUndefined ;};if *_afcbe =="\u0049\u006d\u0061g\u0065"{return _gbace ,XObjectTypeImage ;}else if *_afcbe =="\u0046\u006f\u0072\u006d"{return _gbace ,XObjectTypeForm ;}else if *_afcbe =="\u0050\u0053"{return _gbace ,XObjectTypePS ;
}else {_ed .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_afcbe );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// DecodeArray returns the component range values for the Separation colorspace.
func (_gfab *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_febf *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gecdb *PdfReader )GetNamedDestinations ()(_bda .PdfObject ,error ){_bcac :=_bda .ResolveReference (_gecdb ._dabg .Get ("\u0044\u0065\u0073t\u0073"));if _bcac ==nil {return nil ,nil ;};if !_gecdb ._aaece {_dffbff :=_gecdb .traverseObjectData (_bcac );
if _dffbff !=nil {return nil ,_dffbff ;};};return _bcac ,nil ;};func _dgdaf (_bccac *_bda .PdfObjectArray )(float64 ,error ){_eeagb ,_gbade :=_bccac .ToFloat64Array ();if _gbade !=nil {_ed .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bccac ,_gbade );
};switch len (_eeagb ){case 1:return _eeagb [0],nil ;case 3:_defde :=PdfColorspaceDeviceRGB {};_agdfb ,_caaea :=_defde .ColorFromFloats (_eeagb );if _caaea !=nil {return 0.0,_caaea ;};return _agdfb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_dece :=PdfColorspaceDeviceCMYK {};
_dbddb ,_fdbfe :=_dece .ColorFromFloats (_eeagb );if _fdbfe !=nil {return 0.0,_fdbfe ;};_cfeeae ,_fdbfe :=_dece .ColorToRGB (_dbddb .(*PdfColorDeviceCMYK ));if _fdbfe !=nil {return 0.0,_fdbfe ;};return _cfeeae .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_gbade =_gea .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ed .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bccac ,_gbade );
return 0.0,_gbade ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_cdeb *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_cdeb .HiVal )};};func (_bfgcd *PdfReader )newPdfFieldSignatureFromDict (_cace *_bda .PdfObjectDictionary )(*PdfFieldSignature ,error ){_egff :=&PdfFieldSignature {};
_bcgg ,_agfb :=_bda .GetIndirect (_cace .Get ("\u0056"));if _agfb {var _aagd error ;_egff .V ,_aagd =_bfgcd .newPdfSignatureFromIndirect (_bcgg );if _aagd !=nil {return nil ,_aagd ;};};_egff .Lock ,_ =_bda .GetIndirect (_cace .Get ("\u004c\u006f\u0063\u006b"));
_egff .SV ,_ =_bda .GetIndirect (_cace .Get ("\u0053\u0056"));return _egff ,nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_ggeda *PdfOutputIntent )ToPdfObject ()_bda .PdfObject {if _ggeda ._abccce ==nil {_ggeda ._abccce =_bda .MakeDict ();};_cfaa :=_ggeda ._abccce ;if _ggeda .Type !=""{_cfaa .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName (_ggeda .Type ));};_cfaa .Set ("\u0053",_bda .MakeName (_ggeda .S .String ()));
if _ggeda .OutputCondition !=""{_cfaa .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_bda .MakeString (_ggeda .OutputCondition ));};_cfaa .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_bda .MakeString (_ggeda .OutputConditionIdentifier ));
_cfaa .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_bda .MakeString (_ggeda .RegistryName ));if _ggeda .Info !=""{_cfaa .Set ("\u0049\u006e\u0066\u006f",_bda .MakeString (_ggeda .Info ));};if len (_ggeda .DestOutputProfile )!=0{_ccfed ,_edcbg :=_bda .MakeStream (_ggeda .DestOutputProfile ,_bda .NewFlateEncoder ());
if _edcbg !=nil {_ed .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_edcbg );
};_ccfed .PdfObjectDictionary .Set ("\u004e",_bda .MakeInteger (int64 (_ggeda .ColorComponents )));_dacg :=make ([]float64 ,_ggeda .ColorComponents *2);for _cdabb :=0;_cdabb < _ggeda .ColorComponents *2;_cdabb ++{_febbb :=0.0;if _cdabb %2!=0{_febbb =1.0;
};_dacg [_cdabb ]=_febbb ;};_ccfed .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_bda .MakeArrayFromFloats (_dacg ));_cfaa .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_ccfed );};return _cfaa ;
};

// SetDecode sets the decode image float slice.
func (_acaa *Image )SetDecode (decode []float64 ){_acaa ._bfafe =decode };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bda .PdfObject ;NewWindow _bda .PdfObject ;T _bda .PdfObject ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_cgded *LTV )EnableAll (extraCerts []*_bd .Certificate )error {_eaeba :=_cgded ._ecfbf ._babd .AcroForm ;for _ ,_begg :=range _eaeba .AllFields (){_ceebc ,_ :=_begg .GetContext ().(*PdfFieldSignature );if _ceebc ==nil {continue ;};_cgaff :=_ceebc .V ;
if _bbgc :=_cgded .validateSig (_cgaff );_bbgc !=nil {_ed .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bbgc );
};if _defaa :=_cgded .Enable (_cgaff ,extraCerts );_defaa !=nil {return _defaa ;};};return nil ;};

// PageBoundary represents the name of the page boundary representing
// the visible area.
type PageBoundary string ;

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_cdcdg :=map[rune ]int {};for _ ,_fcbb :=range text {_cdcdg [_fcbb ]++;};return _cdcdg ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bda .PdfObjectStream ;OCSP []*_bda .PdfObjectStream ;CRL []*_bda .PdfObjectStream ;TU *_bda .PdfObjectString ;TS *_bda .PdfObjectString ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_eagda *PdfFieldSignature )ToPdfObject ()_bda .PdfObject {if _eagda .PdfAnnotationWidget !=nil {_eagda .PdfAnnotationWidget .ToPdfObject ();};_eagda .PdfField .ToPdfObject ();_fage :=_eagda ._ceaeg ;_cdcg :=_fage .PdfObject .(*_bda .PdfObjectDictionary );
_cdcg .SetIfNotNil ("\u0046\u0054",_bda .MakeName ("\u0053\u0069\u0067"));_cdcg .SetIfNotNil ("\u004c\u006f\u0063\u006b",_eagda .Lock );_cdcg .SetIfNotNil ("\u0053\u0056",_eagda .SV );if _eagda .V !=nil {_cdcg .SetIfNotNil ("\u0056",_eagda .V .ToPdfObject ());
};return _fage ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_ggbe .Lock ();defer _ggbe .Unlock ();_eebaa =keywords };

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_aeeec *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cde :=vals [0];if _cde < 0.0||_cde > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cde );
return nil ,ErrColorOutOfRange ;};_dbdab :=vals [1];if _dbdab < 0.0||_dbdab > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dbdab );return nil ,ErrColorOutOfRange ;
};_dffgc :=vals [2];if _dffgc < 0.0||_dffgc > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dffgc );return nil ,ErrColorOutOfRange ;};_cfeb :=vals [3];
if _cfeb < 0.0||_cfeb > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfeb );return nil ,ErrColorOutOfRange ;};_fafe :=NewPdfColorDeviceCMYK (_cde ,_dbdab ,_dffgc ,_cfeb );
return _fafe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_egaf *PdfAnnotationScreen )ToPdfObject ()_bda .PdfObject {_egaf .PdfAnnotation .ToPdfObject ();_cbce :=_egaf ._ged ;_dcfb :=_cbce .PdfObject .(*_bda .PdfObjectDictionary );_dcfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dcfb .SetIfNotNil ("\u0054",_egaf .T );_dcfb .SetIfNotNil ("\u004d\u004b",_egaf .MK );_dcfb .SetIfNotNil ("\u0041",_egaf .A );_dcfb .SetIfNotNil ("\u0041\u0041",_egaf .AA );return _cbce ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_aeead *PdfReader )GetCatalogStructTreeRoot ()(_bda .PdfObject ,bool ){_eede :=_bda .ResolveReference (_aeead ._dabg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _eede ==nil {return nil ,false ;};if !_aeead ._aaece {_bafa :=_aeead .traverseObjectData (_eede );
if _bafa !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_bafa );
return nil ,false ;};};return _eede ,true ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_dadf *PdfField )GetContext ()PdfModel {return _dadf ._aebb };

// ToPdfObject implements interface PdfModel.
func (_fgde *PdfAnnotationRedact )ToPdfObject ()_bda .PdfObject {_fgde .PdfAnnotation .ToPdfObject ();_addg :=_fgde ._ged ;_ddcfgc :=_addg .PdfObject .(*_bda .PdfObjectDictionary );_fgde .PdfAnnotationMarkup .appendToPdfDictionary (_ddcfgc );_ddcfgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_ddcfgc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fgde .QuadPoints );_ddcfgc .SetIfNotNil ("\u0049\u0043",_fgde .IC );_ddcfgc .SetIfNotNil ("\u0052\u004f",_fgde .RO );_ddcfgc .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_fgde .OverlayText );
_ddcfgc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fgde .Repeat );_ddcfgc .SetIfNotNil ("\u0044\u0041",_fgde .DA );_ddcfgc .SetIfNotNil ("\u0051",_fgde .Q );return _addg ;};func _bdfc (_gced _bda .PdfObject )(*PdfFunctionType3 ,error ){_ecdf :=&PdfFunctionType3 {};
var _dgef *_bda .PdfObjectDictionary ;if _afabe ,_gggf :=_gced .(*_bda .PdfIndirectObject );_gggf {_acec ,_ffgg :=_afabe .PdfObject .(*_bda .PdfObjectDictionary );if !_ffgg {return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ecdf ._dbgca =_afabe ;_dgef =_acec ;}else if _fbfg ,_fedcd :=_gced .(*_bda .PdfObjectDictionary );_fedcd {_dgef =_fbfg ;}else {return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eaaca ,_fgcb :=_bda .TraceToDirectObject (_dgef .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bda .PdfObjectArray );
if !_fgcb {_ed .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eaaca .Len ()!=2{_ed .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_gea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dfbcd ,_fagfg :=_eaaca .ToFloat64Array ();
if _fagfg !=nil {return nil ,_fagfg ;};_ecdf .Domain =_dfbcd ;_eaaca ,_fgcb =_bda .TraceToDirectObject (_dgef .Get ("\u0052\u0061\u006eg\u0065")).(*_bda .PdfObjectArray );if _fgcb {if _eaaca .Len ()< 0||_eaaca .Len ()%2!=0{return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dfbee ,_cgccd :=_eaaca .ToFloat64Array ();if _cgccd !=nil {return nil ,_cgccd ;};_ecdf .Range =_dfbee ;};_eaaca ,_fgcb =_bda .TraceToDirectObject (_dgef .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bda .PdfObjectArray );if !_fgcb {_ed .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ecdf .Functions =[]PdfFunction {};
for _ ,_gecga :=range _eaaca .Elements (){_agcb ,_dedg :=_aaeca (_gecga );if _dedg !=nil {return nil ,_dedg ;};_ecdf .Functions =append (_ecdf .Functions ,_agcb );};_eaaca ,_fgcb =_bda .TraceToDirectObject (_dgef .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bda .PdfObjectArray );
if !_fgcb {_ed .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_caceb ,_fagfg :=_eaaca .ToFloat64Array ();if _fagfg !=nil {return nil ,_fagfg ;};_ecdf .Bounds =_caceb ;if len (_ecdf .Bounds )!=len (_ecdf .Functions )-1{_ed .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ecdf .Bounds ),len (_ecdf .Functions ));
return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eaaca ,_fgcb =_bda .TraceToDirectObject (_dgef .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bda .PdfObjectArray );if !_fgcb {_ed .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gfeg ,_fagfg :=_eaaca .ToFloat64Array ();
if _fagfg !=nil {return nil ,_fagfg ;};_ecdf .Encode =_gfeg ;if len (_ecdf .Encode )!=2*len (_ecdf .Functions ){_ed .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ecdf .Encode ),len (_ecdf .Functions ));
return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ecdf ,nil ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_dgf :=NewPdfAction ();_dcf :=&PdfActionResetForm {};_dcf .PdfAction =_dgf ;_dgf .SetContext (_dcf );return _dcf ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_edbcb *PdfOutlineTreeNode )GetContainingPdfObject ()_bda .PdfObject {return _edbcb .GetContext ().GetContainingPdfObject ();};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_ecaaf *PdfFont )GetCharMetrics (code _dgb .CharCode )(CharMetrics ,bool ){var _eadb _geg .CharMetrics ;switch _ccegeb :=_ecaaf ._ggada .(type ){case *pdfFontSimple :if _afgbe ,_cdab :=_ccegeb .GetCharMetrics (code );_cdab {return _afgbe ,_cdab ;
};case *pdfFontType0 :if _fgebd ,_ccefde :=_ccegeb .GetCharMetrics (code );_ccefde {return _fgebd ,_ccefde ;};case *pdfCIDFontType0 :if _fbcf ,_ceea :=_ccegeb .GetCharMetrics (code );_ceea {return _fbcf ,_ceea ;};case *pdfCIDFontType2 :if _aada ,_dfga :=_ccegeb .GetCharMetrics (code );
_dfga {return _aada ,_dfga ;};case *pdfFontType3 :if _bbcdc ,_ddgce :=_ccegeb .GetCharMetrics (code );_ddgce {return _bbcdc ,_ddgce ;};default:_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_ecaaf ._ggada );
return _eadb ,false ;};if _dddf ,_bbdad :=_ecaaf .GetFontDescriptor ();_bbdad ==nil &&_dddf !=nil {return _geg .CharMetrics {Wx :_dddf ._fgbad },true ;};_ed .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_ecaaf );
return _eadb ,false ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_efddf :=PdfPage {};_efddf ._bdgdg =_bda .MakeDict ();_efddf .Resources =NewPdfPageResources ();_adce :=_bda .PdfIndirectObject {};_adce .PdfObject =_efddf ._bdgdg ;_efddf ._eebfa =&_adce ;_efddf ._gfaec =*_efddf ._bdgdg ;return &_efddf ;
};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_affga *PdfPageResources )HasXObjectByName (keyName _bda .PdfObjectName )bool {_bdaad ,_ :=_affga .GetXObjectByName (keyName );return _bdaad !=nil ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_ggbe .Lock ();defer _ggbe .Unlock ();_afabf =producer };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_fcgb *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cceab :=vals [0];if _cceab < 0.0||_cceab > 100.0{_ed .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_cceab );
return nil ,ErrColorOutOfRange ;};_abgc :=vals [1];_cbcf :=float64 (-100);_dfbbc :=float64 (100);if len (_fcgb .Range )> 1{_cbcf =_fcgb .Range [0];_dfbbc =_fcgb .Range [1];};if _abgc < _cbcf ||_abgc > _dfbbc {_ed .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_abgc ,_cbcf ,_dfbbc );
return nil ,ErrColorOutOfRange ;};_dbfb :=vals [2];_fccd :=float64 (-100);_bgae :=float64 (100);if len (_fcgb .Range )> 3{_fccd =_fcgb .Range [2];_bgae =_fcgb .Range [3];};if _dbfb < _fccd ||_dbfb > _bgae {_ed .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dbfb ,_fccd ,_bgae );
return nil ,ErrColorOutOfRange ;};_ebga :=NewPdfColorLab (_cceab ,_abgc ,_dbfb );return _ebga ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ggaca *PdfFontDescriptor )ToPdfObject ()_bda .PdfObject {_gddae :=_bda .MakeDict ();if _ggaca ._gbcd ==nil {_ggaca ._gbcd =&_bda .PdfIndirectObject {};};_ggaca ._gbcd .PdfObject =_gddae ;_gddae .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _ggaca .FontName !=nil {_gddae .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ggaca .FontName );};if _ggaca .FontFamily !=nil {_gddae .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ggaca .FontFamily );};if _ggaca .FontStretch !=nil {_gddae .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ggaca .FontStretch );
};if _ggaca .FontWeight !=nil {_gddae .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ggaca .FontWeight );};if _ggaca .Flags !=nil {_gddae .Set ("\u0046\u006c\u0061g\u0073",_ggaca .Flags );};if _ggaca .FontBBox !=nil {_gddae .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ggaca .FontBBox );
};if _ggaca .ItalicAngle !=nil {_gddae .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ggaca .ItalicAngle );};if _ggaca .Ascent !=nil {_gddae .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ggaca .Ascent );};if _ggaca .Descent !=nil {_gddae .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ggaca .Descent );
};if _ggaca .Leading !=nil {_gddae .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ggaca .Leading );};if _ggaca .CapHeight !=nil {_gddae .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ggaca .CapHeight );};if _ggaca .XHeight !=nil {_gddae .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ggaca .XHeight );
};if _ggaca .StemV !=nil {_gddae .Set ("\u0053\u0074\u0065m\u0056",_ggaca .StemV );};if _ggaca .StemH !=nil {_gddae .Set ("\u0053\u0074\u0065m\u0048",_ggaca .StemH );};if _ggaca .AvgWidth !=nil {_gddae .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ggaca .AvgWidth );
};if _ggaca .MaxWidth !=nil {_gddae .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ggaca .MaxWidth );};if _ggaca .MissingWidth !=nil {_gddae .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ggaca .MissingWidth );};
if _ggaca .FontFile !=nil {_gddae .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ggaca .FontFile );};if _ggaca .FontFile2 !=nil {_gddae .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ggaca .FontFile2 );};if _ggaca .FontFile3 !=nil {_gddae .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ggaca .FontFile3 );
};if _ggaca .CharSet !=nil {_gddae .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ggaca .CharSet );};if _ggaca .Style !=nil {_gddae .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ggaca .FontName );};if _ggaca .Lang !=nil {_gddae .Set ("\u004c\u0061\u006e\u0067",_ggaca .Lang );
};if _ggaca .FD !=nil {_gddae .Set ("\u0046\u0044",_ggaca .FD );};if _ggaca .CIDSet !=nil {_gddae .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ggaca .CIDSet );};return _ggaca ._gbcd ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_eebgc DefaultImageHandler )Read (reader _ga .Reader )(*Image ,error ){_acefd ,_ ,_aage :=_f .Decode (reader );if _aage !=nil {_ed .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_aage );
return nil ,_aage ;};return _eebgc .NewImageFromGoImage (_acefd );};func (_defa *PdfReader )newPdfActionNamedFromDict (_dcde *_bda .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_dcde .Get ("\u004e")},nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_gde :=NewPdfAction ();_dga :=&PdfActionSubmitForm {};_dga .PdfAction =_gde ;_gde .SetContext (_dga );return _dga ;};

// HasXObjectByName checks if has XObject resource by name.
func (_eafbb *PdfPage )HasXObjectByName (name _bda .PdfObjectName )bool {_fege ,_bcdgg :=_eafbb .Resources .XObject .(*_bda .PdfObjectDictionary );if !_bcdgg {return false ;};if _fgda :=_fege .Get (name );_fgda !=nil {return true ;};return false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbggb *PdfShadingType6 )ToPdfObject ()_bda .PdfObject {_dbggb .PdfShading .ToPdfObject ();_daaf ,_cdbbb :=_dbggb .getShadingDict ();if _cdbbb !=nil {_ed .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbggb .BitsPerCoordinate !=nil {_daaf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dbggb .BitsPerCoordinate );};if _dbggb .BitsPerComponent !=nil {_daaf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbggb .BitsPerComponent );
};if _dbggb .BitsPerFlag !=nil {_daaf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dbggb .BitsPerFlag );};if _dbggb .Decode !=nil {_daaf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dbggb .Decode );};if _dbggb .Function !=nil {if len (_dbggb .Function )==1{_daaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbggb .Function [0].ToPdfObject ());
}else {_ccagd :=_bda .MakeArray ();for _ ,_aecgb :=range _dbggb .Function {_ccagd .Append (_aecgb .ToPdfObject ());};_daaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ccagd );};};return _dbggb ._gfdga ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// AddFont adds a font dictionary to the Font resources.
func (_ffgca *PdfPage )AddFont (name _bda .PdfObjectName ,font _bda .PdfObject )error {if _ffgca .Resources ==nil {_ffgca .Resources =NewPdfPageResources ();};if _ffgca .Resources .Font ==nil {_ffgca .Resources .Font =_bda .MakeDict ();};_cgafff ,_eabeg :=_bda .TraceToDirectObject (_ffgca .Resources .Font ).(*_bda .PdfObjectDictionary );
if !_eabeg {_ed .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bda .TraceToDirectObject (_ffgca .Resources .Font ));
return _gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cgafff .Set (name ,font );return nil ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_cgge *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_abde ,_gfgb :=color .(*PdfColorDeviceCMYK );if !_gfgb {_ed .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdfe :=_abde .C ();_cgcg :=_abde .M ();_ggfd :=_abde .Y ();_cfcb :=_abde .K ();_bdfe =_bdfe *(1-_cfcb )+_cfcb ;_cgcg =_cgcg *(1-_cfcb )+_cfcb ;
_ggfd =_ggfd *(1-_cfcb )+_cfcb ;_aecf :=1-_bdfe ;_ebae :=1-_cgcg ;_dbbg :=1-_ggfd ;return NewPdfColorDeviceRGB (_aecf ,_ebae ,_dbbg ),nil ;};

// SetOCProperties sets the optional content properties.
func (_dfabcb *PdfWriter )SetOCProperties (ocProperties _bda .PdfObject )error {_bgcbc :=_dfabcb ._geadba ;if ocProperties !=nil {_ed .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_bgcbc .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _dfabcb .addObjects (ocProperties );};return nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bda .PdfObject ;Open _bda .PdfObject ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_edaab *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_gggeg :=_edaab ._fdadg .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _gggeg {return nil ,_gea .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_gggeg {return _edaab ,nil ;};if _edaab ._aaefc [revisionNumber ]!=nil {return _edaab ._aaefc [revisionNumber ],nil ;};_eggfe :=_edaab ;for _gaaba :=_gggeg -1;_gaaba >=revisionNumber ;_gaaba --{_eafa ,_ccfca :=_eggfe .GetPreviousRevision ();
if _ccfca !=nil {return nil ,_ccfca ;};_edaab ._aaefc [_gaaba ]=_eafa ;_eggfe =_eafa ;};return _eggfe ,nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_acfea *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _acfea ._cdfgb !=nil {return _acfea ._cdfgb ,nil ;};if _acfea .ColorSpace ==nil {return nil ,nil ;};_cbcfa ,_afagg :=_cfgdf (_acfea .ColorSpace );if _afagg !=nil {return nil ,_afagg ;
};_acfea ._cdfgb =_cbcfa ;return _acfea ._cdfgb ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_fggaeb *PdfWriter )SetForms (form *PdfAcroForm )error {_fggaeb ._abgf =form ;return nil };

// Y returns the value of the yellow component of the color.
func (_cegac *PdfColorDeviceCMYK )Y ()float64 {return _cegac [2]};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_eddde *PdfReader )GetCatalogMarkInfo ()(_bda .PdfObject ,bool ){if _eddde ._dabg ==nil {return nil ,false ;};_bcgaf :=_eddde ._dabg .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _bcgaf ,_bcgaf !=nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_dabde *PdfReader )Decrypt (password []byte )(bool ,error ){_fffd ,_ccbbc :=_dabde ._fdadg .Decrypt (password );if _ccbbc !=nil {return false ,_ccbbc ;};if !_fffd {return false ,nil ;};_ccbbc =_dabde .loadStructure ();if _ccbbc !=nil {_ed .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_ccbbc );
return false ,_ccbbc ;};return true ,nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_fdgd *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bcbd ,_abad :=color .(*PdfColorCalGray );if !_abad {_ed .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_bcbd .Val ();X :=_fdgd .WhitePoint [0]*_ce .Pow (ANorm ,_fdgd .Gamma );Y :=_fdgd .WhitePoint [1]*_ce .Pow (ANorm ,_fdgd .Gamma );
Z :=_fdgd .WhitePoint [2]*_ce .Pow (ANorm ,_fdgd .Gamma );_fafbc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ggfge :=-0.969256*X +1.875992*Y +0.041556*Z ;_abdb :=0.055648*X +-0.204043*Y +1.057311*Z ;_fafbc =_ce .Min (_ce .Max (_fafbc ,0),1.0);_ggfge =_ce .Min (_ce .Max (_ggfge ,0),1.0);
_abdb =_ce .Min (_ce .Max (_abdb ,0),1.0);return NewPdfColorDeviceRGB (_fafbc ,_ggfge ,_abdb ),nil ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// GetVersion gets the document version.
func (_deagb *PdfWriter )GetVersion ()_bda .Version {return _deagb ._cdbbdg };

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_bdf .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_bdf .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_bdf .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_ecfbf *PdfAppender ;_efffa *DSS ;};var _cegdd =_da .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_fea :=NewPdfAnnotation ();_cac :=&PdfAnnotationRedact {};_cac .PdfAnnotation =_fea ;_cac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fea .SetContext (_cac );return _cac ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_abca :=NewPdfAnnotation ();_abcf :=&PdfAnnotationPopup {};_abcf .PdfAnnotation =_abca ;_abca .SetContext (_abcf );return _abcf ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gfbed *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_eadbb :=_gfbed .fill (provider ,appGen );if _eadbb !=nil {return _eadbb ;};if _ ,_cgdcd :=provider .(FieldImageProvider );_cgdcd {_eadbb =_gfbed .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _eadbb ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_faeda *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_baff *PdfReader )newPdfAnnotationSoundFromDict (_aeed *_bda .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_dgfa :=PdfAnnotationSound {};_ffg ,_dgbdd :=_baff .newPdfAnnotationMarkupFromDict (_aeed );
if _dgbdd !=nil {return nil ,_dgbdd ;};_dgfa .PdfAnnotationMarkup =_ffg ;_dgfa .Name =_aeed .Get ("\u004e\u0061\u006d\u0065");_dgfa .Sound =_aeed .Get ("\u0053\u006f\u0075n\u0064");return &_dgfa ,nil ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_ddddbg int ,_ecffg *PdfPage )error ;

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_gbeg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _afefa []*PdfField ;_edabd :=map[*_bda .PdfIndirectObject ]struct{}{};for _ ,_cbbbfa :=range _gbeg .PageList {_adfab ,_gedcc :=_cbbbfa .GetAnnotations ();if _gedcc !=nil {return _gedcc ;
};for _ ,_fggca :=range _adfab {var _gaeeab *PdfField ;switch _cebb :=_fggca .GetContext ().(type ){case *PdfAnnotationWidget :if _cebb ._aee !=nil {_gaeeab =_cebb ._aee ;break ;};if _fcgaa ,_ccegg :=_bda .GetIndirect (_cebb .Parent );_ccegg {_gaeeab ,_gedcc =_gbeg .newPdfFieldFromIndirectObject (_fcgaa ,nil );
if _gedcc ==nil {break ;};_ed .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fcgaa ,_gedcc );
};if _cebb ._ged !=nil {_gaeeab ,_gedcc =_gbeg .newPdfFieldFromIndirectObject (_cebb ._ged ,nil );if _gedcc ==nil {break ;};_ed .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cebb ._ged ,_gedcc );
};};if _gaeeab ==nil {continue ;};if _ ,_ddcd :=_edabd [_gaeeab ._ceaeg ];_ddcd {continue ;};_edabd [_gaeeab ._ceaeg ]=struct{}{};_afefa =append (_afefa ,_gaeeab );};};if len (_afefa )==0{return nil ;};if _gbeg .AcroForm ==nil {_gbeg .AcroForm =NewPdfAcroForm ();
};_gbeg .AcroForm .Fields =&_afefa ;return nil ;};func _ddcca (_fbbe *_bda .PdfObjectDictionary )*VRI {_dbdaa ,_ :=_bda .GetString (_fbbe .Get ("\u0054\u0055"));_gdea ,_ :=_bda .GetString (_fbbe .Get ("\u0054\u0053"));return &VRI {Cert :_fgec (_fbbe .Get ("\u0043\u0065\u0072\u0074")),OCSP :_fgec (_fbbe .Get ("\u004f\u0043\u0053\u0050")),CRL :_fgec (_fbbe .Get ("\u0043\u0052\u004c")),TU :_dbdaa ,TS :_gdea };
};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);
FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);
FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_afeea *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_gea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_adac :=&PdfColorPattern {};_cgbeb ,_fccg :=objects [len (objects )-1].(*_bda .PdfObjectName );if !_fccg {_ed .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_adac .PatternName =*_cgbeb ;if len (objects )> 1{_bfecf :=objects [0:len (objects )-1];if _afeea .UnderlyingCS ==nil {_ed .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_gea .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_eaba ,_bffgc :=_afeea .UnderlyingCS .ColorFromPdfObjects (_bfecf );if _bffgc !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_bffgc );
return nil ,_bffgc ;};_adac .Color =_eaba ;};return _adac ,nil ;};

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_ffea []*PdfFont ;CurrentFont *PdfFont ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bda .PdfObject ;AN _bda .PdfObject ;OP _bda .PdfObject ;JS _bda .PdfObject ;};func _ggged (_cabfg *_bda .PdfObjectDictionary ,_bgecg *fontCommon )(*pdfCIDFontType2 ,error ){if _bgecg ._fggeg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ed .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bgecg );
return nil ,_bda .ErrRangeError ;};_ggfa :=_ebdbe (_bgecg );_ddeag ,_feecg :=_bda .GetDict (_cabfg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_feecg {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bgecg );
return nil ,ErrRequiredAttributeMissing ;};_ggfa .CIDSystemInfo =_ddeag ;_ggfa .DW =_cabfg .Get ("\u0044\u0057");_ggfa .W =_cabfg .Get ("\u0057");_ggfa .DW2 =_cabfg .Get ("\u0044\u0057\u0032");_ggfa .W2 =_cabfg .Get ("\u0057\u0032");_ggfa .CIDToGIDMap =_cabfg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_ggfa ._bbagg =1000.0;if _fggg ,_ebfe :=_bda .GetNumberAsFloat (_ggfa .DW );_ebfe ==nil {_ggfa ._bbagg =_fggg ;};_agdce ,_bdda :=_edda (_ggfa .W );if _bdda !=nil {return nil ,_bdda ;};if _agdce ==nil {_agdce =map[_dgb .CharCode ]float64 {};};_ggfa ._eggf =_agdce ;
return _ggfa ,nil ;};func (_dfdee *LTV )enable (_acdb ,_gacg []*_bd .Certificate ,_faga string )error {_gfag ,_acdcb ,_gcdeg :=_dfdee .buildCertChain (_acdb ,_gacg );if _gcdeg !=nil {return _gcdeg ;};_ddccf ,_gcdeg :=_dfdee .getCerts (_gfag );if _gcdeg !=nil {return _gcdeg ;
};var _gcbfa ,_dadda [][]byte ;if _dfdee .OCSPClient !=nil {_gcbfa ,_gcdeg =_dfdee .getOCSPs (_gfag ,_acdcb );if _gcdeg !=nil {return _gcdeg ;};};if _dfdee .CRLClient !=nil {_dadda ,_gcdeg =_dfdee .getCRLs (_gfag );if _gcdeg !=nil {return _gcdeg ;};};_aadff :=_dfdee ._efffa ;
_fcfafc ,_gcdeg :=_aadff .AddCerts (_ddccf );if _gcdeg !=nil {return _gcdeg ;};_ebdg ,_gcdeg :=_aadff .AddOCSPs (_gcbfa );if _gcdeg !=nil {return _gcdeg ;};_bgbcc ,_gcdeg :=_aadff .AddCRLs (_dadda );if _gcdeg !=nil {return _gcdeg ;};if _faga !=""{_aadff .VRI [_faga ]=&VRI {Cert :_fcfafc ,OCSP :_ebdg ,CRL :_bgbcc };
};_dfdee ._ecfbf .SetDSS (_aadff );return nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ToPdfObject implements interface PdfModel.
func (_fabee *PdfBorderStyle )ToPdfObject ()_bda .PdfObject {_cbgd :=_bda .MakeDict ();if _fabee ._fgdeg !=nil {if _fgfd ,_debf :=_fabee ._fgdeg .(*_bda .PdfIndirectObject );_debf {_fgfd .PdfObject =_cbgd ;};};_cbgd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fabee .W !=nil {_cbgd .Set ("\u0057",_bda .MakeFloat (*_fabee .W ));};if _fabee .S !=nil {_cbgd .Set ("\u0053",_bda .MakeName (_fabee .S .GetPdfName ()));};if _fabee .D !=nil {_cbgd .Set ("\u0044",_bda .MakeArrayFromIntegers (*_fabee .D ));};if _fabee ._fgdeg !=nil {return _fabee ._fgdeg ;
};return _cbgd ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _gef .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_bda .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_bda .MakeInteger (int64 (permission )),V :_bda .MakeName ("\u0031\u002e\u0032")};
};

// PrintScaling represents the page scaling option that shall be selected
// when a print dialog is displayed for this document.
type PrintScaling string ;

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_fag :=NewPdfAnnotation ();_add :=&PdfAnnotationWatermark {};_add .PdfAnnotation =_fag ;_fag .SetContext (_add );return _add ;};

// SetVersion sets the PDF version of the output file.
func (_cfcdb *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_cfcdb ._cdbbdg .Major =majorVersion ;_cfcdb ._cdbbdg .Minor =minorVersion ;};func (_dbf *PdfReader )newPdfAnnotationFromIndirectObject (_bab *_bda .PdfIndirectObject )(*PdfAnnotation ,error ){_cbbg ,_ccg :=_bab .PdfObject .(*_bda .PdfObjectDictionary );
if !_ccg {return nil ,_c .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_dbf ._gbdfa .GetModelFromPrimitive (_cbbg );model !=nil {_gbfg ,_edb :=model .(*PdfAnnotation );if !_edb {return nil ,_c .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _gbfg ,nil ;};_dfag :=&PdfAnnotation {};_dfag ._ged =_bab ;_dbf ._gbdfa .Register (_cbbg ,_dfag );if _dfcb :=_cbbg .Get ("\u0054\u0079\u0070\u0065");_dfcb !=nil {_gebd ,_fgfe :=_dfcb .(*_bda .PdfObjectName );if !_fgfe {_ed .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dfcb );
}else {if *_gebd !="\u0041\u006e\u006eo\u0074"{_ed .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gebd );};};};
if _dcca :=_cbbg .Get ("\u0052\u0065\u0063\u0074");_dcca !=nil {_dfag .Rect =_dcca ;};if _ccag :=_cbbg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_ccag !=nil {_dfag .Contents =_ccag ;};if _dcae :=_cbbg .Get ("\u0050");_dcae !=nil {_dfag .P =_dcae ;
};if _fade :=_cbbg .Get ("\u004e\u004d");_fade !=nil {_dfag .NM =_fade ;};if _adcb :=_cbbg .Get ("\u004d");_adcb !=nil {_dfag .M =_adcb ;};if _bbc :=_cbbg .Get ("\u0046");_bbc !=nil {_dfag .F =_bbc ;};if _caa :=_cbbg .Get ("\u0041\u0050");_caa !=nil {_dfag .AP =_caa ;
};if _deb :=_cbbg .Get ("\u0041\u0053");_deb !=nil {_dfag .AS =_deb ;};if _gfd :=_cbbg .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_gfd !=nil {_dfag .Border =_gfd ;};if _fdd :=_cbbg .Get ("\u0043");_fdd !=nil {_dfag .C =_fdd ;};if _bcb :=_cbbg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_bcb !=nil {_dfag .StructParent =_bcb ;};if _aac :=_cbbg .Get ("\u004f\u0043");_aac !=nil {_dfag .OC =_aac ;};_ecb :=_cbbg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _ecb ==nil {_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_dfag ._fdeb =nil ;return _dfag ,nil ;};_agd ,_dbc :=_ecb .(*_bda .PdfObjectName );if !_dbc {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ecb );
return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_ecb );};switch *_agd {case "\u0054\u0065\u0078\u0074":_cccg ,_gc :=_dbf .newPdfAnnotationTextFromDict (_cbbg );
if _gc !=nil {return nil ,_gc ;};_cccg .PdfAnnotation =_dfag ;_dfag ._fdeb =_cccg ;return _dfag ,nil ;case "\u004c\u0069\u006e\u006b":_cba ,_gcd :=_dbf .newPdfAnnotationLinkFromDict (_cbbg );if _gcd !=nil {return nil ,_gcd ;};_cba .PdfAnnotation =_dfag ;
_dfag ._fdeb =_cba ;return _dfag ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bde ,_edaa :=_dbf .newPdfAnnotationFreeTextFromDict (_cbbg );if _edaa !=nil {return nil ,_edaa ;};_bde .PdfAnnotation =_dfag ;_dfag ._fdeb =_bde ;return _dfag ,nil ;
case "\u004c\u0069\u006e\u0065":_dfgd ,_gfdb :=_dbf .newPdfAnnotationLineFromDict (_cbbg );if _gfdb !=nil {return nil ,_gfdb ;};_dfgd .PdfAnnotation =_dfag ;_dfag ._fdeb =_dfgd ;_ed .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dfag ,_dfag );
_ed .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_dfgd ,_dfgd );_ed .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_dfgd .PdfAnnotationMarkup ,_dfgd .PdfAnnotationMarkup );
return _dfag ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_dbb ,_fdg :=_dbf .newPdfAnnotationSquareFromDict (_cbbg );if _fdg !=nil {return nil ,_fdg ;};_dbb .PdfAnnotation =_dfag ;_dfag ._fdeb =_dbb ;return _dfag ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_eff ,_caaf :=_dbf .newPdfAnnotationCircleFromDict (_cbbg );
if _caaf !=nil {return nil ,_caaf ;};_eff .PdfAnnotation =_dfag ;_dfag ._fdeb =_eff ;return _dfag ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_abe ,_fedb :=_dbf .newPdfAnnotationPolygonFromDict (_cbbg );if _fedb !=nil {return nil ,_fedb ;};_abe .PdfAnnotation =_dfag ;
_dfag ._fdeb =_abe ;return _dfag ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cece ,_feag :=_dbf .newPdfAnnotationPolyLineFromDict (_cbbg );if _feag !=nil {return nil ,_feag ;};_cece .PdfAnnotation =_dfag ;_dfag ._fdeb =_cece ;return _dfag ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_cge ,_dfed :=_dbf .newPdfAnnotationHighlightFromDict (_cbbg );if _dfed !=nil {return nil ,_dfed ;};_cge .PdfAnnotation =_dfag ;_dfag ._fdeb =_cge ;return _dfag ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_afdb ,_adb :=_dbf .newPdfAnnotationUnderlineFromDict (_cbbg );
if _adb !=nil {return nil ,_adb ;};_afdb .PdfAnnotation =_dfag ;_dfag ._fdeb =_afdb ;return _dfag ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_fgd ,_dgbe :=_dbf .newPdfAnnotationSquigglyFromDict (_cbbg );if _dgbe !=nil {return nil ,_dgbe ;
};_fgd .PdfAnnotation =_dfag ;_dfag ._fdeb =_fgd ;return _dfag ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_gfcg ,_bfg :=_dbf .newPdfAnnotationStrikeOut (_cbbg );if _bfg !=nil {return nil ,_bfg ;};_gfcg .PdfAnnotation =_dfag ;_dfag ._fdeb =_gfcg ;
return _dfag ,nil ;case "\u0043\u0061\u0072e\u0074":_bcef ,_ggab :=_dbf .newPdfAnnotationCaretFromDict (_cbbg );if _ggab !=nil {return nil ,_ggab ;};_bcef .PdfAnnotation =_dfag ;_dfag ._fdeb =_bcef ;return _dfag ,nil ;case "\u0053\u0074\u0061m\u0070":_fba ,_accc :=_dbf .newPdfAnnotationStampFromDict (_cbbg );
if _accc !=nil {return nil ,_accc ;};_fba .PdfAnnotation =_dfag ;_dfag ._fdeb =_fba ;return _dfag ,nil ;case "\u0049\u006e\u006b":_gegdg ,_fac :=_dbf .newPdfAnnotationInkFromDict (_cbbg );if _fac !=nil {return nil ,_fac ;};_gegdg .PdfAnnotation =_dfag ;
_dfag ._fdeb =_gegdg ;return _dfag ,nil ;case "\u0050\u006f\u0070u\u0070":_dcac ,_ddf :=_dbf .newPdfAnnotationPopupFromDict (_cbbg );if _ddf !=nil {return nil ,_ddf ;};_dcac .PdfAnnotation =_dfag ;_dfag ._fdeb =_dcac ;return _dfag ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_adfd ,_cfbg :=_dbf .newPdfAnnotationFileAttachmentFromDict (_cbbg );
if _cfbg !=nil {return nil ,_cfbg ;};_adfd .PdfAnnotation =_dfag ;_dfag ._fdeb =_adfd ;return _dfag ,nil ;case "\u0053\u006f\u0075n\u0064":_dge ,_egae :=_dbf .newPdfAnnotationSoundFromDict (_cbbg );if _egae !=nil {return nil ,_egae ;};_dge .PdfAnnotation =_dfag ;
_dfag ._fdeb =_dge ;return _dfag ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_affc ,_aaeg :=_dbf .newPdfAnnotationRichMediaFromDict (_cbbg );if _aaeg !=nil {return nil ,_aaeg ;};_affc .PdfAnnotation =_dfag ;_dfag ._fdeb =_affc ;return _dfag ,nil ;
case "\u004d\u006f\u0076i\u0065":_fec ,_abff :=_dbf .newPdfAnnotationMovieFromDict (_cbbg );if _abff !=nil {return nil ,_abff ;};_fec .PdfAnnotation =_dfag ;_dfag ._fdeb =_fec ;return _dfag ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_beb ,_gbaf :=_dbf .newPdfAnnotationScreenFromDict (_cbbg );
if _gbaf !=nil {return nil ,_gbaf ;};_beb .PdfAnnotation =_dfag ;_dfag ._fdeb =_beb ;return _dfag ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_cfed ,_ecbe :=_dbf .newPdfAnnotationWidgetFromDict (_cbbg );if _ecbe !=nil {return nil ,_ecbe ;};_cfed .PdfAnnotation =_dfag ;
_dfag ._fdeb =_cfed ;return _dfag ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_deab ,_edab :=_dbf .newPdfAnnotationPrinterMarkFromDict (_cbbg );if _edab !=nil {return nil ,_edab ;};_deab .PdfAnnotation =_dfag ;_dfag ._fdeb =_deab ;
return _dfag ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_dgga ,_bdcg :=_dbf .newPdfAnnotationTrapNetFromDict (_cbbg );if _bdcg !=nil {return nil ,_bdcg ;};_dgga .PdfAnnotation =_dfag ;_dfag ._fdeb =_dgga ;return _dfag ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_eeg ,_ddg :=_dbf .newPdfAnnotationWatermarkFromDict (_cbbg );
if _ddg !=nil {return nil ,_ddg ;};_eeg .PdfAnnotation =_dfag ;_dfag ._fdeb =_eeg ;return _dfag ,nil ;case "\u0033\u0044":_dfge ,_dafd :=_dbf .newPdfAnnotation3DFromDict (_cbbg );if _dafd !=nil {return nil ,_dafd ;};_dfge .PdfAnnotation =_dfag ;_dfag ._fdeb =_dfge ;
return _dfag ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_cggc ,_ace :=_dbf .newPdfAnnotationProjectionFromDict (_cbbg );if _ace !=nil {return nil ,_ace ;};_cggc .PdfAnnotation =_dfag ;_dfag ._fdeb =_cggc ;return _dfag ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_gbab ,_efa :=_dbf .newPdfAnnotationRedactFromDict (_cbbg );if _efa !=nil {return nil ,_efa ;};_gbab .PdfAnnotation =_dfag ;_dfag ._fdeb =_gbab ;return _dfag ,nil ;};_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_agd );
return nil ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bda .PdfObjectString ;Author *_bda .PdfObjectString ;Subject *_bda .PdfObjectString ;Keywords *_bda .PdfObjectString ;Creator *_bda .PdfObjectString ;Producer *_bda .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_bda .PdfObjectName ;_feec *_bda .PdfObjectDictionary ;};func (_dfebd *PdfReader )newPdfAcroFormFromDict (_gbfgge *_bda .PdfIndirectObject ,_cfedg *_bda .PdfObjectDictionary )(*PdfAcroForm ,error ){_gdbdcb :=NewPdfAcroForm ();if _gbfgge !=nil {_gdbdcb ._bcgge =_gbfgge ;
_gbfgge .PdfObject =_bda .MakeDict ();};if _dcbg :=_cfedg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_dcbg !=nil &&!_bda .IsNullObject (_dcbg ){_eeeac ,_afbcg :=_bda .GetArray (_dcbg );if !_afbcg {return nil ,_c .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dcbg );
};var _bbefe []*PdfField ;for _ ,_dcbe :=range _eeeac .Elements (){_efgdd ,_gbee :=_bda .GetIndirect (_dcbe );if !_gbee {if _ ,_aeeb :=_dcbe .(*_bda .PdfObjectNull );_aeeb {_ed .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_ed .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dcbe );
return nil ,_c .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fagc ,_fefb :=_dfebd .newPdfFieldFromIndirectObject (_efgdd ,nil );
if _fefb !=nil {return nil ,_fefb ;};_ed .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_fagc );_bbefe =append (_bbefe ,_fagc );};_gdbdcb .Fields =&_bbefe ;};if _dcebf :=_cfedg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_dcebf !=nil {_cbbf ,_fged :=_bda .GetBool (_dcebf );if _fged {_gdbdcb .NeedAppearances =_cbbf ;}else {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dcebf );
};};if _aabc :=_cfedg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_aabc !=nil {_eebb ,_cbebe :=_bda .GetInt (_aabc );if _cbebe {_gdbdcb .SigFlags =_eebb ;}else {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aabc );
};};if _gedae :=_cfedg .Get ("\u0043\u004f");_gedae !=nil {_bfcf ,_edcg :=_bda .GetArray (_gedae );if _edcg {_gdbdcb .CO =_bfcf ;}else {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gedae );
};};if _bcaff :=_cfedg .Get ("\u0044\u0052");_bcaff !=nil {if _ebfb ,_bafca :=_bda .GetDict (_bcaff );_bafca {_bada ,_afccd :=NewPdfPageResourcesFromDict (_ebfb );if _afccd !=nil {_ed .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_afccd );
return nil ,_afccd ;};_gdbdcb .DR =_bada ;}else {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bcaff );};};if _gcbfd :=_cfedg .Get ("\u0044\u0041");
_gcbfd !=nil {_ffce ,_adge :=_bda .GetString (_gcbfd );if _adge {_gdbdcb .DA =_ffce ;}else {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gcbfd );
};};if _badgc :=_cfedg .Get ("\u0051");_badgc !=nil {_fgefe ,_bdea :=_bda .GetInt (_badgc );if _bdea {_gdbdcb .Q =_fgefe ;}else {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_badgc );
};};if _fgca :=_cfedg .Get ("\u0058\u0046\u0041");_fgca !=nil {_gdbdcb .XFA =_fgca ;};if _gecba :=_cfedg .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_gecba !=nil {_gdbdcb .ADBEEchoSign =_gecba ;};_gdbdcb .ToPdfObject ();
return _gdbdcb ,nil ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gddd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_eedf ,_gecb :=color .(*PdfColorDeviceRGB );if !_gecb {_ed .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _eedf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bfd *PdfActionSetOCGState )ToPdfObject ()_bda .PdfObject {_bfd .PdfAction .ToPdfObject ();_cfbba :=_bfd ._gg ;_dcg :=_cfbba .PdfObject .(*_bda .PdfObjectDictionary );_dcg .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeSetOCGState )));_dcg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bfd .State );
_dcg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bfd .PreserveRB );return _cfbba ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_dcfe *_bda .PdfObjectDictionary ;_caacb *_bda .PdfIndirectObject ;};

// SetKDict sets the KDict for the KValue.
func (_aagec *KValue )SetKDict (kDict *KDict ){_aagec .Clear ();_aagec ._dfafb =kDict };

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// ImageToRGB convert an indexed image to RGB.
func (_fdda *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fdda .Base .GetNumComponents ();if N < 1{return Image {},_c .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_fgge :=_bg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._ffbd ,img ._bfafe );_ebcg :=_cf .NewReader (img .getBase ());_bafcb :=_cf .NewWriter (_fgge );var (_gdga uint32 ;_adfdc int ;_dcfc error ;);for {_gdga ,_dcfc =_ebcg .ReadSample ();
if _dcfc ==_ga .EOF {break ;}else if _dcfc !=nil {return img ,_dcfc ;};_adfdc =int (_gdga );_ed .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_adfdc ,N ,len (_fdda ._gfda ));
if (_adfdc +1)*N > len (_fdda ._gfda ){_adfdc =len (_fdda ._gfda )/N -1;_ed .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_adfdc );if _adfdc < 0{_ed .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _egfe :=_adfdc *N ;_egfe < (_adfdc +1)*N ;_egfe ++{if _dcfc =_bafcb .WriteSample (uint32 (_fdda ._gfda [_egfe ]));_dcfc !=nil {return img ,_dcfc ;};};};return _fdda .Base .ImageToRGB (_fggae (&_fgge ));};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fa :=&PdfAction {};_fa ._gg =_bda .MakeIndirectObject (_bda .MakeDict ());return _fa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdaac *PdfShadingType1 )ToPdfObject ()_bda .PdfObject {_bdaac .PdfShading .ToPdfObject ();_dadab ,_ecegd :=_bdaac .getShadingDict ();if _ecegd !=nil {_ed .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bdaac .Domain !=nil {_dadab .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bdaac .Domain );};if _bdaac .Matrix !=nil {_dadab .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bdaac .Matrix );};if _bdaac .Function !=nil {if len (_bdaac .Function )==1{_dadab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdaac .Function [0].ToPdfObject ());
}else {_fcedf :=_bda .MakeArray ();for _ ,_baabc :=range _bdaac .Function {_fcedf .Append (_baabc .ToPdfObject ());};_dadab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcedf );};};return _bdaac ._gfdga ;};func (_aeec *PdfReader )newPdfAnnotationFreeTextFromDict (_fgb *_bda .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_badc :=PdfAnnotationFreeText {};
_cega ,_gbc :=_aeec .newPdfAnnotationMarkupFromDict (_fgb );if _gbc !=nil {return nil ,_gbc ;};_badc .PdfAnnotationMarkup =_cega ;_badc .DA =_fgb .Get ("\u0044\u0041");_badc .Q =_fgb .Get ("\u0051");_badc .RC =_fgb .Get ("\u0052\u0043");_badc .DS =_fgb .Get ("\u0044\u0053");
_badc .CL =_fgb .Get ("\u0043\u004c");_badc .IT =_fgb .Get ("\u0049\u0054");_badc .BE =_fgb .Get ("\u0042\u0045");_badc .RD =_fgb .Get ("\u0052\u0044");_badc .BS =_fgb .Get ("\u0042\u0053");_badc .LE =_fgb .Get ("\u004c\u0045");return &_badc ,nil ;};var (StructureTypeParagraph ="\u0050";
StructureTypeHeader ="\u0048";StructureTypeHeading1 ="\u0048\u0031";StructureTypeHeading2 ="\u0048\u0032";StructureTypeHeading3 ="\u0048\u0033";StructureTypeHeading4 ="\u0048\u0034";StructureTypeHeading5 ="\u0048\u0035";StructureTypeHeading6 ="\u0048\u0036";
StructureTypeList ="\u004c";StructureTypeListItem ="\u004c\u0049";StructureTypeLabel ="\u004c\u0062\u006c";StructureTypeListBody ="\u004c\u0042\u006fd\u0079";StructureTypeTable ="\u0054\u0061\u0062l\u0065";StructureTypeTableRow ="\u0054\u0052";StructureTypeTableHeaderCell ="\u0054\u0048";
StructureTypeTableData ="\u0054\u0044";StructureTypeTableHead ="\u0054\u0048\u0065a\u0064";StructureTypeTableBody ="\u0054\u0042\u006fd\u0079";StructureTypeTableFooter ="\u0054\u0046\u006fo\u0074";);

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_ddebb *PdfPageResources )GetExtGState (keyName _bda .PdfObjectName )(_bda .PdfObject ,bool ){if _ddebb .ExtGState ==nil {return nil ,false ;};_facdd ,_badf :=_bda .TraceToDirectObject (_ddebb .ExtGState ).(*_bda .PdfObjectDictionary );if !_badf {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddebb .ExtGState );
return nil ,false ;};if _gfffc :=_facdd .Get (keyName );_gfffc !=nil {return _gfffc ,true ;};return nil ,false ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bda .PdfObject ;Q _bda .PdfObject ;RC _bda .PdfObject ;DS _bda .PdfObject ;CL _bda .PdfObject ;IT _bda .PdfObject ;BE _bda .PdfObject ;RD _bda .PdfObject ;BS _bda .PdfObject ;LE _bda .PdfObject ;
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fbca pdfCIDFontType0 )GetRuneMetrics (r rune )(_geg .CharMetrics ,bool ){return _geg .CharMetrics {Wx :_fbca ._egcg },true ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_bcgff *PdfReader )Inspect ()(map[string ]int ,error ){return _bcgff ._fdadg .Inspect ()};func _edcee (_ggbd *_bda .PdfObjectDictionary ){_fbfba ,_bcba :=_bda .GetArray (_ggbd .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_fgbga ,_cade :=_bda .GetIntVal (_ggbd .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_bedb ,_cegge :=_bda .GetIntVal (_ggbd .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _bcba &&_cade &&_cegge {_fgea :=_fbfba .Len ();if _fgea !=_bedb -_fgbga +1{_ed .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_fgea ,_bedb );
_bcefe :=_bda .PdfObjectInteger (_fgbga +_fgea -1);_ggbd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_bcefe );};};};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ddbga *PdfPageResources )GetPatternByName (keyName _bda .PdfObjectName )(*PdfPattern ,bool ){if _ddbga .Pattern ==nil {return nil ,false ;};_edbcc ,_ebgec :=_bda .TraceToDirectObject (_ddbga .Pattern ).(*_bda .PdfObjectDictionary );if !_ebgec {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddbga .Pattern );
return nil ,false ;};if _eaedge :=_edbcc .Get (keyName );_eaedge !=nil {_dgcec ,_eadbbf :=_gaaefb (_eaedge );if _eadbbf !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_eadbbf );
return nil ,false ;};return _dgcec ,true ;};return nil ,false ;};

// NewKValue creates a new K value object.
func NewKValue ()*KValue {return &KValue {}};func _ccdda (_bdcfb *_bda .PdfObjectDictionary ,_gfgbf *fontCommon )(*pdfFontType3 ,error ){_ffdfd :=_edfg (_gfgbf );_eecbf :=_bdcfb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _eecbf ==nil {_eecbf =_bda .MakeInteger (0);
};_ffdfd .FirstChar =_eecbf ;_adcg ,_ceef :=_bda .GetIntVal (_eecbf );if !_ceef {_ed .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eecbf );
return nil ,_bda .ErrTypeError ;};_ecgc :=_dgb .CharCode (_adcg );_eecbf =_bdcfb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _eecbf ==nil {_eecbf =_bda .MakeInteger (255);};_ffdfd .LastChar =_eecbf ;_adcg ,_ceef =_bda .GetIntVal (_eecbf );
if !_ceef {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_eecbf );return nil ,_bda .ErrTypeError ;
};_fbfd :=_dgb .CharCode (_adcg );_eecbf =_bdcfb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _eecbf !=nil {_ffdfd .Resources =_eecbf ;};_eecbf =_bdcfb .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _eecbf ==nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_eecbf );
return nil ,_bda .ErrNotSupported ;};_ffdfd .CharProcs =_eecbf ;_eecbf =_bdcfb .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _eecbf ==nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_eecbf );
return nil ,_bda .ErrNotSupported ;};_ffdfd .FontMatrix =_eecbf ;_ffdfd ._cebgc =make (map[_dgb .CharCode ]float64 );_eecbf =_bdcfb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _eecbf !=nil {_ffdfd .Widths =_eecbf ;_efcdee ,_bcdbf :=_bda .GetArray (_eecbf );
if !_bcdbf {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_eecbf );return nil ,_bda .ErrTypeError ;
};_bedc ,_bggf :=_efcdee .ToFloat64Array ();if _bggf !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bggf ;};if len (_bedc )!=int (_fbfd -_ecgc +1){_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fbfd -_ecgc +1,len (_bedc ));
return nil ,_bda .ErrRangeError ;};_ffgf ,_bcdbf :=_bda .GetArray (_ffdfd .FontMatrix );if !_bcdbf {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ffgf );
return nil ,_bggf ;};_deaaa ,_bggf :=_ffgf .ToFloat64Array ();if _bggf !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bggf ;};_dadfd :=_dfa .NewMatrix (_deaaa [0],_deaaa [1],_deaaa [2],_deaaa [3],_deaaa [4],_deaaa [5]);for _cdega ,_afefg :=range _bedc {_cdcgd ,_ :=_dadfd .Transform (_afefg ,_afefg );_ffdfd ._cebgc [_ecgc +_dgb .CharCode (_cdega )]=_cdcgd ;
};};_ffdfd .Encoding =_bda .TraceToDirectObject (_bdcfb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_edfad :=_bdcfb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _edfad !=nil {_ffdfd ._fbedf =_bda .TraceToDirectObject (_edfad );
_acbg ,_dbebc :=_ccega (_ffdfd ._fbedf ,&_ffdfd .fontCommon );if _dbebc !=nil {return nil ,_dbebc ;};_ffdfd ._eeed =_acbg ;};if _fafbd :=_ffdfd ._eeed ;_fafbd !=nil {_ffdfd ._gabce =_dgb .NewCMapEncoder ("",nil ,_fafbd );}else {_ffdfd ._gabce =_dgb .NewPdfDocEncoder ();
};return _ffdfd ,nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_dcc :=NewPdfAction ();_ef :=&PdfActionURI {};_ef .PdfAction =_dcc ;_dcc .SetContext (_ef );return _ef ;};

// ToPdfObject implements interface PdfModel.
func (_dec *PdfActionSound )ToPdfObject ()_bda .PdfObject {_dec .PdfAction .ToPdfObject ();_cdg :=_dec ._gg ;_egbc :=_cdg .PdfObject .(*_bda .PdfObjectDictionary );_egbc .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeSound )));_egbc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dec .Sound );
_egbc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_dec .Volume );_egbc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_dec .Synchronous );_egbc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dec .Repeat );
_egbc .SetIfNotNil ("\u004d\u0069\u0078",_dec .Mix );return _cdg ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_fdcea *Outline )ToPdfObject ()_bda .PdfObject {return _fdcea .ToPdfOutline ().ToPdfObject ()};func (_fgbfd *PdfWriter )writeOutlines ()error {if _fgbfd ._fcade ==nil {return nil ;};_ed .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_fgbfd ._fcade );
_cgadg :=_fgbfd ._fcade .ToPdfObject ();_ed .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_cgadg ,_cgadg ,_cgadg );_fgbfd ._geadba .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_cgadg );
_fgdbf :=_fgbfd .addObjects (_cgadg );if _fgdbf !=nil {return _fgdbf ;};return nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_eaad :=NewPdfAnnotation ();_dfbb :=&PdfAnnotationLine {};_dfbb .PdfAnnotation =_eaad ;_dfbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaad .SetContext (_dfbb );return _dfbb ;};

// AddCerts adds certificates to DSS.
func (_bbcbd *DSS )AddCerts (certs [][]byte )([]*_bda .PdfObjectStream ,error ){return _bbcbd .add (&_bbcbd .Certs ,_bbcbd ._fega ,certs );};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _bda .PdfObjectName ;};

// Width returns the width of `rect`.
func (_gcfc *PdfRectangle )Width ()float64 {return _ce .Abs (_gcfc .Urx -_gcfc .Llx )};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_gag .PSProgram ;_edcbd *_gag .PSExecutor ;_bedf []byte ;_eadd *_bda .PdfObjectStream ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_aggga *PdfPage )GetContentStreamObjs ()[]_bda .PdfObject {if _aggga .Contents ==nil {return nil ;};_aefg :=_bda .TraceToDirectObject (_aggga .Contents );if _dcead ,_gedcb :=_aefg .(*_bda .PdfObjectArray );_gedcb {return _dcead .Elements ();};return []_bda .PdfObject {_aefg };
};func (_cbge *PdfReader )newPdfAnnotationLineFromDict (_bggb *_bda .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_gdbd :=PdfAnnotationLine {};_gdfc ,_fae :=_cbge .newPdfAnnotationMarkupFromDict (_bggb );if _fae !=nil {return nil ,_fae ;};_gdbd .PdfAnnotationMarkup =_gdfc ;
_gdbd .L =_bggb .Get ("\u004c");_gdbd .BS =_bggb .Get ("\u0042\u0053");_gdbd .LE =_bggb .Get ("\u004c\u0045");_gdbd .IC =_bggb .Get ("\u0049\u0043");_gdbd .LL =_bggb .Get ("\u004c\u004c");_gdbd .LLE =_bggb .Get ("\u004c\u004c\u0045");_gdbd .Cap =_bggb .Get ("\u0043\u0061\u0070");
_gdbd .IT =_bggb .Get ("\u0049\u0054");_gdbd .LLO =_bggb .Get ("\u004c\u004c\u004f");_gdbd .CP =_bggb .Get ("\u0043\u0050");_gdbd .Measure =_bggb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_gdbd .CO =_bggb .Get ("\u0043\u004f");return &_gdbd ,nil ;
};func _cfffe (_efaga *_bda .PdfObjectDictionary )(*PdfShadingType1 ,error ){_dgcd :=PdfShadingType1 {};if _cedgd :=_efaga .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cedgd !=nil {_cedgd =_bda .TraceToDirectObject (_cedgd );_egbe ,_edbeb :=_cedgd .(*_bda .PdfObjectArray );
if !_edbeb {_ed .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cedgd );return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dgcd .Domain =_egbe ;};if _dbgec :=_efaga .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dbgec !=nil {_dbgec =_bda .TraceToDirectObject (_dbgec );_aafgg ,_dddge :=_dbgec .(*_bda .PdfObjectArray );if !_dddge {_ed .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbgec );
return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgcd .Matrix =_aafgg ;};_edcbaf :=_efaga .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _edcbaf ==nil {_ed .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dgcd .Function =[]PdfFunction {};if _aecfd ,_dgeag :=_edcbaf .(*_bda .PdfObjectArray );_dgeag {for _ ,_gbcbf :=range _aecfd .Elements (){_bbee ,_eadc :=_aaeca (_gbcbf );if _eadc !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eadc );
return nil ,_eadc ;};_dgcd .Function =append (_dgcd .Function ,_bbee );};}else {_abbdcc ,_aafe :=_aaeca (_edcbaf );if _aafe !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aafe );
return nil ,_aafe ;};_dgcd .Function =append (_dgcd .Function ,_abbdcc );};return &_dgcd ,nil ;};

// Direction represents the predominant reading order for text.
type Direction string ;

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_fagd *PdfPageResources )HasColorspaceByName (keyName _bda .PdfObjectName )bool {_gdbee ,_fcggg :=_fagd .GetColorspaces ();if _fcggg !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fcggg );
return false ;};if _gdbee ==nil {return false ;};_ ,_cfeef :=_gdbee .Colorspaces [string (keyName )];return _cfeef ;};

// ToPdfObject converts the font to a PDF representation.
func (_aebgg *pdfFontType3 )ToPdfObject ()_bda .PdfObject {if _aebgg ._bbfd ==nil {_aebgg ._bbfd =&_bda .PdfIndirectObject {};};_dgfab :=_aebgg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_aebgg ._bbfd .PdfObject =_dgfab ;if _aebgg .FirstChar !=nil {_dgfab .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_aebgg .FirstChar );
};if _aebgg .LastChar !=nil {_dgfab .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_aebgg .LastChar );};if _aebgg .Widths !=nil {_dgfab .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_aebgg .Widths );};if _aebgg .Encoding !=nil {_dgfab .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aebgg .Encoding );
}else if _aebgg ._gabce !=nil {_fbeef :=_aebgg ._gabce .ToPdfObject ();if _fbeef !=nil {_dgfab .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fbeef );};};if _aebgg .FontBBox !=nil {_dgfab .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_aebgg .FontBBox );
};if _aebgg .FontMatrix !=nil {_dgfab .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_aebgg .FontMatrix );};if _aebgg .CharProcs !=nil {_dgfab .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_aebgg .CharProcs );};if _aebgg .Resources !=nil {_dgfab .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aebgg .Resources );
};return _aebgg ._bbfd ;};

// ToPdfObject implements interface PdfModel.
func (_bbga *PdfAnnotationUnderline )ToPdfObject ()_bda .PdfObject {_bbga .PdfAnnotation .ToPdfObject ();_bceg :=_bbga ._ged ;_decb :=_bceg .PdfObject .(*_bda .PdfObjectDictionary );_bbga .PdfAnnotationMarkup .appendToPdfDictionary (_decb );_decb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_decb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbga .QuadPoints );return _bceg ;};func _gaaefb (_cdbbf _bda .PdfObject )(*PdfPattern ,error ){_dgfaf :=&PdfPattern {};var _aebc *_bda .PdfObjectDictionary ;if _egbcd ,_eacb :=_bda .GetIndirect (_cdbbf );
_eacb {_dgfaf ._cbbgec =_egbcd ;_cdade ,_gbcad :=_egbcd .PdfObject .(*_bda .PdfObjectDictionary );if !_gbcad {_ed .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_egbcd .PdfObject );
return nil ,_bda .ErrTypeError ;};_aebc =_cdade ;}else if _daab ,_cbdf :=_bda .GetStream (_cdbbf );_cbdf {_dgfaf ._cbbgec =_daab ;_aebc =_daab .PdfObjectDictionary ;}else {_ed .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_cdbbf );
return nil ,_bda .ErrTypeError ;};_bgfe :=_aebc .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _bgfe ==nil {_ed .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bbge ,_dace :=_bgfe .(*_bda .PdfObjectInteger );if !_dace {_ed .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bgfe );
return nil ,_bda .ErrTypeError ;};if *_bbge !=1&&*_bbge !=2{_ed .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_bbge );return nil ,_bda .ErrRangeError ;
};_dgfaf .PatternType =int64 (*_bbge );switch *_bbge {case 1:_fgcbd ,_cbgc :=_fcee (_aebc );if _cbgc !=nil {return nil ,_cbgc ;};_fgcbd .PdfPattern =_dgfaf ;_dgfaf ._dgaed =_fgcbd ;return _dgfaf ,nil ;case 2:_dffe ,_ebdd :=_fbdad (_aebc );if _ebdd !=nil {return nil ,_ebdd ;
};_dffe .PdfPattern =_dgfaf ;_dgfaf ._dgaed =_dffe ;return _dgfaf ,nil ;};return nil ,_gea .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func (_eae *PdfReader )newPdfActionJavaScriptFromDict (_cfe *_bda .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cfe .Get ("\u004a\u0053")},nil ;
};func (_bfe *PdfReader )newPdfActionImportDataFromDict (_adf *_bda .PdfObjectDictionary )(*PdfActionImportData ,error ){_bff ,_ecf :=_ggfe (_adf .Get ("\u0046"));if _ecf !=nil {return nil ,_ecf ;};return &PdfActionImportData {F :_bff },nil ;};

// G returns the value of the green component of the color.
func (_bafc *PdfColorDeviceRGB )G ()float64 {return _bafc [1]};

// NonFullScreenPageMode returns the value of the nonFullScreenPageMode.
func (_abfcc *ViewerPreferences )NonFullScreenPageMode ()NonFullScreenPageMode {return _abfcc ._egeea };

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bda .PdfObject ;};func (_ddbdd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _ddbdd ._fdadg .GetCrypter ()!=nil &&!_ddbdd ._fdadg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fecbed :=_ddbdd ._dabg ;_adaa :=_fecbed .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _adaa ==nil {return nil ,nil ;};_edbbga ,_ddag :=_bda .GetIndirect (_adaa );_adaa =_bda .TraceToDirectObject (_adaa );if _bda .IsNullObject (_adaa ){_ed .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_bgecb ,_gcdbag :=_bda .GetDict (_adaa );if !_gcdbag {_ed .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_adaa );_ed .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_adaa );};_ed .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_ed .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_ddbdd ._aaece {_babff :=_ddbdd .traverseObjectData (_bgecb );
if _babff !=nil {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_babff );
return nil ,_babff ;};};_feefe ,_bedcce :=_ddbdd .newPdfAcroFormFromDict (_edbbga ,_bgecb );if _bedcce !=nil {return nil ,_bedcce ;};_feefe ._dacab =!_ddag ;return _feefe ,nil ;};func _ecfc (_cgeg *PdfPage )map[_bda .PdfObjectName ]_bda .PdfObject {_eafc :=make (map[_bda .PdfObjectName ]_bda .PdfObject );
if _cgeg .Resources ==nil {return _eafc ;};if _cgeg .Resources .Font !=nil {if _ffgc ,_febg :=_bda .GetDict (_cgeg .Resources .Font );_febg {for _ ,_fcga :=range _ffgc .Keys (){_eafc [_fcga ]=_ffgc .Get (_fcga );};};};if _cgeg .Resources .ExtGState !=nil {if _egf ,_eag :=_bda .GetDict (_cgeg .Resources .ExtGState );
_eag {for _ ,_acdc :=range _egf .Keys (){_eafc [_acdc ]=_egf .Get (_acdc );};};};if _cgeg .Resources .XObject !=nil {if _gbdfe ,_abfd :=_bda .GetDict (_cgeg .Resources .XObject );_abfd {for _ ,_ecde :=range _gbdfe .Keys (){_eafc [_ecde ]=_gbdfe .Get (_ecde );
};};};if _cgeg .Resources .Pattern !=nil {if _fcb ,_adeb :=_bda .GetDict (_cgeg .Resources .Pattern );_adeb {for _ ,_deeb :=range _fcb .Keys (){_eafc [_deeb ]=_fcb .Get (_deeb );};};};if _cgeg .Resources .Shading !=nil {if _eba ,_fabg :=_bda .GetDict (_cgeg .Resources .Shading );
_fabg {for _ ,_gfef :=range _eba .Keys (){_eafc [_gfef ]=_eba .Get (_gfef );};};};if _cgeg .Resources .ProcSet !=nil {if _afbc ,_abaa :=_bda .GetDict (_cgeg .Resources .ProcSet );_abaa {for _ ,_dede :=range _afbc .Keys (){_eafc [_dede ]=_afbc .Get (_dede );
};};};if _cgeg .Resources .Properties !=nil {if _adeab ,_bead :=_bda .GetDict (_cgeg .Resources .Properties );_bead {for _ ,_bdad :=range _adeab .Keys (){_eafc [_bdad ]=_adeab .Get (_bdad );};};};return _eafc ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_dfbf *PdfTransformParamsDocMDP )String ()string {return _c .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_dfbf .Type ,_dfbf .P ,_dfbf .V );};type fontFile struct{_dddg string ;_deag string ;_ffde _dgb .SimpleEncoder ;
};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_cdgae :=&PdfShadingType2 {};_cdgae .PdfShading =&PdfShading {};_cdgae .PdfShading ._gfdga =_bda .MakeIndirectObject (_bda .MakeDict ());_cdgae .PdfShading ._cdded =_cdgae ;return _cdgae ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_cgaeg *PdfFieldButton )ToPdfObject ()_bda .PdfObject {_cgaeg .PdfField .ToPdfObject ();_fada :=_cgaeg ._ceaeg ;_bafde :=_fada .PdfObject .(*_bda .PdfObjectDictionary );_bafde .Set ("\u0046\u0054",_bda .MakeName ("\u0042\u0074\u006e"));if _cgaeg .Opt !=nil {_bafde .Set ("\u004f\u0070\u0074",_cgaeg .Opt );
};return _fada ;};

// Encoder returns the font's text encoder.
func (_ecca *PdfFont )Encoder ()_dgb .TextEncoder {_eadec :=_ecca .actualFont ();if _eadec ==nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ecca ._ggada );
return nil ;};return _eadec .Encoder ();};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_acgcc :=PdfColorCalRGB {a ,b ,c };return &_acgcc ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_bfadd *pdfFontType0 )bytesToCharcodes (_bdacc []byte )([]_dgb .CharCode ,bool ){if _bfadd ._fbcb ==nil {return nil ,false ;};_bgbd ,_bebf :=_bfadd ._fbcb .BytesToCharcodes (_bdacc );if !_bebf {return nil ,false ;};_aedc :=make ([]_dgb .CharCode ,len (_bgbd ));
for _gcbf ,_feadd :=range _bgbd {_aedc [_gcbf ]=_dgb .CharCode (_feadd );};return _aedc ,true ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cbcae *PdfColorspaceDeviceN )GetNumComponents ()int {return _cbcae .ColorantNames .Len ()};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_faeg *PdfColorspaceLab )DecodeArray ()[]float64 {_cbgbe :=[]float64 {0,100};if _faeg !=nil &&_faeg .Range !=nil &&len (_faeg .Range )==4{_cbgbe =append (_cbgbe ,_faeg .Range ...);}else {_cbgbe =append (_cbgbe ,-100,100,-100,100);};return _cbgbe ;
};

// SetPrintClip sets the value of the printClip.
func (_ecgca *ViewerPreferences )SetPrintClip (printClip PageBoundary ){_ecgca ._eefag =printClip };

// ToPdfObject implements interface PdfModel.
func (_gbbb *PdfAnnotationSquare )ToPdfObject ()_bda .PdfObject {_gbbb .PdfAnnotation .ToPdfObject ();_cacc :=_gbbb ._ged ;_fcce :=_cacc .PdfObject .(*_bda .PdfObjectDictionary );if _gbbb .PdfAnnotationMarkup !=nil {_gbbb .PdfAnnotationMarkup .appendToPdfDictionary (_fcce );
};_fcce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_fcce .SetIfNotNil ("\u0042\u0053",_gbbb .BS );_fcce .SetIfNotNil ("\u0049\u0043",_gbbb .IC );_fcce .SetIfNotNil ("\u0042\u0045",_gbbb .BE );
_fcce .SetIfNotNil ("\u0052\u0044",_gbbb .RD );return _cacc ;};type pdfFontSimple struct{fontCommon ;_gdagb *_bda .PdfIndirectObject ;_dfad map[_dgb .CharCode ]float64 ;_cbedg _dgb .TextEncoder ;_gdgeg _dgb .TextEncoder ;_edaf *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bda .PdfObject ;LastChar _bda .PdfObject ;Widths _bda .PdfObject ;Encoding _bda .PdfObject ;_feada *_geg .RuneCharSafeMap ;};func (_dfbag *PdfWriter )updateObjectNumbers (){_bfeg :=_dfbag .ObjNumOffset ;_agfcg :=0;for _ ,_fcebb :=range _dfbag ._ccbbg {_cgefd :=int64 (_agfcg +1+_bfeg );
_fafdbg :=true ;if _dfbag ._eccfc {if _cdbgb ,_edbaf :=_dfbag ._gcgde [_fcebb ];_edbaf {_cgefd =_cdbgb ;_fafdbg =false ;};};switch _adeg :=_fcebb .(type ){case *_bda .PdfIndirectObject :_adeg .ObjectNumber =_cgefd ;_adeg .GenerationNumber =0;case *_bda .PdfObjectStream :_adeg .ObjectNumber =_cgefd ;
_adeg .GenerationNumber =0;case *_bda .PdfObjectStreams :_adeg .ObjectNumber =_cgefd ;_adeg .GenerationNumber =0;case *_bda .PdfObjectReference :_adeg .ObjectNumber =_cgefd ;_adeg .GenerationNumber =0;case *_bda .PdfObjectDictionary ,*_bda .PdfObjectString :default:_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_adeg );
continue ;};if _fafdbg {_agfcg ++;};};_egbgf :=func (_fcgaaf _bda .PdfObject )int64 {switch _aebbac :=_fcgaaf .(type ){case *_bda .PdfIndirectObject :return _aebbac .ObjectNumber ;case *_bda .PdfObjectStream :return _aebbac .ObjectNumber ;case *_bda .PdfObjectStreams :return _aebbac .ObjectNumber ;
case *_bda .PdfObjectReference :return _aebbac .ObjectNumber ;};return 0;};_cb .SliceStable (_dfbag ._ccbbg ,func (_bcgbe ,_ffddb int )bool {return _egbgf (_dfbag ._ccbbg [_bcgbe ])< _egbgf (_dfbag ._ccbbg [_ffddb ])});};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_dfc .File ,error ){const _eggba ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_dbebed ,_bfagd :=_dfc .Open (pdfFile );if _bfagd !=nil {return nil ,nil ,_bfagd ;};_ecec ,_bfagd :=_efgcc (_dbebed ,opts ,true ,_eggba );if _bfagd !=nil {_dbebed .Close ();return nil ,nil ,_bfagd ;};_ecec ._gcbfae =pdfFile ;return _ecec ,_dbebed ,nil ;
};

// SetPickTrayByPDFSize sets the value of the pickTrayByPDFSize flag.
func (_dgcfg *ViewerPreferences )SetPickTrayByPDFSize (pickTrayByPDFSize bool ){_dgcfg ._eedfcc =&pickTrayByPDFSize ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bda .StreamEncoder ;Intent _bda .PdfObject ;ImageMask _bda .PdfObject ;Mask _bda .PdfObject ;Matte _bda .PdfObject ;Decode _bda .PdfObject ;Interpolate _bda .PdfObject ;
Alternatives _bda .PdfObject ;SMask _bda .PdfObject ;SMaskInData _bda .PdfObject ;Name _bda .PdfObject ;StructParent _bda .PdfObject ;ID _bda .PdfObject ;OPI _bda .PdfObject ;Metadata _bda .PdfObject ;OC _bda .PdfObject ;Stream []byte ;_eedbf *_bda .PdfObjectStream ;
_dfcd bool ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ffceb *PdfShadingPatternType3 )ToPdfObject ()_bda .PdfObject {_ffceb .PdfPattern .ToPdfObject ();_aaggb :=_ffceb .getDict ();if _ffceb .Shading !=nil {_aaggb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ffceb .Shading .ToPdfObject ());};if _ffceb .Matrix !=nil {_aaggb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ffceb .Matrix );
};if _ffceb .ExtGState !=nil {_aaggb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ffceb .ExtGState );};return _ffceb ._cbbgec ;};type pdfCIDFontType2 struct{fontCommon ;_acegg *_bda .PdfIndirectObject ;_becb _dgb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bda .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bda .PdfObject ;W _bda .PdfObject ;DW2 _bda .PdfObject ;W2 _bda .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bda .PdfObject ;_eggf map[_dgb .CharCode ]float64 ;_bbagg float64 ;_dgccg map[rune ]int ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fdef :=&PdfColorspaceCalRGB {};_fdef .BlackPoint =[]float64 {0.0,0.0,0.0};_fdef .Gamma =[]float64 {1.0,1.0,1.0};_fdef .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fdef ;};

// Clear clears the KValue.
func (_dbfg *KValue )Clear (){_dbfg ._dfafb =nil ;_dbfg ._bfafef =nil ;_dbfg ._ecgbg =nil };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dccg *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcdf ,_cagc :=_bda .GetNumbersAsFloat (objects );
if _cagc !=nil {return nil ,_cagc ;};return _dccg .ColorFromFloats (_dcdf );};

// L returns the value of the L component of the color.
func (_bece *PdfColorLab )L ()float64 {return _bece [0]};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bcc :=NewPdfAction ();_dcdb :=&PdfActionJavaScript {};_dcdb .PdfAction =_bcc ;_bcc .SetContext (_dcdb );return _dcdb ;};func (_aaca *pdfFontSimple )updateStandard14Font (){_gbfaeg ,_bfggb :=_aaca .Encoder ().(_dgb .SimpleEncoder );
if !_bfggb {_ed .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_aaca .Encoder (),_aaca );return ;};_eegf :=_gbfaeg .Charcodes ();
_aaca ._dfad =make (map[_dgb .CharCode ]float64 ,len (_eegf ));for _ ,_aabbg :=range _eegf {_caad ,_ :=_gbfaeg .CharcodeToRune (_aabbg );_cefef ,_ :=_aaca ._feada .Read (_caad );_aaca ._dfad [_aabbg ]=_cefef .Wx ;};};func _dcab (_gafdbb _bda .PdfObject ,_bade _bda .PdfObject ,_gfcbf map[_bda .PdfObject ][]_bda .PdfObject ,_fgcga map[string ]_bda .PdfObject ,_agbd *[]_bda .PdfObject ){var _efdbc *_bda .PdfIndirectObject ;
if _cdbbe ,_efec :=_bda .GetIndirect (_gafdbb );_efec {_efdbc =_cdbbe ;_gafdbb =_cdbbe .PdfObject ;};switch _ffdee :=_gafdbb .(type ){case *_bda .PdfObjectDictionary :if _ffdee .Get ("\u0053")==nil {return ;};_ffdee .Set ("\u0050",_bade );if _gcedf :=_ffdee .Get ("\u0050\u0067");
_gcedf !=nil {if _bgeee ,_bcca :=_bda .GetIndirect (_gcedf );_bcca &&_bgeee !=nil &&_bgeee .PdfObject !=nil {_gfcbf [_gcedf ]=append (_gfcbf [_gcedf ],_efdbc );};};if _bagfad :=_ffdee .Get ("\u0053");_bagfad !=nil {if _edef ,_gbgag :=_bda .GetNameVal (_bagfad );
_gbgag {if _edef ==StructureTypeLink {if _adfabe :=_ffdee .Get ("\u004b");_adfabe !=nil {if _cbfg ,_dddcb :=_bda .GetArray (_adfabe );_dddcb &&_cbfg .Len ()==2{_dfbfg :=false ;_dfeccd :=false ;for _ ,_ecge :=range _cbfg .Elements (){if _aacf ,_fbdeg :=_bda .GetDict (_ecge );
_fbdeg {if _dffgfa ,_gddge :=_bda .GetName (_aacf .Get ("\u0054\u0079\u0070\u0065"));_gddge &&_dffgfa .String ()=="\u004f\u0042\u004a\u0052"{_dfeccd =true ;};}else if _ ,_acge :=_bda .GetInt (_ecge );_acge {_dfbfg =true ;};};if _dfbfg &&_dfeccd {*_agbd =append (*_agbd ,_efdbc );
};}else if _fgedc ,_eccfed :=_bda .GetDict (_adfabe );_eccfed {if _fabc ,_cefce :=_bda .GetName (_fgedc .Get ("\u0054\u0079\u0070\u0065"));_cefce &&_fabc .String ()=="\u004f\u0042\u004a\u0052"{*_agbd =append (*_agbd ,_efdbc );};};};};};};if _efadg :=_ffdee .Get ("\u0049\u0044");
_efadg !=nil {_fgcga [_efadg .String ()]=_gafdbb ;};if _bccdf :=_ffdee .Get ("\u004b");_bccdf !=nil {_dcab (_bccdf ,_efdbc ,_gfcbf ,_fgcga ,_agbd );};case *_bda .PdfObjectArray :for _ ,_bagad :=range _ffdee .Elements (){_dcab (_bagad ,_bade ,_gfcbf ,_fgcga ,_agbd );
};default:};};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func _fgfee (_fabfe []byte )([]byte ,error ){_cffgd :=_df .New ();if _ ,_edgc :=_ga .Copy (_cffgd ,_dff .NewReader (_fabfe ));_edgc !=nil {return nil ,_edgc ;};return _cffgd .Sum (nil ),nil ;};

// SetPage directly sets the page object.
func (_cdce *KDict )SetPage (page *_bda .PdfIndirectObject ){_cdce .Pg =page };

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_bda .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_ecaf *_bda .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_dgg *PdfActionImportData )ToPdfObject ()_bda .PdfObject {_dgg .PdfAction .ToPdfObject ();_fdf :=_dgg ._gg ;_dgc :=_fdf .PdfObject .(*_bda .PdfObjectDictionary );_dgc .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeImportData )));if _dgg .F !=nil {_dgc .Set ("\u0046",_dgg .F .ToPdfObject ());
};return _fdf ;};

// ToPdfObject implements interface PdfModel.
func (_gfgcf *PdfSignatureReference )ToPdfObject ()_bda .PdfObject {_cffgaf :=_bda .MakeDict ();_cffgaf .SetIfNotNil ("\u0054\u0079\u0070\u0065",_gfgcf .Type );_cffgaf .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_gfgcf .TransformMethod );
_cffgaf .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_gfgcf .TransformParams );_cffgaf .SetIfNotNil ("\u0044\u0061\u0074\u0061",_gfgcf .Data );_cffgaf .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_gfgcf .DigestMethod );
return _cffgaf ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_eaacc *_bda .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_aagge *PdfTilingPattern )ToPdfObject ()_bda .PdfObject {_aagge .PdfPattern .ToPdfObject ();_fbbea :=_aagge .getDict ();if _aagge .PaintType !=nil {_fbbea .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_aagge .PaintType );};if _aagge .TilingType !=nil {_fbbea .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_aagge .TilingType );
};if _aagge .BBox !=nil {_fbbea .Set ("\u0042\u0042\u006f\u0078",_aagge .BBox .ToPdfObject ());};if _aagge .XStep !=nil {_fbbea .Set ("\u0058\u0053\u0074e\u0070",_aagge .XStep );};if _aagge .YStep !=nil {_fbbea .Set ("\u0059\u0053\u0074e\u0070",_aagge .YStep );
};if _aagge .Resources !=nil {_fbbea .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aagge .Resources .ToPdfObject ());};if _aagge .Matrix !=nil {_fbbea .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_aagge .Matrix );};return _aagge ._cbbgec ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bda .PdfObject )(*PdfFont ,error ){return _eeag (fontObj ,true )};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// ToPdfObject returns a PDF object representation of the outline item.
func (_dacad *OutlineItem )ToPdfObject ()_bda .PdfObject {_abcg ,_ :=_dacad .ToPdfOutlineItem ();return _abcg .ToPdfObject ();};func (_afgf *PdfPage )flattenFieldsWithOpts (_cabgf FieldAppearanceGenerator ,_bbbg *FieldFlattenOpts ,_fcgg map[*PdfAnnotation ]bool )error {var _dcga []*PdfAnnotation ;
if _cabgf !=nil {if _fcgbf :=_cabgf .WrapContentStream (_afgf );_fcgbf !=nil {return _fcgbf ;};};_beadc ,_bgfg :=_afgf .GetAnnotations ();if _bgfg !=nil {return _bgfg ;};for _ ,_dgadb :=range _beadc {_bcga ,_bdac :=_fcgg [_dgadb ];if !_bdac &&_bbbg .AnnotFilterFunc !=nil {if _ ,_aabdb :=_dgadb .GetContext ().(*PdfAnnotationWidget );
!_aabdb {_bdac =_bbbg .AnnotFilterFunc (_dgadb );};};if !_bdac {_dcga =append (_dcga ,_dgadb );continue ;};switch _dgadb .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_cddbd ,_dbgdg ,_bdeg :=_gdac (_dgadb );if _bdeg !=nil {if !_bcga {_ed .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_bdeg );
continue ;};if _cddbd ==nil {continue ;};_eagdf :=_afgf .Resources .GenerateXObjectName ();_afgf .Resources .SetXObjectFormByName (_eagdf ,_cddbd );_cafd ,_dccc ,_bdeg :=_dfda (_cddbd );if _bdeg !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_bdeg );
}else {_eacc :=_dfa .IdentityMatrix ();_eacc =_eacc .Translate (-_cafd .Llx ,-_cafd .Lly );if _dccc {_gaff :=0.0;if _cafd .Width ()> 0{_gaff =_dbgdg .Width ()/_cafd .Width ();};_becf :=0.0;if _cafd .Height ()> 0{_becf =_dbgdg .Height ()/_cafd .Height ();
};_eacc =_eacc .Scale (_gaff ,_becf );};_dbgdg .Transform (_eacc );};_aegc :=_ce .Min (_dbgdg .Llx ,_dbgdg .Urx );_aecb :=_ce .Min (_dbgdg .Lly ,_dbgdg .Ury );var _bbcbg []string ;_bbcbg =append (_bbcbg ,"\u0071");_bbcbg =append (_bbcbg ,_c .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_aegc ,_aecb ));
_bbcbg =append (_bbcbg ,_c .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_eagdf .String ()));_bbcbg =append (_bbcbg ,"\u0051");_fgbd :=_ab .Join (_bbcbg ,"\u000a");_bdeg =_afgf .AppendContentStream (_fgbd );if _bdeg !=nil {return _bdeg ;};if _cddbd .Resources !=nil {_ddce ,_dafc :=_bda .GetDict (_cddbd .Resources .Font );
if _dafc {for _ ,_cead :=range _ddce .Keys (){if !_afgf .Resources .HasFontByName (_cead ){_afgf .Resources .SetFontByName (_cead ,_ddce .Get (_cead ));};};};};};if len (_dcga )> 0{_afgf ._bcaef =_dcga ;}else {_afgf ._bcaef =[]*PdfAnnotation {};};return nil ;
};

// GetStandardApplier gets currently used StandardApplier..
func (_cfgdaa *PdfWriter )GetStandardApplier ()StandardApplier {return _cfgdaa ._cebab };

// ToInteger convert to an integer format.
func (_dcaa *PdfColorCalGray )ToInteger (bits int )uint32 {_dce :=_ce .Pow (2,float64 (bits ))-1;return uint32 (_dce *_dcaa .Val ());};

// IsHideWindowUI returns the value of the hideWindowUI flag.
func (_feefa *ViewerPreferences )IsHideWindowUI ()bool {if _feefa ._bcddd ==nil {return false ;};return *_feefa ._bcddd ;};

// ReplacePage replaces the original page to a new page.
func (_ggc *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_edee :=pageNum -1;for _caab :=range _ggc ._eebd {if _caab ==_edee {_ggea :=page .Duplicate ();_defaab (_ggea );_ggc ._eebd [_caab ]=_ggea ;};};};

// ToPdfObject implements interface PdfModel.
func (_gge *PdfActionGoTo )ToPdfObject ()_bda .PdfObject {_gge .PdfAction .ToPdfObject ();_bf :=_gge ._gg ;_feb :=_bf .PdfObject .(*_bda .PdfObjectDictionary );_feb .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeGoTo )));_feb .SetIfNotNil ("\u0044",_gge .D );
return _bf ;};

// ToPdfObject implements interface PdfModel.
func (_gbaad *PdfTransformParamsDocMDP )ToPdfObject ()_bda .PdfObject {_cgffb :=_bda .MakeDict ();_cgffb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_gbaad .Type );_cgffb .SetIfNotNil ("\u0056",_gbaad .V );_cgffb .SetIfNotNil ("\u0050",_gbaad .P );return _cgffb ;
};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bbdd *PdfPage )Duplicate ()*PdfPage {_ffbg :=*_bbdd ;_ffbg ._bdgdg =_bda .MakeDict ();_ffbg ._eebfa =_bda .MakeIndirectObject (_ffbg ._bdgdg );_ffbg ._gfaec =*_ffbg ._bdgdg ;return &_ffbg ;};func _ccfcc (_defaf *_bda .PdfObjectDictionary )(*PdfShadingType6 ,error ){_agccf :=PdfShadingType6 {};
_afdfb :=_defaf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _afdfb ==nil {_ed .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dbgad ,_faede :=_afdfb .(*_bda .PdfObjectInteger );if !_faede {_ed .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afdfb );
return nil ,_bda .ErrTypeError ;};_agccf .BitsPerCoordinate =_dbgad ;_afdfb =_defaf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _afdfb ==nil {_ed .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dbgad ,_faede =_afdfb .(*_bda .PdfObjectInteger );if !_faede {_ed .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_afdfb );
return nil ,_bda .ErrTypeError ;};_agccf .BitsPerComponent =_dbgad ;_afdfb =_defaf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _afdfb ==nil {_ed .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbgad ,_faede =_afdfb .(*_bda .PdfObjectInteger );if !_faede {_ed .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_afdfb );
return nil ,_bda .ErrTypeError ;};_agccf .BitsPerComponent =_dbgad ;_afdfb =_defaf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _afdfb ==nil {_ed .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edag ,_faede :=_afdfb .(*_bda .PdfObjectArray );if !_faede {_ed .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afdfb );
return nil ,_bda .ErrTypeError ;};_agccf .Decode =_edag ;if _eegd :=_defaf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eegd !=nil {_agccf .Function =[]PdfFunction {};if _bfcea ,_egfda :=_eegd .(*_bda .PdfObjectArray );_egfda {for _ ,_bdgba :=range _bfcea .Elements (){_fdegd ,_eaecd :=_aaeca (_bdgba );
if _eaecd !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eaecd );return nil ,_eaecd ;};_agccf .Function =append (_agccf .Function ,_fdegd );
};}else {_eccbd ,_ebgeg :=_aaeca (_eegd );if _ebgeg !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebgeg );return nil ,_ebgeg ;
};_agccf .Function =append (_agccf .Function ,_eccbd );};};return &_agccf ,nil ;};

// AddWatermarkImage adds a watermark to the page.
func (_eddgg *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_bfca ,_bcab :=_eddgg .GetMediaBox ();if _bcab !=nil {return _bcab ;};_bedcc :=_bfca .Urx -_bfca .Llx ;_gaaec :=_bfca .Ury -_bfca .Lly ;_dbcg :=float64 (*ximg .Width );
_efedf :=(_bedcc -_dbcg )/2;if opt .FitToWidth {_dbcg =_bedcc ;_efedf =0;};_gdaaf :=_gaaec ;_adafb :=float64 (0);if opt .PreserveAspectRatio {_gdaaf =_dbcg *float64 (*ximg .Height )/float64 (*ximg .Width );_adafb =(_gaaec -_gdaaf )/2;};if _eddgg .Resources ==nil {_eddgg .Resources =NewPdfPageResources ();
};_dceeg :=0;_eeaa :=_bda .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_dceeg ));for _eddgg .Resources .HasXObjectByName (_eeaa ){_dceeg ++;_eeaa =_bda .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_dceeg ));};_bcab =_eddgg .AddImageResource (_eeaa ,ximg );
if _bcab !=nil {return _bcab ;};_dceeg =0;_agegc :=_bda .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_dceeg ));for _eddgg .HasExtGState (_agegc ){_dceeg ++;_agegc =_bda .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_dceeg ));};_egfgd :=_bda .MakeDict ();
_egfgd .Set ("\u0042\u004d",_bda .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_egfgd .Set ("\u0043\u0041",_bda .MakeFloat (opt .Alpha ));_egfgd .Set ("\u0063\u0061",_bda .MakeFloat (opt .Alpha ));_bcab =_eddgg .AddExtGState (_agegc ,_egfgd );if _bcab !=nil {return _bcab ;
};_efafa :=_c .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_agegc ,_dbcg ,_gdaaf ,_efedf ,_adafb ,_eeaa );
_eddgg .AddContentStreamByString (_efafa );return nil ;};func (_gadd *PdfPage )getParentResources ()(*PdfPageResources ,error ){_abacg :=_gadd .Parent ;for _abacg !=nil {_gggff ,_eccgb :=_bda .GetDict (_abacg );if !_eccgb {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_gea .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _ebbcg :=_gggff .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ebbcg !=nil {_ggbc ,_abegb :=_bda .GetDict (_ebbcg );
if !_abegb {return nil ,_gea .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_fcaf ,_ffadf :=NewPdfPageResourcesFromDict (_ggbc );if _ffadf !=nil {return nil ,_ffadf ;};return _fcaf ,nil ;
};_abacg =_gggff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_eecbe *PdfReader )GetIndirectObjectByNumber (number int )(_bda .PdfObject ,error ){_fbgac ,_ebdbb :=_eecbe ._fdadg .LookupByNumber (number );return _fbgac ,_ebdbb ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_agfab *PdfPageResources )SetXObjectByName (keyName _bda .PdfObjectName ,stream *_bda .PdfObjectStream )error {if _agfab .XObject ==nil {_agfab .XObject =_bda .MakeDict ();};_cgegb :=_bda .TraceToDirectObject (_agfab .XObject );_eecga ,_ggedg :=_cgegb .(*_bda .PdfObjectDictionary );
if !_ggedg {_ed .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_agfab .XObject ,_cgegb );return _gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_eecga .Set (keyName ,stream );return nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_ccbb *_bda .PdfIndirectObject ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_daba *PdfFont )BytesToCharcodes (data []byte )[]_dgb .CharCode {_ed .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _ccaf ,_ccdd :=_daba ._ggada .(*pdfFontType0 );_ccdd &&_ccaf ._fbcb !=nil {if _dgffc ,_fdgc :=_ccaf .bytesToCharcodes (data );_fdgc {return _dgffc ;};};var (_cecce =make ([]_dgb .CharCode ,0,len (data )+len (data )%2);_fafc =_daba .baseFields (););if _fafc ._eeed !=nil {if _aeea ,_bgbee :=_fafc ._eeed .BytesToCharcodes (data );
_bgbee {for _ ,_gegde :=range _aeea {_cecce =append (_cecce ,_dgb .CharCode (_gegde ));};return _cecce ;};};if _fafc .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _dbdf :=0;_dbdf < len (data );_dbdf +=2{_deee :=uint16 (data [_dbdf ])<<8|uint16 (data [_dbdf +1]);_cecce =append (_cecce ,_dgb .CharCode (_deee ));};}else {for _ ,_ebgg :=range data {_cecce =append (_cecce ,_dgb .CharCode (_ebgg ));
};};return _cecce ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_ccfbe *PdfPage )GetPageAsIndirectObject ()*_bda .PdfIndirectObject {return _ccfbe ._eebfa };

// ToPdfObject convert PdfInfo to pdf object.
func (_cfec *PdfInfo )ToPdfObject ()_bda .PdfObject {_ebcf :=_bda .MakeDict ();_ebcf .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_cfec .Title );_ebcf .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_cfec .Author );_ebcf .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_cfec .Subject );
_ebcf .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cfec .Keywords );_ebcf .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_cfec .Creator );_ebcf .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cfec .Producer );
_ebcf .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_cfec .Trapped );if _cfec .CreationDate !=nil {_ebcf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cfec .CreationDate .ToPdfObject ());};if _cfec .ModifiedDate !=nil {_ebcf .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_cfec .ModifiedDate .ToPdfObject ());
};for _ ,_ffee :=range _cfec ._feec .Keys (){_ebcf .SetIfNotNil (_ffee ,_cfec ._feec .Get (_ffee ));};return _ebcf ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fgdeg _bda .PdfObject ;};func (_eaace *PdfWriter )setHashIDs (_edceg _cg .Hash )error {_bbcfd :=_edceg .Sum (nil );if _eaace ._gcbgf ==""{_eaace ._gcbgf =_de .EncodeToString (_bbcfd [:8]);
};_eaace .setDocumentIDs (_eaace ._gcbgf ,_de .EncodeToString (_bbcfd [8:]));return nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_dgff FieldFlag )Mask ()uint32 {return uint32 (_dgff )};

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_feccd *PdfWriter )SetCatalogMarkInfo (info _bda .PdfObject )error {if info ==nil {_feccd ._geadba .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _fdaad ,_gaabb :=info .(*_bda .PdfObjectReference );_gaabb {info =_fdaad .Resolve ();
if info ==nil {_feccd ._geadba .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};_feccd .addObject (info );_feccd ._geadba .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );return nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fbdce *PdfField )Flags ()FieldFlag {var _bccce FieldFlag ;_bdbf ,_afdfd :=_fbdce .inherit (func (_ddcfa *PdfField )bool {if _ddcfa .Ff !=nil {_bccce =FieldFlag (*_ddcfa .Ff );return true ;};return false ;});if _afdfd !=nil {_ed .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_afdfd );
};if !_bdbf {_ed .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _bccce ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_gadb *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acbe ,_eaea :=_bda .GetNumbersAsFloat (objects );
if _eaea !=nil {return nil ,_eaea ;};return _gadb .ColorFromFloats (_acbe );};func (_becdg *PdfReader )traverseObjectData (_cgeef _bda .PdfObject )error {return _bda .ResolveReferencesDeep (_cgeef ,_becdg ._efag );};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_gdfae *PdfFont )CharcodesToUnicode (charcodes []_dgb .CharCode )[]rune {_eaeb ,_ ,_ :=_gdfae .CharcodesToUnicodeWithStats (charcodes );return _eaeb ;};func (_egde *Image )samplesTrimPadding (_gcgfd []uint32 )[]uint32 {_dbdc :=_egde .ColorComponents *int (_egde .Width )*int (_egde .Height );
if len (_gcgfd )==_dbdc {return _gcgfd ;};_eecef :=make ([]uint32 ,_dbdc );_gcfaf :=int (_egde .Width )*_egde .ColorComponents ;var _aabab ,_dddcg ,_cdgba ,_cabgfe int ;_efbea :=_bg .BytesPerLine (int (_egde .Width ),int (_egde .BitsPerComponent ),_egde .ColorComponents );
for _aabab =0;_aabab < int (_egde .Height );_aabab ++{_dddcg =_aabab *int (_egde .Width );_cdgba =_aabab *_efbea ;for _cabgfe =0;_cabgfe < _gcfaf ;_cabgfe ++{_eecef [_dddcg +_cabgfe ]=_gcgfd [_cdgba +_cabgfe ];};};return _eecef ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bda .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bda .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bda .PdfObjectBool ;_cdded PdfModel ;_gfdga _bda .PdfObject ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_bge :=NewPdfAction ();_gdf :=&PdfActionHide {};_gdf .PdfAction =_bge ;_bge .SetContext (_gdf );return _gdf ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_fdaac *CompliancePdfReader )error ;};func _gbdca (_eebf *_bda .PdfObjectDictionary )(*PdfFieldChoice ,error ){_befdd :=&PdfFieldChoice {};_befdd .Opt ,_ =_bda .GetArray (_eebf .Get ("\u004f\u0070\u0074"));_befdd .TI ,_ =_bda .GetInt (_eebf .Get ("\u0054\u0049"));
_befdd .I ,_ =_bda .GetArray (_eebf .Get ("\u0049"));return _befdd ,nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_cefabf *pdfSignDictionary )GetSubFilter ()string {_dfecd :=_cefabf .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dfecd ==nil {return "";};if _fbedg ,_gfgab :=_bda .GetNameVal (_dfecd );_gfgab {return _fbedg ;};return "";};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func _efgcc (_edbag _ga .ReadSeeker ,_bgaea *ReaderOpts ,_gcegc bool ,_eaegb string )(*PdfReader ,error ){if _bgaea ==nil {_bgaea =NewReaderOpts ();};_egadc :="";if _fbfc ,_ggca :=_edbag .(*_dfc .File );_ggca {_egadc =_fbfc .Name ();
};_gefgf :=*_bgaea ;_cdbaf :=&PdfReader {_adacg :_edbag ,_efag :map[_bda .PdfObject ]struct{}{},_gbdfa :_abdd (),_aaece :_bgaea .LazyLoad ,_caadg :_bgaea .ComplianceMode ,_cadf :_gcegc ,_afdbe :&_gefgf ,_gcbfae :_egadc };_bdec ,_bbcdb :=_fbcbf ("\u0072");
if _bbcdb !=nil {return nil ,_bbcdb ;};_bbcdb =_dfb .Track (_bdec ,_eaegb ,_cdbaf ._gcbfae );if _bbcdb !=nil {return nil ,_bbcdb ;};_cdbaf ._gbcfb =_bdec ;var _efdaf *_bda .PdfParser ;if !_cdbaf ._caadg {_efdaf ,_bbcdb =_bda .NewParser (_edbag );}else {_efdaf ,_bbcdb =_bda .NewCompliancePdfParser (_edbag );
};if _bbcdb !=nil {return nil ,_bbcdb ;};_cdbaf ._fdadg =_efdaf ;_cbfaf ,_bbcdb :=_cdbaf .IsEncrypted ();if _bbcdb !=nil {return nil ,_bbcdb ;};if !_cbfaf {_bbcdb =_cdbaf .loadStructure ();if _bbcdb !=nil {return nil ,_bbcdb ;};}else if _gcegc {_dddbe ,_eceae :=_cdbaf .Decrypt ([]byte (_bgaea .Password ));
if _eceae !=nil {return nil ,_eceae ;};if !_dddbe {return nil ,_gea .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_cdbaf ._gdfcc =make (map[*PdfReader ]*PdfReader );_cdbaf ._aaefc =make ([]*PdfReader ,_efdaf .GetRevisionNumber ());return _cdbaf ,nil ;};func _bgbcb ()string {_ggbe .Lock ();defer _ggbe .Unlock ();_cgdea :=_dfb .GetLicenseKey ();if len (_afabf )> 0&&(_cgdea .IsLicensed ()||_cbbeb ){return _afabf ;
};return _c .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_efdg (),_cgdea .TypeToString ());};

// GetContainingPdfObject implements interface PdfModel.
func (_afb *PdfAction )GetContainingPdfObject ()_bda .PdfObject {return _afb ._gg };

// GetContainingPdfObject implements interface PdfModel.
func (_ccgca *PdfSignatureReference )GetContainingPdfObject ()_bda .PdfObject {return _ccgca ._efgcdg };

// WriteString outputs the object as it is to be written to file.
func (_dggcb *pdfSignDictionary )WriteString ()string {_dggcb ._gcgda =0;_dggcb ._dgeg =0;_dggcb ._cafdg =0;_dggcb ._eafbd =0;_dgaef :=_dff .NewBuffer (nil );_dgaef .WriteString ("\u003c\u003c");for _ ,_eeedf :=range _dggcb .Keys (){_fffge :=_dggcb .Get (_eeedf );
switch _eeedf {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_dgaef .WriteString (_eeedf .WriteString ());_dgaef .WriteString ("\u0020");_dggcb ._cafdg =_dgaef .Len ();_dgaef .WriteString (_fffge .WriteString ());_dgaef .WriteString ("\u0020");_dggcb ._eafbd =_dgaef .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_dgaef .WriteString (_eeedf .WriteString ());_dgaef .WriteString ("\u0020");_dggcb ._gcgda =_dgaef .Len ();_dgaef .WriteString (_fffge .WriteString ());_dgaef .WriteString ("\u0020");_dggcb ._dgeg =_dgaef .Len ()-1;
default:_dgaef .WriteString (_eeedf .WriteString ());_dgaef .WriteString ("\u0020");_dgaef .WriteString (_fffge .WriteString ());};};_dgaef .WriteString ("\u003e\u003e");return _dgaef .String ();};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_faage *modelManager )GetModelFromPrimitive (primitive _bda .PdfObject )PdfModel {model ,_fbde :=_faage ._afaad [primitive ];if !_fbde {return nil ;};return model ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_agbed *LTV )EnableByName (name string ,extraCerts []*_bd .Certificate )error {_fdbb :=_agbed ._ecfbf ._babd .AcroForm ;for _ ,_ggccg :=range _fdbb .AllFields (){_accadf ,_ :=_ggccg .GetContext ().(*PdfFieldSignature );if _accadf ==nil {continue ;
};if _adbac :=_accadf .PartialName ();_adbac !=name {continue ;};return _agbed .Enable (_accadf .V ,extraCerts );};return nil ;};

// PrintArea returns the value of the printArea.
func (_ecbba *ViewerPreferences )PrintArea ()PageBoundary {return _ecbba ._geeda };

// GetFontDescriptor returns the font descriptor for `font`.
func (_fgfge PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fgfge ._ggada .getFontDescriptor (),nil ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_eee :=&PdfColorPattern {};return _eee };

// SetDisplayDocTitle sets the value of the displayDocTitle flag.
func (_efgbd *ViewerPreferences )SetDisplayDocTitle (displayDocTitle bool ){_efgbd ._ddeed =&displayDocTitle ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_bace *VRI )ToPdfObject ()*_bda .PdfObjectDictionary {_cebf :=_bda .MakeDict ();_cebf .SetIfNotNil (_bda .PdfObjectName ("\u0043\u0065\u0072\u0074"),_dabab (_bace .Cert ));_cebf .SetIfNotNil (_bda .PdfObjectName ("\u004f\u0043\u0053\u0050"),_dabab (_bace .OCSP ));
_cebf .SetIfNotNil (_bda .PdfObjectName ("\u0043\u0052\u004c"),_dabab (_bace .CRL ));_cebf .SetIfNotNil ("\u0054\u0055",_bace .TU );_cebf .SetIfNotNil ("\u0054\u0053",_bace .TS );return _cebf ;};

// SetPageNumber sets the page number.
func (_ggefd *KDict )SetPageNumber (pageNumber int64 ){_ggefd ._adceg =pageNumber };func (_cbad *PdfWriter )seekByName (_gccca _bda .PdfObject ,_bcaag []string ,_fdefa string )([]_bda .PdfObject ,error ){_ed .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gccca );
var _eedfca []_bda .PdfObject ;if _eggdc ,_gbgbc :=_gccca .(*_bda .PdfIndirectObject );_gbgbc {return _cbad .seekByName (_eggdc .PdfObject ,_bcaag ,_fdefa );};if _bafeg ,_cgbea :=_gccca .(*_bda .PdfObjectStream );_cgbea {return _cbad .seekByName (_bafeg .PdfObjectDictionary ,_bcaag ,_fdefa );
};if _cedab ,_fgcaa :=_gccca .(*_bda .PdfObjectDictionary );_fgcaa {_ed .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_aeafdb :=range _cedab .Keys (){_gbafe :=_cedab .Get (_aeafdb );if string (_aeafdb )==_fdefa {_eedfca =append (_eedfca ,_gbafe );};for _ ,_cbfd :=range _bcaag {if string (_aeafdb )==_cbfd {_ed .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_cbfd );
_daggc ,_aeeadb :=_cbad .seekByName (_gbafe ,_bcaag ,_fdefa );if _aeeadb !=nil {return _eedfca ,_aeeadb ;};_eedfca =append (_eedfca ,_daggc ...);break ;};};};return _eedfca ,nil ;};return _eedfca ,nil ;};

// HasExtGState checks if ExtGState name is available.
func (_fgfcb *PdfPage )HasExtGState (name _bda .PdfObjectName )bool {if _fgfcb .Resources ==nil {return false ;};if _fgfcb .Resources .ExtGState ==nil {return false ;};_dagea ,_gdcda :=_bda .TraceToDirectObject (_fgfcb .Resources .ExtGState ).(*_bda .PdfObjectDictionary );
if !_gdcda {_ed .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bda .TraceToDirectObject (_fgfcb .Resources .ExtGState ));
return false ;};_edddd :=_dagea .Get (name );_egfaf :=_edddd !=nil ;return _egfaf ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bda .PdfObject ;Name _bda .PdfObject ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_eebg :=NewPdfAnnotation ();_cae :=&PdfAnnotationFileAttachment {};_cae .PdfAnnotation =_eebg ;_cae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eebg .SetContext (_cae );return _cae ;
};

// Encoder returns the font's text encoder.
func (_egdae pdfFontType0 )Encoder ()_dgb .TextEncoder {return _egdae ._geed };

// SetAlpha sets the alpha layer for the image.
func (_eebgb *Image )SetAlpha (alpha []byte ){_eebgb ._ffbd =alpha };

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_dffgb :=Permissions {};_dffgb .DocMDP =docMdp ;_beff :=_bda .MakeDict ();_beff .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_dffgb ._gefba =_beff ;return &_dffgb ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ecbgc *PdfColorspaceSpecialIndexed )ToPdfObject ()_bda .PdfObject {_cdcb :=_bda .MakeArray (_bda .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cdcb .Append (_ecbgc .Base .ToPdfObject ());_cdcb .Append (_bda .MakeInteger (int64 (_ecbgc .HiVal )));
_cdcb .Append (_ecbgc .Lookup );if _ecbgc ._agcda !=nil {_ecbgc ._agcda .PdfObject =_cdcb ;return _ecbgc ._agcda ;};return _cdcb ;};func (_dgdc *PdfReader )flattenFieldsWithOpts (_beaa bool ,_fccbb FieldAppearanceGenerator ,_cfgb *FieldFlattenOpts )error {if _cfgb ==nil {_cfgb =&FieldFlattenOpts {};
};var _ebfg bool ;_cadc :=map[*PdfAnnotation ]bool {};{var _fbee []*PdfField ;_ceceg :=_dgdc .AcroForm ;if _ceceg !=nil {if _cfgb .FilterFunc !=nil {_fbee =_ceceg .filteredFields (_cfgb .FilterFunc ,true );_ebfg =_ceceg .Fields !=nil &&len (*_ceceg .Fields )> 0;
}else {_fbee =_ceceg .AllFields ();};};for _ ,_cgbb :=range _fbee {if len (_cgbb .Annotations )< 1{_ed .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_cgbb .PartialName ());
for _afdbg ,_faedg :=range _cgbb .Kids {for _ ,_gabc :=range _faedg .Annotations {_cadc [_gabc .PdfAnnotation ]=_cgbb .V !=nil ;if _faedg .V ==nil {_faedg .V =_cgbb .V ;};if _faedg .T ==nil {_faedg .T =_bda .MakeString (_c .Sprintf ("\u0025\u0073\u0023%\u0064",_cgbb .PartialName (),_afdbg ));
};if _fccbb !=nil {_ffba ,_gade :=_fccbb .GenerateAppearanceDict (_ceceg ,_faedg ,_gabc );if _gade !=nil {return _gade ;};_gabc .AP =_ffba ;};};};};for _ ,_ceaff :=range _cgbb .Annotations {_cadc [_ceaff .PdfAnnotation ]=_cgbb .V !=nil ;if _fccbb !=nil {_cgad ,_gebbe :=_fccbb .GenerateAppearanceDict (_ceceg ,_cgbb ,_ceaff );
if _gebbe !=nil {return _gebbe ;};_ceaff .AP =_cgad ;};};};};if _beaa {for _ ,_cfgda :=range _dgdc .PageList {_gfdg ,_befac :=_cfgda .GetAnnotations ();if _befac !=nil {return _befac ;};for _ ,_ccba :=range _gfdg {_cadc [_ccba ]=true ;};};};for _ ,_cfbgf :=range _dgdc .PageList {_gfaf :=_cfbgf .flattenFieldsWithOpts (_fccbb ,_cfgb ,_cadc );
if _gfaf !=nil {return _gfaf ;};};if !_ebfg {_dgdc .AcroForm =nil ;};return nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_fdgcg *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _fdgcg ._dgaed .(*PdfTilingPattern );};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gcfgb *PdfWriter )SetNamedDestinations (dests _bda .PdfObject )error {if dests ==nil {return nil ;};_ed .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_gcfgb ._geadba .Set ("\u0044\u0065\u0073t\u0073",dests );return _gcfgb .addObjects (dests );};

// ToPdfObject implements interface PdfModel.
func (_dbbf *PdfAnnotationCaret )ToPdfObject ()_bda .PdfObject {_dbbf .PdfAnnotation .ToPdfObject ();_dae :=_dbbf ._ged ;_gbbc :=_dae .PdfObject .(*_bda .PdfObjectDictionary );_dbbf .PdfAnnotationMarkup .appendToPdfDictionary (_gbbc );_gbbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0043\u0061\u0072e\u0074"));
_gbbc .SetIfNotNil ("\u0052\u0044",_dbbf .RD );_gbbc .SetIfNotNil ("\u0053\u0079",_dbbf .Sy );return _dae ;};func (_dbeg *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func _bbfcg ()string {_ggbe .Lock ();defer _ggbe .Unlock ();
return _cgccb };

// ToPdfObject implements interface PdfModel.
func (_ae *PdfActionRendition )ToPdfObject ()_bda .PdfObject {_ae .PdfAction .ToPdfObject ();_eecg :=_ae ._gg ;_ecd :=_eecg .PdfObject .(*_bda .PdfObjectDictionary );_ecd .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeRendition )));_ecd .SetIfNotNil ("\u0052",_ae .R );
_ecd .SetIfNotNil ("\u0041\u004e",_ae .AN );_ecd .SetIfNotNil ("\u004f\u0050",_ae .OP );_ecd .SetIfNotNil ("\u004a\u0053",_ae .JS );return _eecg ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_bda .PdfParser ;DiffPolicy _gef .DiffPolicy ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_dfeff *Outline )ToPdfOutline ()*PdfOutline {_acaf :=NewPdfOutline ();var _gcfbb []*PdfOutlineItem ;var _cbaa int64 ;var _cfcdd *PdfOutlineItem ;for _ ,_bccf :=range _dfeff .Entries {_ggega ,_ddfd :=_bccf .ToPdfOutlineItem ();_ggega .Parent =&_acaf .PdfOutlineTreeNode ;
if _cfcdd !=nil {_cfcdd .Next =&_ggega .PdfOutlineTreeNode ;_ggega .Prev =&_cfcdd .PdfOutlineTreeNode ;};_gcfbb =append (_gcfbb ,_ggega );_cbaa +=_ddfd ;_cfcdd =_ggega ;};_ddacc :=int64 (len (_gcfbb ));_cbaa +=_ddacc ;if _ddacc > 0{_acaf .First =&_gcfbb [0].PdfOutlineTreeNode ;
_acaf .Last =&_gcfbb [_ddacc -1].PdfOutlineTreeNode ;_acaf .Count =&_cbaa ;};return _acaf ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cadec pdfFontType3 )GetRuneMetrics (r rune )(_geg .CharMetrics ,bool ){_decae :=_cadec .Encoder ();if _decae ==nil {_ed .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cadec );
return _geg .CharMetrics {},false ;};_aagf ,_cdagd :=_decae .RuneToCharcode (r );if !_cdagd {if r !=' '{_ed .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cadec );
};return _geg .CharMetrics {},false ;};_dddc ,_ffagd :=_cadec .GetCharMetrics (_aagf );return _dddc ,_ffagd ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fecf *XObjectForm )SetContentStream (content []byte ,encoder _bda .StreamEncoder )error {_gcgba :=content ;if encoder ==nil {if _fecf .Filter !=nil {encoder =_fecf .Filter ;}else {encoder =_bda .NewRawEncoder ();};};_abdag ,_aaedd :=encoder .EncodeBytes (_gcgba );
if _aaedd !=nil {return _aaedd ;};_gcgba =_abdag ;_fecf .Stream =_gcgba ;_fecf .Filter =encoder ;return nil ;};func _gbdd (_dcba *_bda .PdfObjectDictionary )(*PdfFieldText ,error ){_dgbg :=&PdfFieldText {};_dgbg .DA ,_ =_bda .GetString (_dcba .Get ("\u0044\u0041"));
_dgbg .Q ,_ =_bda .GetInt (_dcba .Get ("\u0051"));_dgbg .DS ,_ =_bda .GetString (_dcba .Get ("\u0044\u0053"));_dgbg .RV =_dcba .Get ("\u0052\u0056");_dgbg .MaxLen ,_ =_bda .GetInt (_dcba .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _dgbg ,nil ;
};

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fgcg *PdfPageResources )SetXObjectImageByNameLazy (keyName _bda .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_efca :=ximg .ToPdfObject ().(*_bda .PdfObjectStream );if lazy {_efca .MakeLazy ();};_abfcb :=_fgcg .SetXObjectByName (keyName ,_efca );
return _abfcb ;};

// ToPdfObject implements interface PdfModel.
func (_ag *PdfActionMovie )ToPdfObject ()_bda .PdfObject {_ag .PdfAction .ToPdfObject ();_gga :=_ag ._gg ;_ba :=_gga .PdfObject .(*_bda .PdfObjectDictionary );_ba .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeMovie )));_ba .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_ag .Annotation );
_ba .SetIfNotNil ("\u0054",_ag .T );_ba .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_ag .Operation );return _gga ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_dgde OutlineDest )ToPdfObject ()_bda .PdfObject {if (_dgde .PageObj ==nil &&_dgde .Page < 0)||_dgde .Mode ==""{return _bda .MakeNull ();};_cdge :=_bda .MakeArray ();if _dgde .PageObj !=nil {_cdge .Append (_dgde .PageObj );}else {_cdge .Append (_bda .MakeInteger (_dgde .Page ));
};_cdge .Append (_bda .MakeName (_dgde .Mode ));switch _dgde .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_cdge .Append (_bda .MakeFloat (_dgde .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_cdge .Append (_bda .MakeFloat (_dgde .X ));
case "\u0058\u0059\u005a":_cdge .Append (_bda .MakeFloat (_dgde .X ));_cdge .Append (_bda .MakeFloat (_dgde .Y ));_cdge .Append (_bda .MakeFloat (_dgde .Zoom ));default:_cdge .Set (1,_bda .MakeName ("\u0046\u0069\u0074"));};return _cdge ;};var _ pdfFont =(*pdfFontType3 )(nil );


// ToPdfObject implements interface PdfModel.
func (_bed *PdfActionLaunch )ToPdfObject ()_bda .PdfObject {_bed .PdfAction .ToPdfObject ();_bbb :=_bed ._gg ;_ac :=_bbb .PdfObject .(*_bda .PdfObjectDictionary );_ac .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeLaunch )));if _bed .F !=nil {_ac .Set ("\u0046",_bed .F .ToPdfObject ());
};_ac .SetIfNotNil ("\u0057\u0069\u006e",_bed .Win );_ac .SetIfNotNil ("\u004d\u0061\u0063",_bed .Mac );_ac .SetIfNotNil ("\u0055\u006e\u0069\u0078",_bed .Unix );_ac .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bed .NewWindow );return _bbb ;
};func (_cgbae *PdfWriter )writeDocumentVersion (){if _cgbae ._eccfc {_cgbae .writeString ("\u000a");}else {_cgbae .writeString (_c .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_cgbae ._cdbbdg .Major ,_cgbae ._cdbbdg .Minor ));
_cgbae .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_bgefe *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _bgefe .flattenFieldsWithOpts (false ,appgen ,opts );};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_bacfd *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bacfd .AlternateSpace ==nil {return nil ,_gea .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _bacfd .AlternateSpace .ColorToRGB (color );};func (_ebfga *PdfWriter )writeObject (_eedaf int ,_bddfg _bda .PdfObject ){_ed .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_eedaf );if _ccead ,_feabf :=_bddfg .(*_bda .PdfIndirectObject );
_feabf {_ebfga ._fcbcd [_eedaf ]=crossReference {Type :1,Offset :_ebfga ._fcdda ,Generation :_ccead .GenerationNumber };_bfefg :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_eedaf );if _cbebb ,_eefca :=_ccead .PdfObject .(*pdfSignDictionary );
_eefca {_cbebb ._dbebg =_ebfga ._fcdda +int64 (len (_bfefg ));};if _ccead .PdfObject ==nil {_ed .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_ccead .PdfObject =_bda .MakeNull ();};_bfefg +=_ccead .PdfObject .WriteString ();_bfefg +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_ebfga .writeString (_bfefg );return ;};if _faddg ,_caffc :=_bddfg .(*_bda .PdfObjectStream );_caffc {_ebfga ._fcbcd [_eedaf ]=crossReference {Type :1,Offset :_ebfga ._fcdda ,Generation :_faddg .GenerationNumber };
_eedb :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_eedaf );_eedb +=_faddg .PdfObjectDictionary .WriteString ();_eedb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ebfga .writeString (_eedb );if _faddg .Lazy {_efcfc ,_bacag :=_dfc .ReadFile (_faddg .TempFile );
if _bacag !=nil {_ed .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_faddg .TempFile );return ;};_ebfga .writeBytes (_efcfc );
_dfc .Remove (_faddg .TempFile );}else {_ebfga .writeBytes (_faddg .Stream );};_ebfga .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _ecggf ,_eefab :=_bddfg .(*_bda .PdfObjectStreams );
_eefab {_ebfga ._fcbcd [_eedaf ]=crossReference {Type :1,Offset :_ebfga ._fcdda ,Generation :_ecggf .GenerationNumber };_cfcge :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_eedaf );var _fgeec []string ;var _geedae string ;var _bdccg int64 ;
for _aedge ,_egcca :=range _ecggf .Elements (){_egegg ,_degbg :=_egcca .(*_bda .PdfIndirectObject );if !_degbg {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_eedaf ,_egcca );
continue ;};_beegcb :=_egegg .PdfObject .WriteString ()+"\u0020";_geedae =_geedae +_beegcb ;_fgeec =append (_fgeec ,_c .Sprintf ("\u0025\u0064\u0020%\u0064",_egegg .ObjectNumber ,_bdccg ));_ebfga ._fcbcd [int (_egegg .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_eedaf ,Index :_aedge };
_bdccg =_bdccg +int64 (len ([]byte (_beegcb )));};_efgfc :=_ab .Join (_fgeec ,"\u0020")+"\u0020";_afdgdb :=_bda .NewFlateEncoder ();_defaad :=_afdgdb .MakeStreamDict ();_defaad .Set (_bda .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bda .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_fggbc :=int64 (_ecggf .Len ());_defaad .Set (_bda .PdfObjectName ("\u004e"),_bda .MakeInteger (_fggbc ));_bafdf :=int64 (len (_efgfc ));_defaad .Set (_bda .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bda .MakeInteger (_bafdf ));_cccbd ,_ :=_afdgdb .EncodeBytes ([]byte (_efgfc +_geedae ));
_dfgdb :=int64 (len (_cccbd ));_defaad .Set (_bda .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bda .MakeInteger (_dfgdb ));_cfcge +=_defaad .WriteString ();_cfcge +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ebfga .writeString (_cfcge );
_ebfga .writeBytes (_cccbd );_ebfga .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_ebfga .writeString (_bddfg .WriteString ());};func (_acd *PdfReader )loadAction (_bac _bda .PdfObject )(*PdfAction ,error ){if _afdg ,_debd :=_bda .GetIndirect (_bac );
_debd {_acae ,_bdfd :=_acd .newPdfActionFromIndirectObject (_afdg );if _bdfd !=nil {return nil ,_bdfd ;};return _acae ,nil ;}else if !_bda .IsNullObject (_bac ){return nil ,_gea .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_fcfge *PdfOutputIntent )ParsePdfObject (object _bda .PdfObject )error {_cegdcd ,_adece :=_bda .GetDict (object );if !_adece {_ed .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _gea .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_fcfge ._abccce =_cegdcd ;_fcfge .Type ,_ =_cegdcd .GetString ("\u0054\u0079\u0070\u0065");_bcfe ,_adece :=_cegdcd .GetString ("\u0053");if _adece {switch _bcfe {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_fcfge .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_fcfge .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_fcfge .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_fcfge .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_fcfge .S =PdfOutputIntentTypeX ;
};};_fcfge .OutputCondition ,_ =_cegdcd .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_fcfge .OutputConditionIdentifier ,_ =_cegdcd .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_fcfge .RegistryName ,_ =_cegdcd .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_fcfge .Info ,_ =_cegdcd .GetString ("\u0049\u006e\u0066\u006f");if _gbdfed ,_ggdcc :=_bda .GetStream (_cegdcd .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_ggdcc {_fcfge .ColorComponents ,_ =_bda .GetIntVal (_gbdfed .Get ("\u004e"));_cedde ,_bbbded :=_bda .DecodeStream (_gbdfed );if _bbbded !=nil {return _bbbded ;};_fcfge .DestOutputProfile =_cedde ;};return nil ;};func (_degbgg *PdfWriter )writeObjects (){_ed .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_degbgg ._ccbbg ));
_degbgg ._fcbcd =make (map[int ]crossReference );_degbgg ._fcbcd [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _degbgg ._bffca .ObjectMap !=nil {for _eadfa ,_bbaaf :=range _degbgg ._bffca .ObjectMap {if _eadfa ==0{continue ;};if _bbaaf .XType ==_bda .XrefTypeObjectStream {_aadbf :=crossReference {Type :2,ObjectNumber :_bbaaf .OsObjNumber ,Index :_bbaaf .OsObjIndex };
_degbgg ._fcbcd [_eadfa ]=_aadbf ;};if _bbaaf .XType ==_bda .XrefTypeTableEntry {_dadfcd :=crossReference {Type :1,ObjectNumber :_bbaaf .ObjectNumber ,Offset :_bbaaf .Offset };_degbgg ._fcbcd [_eadfa ]=_dadfcd ;};};};};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_fabf *PdfPage )AddContentStreamByString (contentStr string )error {_gbfcg ,_cdgbg :=_bda .MakeStream ([]byte (contentStr ),_bda .NewFlateEncoder ());if _cdgbg !=nil {return _cdgbg ;};if _fabf .Contents ==nil {_fabf .Contents =_gbfcg ;}else {_agada :=_bda .TraceToDirectObject (_fabf .Contents );
_afbb ,_edbfa :=_agada .(*_bda .PdfObjectArray );if !_edbfa {_afbb =_bda .MakeArray (_agada );};_afbb .Append (_gbfcg );_fabf .Contents =_afbb ;};return nil ;};func (_dfbfce *PdfWriter )adjustXRefAffectedVersion (_egdead bool ){if _egdead &&_dfbfce ._cdbbdg .Major ==1&&_dfbfce ._cdbbdg .Minor < 5{_dfbfce ._cdbbdg .Minor =5;
};};func _bebb (_edafb *_bda .PdfObjectStream )(*PdfFunctionType4 ,error ){_baeec :=&PdfFunctionType4 {};_baeec ._eadd =_edafb ;_adbcc :=_edafb .PdfObjectDictionary ;_dgdf ,_baaad :=_bda .TraceToDirectObject (_adbcc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bda .PdfObjectArray );
if !_baaad {_ed .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _dgdf .Len ()%2!=0{_ed .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_gea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bbage ,_bbffd :=_dgdf .ToFloat64Array ();
if _bbffd !=nil {return nil ,_bbffd ;};_baeec .Domain =_bbage ;_dgdf ,_baaad =_bda .TraceToDirectObject (_adbcc .Get ("\u0052\u0061\u006eg\u0065")).(*_bda .PdfObjectArray );if _baaad {if _dgdf .Len ()< 0||_dgdf .Len ()%2!=0{return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_edabf ,_gdff :=_dgdf .ToFloat64Array ();if _gdff !=nil {return nil ,_gdff ;};_baeec .Range =_edabf ;};_cafa ,_bbffd :=_bda .DecodeStream (_edafb );if _bbffd !=nil {return nil ,_bbffd ;};_baeec ._bedf =_cafa ;_fcegb :=_gag .NewPSParser (_cafa );_dcgaa ,_bbffd :=_fcegb .Parse ();
if _bbffd !=nil {return nil ,_bbffd ;};_baeec .Program =_dcgaa ;return _baeec ,nil ;};

// PickTrayByPDFSize returns the value of the pickTrayByPDFSize flag.
func (_daebb *ViewerPreferences )PickTrayByPDFSize ()bool {if _daebb ._eedfcc ==nil {return false ;};return *_daebb ._eedfcc ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_abccce *_bda .PdfObjectDictionary ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gbggff *_bda .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bda .PdfObjectName ;Filter *_bda .PdfObjectName ;SubFilter *_bda .PdfObjectName ;Contents *_bda .PdfObjectString ;Cert _bda .PdfObject ;ByteRange *_bda .PdfObjectArray ;Reference *_bda .PdfObjectArray ;Changes *_bda .PdfObjectArray ;Name *_bda .PdfObjectString ;
M *_bda .PdfObjectString ;Location *_bda .PdfObjectString ;Reason *_bda .PdfObjectString ;ContactInfo *_bda .PdfObjectString ;R *_bda .PdfObjectInteger ;V *_bda .PdfObjectInteger ;PropBuild *_bda .PdfObjectDictionary ;PropAuthTime *_bda .PdfObjectInteger ;
PropAuthType *_bda .PdfObjectName ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_bebag *_bda .PdfIndirectObject ;Certs []*_bda .PdfObjectStream ;OCSPs []*_bda .PdfObjectStream ;CRLs []*_bda .PdfObjectStream ;VRI map[string ]*VRI ;_fega map[string ]*_bda .PdfObjectStream ;_bcdc map[string ]*_bda .PdfObjectStream ;_fbed map[string ]*_bda .PdfObjectStream ;
};

// ToInteger convert to an integer format.
func (_bffg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gccc :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gccc *_bffg .R ()),uint32 (_gccc *_bffg .G ()),uint32 (_gccc *_bffg .B ())};};

// GetNumComponents returns the number of color components (3 for Lab).
func (_gffdc *PdfColorLab )GetNumComponents ()int {return 3};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_fccaf *Image )SetSamples (samples []uint32 ){if _fccaf .BitsPerComponent < 8{samples =_fccaf .samplesAddPadding (samples );};_gedb :=_cf .ResampleUint32 (samples ,int (_fccaf .BitsPerComponent ),8);_cadeb :=make ([]byte ,len (_gedb ));for _ffeg ,_cgdab :=range _gedb {_cadeb [_ffeg ]=byte (_cgdab );
};_fccaf .Data =_cadeb ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fgede *PdfPageResources )SetXObjectImageByName (keyName _bda .PdfObjectName ,ximg *XObjectImage )error {_bgcbg :=ximg .ToPdfObject ().(*_bda .PdfObjectStream );_ggfdg :=_fgede .SetXObjectByName (keyName ,_bgcbg );return _ggfdg ;};

// ToPdfObject returns the PDF representation of the function.
func (_affdf *PdfFunctionType3 )ToPdfObject ()_bda .PdfObject {_ffgbc :=_bda .MakeDict ();_ffgbc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bda .MakeInteger (3));_fdbag :=&_bda .PdfObjectArray {};for _ ,_fbgd :=range _affdf .Domain {_fdbag .Append (_bda .MakeFloat (_fbgd ));
};_ffgbc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fdbag );if _affdf .Range !=nil {_gebaa :=&_bda .PdfObjectArray {};for _ ,_bgecf :=range _affdf .Range {_gebaa .Append (_bda .MakeFloat (_bgecf ));};_ffgbc .Set ("\u0052\u0061\u006eg\u0065",_gebaa );
};if _affdf .Functions !=nil {_afddg :=&_bda .PdfObjectArray {};for _ ,_defgf :=range _affdf .Functions {_afddg .Append (_defgf .ToPdfObject ());};_ffgbc .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_afddg );};if _affdf .Bounds !=nil {_gbfbg :=&_bda .PdfObjectArray {};
for _ ,_bfdee :=range _affdf .Bounds {_gbfbg .Append (_bda .MakeFloat (_bfdee ));};_ffgbc .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_gbfbg );};if _affdf .Encode !=nil {_cfcg :=&_bda .PdfObjectArray {};for _ ,_fdeff :=range _affdf .Encode {_cfcg .Append (_bda .MakeFloat (_fdeff ));
};_ffgbc .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_cfcg );};if _affdf ._dbgca !=nil {_affdf ._dbgca .PdfObject =_ffgbc ;return _affdf ._dbgca ;};return _ffgbc ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_cdadf *PdfPageResources )GetColorspaceByName (keyName _bda .PdfObjectName )(PdfColorspace ,bool ){_cegde ,_cdacfd :=_cdadf .GetColorspaces ();if _cdacfd !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cdacfd );
return nil ,false ;};if _cegde ==nil {return nil ,false ;};_befba ,_fdafb :=_cegde .Colorspaces [string (keyName )];if !_fdafb {return nil ,false ;};return _befba ,true ;};

// SetContentStream sets the pattern cell's content stream.
func (_afacf *PdfTilingPattern )SetContentStream (content []byte ,encoder _bda .StreamEncoder )error {_bfcce ,_bddcc :=_afacf ._cbbgec .(*_bda .PdfObjectStream );if !_bddcc {_ed .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afacf ._cbbgec );
return _bda .ErrTypeError ;};if encoder ==nil {encoder =_bda .NewRawEncoder ();};_beacc :=_bfcce .PdfObjectDictionary ;_fgbc :=encoder .MakeStreamDict ();_beacc .Merge (_fgbc );_bgcge ,_fdagf :=encoder .EncodeBytes (content );if _fdagf !=nil {return _fdagf ;
};_beacc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bda .MakeInteger (int64 (len (_bgcge ))));_bfcce .Stream =_bgcge ;return nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_egba *PdfWriter )SetRotation (rotate int64 )error {_beec ,_bfbcc :=_bda .GetDict (_egba ._facgd );if !_bfbcc {return ErrTypeCheck ;};_beec .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bda .MakeInteger (rotate ));return nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_gbbga *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _gbbga .MediaBox !=nil {return _gbbga .MediaBox ,nil ;};_bdcc :=_gbbga .Parent ;for _bdcc !=nil {_bbcbgd ,_cabe :=_bda .GetDict (_bdcc );if !_cabe {return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _gbbd :=_bbcbgd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_gbbd !=nil {_dfdea ,_ebfef :=_bda .GetArray (_gbbd );if !_ebfef {return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_cgcdd ,_efdeef :=NewPdfRectangle (*_dfdea );if _efdeef !=nil {return nil ,_efdeef ;};return _cgcdd ,nil ;};_bdcc =_bbcbgd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_gea .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// SetFillImage attach a model.Image to push button.
func (_cgfg *PdfFieldButton )SetFillImage (image *Image ){if _cgfg .IsPush (){_cgfg ._gbcbd =image ;};};func _gcce (_eegc []byte )[]byte {const _eeced =52845;const _fgcc =22719;_aeedaf :=55665;for _ ,_bgdcd :=range _eegc [:4]{_aeedaf =(int (_bgdcd )+_aeedaf )*_eeced +_fgcc ;
};_cecff :=make ([]byte ,len (_eegc )-4);for _effg ,_bfed :=range _eegc [4:]{_cecff [_effg ]=byte (int (_bfed )^_aeedaf >>8);_aeedaf =(int (_bfed )+_aeedaf )*_eeced +_fgcc ;};return _cecff ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _ga .ReadSeeker )(*CompliancePdfReader ,error ){const _dfbec ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_fbgbc ,_dgecc :=_efgcc (rs ,&ReaderOpts {ComplianceMode :true },false ,_dfbec );
if _dgecc !=nil {return nil ,_dgecc ;};return &CompliancePdfReader {PdfReader :_fbgbc },nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bda .PdfObjectDictionary )(*PdfPageResources ,error ){_dcced :=NewPdfPageResources ();if _aadef :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_aadef !=nil {_dcced .ExtGState =_aadef ;};if _gcfdg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_gcfdg !=nil &&!_bda .IsNullObject (_gcfdg ){_dcced .ColorSpace =_gcfdg ;};if _fbbef :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_fbbef !=nil {_dcced .Pattern =_fbbef ;};if _bgea :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_bgea !=nil {_dcced .Shading =_bgea ;
};if _cbgcc :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cbgcc !=nil {_dcced .XObject =_cbgcc ;};if _fbaafc :=_bda .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fbaafc !=nil {_dcced .Font =_fbaafc ;};if _bbdg :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_bbdg !=nil {_dcced .ProcSet =_bbdg ;};if _gbcaa :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gbcaa !=nil {_dcced .Properties =_gbcaa ;};return _dcced ,nil ;};func (_feabc *PdfReader )newPdfPageFromDict (_cdgdd *_bda .PdfObjectDictionary )(*PdfPage ,error ){_cafaf :=NewPdfPage ();
_cafaf ._bdgdg =_cdgdd ;_cafaf ._gfaec =*_cdgdd ;_gdfb :=*_cdgdd ;_daefc ,_ggfga :=_gdfb .Get ("\u0054\u0079\u0070\u0065").(*_bda .PdfObjectName );if !_ggfga {return nil ,_gea .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_daefc !="\u0050\u0061\u0067\u0065"{return nil ,_gea .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _ebcge :=_gdfb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_ebcge !=nil {_cafaf .Parent =_ebcge ;};if _ceddb :=_gdfb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_ceddb !=nil {_cdaad ,_egcc :=_bda .GetString (_ceddb );if !_egcc {return nil ,_gea .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_fagff ,_egfg :=NewPdfDate (_cdaad .Str ());if _egfg !=nil {return nil ,_egfg ;};_cafaf .LastModified =&_fagff ;};if _gebea :=_gdfb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gebea !=nil &&!_bda .IsNullObject (_gebea ){_bcgb ,_cacec :=_bda .GetDict (_gebea );
if !_cacec {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gebea );};var _adfgd error ;_cafaf .Resources ,_adfgd =NewPdfPageResourcesFromDict (_bcgb );
if _adfgd !=nil {return nil ,_adfgd ;};}else {_gbagd ,_badbc :=_cafaf .getParentResources ();if _badbc !=nil {return nil ,_badbc ;};if _gbagd ==nil {_gbagd =NewPdfPageResources ();};_cafaf .Resources =_gbagd ;};if _fdcec :=_gdfb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_fdcec !=nil {_dbfda ,_abbd :=_bda .GetArray (_fdcec );if !_abbd {return nil ,_gea .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _bgbgb error ;
_cafaf .MediaBox ,_bgbgb =NewPdfRectangle (*_dbfda );if _bgbgb !=nil {return nil ,_bgbgb ;};};if _deeg :=_gdfb .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_deeg !=nil {_dfabg ,_fegac :=_bda .GetArray (_deeg );if !_fegac {return nil ,_gea .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _aeede error ;_cafaf .CropBox ,_aeede =NewPdfRectangle (*_dfabg );if _aeede !=nil {return nil ,_aeede ;};};if _abbe :=_gdfb .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_abbe !=nil {_acdbc ,_gedg :=_bda .GetArray (_abbe );if !_gedg {return nil ,_gea .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _afgea error ;_cafaf .BleedBox ,_afgea =NewPdfRectangle (*_acdbc );if _afgea !=nil {return nil ,_afgea ;};};if _gdcbb :=_gdfb .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gdcbb !=nil {_bdebf ,_gbdda :=_bda .GetArray (_gdcbb );if !_gbdda {return nil ,_gea .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _dgafe error ;_cafaf .TrimBox ,_dgafe =NewPdfRectangle (*_bdebf );if _dgafe !=nil {return nil ,_dgafe ;};};if _edbbg :=_gdfb .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_edbbg !=nil {_ecce ,_gadfg :=_bda .GetArray (_edbbg );if !_gadfg {return nil ,_gea .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _gebbc error ;_cafaf .ArtBox ,_gebbc =NewPdfRectangle (*_ecce );if _gebbc !=nil {return nil ,_gebbc ;};};if _gbae :=_gdfb .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_gbae !=nil {_cafaf .BoxColorInfo =_gbae ;};if _adecb :=_gdfb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_adecb !=nil {_cafaf .Contents =_adecb ;};if _ffad :=_gdfb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_ffad !=nil {_cfcga ,_dcfg :=_bda .GetNumberAsInt64 (_ffad );if _dcfg !=nil {return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cafaf .Rotate =&_cfcga ;};if _fcage :=_gdfb .Get ("\u0047\u0072\u006fu\u0070");_fcage !=nil {_cafaf .Group =_fcage ;};if _fcbd :=_gdfb .Get ("\u0054\u0068\u0075m\u0062");_fcbd !=nil {_cafaf .Thumb =_fcbd ;};if _aaggd :=_gdfb .Get ("\u0042");_aaggd !=nil {_cafaf .B =_aaggd ;
};if _gfafe :=_gdfb .Get ("\u0044\u0075\u0072");_gfafe !=nil {_cafaf .Dur =_gfafe ;};if _bbbee :=_gdfb .Get ("\u0054\u0072\u0061n\u0073");_bbbee !=nil {_cafaf .Trans =_bbbee ;};if _eeeg :=_gdfb .Get ("\u0041\u0041");_eeeg !=nil {_cafaf .AA =_eeeg ;};if _dbbgb :=_gdfb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_dbbgb !=nil {_cafaf .Metadata =_dbbgb ;};if _fccce :=_gdfb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fccce !=nil {_cafaf .PieceInfo =_fccce ;};if _dbfdad :=_gdfb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_dbfdad !=nil {_cafaf .StructParents =_dbfdad ;};if _beebd :=_gdfb .Get ("\u0049\u0044");_beebd !=nil {_cafaf .ID =_beebd ;};if _acbcg :=_gdfb .Get ("\u0050\u005a");_acbcg !=nil {_cafaf .PZ =_acbcg ;};if _aeecc :=_gdfb .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_aeecc !=nil {_cafaf .SeparationInfo =_aeecc ;};if _decad :=_gdfb .Get ("\u0054\u0061\u0062\u0073");_decad !=nil {_cafaf .Tabs =_decad ;};if _daac :=_gdfb .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_daac !=nil {_cafaf .TemplateInstantiated =_daac ;};if _acaea :=_gdfb .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_acaea !=nil {_cafaf .PresSteps =_acaea ;};if _ecff :=_gdfb .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ecff !=nil {_cafaf .UserUnit =_ecff ;
};if _abccd :=_gdfb .Get ("\u0056\u0050");_abccd !=nil {_cafaf .VP =_abccd ;};if _fageb :=_gdfb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_fageb !=nil {_cafaf .Annots =_fageb ;};_cafaf ._agfg =_feabc ;return _cafaf ,nil ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_dddgd *PdfWriter )GetPdfVersion ()string {return _dddgd .getPdfVersion ()};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_gfebf PdfOutputIntentType )String ()string {switch _gfebf {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};type pdfFontType3 struct{fontCommon ;
_bbfd *_bda .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _bda .PdfObject ;Encoding _bda .PdfObject ;FontBBox _bda .PdfObject ;FontMatrix _bda .PdfObject ;FirstChar _bda .PdfObject ;LastChar _bda .PdfObject ;Widths _bda .PdfObject ;Resources _bda .PdfObject ;_cebgc map[_dgb .CharCode ]float64 ;_gabce _dgb .TextEncoder ;
};func (_gecg *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// Add appends an outline item as a child of the current outline item.
func (_fgcad *OutlineItem )Add (item *OutlineItem ){_fgcad .Entries =append (_fgcad .Entries ,item )};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_ceaac *PdfPageResources )HasPatternByName (keyName _bda .PdfObjectName )bool {_ ,_ffbe :=_ceaac .GetPatternByName (keyName );return _ffbe ;};func (_fcge *PdfReader )loadPerms ()(*Permissions ,error ){if _afeg :=_fcge ._dabg .Get ("\u0050\u0065\u0072m\u0073");
_afeg !=nil {if _fccaea ,_fdgcdg :=_bda .GetDict (_afeg );_fdgcdg {_egdea :=_fccaea .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _egdea ==nil {return nil ,nil ;};if _gceed ,_accd :=_bda .GetIndirect (_egdea );_accd {_bgffc ,_cdfc :=_fcge .newPdfSignatureFromIndirect (_gceed );
if _cdfc !=nil {return nil ,_cdfc ;};return NewPermissions (_bgffc ),nil ;};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};func (_cdae *PdfReader )newPdfAnnotationRedactFromDict (_aeedf *_bda .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_adbb :=PdfAnnotationRedact {};_cbe ,_cfaeb :=_cdae .newPdfAnnotationMarkupFromDict (_aeedf );if _cfaeb !=nil {return nil ,_cfaeb ;
};_adbb .PdfAnnotationMarkup =_cbe ;_adbb .QuadPoints =_aeedf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_adbb .IC =_aeedf .Get ("\u0049\u0043");_adbb .RO =_aeedf .Get ("\u0052\u004f");_adbb .OverlayText =_aeedf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_adbb .Repeat =_aeedf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_adbb .DA =_aeedf .Get ("\u0044\u0041");_adbb .Q =_aeedf .Get ("\u0051");return &_adbb ,nil ;};

// PrintPageRange returns the value of the printPageRange.
func (_ffaab *ViewerPreferences )PrintPageRange ()[]int {return _ffaab ._edffc };

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_ccgf *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_eaeg *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfedc ,_baabe :=_bda .GetNumbersAsFloat (objects );
if _baabe !=nil {return nil ,_baabe ;};return _eaeg .ColorFromFloats (_gfedc );};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_gcaae *PdfAcroForm )GetContainingPdfObject ()_bda .PdfObject {return _gcaae ._bcgge };

// Reset sets the multi font encoder to its initial state.
func (_aedca *MultipleFontEncoder )Reset (){_aedca .CurrentFont =_aedca ._ffea [0]};

// ToInteger convert to an integer format.
func (_aebg *PdfColorDeviceGray )ToInteger (bits int )uint32 {_cgbc :=_ce .Pow (2,float64 (bits ))-1;return uint32 (_cgbc *_aebg .Val ());};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func _ebe (_adcf _bda .PdfObject )(*PdfBorderStyle ,error ){_cged :=&PdfBorderStyle {};_cged ._fgdeg =_adcf ;var _gaf *_bda .PdfObjectDictionary ;_adcf =_bda .TraceToDirectObject (_adcf );_gaf ,_adff :=_adcf .(*_bda .PdfObjectDictionary );
if !_adff {return nil ,_gea .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _dcfa :=_gaf .Get ("\u0054\u0079\u0070\u0065");_dcfa !=nil {_edf ,_agcd :=_dcfa .(*_bda .PdfObjectName );if !_agcd {_ed .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_dcfa );
}else {if *_edf !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ed .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_edf );};};};if _age :=_gaf .Get ("\u0057");
_age !=nil {_dbda ,_fcgc :=_bda .GetNumberAsFloat (_age );if _fcgc !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_fcgc );return nil ,_fcgc ;};_cged .W =&_dbda ;
};if _caf :=_gaf .Get ("\u0053");_caf !=nil {_gafd ,_agdb :=_caf .(*_bda .PdfObjectName );if !_agdb {return nil ,_gea .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _gcf BorderStyle ;switch *_gafd {case "\u0053":_gcf =BorderStyleSolid ;case "\u0044":_gcf =BorderStyleDashed ;case "\u0042":_gcf =BorderStyleBeveled ;case "\u0049":_gcf =BorderStyleInset ;case "\u0055":_gcf =BorderStyleUnderline ;default:_ed .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gafd );
return nil ,_gea .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cged .S =&_gcf ;};if _gad :=_gaf .Get ("\u0044");_gad !=nil {_abce ,_cgb :=_gad .(*_bda .PdfObjectArray );
if !_cgb {_ed .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_gad );return nil ,_gea .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_gbce ,_efda :=_abce .ToIntegerArray ();if _efda !=nil {_ed .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_efda );
return nil ,_efda ;};_cged .D =&_gbce ;};return _cged ,nil ;};func (_fffe *PdfAnnotationMarkup )appendToPdfDictionary (_dfcf *_bda .PdfObjectDictionary ){_dfcf .SetIfNotNil ("\u0054",_fffe .T );if _fffe .Popup !=nil {_dfcf .Set ("\u0050\u006f\u0070u\u0070",_fffe .Popup .ToPdfObject ());
};_dfcf .SetIfNotNil ("\u0043\u0041",_fffe .CA );_dfcf .SetIfNotNil ("\u0052\u0043",_fffe .RC );_dfcf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fffe .CreationDate );_dfcf .SetIfNotNil ("\u0049\u0052\u0054",_fffe .IRT );
_dfcf .SetIfNotNil ("\u0053\u0075\u0062\u006a",_fffe .Subj );_dfcf .SetIfNotNil ("\u0052\u0054",_fffe .RT );_dfcf .SetIfNotNil ("\u0049\u0054",_fffe .IT );_dfcf .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_fffe .ExData );};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ecccf *PdfShadingPatternType2 )ToPdfObject ()_bda .PdfObject {_ecccf .PdfPattern .ToPdfObject ();_agaad :=_ecccf .getDict ();if _ecccf .Shading !=nil {_agaad .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ecccf .Shading .ToPdfObject ());};if _ecccf .Matrix !=nil {_agaad .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ecccf .Matrix );
};if _ecccf .ExtGState !=nil {_agaad .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ecccf .ExtGState );};return _ecccf ._cbbgec ;};func (_eaca *PdfReader )newPdfOutlineItemFromIndirectObject (_gcae *_bda .PdfIndirectObject )(*PdfOutlineItem ,error ){_agege ,_ecdab :=_gcae .PdfObject .(*_bda .PdfObjectDictionary );
if !_ecdab {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_acggaa :=NewPdfOutlineItem ();_agecg :=_agege .Get ("\u0054\u0069\u0074l\u0065");
if _agecg ==nil {return nil ,_c .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_gdaf ,_bcfd :=_bda .GetString (_agecg );if !_bcfd {return nil ,_c .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_agecg );};_acggaa .Title =_gdaf ;if _ccbac :=_agege .Get ("\u0043\u006f\u0075n\u0074");
_ccbac !=nil {_gedbf ,_ggdba :=_ccbac .(*_bda .PdfObjectInteger );if !_ggdba {return nil ,_c .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_ccbac );};_bafgb :=int64 (*_gedbf );
_acggaa .Count =&_bafgb ;};if _edcba :=_agege .Get ("\u0044\u0065\u0073\u0074");_edcba !=nil {_acggaa .Dest =_bda .ResolveReference (_edcba );if !_eaca ._aaece {_bfbff :=_eaca .traverseObjectData (_acggaa .Dest );if _bfbff !=nil {return nil ,_bfbff ;};
};};if _cffbb :=_agege .Get ("\u0041");_cffbb !=nil {_acggaa .A =_bda .ResolveReference (_cffbb );if !_eaca ._aaece {_beegc :=_eaca .traverseObjectData (_acggaa .A );if _beegc !=nil {return nil ,_beegc ;};};};if _dedcc :=_agege .Get ("\u0053\u0045");_dedcc !=nil {_acggaa .SE =nil ;
};if _fdbbf :=_agege .Get ("\u0043");_fdbbf !=nil {_acggaa .C =_bda .ResolveReference (_fdbbf );};if _eeca :=_agege .Get ("\u0046");_eeca !=nil {_acggaa .F =_bda .ResolveReference (_eeca );};return _acggaa ,nil ;};func (_ddcf *PdfReader )newPdfActionSoundFromDict (_fdfd *_bda .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_fdfd .Get ("\u0053\u006f\u0075n\u0064"),Volume :_fdfd .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_fdfd .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_fdfd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_fdfd .Get ("\u004d\u0069\u0078")},nil ;
};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_cfbgd *PdfFieldButton )IsCheckbox ()bool {return _cfbgd .GetType ()==ButtonTypeCheckbox };func (_gbag *PdfReader )newPdfAnnotationScreenFromDict (_geea *_bda .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_bdagb :=PdfAnnotationScreen {};_bdagb .T =_geea .Get ("\u0054");
_bdagb .MK =_geea .Get ("\u004d\u004b");_bdagb .A =_geea .Get ("\u0041");_bdagb .AA =_geea .Get ("\u0041\u0041");return &_bdagb ,nil ;};

// SetFileName sets the pdf writer file name for metered usage tracker.
func (_gdgda *PdfWriter )SetFileName (name string ){_gdgda ._dffdf =name };func (_ebdbf *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _ebdbf ._bedea };

// B returns the value of the B component of the color.
func (_ffedb *PdfColorLab )B ()float64 {return _ffedb [2]};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dbbca ,_befad :=_dfc .Open (filePath );if _befad !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_befad );
return nil ,_befad ;};defer _dbbca .Close ();return NewPdfFontFromTTF (_dbbca );};

// ToPdfObject implements interface PdfModel.
func (_deda *PdfActionResetForm )ToPdfObject ()_bda .PdfObject {_deda .PdfAction .ToPdfObject ();_ada :=_deda ._gg ;_ede :=_ada .PdfObject .(*_bda .PdfObjectDictionary );_ede .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeResetForm )));_ede .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_deda .Fields );
_ede .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_deda .Flags );return _ada ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_efgf *Image )ConvertToBinary ()error {if _efgf .ColorComponents ==1&&_efgf .BitsPerComponent ==1{return nil ;};_cefab ,_gffa :=_efgf .ToGoImage ();if _gffa !=nil {return _gffa ;};_gcbc ,_gffa :=_bg .MonochromeConverter .Convert (_cefab );if _gffa !=nil {return _gffa ;
};_efgf .Data =_gcbc .Base ().Data ;_efgf ._ffbd ,_gffa =_bg .ScaleAlphaToMonochrome (_efgf ._ffbd ,int (_efgf .Width ),int (_efgf .Height ));if _gffa !=nil {return _gffa ;};_efgf .BitsPerComponent =1;_efgf .ColorComponents =1;_efgf ._bfafe =nil ;return nil ;
};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_eedfe *PdfWriter )AddPage (page *PdfPage )error {const _ggeca ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_defaab (page );_fdecd :=page .ToPdfObject ();_ed .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_ed .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_fdecd );_egffc ,_ggcab :=_bda .GetIndirect (_fdecd );if !_ggcab {return _gea .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ed .Log .Trace ("\u0025\u0073",_egffc );_ed .Log .Trace ("\u0025\u0073",_egffc .PdfObject );_decff ,_ggcab :=_bda .GetDict (_egffc .PdfObject );if !_ggcab {return _gea .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ggbcb ,_ggcab :=_bda .GetName (_decff .Get ("\u0054\u0079\u0070\u0065"));if !_ggcab {return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_decff .Get ("\u0054\u0079\u0070\u0065"));
};if _ggbcb .String ()!="\u0050\u0061\u0067\u0065"{return _gea .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_cfgg :=[]_bda .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_cceba ,_gddbg :=_bda .GetIndirect (_decff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ed .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_decff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gddbg );
for _gddbg {_ed .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cceba );_eccbb ,_ggfbd :=_bda .GetDict (_cceba .PdfObject );if !_ggfbd {return _gea .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_ddedc :=range _cfgg {_ed .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ddedc );if _decff .Get (_ddedc )!=nil {_ed .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _eecfc :=_eccbb .Get (_ddedc );_eecfc !=nil {_ed .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ddedc );_decff .Set (_ddedc ,_eecfc );};};_cceba ,_gddbg =_bda .GetIndirect (_eccbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_ed .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eccbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ed .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_decff .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eedfe ._facgd );_egffc .PdfObject =_decff ;_fcggfg ,_ggcab :=_bda .GetDict (_eedfe ._facgd .PdfObject );if !_ggcab {return _gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bbfcgb ,_ggcab :=_bda .GetArray (_fcggfg .Get ("\u004b\u0069\u0064\u0073"));if !_ggcab {return _gea .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bbfcgb .Append (_egffc );_eedfe ._cdbc [_decff ]=struct{}{};_eedfe ._dgdfe =append (_eedfe ._dgdfe ,_egffc );_dgfgc ,_ggcab :=_bda .GetInt (_fcggfg .Get ("\u0043\u006f\u0075n\u0074"));if !_ggcab {return _gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_dgfgc =*_dgfgc +1;if page ._agfg ==nil {_baacc :=_dfb .Track (_eedfe ._egegd ,_ggeca ,_eedfe ._dffdf );if _baacc !=nil {return _baacc ;};}else {_caacc :=_dfb .Track (page ._agfg ._gbcfb ,_ggeca ,page ._agfg ._gcbfae );if _caacc !=nil {return _caacc ;
};};_eedfe .addObject (_egffc );_dcfac :=_eedfe .addObjects (_decff );if _dcfac !=nil {return _dcfac ;};return nil ;};func _deggg (_fcfaf *_bda .PdfObjectDictionary )bool {for _ ,_ecbab :=range _fcfaf .Keys (){if _ ,_abfdg :=_aaead [_ecbab .String ()];
_abfdg {return true ;};};return false ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_accga *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_accga .NumInputs {_ed .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_gea .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _accga ._gddfa ==nil {_edeef :=_accga .processSamples ();if _edeef !=nil {return nil ,_edeef ;};};_cbdec :=_accga .Encode ;
if _cbdec ==nil {_cbdec =[]float64 {};for _egffb :=0;_egffb < len (_accga .Size );_egffb ++{_cbdec =append (_cbdec ,0);_cbdec =append (_cbdec ,float64 (_accga .Size [_egffb ]-1));};};_gcefa :=_accga .Decode ;if _gcefa ==nil {_gcefa =_accga .Range ;};_eegcg :=make ([]int ,len (x ));
for _badb :=0;_badb < len (x );_badb ++{_fcag :=x [_badb ];_acfbc :=_ce .Min (_ce .Max (_fcag ,_accga .Domain [2*_badb ]),_accga .Domain [2*_badb +1]);_dfabb :=_bg .LinearInterpolate (_acfbc ,_accga .Domain [2*_badb ],_accga .Domain [2*_badb +1],_cbdec [2*_badb ],_cbdec [2*_badb +1]);
_gcde :=_ce .Min (_ce .Max (_dfabb ,0),float64 (_accga .Size [_badb ]-1));_aacdc :=int (_ce .Floor (_gcde +0.5));if _aacdc < 0{_aacdc =0;}else if _aacdc > _accga .Size [_badb ]{_aacdc =_accga .Size [_badb ]-1;};_eegcg [_badb ]=_aacdc ;};_agda :=_eegcg [0];
for _ccab :=1;_ccab < _accga .NumInputs ;_ccab ++{_eddd :=_eegcg [_ccab ];for _bcdef :=0;_bcdef < _ccab ;_bcdef ++{_eddd *=_accga .Size [_bcdef ];};_agda +=_eddd ;};_agda *=_accga .NumOutputs ;var _bgcdc []float64 ;for _beefc :=0;_beefc < _accga .NumOutputs ;
_beefc ++{_baffdf :=_agda +_beefc ;if _baffdf >=len (_accga ._gddfa ){_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_agfc :=_accga ._gddfa [_baffdf ];_acce :=_bg .LinearInterpolate (float64 (_agfc ),0,_ce .Pow (2,float64 (_accga .BitsPerSample )),_gcefa [2*_beefc ],_gcefa [2*_beefc +1]);_edafa :=_ce .Min (_ce .Max (_acce ,_accga .Range [2*_beefc ]),_accga .Range [2*_beefc +1]);
_bgcdc =append (_bgcdc ,_edafa );};return _bgcdc ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bda .PdfObject ,error );};

// GetPage returns the PdfPage model for the specified page number.
func (_cgecc *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _cgecc ._fdadg .GetCrypter ()!=nil &&!_cgecc ._fdadg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_cgecc ._cgdac )< pageNumber {return nil ,_gea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_ebbg :=pageNumber -1;if _ebbg < 0{return nil ,_c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_dgbee :=_cgecc .PageList [_ebbg ];
return _dgbee ,nil ;};func (_gafab *PdfWriter )writeBytes (_cggfa []byte ){if _gafab ._aebfb !=nil {return ;};_cffbd ,_eggef :=_gafab ._ecgbge .Write (_cggfa );_gafab ._fcdda +=int64 (_cffbd );_gafab ._aebfb =_eggef ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_cgaag *PdfAppender )UpdateObject (obj _bda .PdfObject ){_cgaag .replaceObject (obj ,obj );if _ ,_fgef :=_cgaag ._agg [obj ];!_fgef {_cgaag ._gaga =append (_cgaag ._gaga ,obj );_cgaag ._agg [obj ]=struct{}{};};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bda .PdfObject ;FS _bda .PdfObject ;F _bda .PdfObject ;UF _bda .PdfObject ;DOS _bda .PdfObject ;Mac _bda .PdfObject ;Unix _bda .PdfObject ;ID _bda .PdfObject ;V _bda .PdfObject ;EF _bda .PdfObject ;RF _bda .PdfObject ;Desc _bda .PdfObject ;
CI _bda .PdfObject ;AFRelationship _bda .PdfObject ;_daeg _bda .PdfObject ;};

// GetOutlineTree returns the outline tree.
func (_caed *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _caed ._febfd };

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_gbadg *PdfPageResources )HasShadingByName (keyName _bda .PdfObjectName )bool {_ ,_dacbg :=_gbadg .GetShadingByName (keyName );return _dacbg ;};

// WriteString outputs the object as it is to be written to file.
func (_ddgff *PdfTransformParamsDocMDP )WriteString ()string {return _ddgff .ToPdfObject ().WriteString ();};func _adfc (_efbf ,_ceeb string )string {if _ab .Contains (_efbf ,"\u002b"){_deaddc :=_ab .Split (_efbf ,"\u002b");if len (_deaddc )==2{_efbf =_deaddc [1];
};};return _ceeb +"\u002b"+_efbf ;};

// ToPdfObject implements interface PdfModel.
func (_dgfg *PdfAnnotationSquiggly )ToPdfObject ()_bda .PdfObject {_dgfg .PdfAnnotation .ToPdfObject ();_bbcb :=_dgfg ._ged ;_fgbg :=_bbcb .PdfObject .(*_bda .PdfObjectDictionary );_dgfg .PdfAnnotationMarkup .appendToPdfDictionary (_fgbg );_fgbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_fgbg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dgfg .QuadPoints );return _bbcb ;};

// GetContentStream returns the pattern cell's content stream
func (_aaeed *PdfTilingPattern )GetContentStream ()([]byte ,error ){_cffcf ,_ ,_deaf :=_aaeed .GetContentStreamWithEncoder ();return _cffcf ,_deaf ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_fbfaa *PdfReader )GetTrailer ()(*_bda .PdfObjectDictionary ,error ){_eecbfb :=_fbfaa ._fdadg .GetTrailer ();if _eecbfb ==nil {return nil ,_gea .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _eecbfb ,nil ;
};

// ToInteger convert to an integer format.
func (_edga *PdfColorLab )ToInteger (bits int )[3]uint32 {_aaad :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_aaad *_edga .L ()),uint32 (_aaad *_edga .A ()),uint32 (_aaad *_edga .B ())};};

// GetRefObject returns the reference object of the KValue.
func (_gaefc *KValue )GetRefObject ()_bda .PdfObject {return _gaefc ._bfafef };

// ToPdfObject returns the PDF representation of the colorspace.
func (_fafa *PdfColorspaceDeviceCMYK )ToPdfObject ()_bda .PdfObject {return _bda .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_bda .PdfObjectString ;Q *_bda .PdfObjectInteger ;DS *_bda .PdfObjectString ;RV _bda .PdfObject ;};

// IsShading specifies if the pattern is a shading pattern.
func (_bffff *PdfPattern )IsShading ()bool {return _bffff .PatternType ==2};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_egeg *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_gea .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_fggb ,_faad :=_bg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ffbd ,img ._bfafe );if _faad !=nil {return img ,_faad ;};_aaea ,_faad :=_bg .NRGBAConverter .Convert (_fggb );if _faad !=nil {return img ,_faad ;
};_ebea :=_fggae (_aaea .Base ());_ed .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ed .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ed .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ebea .Data );
_ed .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ebea );return _ebea ,nil ;};func _edda (_aedag _bda .PdfObject )(map[_dgb .CharCode ]float64 ,error ){if _aedag ==nil {return nil ,nil ;};_acde ,_gfbda :=_bda .GetArray (_aedag );
if !_gfbda {return nil ,nil ;};_edgea :=map[_dgb .CharCode ]float64 {};_bccg :=_acde .Len ();for _gegcc :=0;_gegcc < _bccg -1;_gegcc ++{_ebfeg :=_bda .TraceToDirectObject (_acde .Get (_gegcc ));_afecb ,_feabg :=_bda .GetIntVal (_ebfeg );if !_feabg {return nil ,_c .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_gegcc ,_ebfeg );
};_gegcc ++;if _gegcc > _bccg -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_acde );};_acebd :=_bda .TraceToDirectObject (_acde .Get (_gegcc ));
switch _acebd .(type ){case *_bda .PdfObjectArray :_ffcf ,_ :=_bda .GetArray (_acebd );if _cageb ,_dfecc :=_ffcf .ToFloat64Array ();_dfecc ==nil {for _cfbeb :=0;_cfbeb < len (_cageb );_cfbeb ++{_edgea [_dgb .CharCode (_afecb +_cfbeb )]=_cageb [_cfbeb ];
};}else {return nil ,_c .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gegcc ,_acebd );};case *_bda .PdfObjectInteger :_edbgc ,_bbfg :=_bda .GetIntVal (_acebd );
if !_bbfg {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gegcc ,_acebd );};_gegcc ++;if _gegcc > _bccg -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_acde );
};_cecfb :=_acde .Get (_gegcc );_ceda ,_ccgg :=_bda .GetNumberAsFloat (_cecfb );if _ccgg !=nil {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gegcc ,_cecfb );
};for _geffa :=_afecb ;_geffa <=_edbgc ;_geffa ++{_edgea [_dgb .CharCode (_geffa )]=_ceda ;};default:return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gegcc ,_acebd );
};};return _edgea ,nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dgaed PdfModel ;_cbbgec _bda .PdfObject ;};func (_bce *PdfReader )newPdfActionThreadFromDict (_ega *_bda .PdfObjectDictionary )(*PdfActionThread ,error ){_fabe ,_gbfa :=_ggfe (_ega .Get ("\u0046"));if _gbfa !=nil {return nil ,_gbfa ;
};return &PdfActionThread {D :_ega .Get ("\u0044"),B :_ega .Get ("\u0042"),F :_fabe },nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_aabe *PdfPageResources )SetXObjectFormByName (keyName _bda .PdfObjectName ,xform *XObjectForm )error {_dadec :=xform .ToPdfObject ().(*_bda .PdfObjectStream );_ddda :=_aabe .SetXObjectByName (keyName ,_dadec );return _ddda ;};

// NewViewerPreferences returns a new ViewerPreferences object with
// default empty values.
func NewViewerPreferences ()*ViewerPreferences {return &ViewerPreferences {}};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_cea :=NewPdfAction ();_fga :=&PdfActionLaunch {};_fga .PdfAction =_cea ;_cea .SetContext (_fga );return _fga ;};

// Encoder iterates through the list of fonts and returns a working encoder
func (_affec *MultipleFontEncoder )Encoder (rn rune )(_dgb .TextEncoder ,bool ){_cdcdc :=_affec .CurrentFont ;_faefg :=_cdcdc .Encoder ();_ ,_fecc :=_faefg .RuneToCharcode (rn );for _ebdgg :=1;_ebdgg < len (_affec ._ffea )&&!_fecc ;_ebdgg ++{_cdcdc =_affec ._ffea [_ebdgg ];
_faefg =_cdcdc .Encoder ();_ ,_fecc =_faefg .RuneToCharcode (rn );_affec .CurrentFont =_cdcdc ;};return _faefg ,_fecc ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bda .PdfObject ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_ggbe .Lock ();defer _ggbe .Unlock ();_cgccb =author };

// String implements interface PdfObject.
func (_fe *PdfAction )String ()string {_bbg ,_gee :=_fe .ToPdfObject ().(*_bda .PdfIndirectObject );if _gee {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fe ._edd ,_bbg .PdfObject .String ());};return "";};

// SetViewClip sets the value of the viewClip.
func (_gbgef *ViewerPreferences )SetViewClip (viewClip PageBoundary ){_gbgef ._adecc =viewClip };

// ToPdfObject implements interface PdfModel.
func (_cag *PdfActionURI )ToPdfObject ()_bda .PdfObject {_cag .PdfAction .ToPdfObject ();_bdc :=_cag ._gg ;_cfbb :=_bdc .PdfObject .(*_bda .PdfObjectDictionary );_cfbb .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeURI )));_cfbb .SetIfNotNil ("\u0055\u0052\u0049",_cag .URI );
_cfbb .SetIfNotNil ("\u0049\u0073\u004da\u0070",_cag .IsMap );return _bdc ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_ebagd *pdfCIDFontType2 )ToPdfObject ()_bda .PdfObject {if _ebagd ._acegg ==nil {_ebagd ._acegg =&_bda .PdfIndirectObject {};};_gbeb :=_ebagd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_ebagd ._acegg .PdfObject =_gbeb ;if _ebagd .CIDSystemInfo !=nil {_gbeb .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_ebagd .CIDSystemInfo );};if _ebagd .DW !=nil {_gbeb .Set ("\u0044\u0057",_ebagd .DW );};if _ebagd .DW2 !=nil {_gbeb .Set ("\u0044\u0057\u0032",_ebagd .DW2 );
};if _ebagd .W !=nil {_gbeb .Set ("\u0057",_ebagd .W );};if _ebagd .W2 !=nil {_gbeb .Set ("\u0057\u0032",_ebagd .W2 );};if _ebagd .CIDToGIDMap !=nil {_gbeb .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_ebagd .CIDToGIDMap );};return _ebagd ._acegg ;
};

// CustomKeys returns all custom info keys as list.
func (_fgegg *PdfInfo )CustomKeys ()[]string {if _fgegg ._feec ==nil {return nil ;};_dbfd :=make ([]string ,len (_fgegg ._feec .Keys ()));for _ ,_ecgb :=range _fgegg ._feec .Keys (){_dbfd =append (_dbfd ,_ecgb .String ());};return _dbfd ;};

// IsHideToolbar returns the value of the hideToolbar flag.
func (_bfdaf *ViewerPreferences )IsHideToolbar ()bool {if _bfdaf ._dgdec ==nil {return false ;};return *_bfdaf ._dgdec ;};

// ViewerPreferences represents the viewer preferences of a PDF document.
type ViewerPreferences struct{_dgdec *bool ;_acbcd *bool ;_bcddd *bool ;_gaefd *bool ;_ecaag *bool ;_ddeed *bool ;_egeea NonFullScreenPageMode ;_gbacc Direction ;_adbff PageBoundary ;_adecc PageBoundary ;_geeda PageBoundary ;_eefag PageBoundary ;_ecffgg PrintScaling ;
_bebac Duplex ;_eedfcc *bool ;_edffc []int ;_eaga int ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bddag *PdfSignature )GetContainingPdfObject ()_bda .PdfObject {return _bddag ._gbggff };func _fbbb (_cabb _bda .PdfObject )(*PdfFunctionType2 ,error ){_dffc :=&PdfFunctionType2 {};var _fcgag *_bda .PdfObjectDictionary ;if _dacb ,_dcfaa :=_cabb .(*_bda .PdfIndirectObject );
_dcfaa {_beega ,_aeba :=_dacb .PdfObject .(*_bda .PdfObjectDictionary );if !_aeba {return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dffc ._eaacc =_dacb ;_fcgag =_beega ;}else if _adbag ,_aega :=_cabb .(*_bda .PdfObjectDictionary );
_aega {_fcgag =_adbag ;}else {return nil ,_gea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ed .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_fcgag .String ());_aggc ,_fdea :=_bda .TraceToDirectObject (_fcgag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bda .PdfObjectArray );
if !_fdea {_ed .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _aggc .Len ()< 0||_aggc .Len ()%2!=0{_ed .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_gea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_feac ,_degbb :=_aggc .ToFloat64Array ();if _degbb !=nil {return nil ,_degbb ;};_dffc .Domain =_feac ;_aggc ,_fdea =_bda .TraceToDirectObject (_fcgag .Get ("\u0052\u0061\u006eg\u0065")).(*_bda .PdfObjectArray );if _fdea {if _aggc .Len ()< 0||_aggc .Len ()%2!=0{return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gaabe ,_gacde :=_aggc .ToFloat64Array ();if _gacde !=nil {return nil ,_gacde ;};_dffc .Range =_gaabe ;};_aggc ,_fdea =_bda .TraceToDirectObject (_fcgag .Get ("\u0043\u0030")).(*_bda .PdfObjectArray );if _fdea {_fbdfc ,_ffgab :=_aggc .ToFloat64Array ();
if _ffgab !=nil {return nil ,_ffgab ;};_dffc .C0 =_fbdfc ;};_aggc ,_fdea =_bda .TraceToDirectObject (_fcgag .Get ("\u0043\u0031")).(*_bda .PdfObjectArray );if _fdea {_bdfda ,_dagdf :=_aggc .ToFloat64Array ();if _dagdf !=nil {return nil ,_dagdf ;};_dffc .C1 =_bdfda ;
};if len (_dffc .C0 )!=len (_dffc .C1 ){_ed .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_bda .ErrRangeError ;};N ,_degbb :=_bda .GetNumberAsFloat (_bda .TraceToDirectObject (_fcgag .Get ("\u004e")));
if _degbb !=nil {_ed .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_fcgag .String ());return nil ,_degbb ;};_dffc .N =N ;
return _dffc ,nil ;};

// ToPdfObject converts the ID tree to a PDF object.
func (_gecce *IDTree )ToPdfObject ()_bda .PdfObject {_gcagf :=_bda .MakeDict ();if _gecce .Names !=nil &&_gecce .Names .Len ()> 0{_gcagf .Set ("\u004e\u0061\u006de\u0073",_gecce .Names );_gcagf .Set ("\u004c\u0069\u006d\u0069\u0074\u0073",_gecce .Limits );
};if len (_gecce .Kids )> 0{_cdadd :=_bda .MakeArray ();for _ ,_cgege :=range _gecce .Kids {_cdadd .Append (_cgege .ToPdfObject ());};_adfde :=_bda .MakeDict ();_adfde .Set ("\u004b\u0069\u0064\u0073",_cdadd );_gcagf .Set ("\u004b\u0069\u0064\u0073",_adfde );
};return _gcagf ;};func (_dfac fontCommon )asPdfObjectDictionary (_affgb string )*_bda .PdfObjectDictionary {if _affgb !=""&&_dfac ._fggeg !=""&&_affgb !=_dfac ._fggeg {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_affgb ,_dfac );
}else if _affgb ==""&&_dfac ._fggeg ==""{_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dfac );
}else if _dfac ._fggeg ==""{_dfac ._fggeg =_affgb ;};_dfbd :=_bda .MakeDict ();_dfbd .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0046\u006f\u006e\u0074"));_dfbd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bda .MakeName (_dfac ._bcaebe ));
_dfbd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName (_dfac ._fggeg ));if _dfac ._bedea !=nil {_dfbd .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_dfac ._bedea .ToPdfObject ());};if _dfac ._fbedf !=nil {_dfbd .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dfac ._fbedf );
}else if _dfac ._eeed !=nil {_cecb ,_efgad :=_dfac ._eeed .Stream ();if _efgad !=nil {_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_efgad );
}else {_dfbd .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cecb );};};return _dfbd ;};

// B returns the value of the B component of the color.
func (_fcfa *PdfColorCalRGB )B ()float64 {return _fcfa [1]};func (_bcfg *LTV )getCRLs (_ebbae []*_bd .Certificate )([][]byte ,error ){_eedgb :=make ([][]byte ,0,len (_ebbae ));for _ ,_fcec :=range _ebbae {for _ ,_egge :=range _fcec .CRLDistributionPoints {if _bcfg .CertClient .IsCA (_fcec ){continue ;
};_cccf ,_gbfaa :=_bcfg .CRLClient .MakeRequest (_egge ,_fcec );if _gbfaa !=nil {_ed .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_gbfaa );continue ;
};_eedgb =append (_eedgb ,_cccf );};};return _eedgb ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_aefb *PdfColorspaceICCBased )ToPdfObject ()_bda .PdfObject {_abea :=&_bda .PdfObjectArray {};_abea .Append (_bda .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _dbfbc *_bda .PdfObjectStream ;if _aefb ._ebge !=nil {_dbfbc =_aefb ._ebge ;
}else {_dbfbc =&_bda .PdfObjectStream {};};_adcc :=_bda .MakeDict ();_adcc .Set ("\u004e",_bda .MakeInteger (int64 (_aefb .N )));if _aefb .Alternate !=nil {_adcc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_aefb .Alternate .ToPdfObject ());};if _aefb .Metadata !=nil {_adcc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aefb .Metadata );
};if _aefb .Range !=nil {var _gdeg []_bda .PdfObject ;for _ ,_feda :=range _aefb .Range {_gdeg =append (_gdeg ,_bda .MakeFloat (_feda ));};_adcc .Set ("\u0052\u0061\u006eg\u0065",_bda .MakeArray (_gdeg ...));};_adcc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bda .MakeInteger (int64 (len (_aefb .Data ))));
_dbfbc .Stream =_aefb .Data ;_dbfbc .PdfObjectDictionary =_adcc ;_abea .Append (_dbfbc );if _aefb ._aebd !=nil {_aefb ._aebd .PdfObject =_abea ;return _aefb ._aebd ;};return _abea ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;
);type modelManager struct{_afcbd map[PdfModel ]_bda .PdfObject ;_afaad map[_bda .PdfObject ]PdfModel ;};func (_efdee PdfFont )actualFont ()pdfFont {if _efdee ._ggada ==nil {_ed .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_efdee );
};return _efdee ._ggada ;};

// GetAction returns the PDF action for the annotation link.
func (_bcd *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bcd ._bdcb !=nil {return _bcd ._bdcb ,nil ;};if _bcd .A ==nil {return nil ,nil ;};if _bcd ._bbfb ==nil {return nil ,nil ;};_egd ,_beae :=_bcd ._bbfb .loadAction (_bcd .A );if _beae !=nil {return nil ,_beae ;
};_bcd ._bdcb =_egd ;return _bcd ._bdcb ,nil ;};

// NumCopies returns the value of the numCopies.
func (_dfecb *ViewerPreferences )NumCopies ()int {return _dfecb ._eaga };

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_fagbd :=&PdfShadingPatternType3 {};_fagbd .Matrix =_bda .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_fagbd .PdfPattern =&PdfPattern {};_fagbd .PdfPattern .PatternType =int64 (*_bda .MakeInteger (2));
_fagbd .PdfPattern ._dgaed =_fagbd ;_fagbd .PdfPattern ._cbbgec =_bda .MakeIndirectObject (_bda .MakeDict ());return _fagbd ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ffe :=NewPdfAnnotation ();_eda :=&PdfAnnotationProjection {};_eda .PdfAnnotation =_ffe ;_eda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffe .SetContext (_eda );return _eda ;};func (_acdfg *PdfWriter )writeOutputIntents ()error {if len (_acdfg ._bdedc )==0{return nil ;
};_dfgad :=make ([]_bda .PdfObject ,len (_acdfg ._bdedc ));for _bedef ,_ffbad :=range _acdfg ._bdedc {_ebgac :=_ffbad .ToPdfObject ();_dfgad [_bedef ]=_bda .MakeIndirectObject (_ebgac );};_dbgce :=_bda .MakeIndirectObject (_bda .MakeArray (_dfgad ...));
_acdfg ._geadba .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_dbgce );if _bebbf :=_acdfg .addObjects (_dbgce );_bebbf !=nil {return _bebbf ;};return nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_ecdg *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ecdg .Base ==nil {return nil ,_gea .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ecdg .Base .ColorToRGB (color );};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bda .PdfObject ;IC _bda .PdfObject ;BE _bda .PdfObject ;RD _bda .PdfObject ;};func (_gggc SignatureValidationResult )String ()string {var _ggbf _dff .Buffer ;_ggbf .WriteString (_c .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_gggc .Name ));
if _gggc .Date ._ggfcc > 0{_ggbf .WriteString (_c .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_gggc .Date .ToGoTime ().String ()));}else {_ggbf .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gggc .Reason )> 0{_ggbf .WriteString (_c .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gggc .Reason ));}else {_ggbf .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_gggc .Location )> 0{_ggbf .WriteString (_c .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gggc .Location ));}else {_ggbf .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gggc .ContactInfo )> 0{_ggbf .WriteString (_c .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_gggc .ContactInfo ));}else {_ggbf .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_ggbf .WriteString (_c .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_gggc .Fields )));if _gggc .IsSigned {_ggbf .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_ggbf .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _gggc .IsVerified {_ggbf .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_ggbf .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _gggc .IsTrusted {_ggbf .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_ggbf .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_gggc .GeneralizedTime .IsZero (){_ggbf .WriteString (_c .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_gggc .GeneralizedTime .String ()));
};if _gggc .DiffResults !=nil {_ggbf .WriteString (_c .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_gggc .DiffResults .IsPermitted ()));if len (_gggc .DiffResults .Warnings )> 0{_ggbf .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_gbffg :=range _gggc .DiffResults .Warnings {_ggbf .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_gbffg ));};};if len (_gggc .DiffResults .Errors )> 0{_ggbf .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_edegcf :=range _gggc .DiffResults .Errors {_ggbf .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_edegcf ));};};};if _gggc .IsCrlFound {_ggbf .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_ggbf .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _gggc .IsOcspFound {_ggbf .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_ggbf .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _ggbf .String ();};func (_abbgf *PdfReader )loadAnnotations (_abccced _bda .PdfObject )([]*PdfAnnotation ,error ){_bbec ,_dcaca :=_bda .GetArray (_abccced );
if !_dcaca {return nil ,_c .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _beafb []*PdfAnnotation ;for _ ,_dgdbf :=range _bbec .Elements (){_dgdbf =_bda .ResolveReference (_dgdbf );
if _ ,_dggf :=_dgdbf .(*_bda .PdfObjectNull );_dggf {continue ;};_adebd ,_bcfa :=_dgdbf .(*_bda .PdfObjectDictionary );_dcdad ,_facbf :=_dgdbf .(*_bda .PdfIndirectObject );if _bcfa {_dcdad =&_bda .PdfIndirectObject {};_dcdad .PdfObject =_adebd ;}else {if !_facbf {return nil ,_c .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_eeeag ,_cgcbe :=_abbgf .newPdfAnnotationFromIndirectObject (_dcdad );if _cgcbe !=nil {return nil ,_cgcbe ;};switch _bccdge :=_eeeag .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_dfbdf :=range _abbgf .AcroForm .AllFields (){if _dfbdf ._ceaeg ==_bccdge .Parent {_bccdge ._aee =_dfbdf ;
break ;};};};if _eeeag !=nil {_beafb =append (_beafb ,_eeeag );};};return _beafb ,nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_cfdbc FieldFlag )Has (fl FieldFlag )bool {return (_cfdbc .Mask ()&fl .Mask ())> 0};

// GenerateRandomID generates a random ID for the K dictionary object.
func (_aadbgce *KDict )GenerateRandomID ()string {_dgfcg ,_egfcb :=_bdd .NewUUID ();if _egfcb !=nil {_ed .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020g\u0065\u006e\u0065\u0072\u0061t\u0069n\u0067 \u0055\u0055\u0049\u0044\u003a\u0020\u0025v",_egfcb );};
if _dgfcg !=_bdd .Nil {_dbaab :=_dgfcg .String ();_aadbgce .ID =_bda .MakeString (_dbaab );return _dbaab ;};return "";};func (_gacfb *PdfWriter )copyObjects (){_cbecd :=make (map[_bda .PdfObject ]_bda .PdfObject );_gagdc :=make ([]_bda .PdfObject ,0,len (_gacfb ._ccbbg ));
_edcbc :=make (map[_bda .PdfObject ]struct{},len (_gacfb ._ccbbg ));_gdgae :=make (map[_bda .PdfObject ]struct{});for _ ,_bdace :=range _gacfb ._ccbbg {_fdebg :=_gacfb .copyObject (_bdace ,_cbecd ,_gdgae ,false );if _ ,_gfdea :=_gdgae [_bdace ];_gfdea {continue ;
};_gagdc =append (_gagdc ,_fdebg );_edcbc [_fdebg ]=struct{}{};};_gacfb ._ccbbg =_gagdc ;_gacfb ._egfad =_edcbc ;_gacfb ._eebef =_gacfb .copyObject (_gacfb ._eebef ,_cbecd ,nil ,false ).(*_bda .PdfIndirectObject );_gacfb ._eefbd =_gacfb .copyObject (_gacfb ._eefbd ,_cbecd ,nil ,false ).(*_bda .PdfIndirectObject );
if _gacfb ._dgeba !=nil {_gacfb ._dgeba =_gacfb .copyObject (_gacfb ._dgeba ,_cbecd ,nil ,false ).(*_bda .PdfIndirectObject );};if _gacfb ._eccfc {_affae :=make (map[_bda .PdfObject ]int64 );for _fbeb ,_fedab :=range _gacfb ._gcgde {if _cccae ,_acag :=_cbecd [_fbeb ];
_acag {_affae [_cccae ]=_fedab ;}else {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_gacfb ._gcgde =_affae ;};};func (_feeg *Image )getSuitableEncoder ()(_bda .StreamEncoder ,error ){var (_ddeg ,_abcca =int (_feeg .Width ),int (_feeg .Height );_ccaff =make (map[string ]bool );_dbegf =true ;_fccbbb =false ;_edbbf =func ()*_bda .DCTEncoder {return _bda .NewDCTEncoder ()};
_cebebe =func ()*_bda .DCTEncoder {_gaefg :=_bda .NewDCTEncoder ();_gaefg .BitsPerComponent =16;return _gaefg };);for _dddfc :=0;_dddfc < _abcca ;_dddfc ++{for _fafbg :=0;_fafbg < _ddeg ;_fafbg ++{_cacb ,_acgcb :=_feeg .ColorAt (_fafbg ,_dddfc );if _acgcb !=nil {return nil ,_acgcb ;
};_bfebf ,_edgd ,_fdfbc ,_baedd :=_cacb .RGBA ();if _dbegf &&(_bfebf !=_edgd ||_bfebf !=_fdfbc ||_edgd !=_fdfbc ){_dbegf =false ;};if !_fccbbb {switch _cacb .(type ){case _gbf .NRGBA :_fccbbb =_baedd > 0;};};_ccaff [_c .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_bfebf ,_edgd ,_fdfbc )]=true ;
if len (_ccaff )> 2&&_fccbbb {return _cebebe (),nil ;};};};if _fccbbb ||len (_feeg ._ffbd )> 0{return _bda .NewFlateEncoder (),nil ;};if len (_ccaff )<=2{_fdag :=_feeg .ConvertToBinary ();if _fdag !=nil {return nil ,_fdag ;};return _bda .NewJBIG2Encoder (),nil ;
};if _dbegf {return _edbbf (),nil ;};if _feeg .ColorComponents ==1{if _feeg .BitsPerComponent ==1{return _bda .NewJBIG2Encoder (),nil ;}else if _feeg .BitsPerComponent ==8{_cafacd :=_bda .NewDCTEncoder ();_cafacd .ColorComponents =1;return _cafacd ,nil ;
};}else if _feeg .ColorComponents ==3{if _feeg .BitsPerComponent ==8{return _edbbf (),nil ;}else if _feeg .BitsPerComponent ==16{return _cebebe (),nil ;};}else if _feeg .ColorComponents ==4{_ggaf :=_cebebe ();_ggaf .ColorComponents =4;return _ggaf ,nil ;
};return _cebebe (),nil ;};func (_ceada *PdfAcroForm )filteredFields (_ffebg FieldFilterFunc ,_gbdcag bool )[]*PdfField {if _ceada ==nil {return nil ;};return _acgga (_ceada .Fields ,_ffebg ,_gbdcag );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bfeb *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bfeb .Alternate ==nil {if _bfeb .N ==1{_dbab :=NewPdfColorspaceDeviceGray ();return _dbab .ColorFromFloats (vals );}else if _bfeb .N ==3{_faef :=NewPdfColorspaceDeviceRGB ();
return _faef .ColorFromFloats (vals );}else if _bfeb .N ==4{_ecfd :=NewPdfColorspaceDeviceCMYK ();return _ecfd .ColorFromFloats (vals );}else {return nil ,_gea .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bfeb .Alternate .ColorFromFloats (vals );};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_debdb *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};var _ pdfFont =(*pdfFontType0 )(nil );

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bda .PdfObjectInteger ;BitsPerComponent *_bda .PdfObjectInteger ;VerticesPerRow *_bda .PdfObjectInteger ;Decode *_bda .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_ceaeg :_bda .MakeIndirectObject (_bda .MakeDict ())}};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_eacac *PdfReader )GetCatalogViewerPreferences ()(_bda .PdfObject ,bool ){if _eacac ._dabg ==nil {return nil ,false ;};_adabb :=_eacac ._dabg .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _adabb ,_adabb !=nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_geaag ,_bcedge :=_ded .ParsePdfTime (dateStr );if _bcedge !=nil {return PdfDate {},_bcedge ;};return NewPdfDateFromTime (_geaag );};

// PrintClip returns the value of the printClip.
func (_fdfbd *ViewerPreferences )PrintClip ()PageBoundary {return _fdfbd ._eefag };

// ToPdfObject implements interface PdfModel.
func (_cga *PdfAction )ToPdfObject ()_bda .PdfObject {_ee :=_cga ._gg ;_bdg :=_ee .PdfObject .(*_bda .PdfObjectDictionary );_bdg .Clear ();_bdg .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_bdg .SetIfNotNil ("\u0053",_cga .S );
_bdg .SetIfNotNil ("\u004e\u0065\u0078\u0074",_cga .Next );return _ee ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_dcea :=&PdfColorspaceDeviceN {};return _dcea };func (_geca *PdfReader )loadStructure ()error {if _geca ._fdadg .GetCrypter ()!=nil &&!_geca ._fdadg .IsAuthenticated (){return _c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gacb :=_geca ._fdadg .GetTrailer ();if _gacb ==nil {return _c .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gfeff ,_dcaad :=_gacb .Get ("\u0052\u006f\u006f\u0074").(*_bda .PdfObjectReference );if !_dcaad {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_gacb );
};_dbegab ,_bbdae :=_geca ._fdadg .LookupByReference (*_gfeff );if _bbdae !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bbdae );
return _bbdae ;};_bfcbb ,_dcaad :=_dbegab .(*_bda .PdfIndirectObject );if !_dcaad {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dbegab ,*_gacb );
return _gea .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_affgc ,_dcaad :=(*_bfcbb ).PdfObject .(*_bda .PdfObjectDictionary );if !_dcaad {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_bfcbb .PdfObject );
return _gea .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ed .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_affgc );_cafae ,_dcaad :=_affgc .Get ("\u0050\u0061\u0067e\u0073").(*_bda .PdfObjectReference );
if !_dcaad {return _gea .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_ddbeb ,_bbdae :=_geca ._fdadg .LookupByReference (*_cafae );
if _bbdae !=nil {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bbdae ;};_bcggea ,_dcaad :=_ddbeb .(*_bda .PdfIndirectObject );if !_dcaad {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_ed .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_bcggea );return _gea .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_caafa ,_dcaad :=_bcggea .PdfObject .(*_bda .PdfObjectDictionary );
if !_dcaad {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_bcggea );return _gea .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");
};_dfgcb ,_dcaad :=_bda .GetInt (_caafa .Get ("\u0043\u006f\u0075n\u0074"));if !_dcaad {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _gea .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_dcaad =_bda .GetName (_caafa .Get ("\u0054\u0079\u0070\u0065"));!_dcaad {_ed .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_caafa .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0050\u0061\u0067e\u0073"));};if _fdfac ,_cfac :=_bda .GetInt (_caafa .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_cfac {_fbecgg :=int64 (*_fdfac );_geca .Rotate =&_fbecgg ;};_geca ._ceabe =_gfeff ;
_geca ._dabg =_affgc ;_geca ._dafaa =_caafa ;_geca ._baeed =_bcggea ;_geca ._gdbe =int (*_dfgcb );_geca ._cgdac =[]*_bda .PdfIndirectObject {};_adgf :=map[_bda .PdfObject ]struct{}{};_bbdae =_geca .buildPageList (_bcggea ,nil ,_adgf );if _bbdae !=nil {return _bbdae ;
};_ed .Log .Trace ("\u002d\u002d\u002d");_ed .Log .Trace ("\u0054\u004f\u0043");_ed .Log .Trace ("\u0050\u0061\u0067e\u0073");_ed .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_geca ._cgdac ),_geca ._cgdac );_geca ._febfd ,_bbdae =_geca .loadOutlines ();
if _bbdae !=nil {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bbdae );
return _bbdae ;};_geca .AcroForm ,_bbdae =_geca .loadForms ();if _bbdae !=nil {return _bbdae ;};_geca .DSS ,_bbdae =_geca .loadDSS ();if _bbdae !=nil {return _bbdae ;};_geca ._dbcf ,_bbdae =_geca .loadPerms ();if _bbdae !=nil {return _bbdae ;};return nil ;
};

// WriteToFile writes the output PDF to file.
func (_eddfcb *PdfWriter )WriteToFile (outputFilePath string )error {_dfgbd ,_dfcge :=_dfc .Create (outputFilePath );if _dfcge !=nil {return _dfcge ;};defer _dfgbd .Close ();return _eddfcb .Write (_dfgbd );};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_eabbbd *PdfFieldText )ToPdfObject ()_bda .PdfObject {_eabbbd .PdfField .ToPdfObject ();_edec :=_eabbbd ._ceaeg ;_geabcc :=_edec .PdfObject .(*_bda .PdfObjectDictionary );_geabcc .Set ("\u0046\u0054",_bda .MakeName ("\u0054\u0078"));if _eabbbd .DA !=nil {_geabcc .Set ("\u0044\u0041",_eabbbd .DA );
};if _eabbbd .Q !=nil {_geabcc .Set ("\u0051",_eabbbd .Q );};if _eabbbd .DS !=nil {_geabcc .Set ("\u0044\u0053",_eabbbd .DS );};if _eabbbd .RV !=nil {_geabcc .Set ("\u0052\u0056",_eabbbd .RV );};if _eabbbd .MaxLen !=nil {_geabcc .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_eabbbd .MaxLen );
};return _edec ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};func (_bdcf *PdfReader )newPdfAnnotationSquigglyFromDict (_ebg *_bda .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bede :=PdfAnnotationSquiggly {};_gbe ,_faf :=_bdcf .newPdfAnnotationMarkupFromDict (_ebg );if _faf !=nil {return nil ,_faf ;
};_bede .PdfAnnotationMarkup =_gbe ;_bede .QuadPoints =_ebg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bede ,nil ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_cccc :=&PdfShadingPatternType2 {};_cccc .Matrix =_bda .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_cccc .PdfPattern =&PdfPattern {};_cccc .PdfPattern .PatternType =int64 (*_bda .MakeInteger (2));
_cccc .PdfPattern ._dgaed =_cccc ;_cccc .PdfPattern ._cbbgec =_bda .MakeIndirectObject (_bda .MakeDict ());return _cccc ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_cbd :=NewPdfAnnotation ();_ddcfg :=&PdfAnnotationMovie {};_ddcfg .PdfAnnotation =_cbd ;_cbd .SetContext (_ddcfg );return _ddcfg ;};func (_gagfd *PdfReader )newPdfAnnotation3DFromDict (_cdac *_bda .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_abb :=PdfAnnotation3D {};
_abb .T3DD =_cdac .Get ("\u0033\u0044\u0044");_abb .T3DV =_cdac .Get ("\u0033\u0044\u0056");_abb .T3DA =_cdac .Get ("\u0033\u0044\u0041");_abb .T3DI =_cdac .Get ("\u0033\u0044\u0049");_abb .T3DB =_cdac .Get ("\u0033\u0044\u0042");return &_abb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_bfda *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )!=_bfda .GetNumComponents (){return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gded ,_ebdc :=_bda .GetNumbersAsFloat (objects );
if _ebdc !=nil {return nil ,_ebdc ;};return _bfda .ColorFromFloats (_gded );};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_acfbcf *PdfWriter )SetOptimizer (optimizer Optimizer ){_acfbcf ._cfcfg =optimizer };func (_gcaf *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ggdf *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };var (TabOrderRow TabOrderType ="\u0052";TabOrderColumn TabOrderType ="\u0043";TabOrderStructure TabOrderType ="\u0053";);

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_cdde *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_dbdd :=_cf .NewReader (img .getBase ());_efgc :=_bg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._ffbd ,img ._bfafe );
_beba :=_cf .NewWriter (_efgc );_acee :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_eacg :=_cdde .GetNumComponents ();_gegcf :=make ([]uint32 ,_eacg );_aaadc :=make ([]float64 ,_eacg );for {_egcb :=_dbdd .ReadSamples (_gegcf );if _egcb ==_ga .EOF {break ;
}else if _egcb !=nil {return img ,_egcb ;};for _fdfaa :=0;_fdfaa < _eacg ;_fdfaa ++{_fdgag :=float64 (_gegcf [_fdfaa ])/_acee ;_aaadc [_fdfaa ]=_fdgag ;};_fccc ,_egcb :=_cdde .TintTransform .Evaluate (_aaadc );if _egcb !=nil {return img ,_egcb ;};for _ ,_ccgfd :=range _fccc {_ccgfd =_ce .Min (_ce .Max (0,_ccgfd ),1.0);
if _egcb =_beba .WriteSample (uint32 (_ccgfd *_acee ));_egcb !=nil {return img ,_egcb ;};};};return _cdde .AlternateSpace .ImageToRGB (_fggae (&_efgc ));};func (_cce *PdfReader )newPdfActionFromIndirectObject (_bedg *_bda .PdfIndirectObject )(*PdfAction ,error ){_abd ,_ceg :=_bedg .PdfObject .(*_bda .PdfObjectDictionary );
if !_ceg {return nil ,_c .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cce ._gbdfa .GetModelFromPrimitive (_abd );model !=nil {_dag ,_bbf :=model .(*PdfAction );if !_bbf {return nil ,_c .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _dag ,nil ;};_bea :=&PdfAction {};_bea ._gg =_bedg ;_cce ._gbdfa .Register (_abd ,_bea );if _dfbc :=_abd .Get ("\u0054\u0079\u0070\u0065");_dfbc !=nil {_eeb ,_acc :=_dfbc .(*_bda .PdfObjectName );if !_acc {_ed .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dfbc );
}else {if *_eeb !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ed .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_eeb );
};_bea .Type =_eeb ;};};if _cada :=_abd .Get ("\u004e\u0065\u0078\u0074");_cada !=nil {_bea .Next =_cada ;};if _ggb :=_abd .Get ("\u0053");_ggb !=nil {_bea .S =_ggb ;};_acb ,_dea :=_bea .S .(*_bda .PdfObjectName );if !_dea {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bea .S );
return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bea .S );};_ccb :=PdfActionType (_acb .String ());
switch _ccb {case ActionTypeGoTo :_gbdf ,_fbb :=_cce .newPdfActionGotoFromDict (_abd );if _fbb !=nil {return nil ,_fbb ;};_gbdf .PdfAction =_bea ;_bea ._edd =_gbdf ;return _bea ,nil ;case ActionTypeGoToR :_deae ,_dgfb :=_cce .newPdfActionGotoRFromDict (_abd );
if _dgfb !=nil {return nil ,_dgfb ;};_deae .PdfAction =_bea ;_bea ._edd =_deae ;return _bea ,nil ;case ActionTypeGoToE :_dcb ,_bfb :=_cce .newPdfActionGotoEFromDict (_abd );if _bfb !=nil {return nil ,_bfb ;};_dcb .PdfAction =_bea ;_bea ._edd =_dcb ;return _bea ,nil ;
case ActionTypeLaunch :_gfc ,_bdce :=_cce .newPdfActionLaunchFromDict (_abd );if _bdce !=nil {return nil ,_bdce ;};_gfc .PdfAction =_bea ;_bea ._edd =_gfc ;return _bea ,nil ;case ActionTypeThread :_cbc ,_gba :=_cce .newPdfActionThreadFromDict (_abd );if _gba !=nil {return nil ,_gba ;
};_cbc .PdfAction =_bea ;_bea ._edd =_cbc ;return _bea ,nil ;case ActionTypeURI :_gbdb ,_afe :=_cce .newPdfActionURIFromDict (_abd );if _afe !=nil {return nil ,_afe ;};_gbdb .PdfAction =_bea ;_bea ._edd =_gbdb ;return _bea ,nil ;case ActionTypeSound :_gdb ,_cdgc :=_cce .newPdfActionSoundFromDict (_abd );
if _cdgc !=nil {return nil ,_cdgc ;};_gdb .PdfAction =_bea ;_bea ._edd =_gdb ;return _bea ,nil ;case ActionTypeMovie :_accf ,_gfa :=_cce .newPdfActionMovieFromDict (_abd );if _gfa !=nil {return nil ,_gfa ;};_accf .PdfAction =_bea ;_bea ._edd =_accf ;return _bea ,nil ;
case ActionTypeHide :_bef ,_efc :=_cce .newPdfActionHideFromDict (_abd );if _efc !=nil {return nil ,_efc ;};_bef .PdfAction =_bea ;_bea ._edd =_bef ;return _bea ,nil ;case ActionTypeNamed :_ddbg ,_acg :=_cce .newPdfActionNamedFromDict (_abd );if _acg !=nil {return nil ,_acg ;
};_ddbg .PdfAction =_bea ;_bea ._edd =_ddbg ;return _bea ,nil ;case ActionTypeSubmitForm :_bfdc ,_fdfc :=_cce .newPdfActionSubmitFormFromDict (_abd );if _fdfc !=nil {return nil ,_fdfc ;};_bfdc .PdfAction =_bea ;_bea ._edd =_bfdc ;return _bea ,nil ;case ActionTypeResetForm :_cda ,_fed :=_cce .newPdfActionResetFormFromDict (_abd );
if _fed !=nil {return nil ,_fed ;};_cda .PdfAction =_bea ;_bea ._edd =_cda ;return _bea ,nil ;case ActionTypeImportData :_dca ,_bdga :=_cce .newPdfActionImportDataFromDict (_abd );if _bdga !=nil {return nil ,_bdga ;};_dca .PdfAction =_bea ;_bea ._edd =_dca ;
return _bea ,nil ;case ActionTypeSetOCGState :_dbg ,_def :=_cce .newPdfActionSetOCGStateFromDict (_abd );if _def !=nil {return nil ,_def ;};_dbg .PdfAction =_bea ;_bea ._edd =_dbg ;return _bea ,nil ;case ActionTypeRendition :_fbd ,_fdfb :=_cce .newPdfActionRenditionFromDict (_abd );
if _fdfb !=nil {return nil ,_fdfb ;};_fbd .PdfAction =_bea ;_bea ._edd =_fbd ;return _bea ,nil ;case ActionTypeTrans :_gfe ,_bggc :=_cce .newPdfActionTransFromDict (_abd );if _bggc !=nil {return nil ,_bggc ;};_gfe .PdfAction =_bea ;_bea ._edd =_gfe ;return _bea ,nil ;
case ActionTypeGoTo3DView :_acbc ,_gdd :=_cce .newPdfActionGoTo3DViewFromDict (_abd );if _gdd !=nil {return nil ,_gdd ;};_acbc .PdfAction =_bea ;_bea ._edd =_acbc ;return _bea ,nil ;case ActionTypeJavaScript :_afec ,_cbbb :=_cce .newPdfActionJavaScriptFromDict (_abd );
if _cbbb !=nil {return nil ,_cbbb ;};_afec .PdfAction =_bea ;_bea ._edd =_afec ;return _bea ,nil ;};_ed .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_ccb );
return nil ,nil ;};

// SetBorderWidth sets the style's border width.
func (_fef *PdfBorderStyle )SetBorderWidth (width float64 ){_fef .W =&width };

// RemovePage removes a page by number.
func (_gbge *PdfAppender )RemovePage (pageNum int ){_dgaf :=pageNum -1;_gbge ._eebd =append (_gbge ._eebd [0:_dgaf ],_gbge ._eebd [pageNum :]...);};var _dgcb =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bda .PdfObjectInteger ;BitsPerComponent *_bda .PdfObjectInteger ;BitsPerFlag *_bda .PdfObjectInteger ;Decode *_bda .PdfObjectArray ;Function []PdfFunction ;};func _dabab (_cabd []*_bda .PdfObjectStream )*_bda .PdfObjectArray {if len (_cabd )==0{return nil ;
};_fgdg :=make ([]_bda .PdfObject ,0,len (_cabd ));for _ ,_gaddec :=range _cabd {_fgdg =append (_fgdg ,_gaddec );};return _bda .MakeArray (_fgdg ...);};

// SetReason sets the `Reason` field of the signature.
func (_abffa *PdfSignature )SetReason (reason string ){_abffa .Reason =_bda .MakeEncodedString (reason ,true );};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_fb :=NewPdfAction ();_daf :=&PdfActionRendition {};_daf .PdfAction =_fb ;_fb .SetContext (_daf );return _daf ;};

// ToPdfObject implements interface PdfModel.
func (_gbg *PdfAnnotationLine )ToPdfObject ()_bda .PdfObject {_gbg .PdfAnnotation .ToPdfObject ();_efd :=_gbg ._ged ;_gfbg :=_efd .PdfObject .(*_bda .PdfObjectDictionary );_gbg .PdfAnnotationMarkup .appendToPdfDictionary (_gfbg );_gfbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u004c\u0069\u006e\u0065"));
_gfbg .SetIfNotNil ("\u004c",_gbg .L );_gfbg .SetIfNotNil ("\u0042\u0053",_gbg .BS );_gfbg .SetIfNotNil ("\u004c\u0045",_gbg .LE );_gfbg .SetIfNotNil ("\u0049\u0043",_gbg .IC );_gfbg .SetIfNotNil ("\u004c\u004c",_gbg .LL );_gfbg .SetIfNotNil ("\u004c\u004c\u0045",_gbg .LLE );
_gfbg .SetIfNotNil ("\u0043\u0061\u0070",_gbg .Cap );_gfbg .SetIfNotNil ("\u0049\u0054",_gbg .IT );_gfbg .SetIfNotNil ("\u004c\u004c\u004f",_gbg .LLO );_gfbg .SetIfNotNil ("\u0043\u0050",_gbg .CP );_gfbg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gbg .Measure );
_gfbg .SetIfNotNil ("\u0043\u004f",_gbg .CO );return _efd ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_gaedb *PdfReader )GetOCProperties ()(_bda .PdfObject ,error ){_efbgf :=_gaedb ._dabg ;_gcaff :=_efbgf .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gcaff =_bda .ResolveReference (_gcaff );if !_gaedb ._aaece {_ddegg :=_gaedb .traverseObjectData (_gcaff );
if _ddegg !=nil {return nil ,_ddegg ;};};return _gcaff ,nil ;};func (_edcdf *pdfCIDFontType0 )baseFields ()*fontCommon {return &_edcdf .fontCommon };

// ToPdfObject returns the PDF representation of the colorspace.
func (_aadd *PdfColorspaceDeviceGray )ToPdfObject ()_bda .PdfObject {return _bda .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_adfb *PdfFieldButton )GetType ()ButtonType {_bebge :=ButtonTypeCheckbox ;if _adfb .Ff !=nil {if (uint32 (*_adfb .Ff )&FieldFlagPushbutton .Mask ())> 0{_bebge =ButtonTypePush ;}else if (uint32 (*_adfb .Ff )&FieldFlagRadio .Mask ())> 0{_bebge =ButtonTypeRadio ;
};};return _bebge ;};

// IsDisplayDocTitle returns the value of the displayDocTitle flag.
func (_cefaba *ViewerPreferences )IsDisplayDocTitle ()bool {if _cefaba ._ddeed ==nil {return false ;};return *_cefaba ._ddeed ;};func (_eaec *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _eaec ._bedea ==nil &&_eaec .DescendantFont !=nil {return _eaec .DescendantFont .FontDescriptor ();
};return _eaec ._bedea ;};

// SetViewArea sets the value of the viewArea.
func (_ddcdd *ViewerPreferences )SetViewArea (viewArea PageBoundary ){_ddcdd ._adbff =viewArea };

// SetFontByName sets the font specified by keyName to the given object.
func (_eaaad *PdfPageResources )SetFontByName (keyName _bda .PdfObjectName ,obj _bda .PdfObject )error {if _eaaad .Font ==nil {_eaaad .Font =_bda .MakeDict ();};_daded ,_egdaf :=_bda .TraceToDirectObject (_eaaad .Font ).(*_bda .PdfObjectDictionary );if !_egdaf {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bda .TraceToDirectObject (_eaaad .Font ));
return _bda .ErrTypeError ;};_daded .Set (keyName ,obj );return nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_ecae *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// NewStructTreeRootFromPdfObject creates a new structure tree root from a PDF object.
func NewStructTreeRootFromPdfObject (obj _bda .PdfObject )(*StructTreeRoot ,error ){_beegff :=_bda .ResolveReference (obj );_dcffb ,_dcfge :=_bda .GetDict (_beegff );if !_dcfge {return nil ,_c .Errorf ("\u0065\u0078\u0069\u0073\u0074\u0069\u006e\u0067 \u0073\u0074\u0072uc\u0074\u0075\u0072\u0065\u0020\u0074r\u0065\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_fcfdc :=&StructTreeRoot {};_fcfdc ._addd =_bda .MakeIndirectObject (_bda .MakeDict ());if _egca :=_dcffb .Get ("\u004b");_egca !=nil {_cbac :=_bda .ResolveReference (_egca );_gega :=_bda .ResolveReferencesDeep (_cbac ,nil );if _gega !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006fr\u0020\u0072\u0065\u0073\u006f\u006c\u0076\u0069\u006e\u0067 \u004b \u006f\u0062\u006a\u0065\u0063\u0074\u003a \u0025\u0076",_gega );
};_fcfdc .K =[]*KDict {};if _cceff ,_eaebc :=_bda .GetArray (_cbac );_eaebc {for _bdcbd :=0;_bdcbd < _cceff .Len ();_bdcbd ++{_aceac :=_cceff .Get (_bdcbd );_dfgdc ,_cdccf :=_fdagd (_aceac );if _cdccf !=nil {return nil ,_cdccf ;};_fcfdc .K =append (_fcfdc .K ,_dfgdc );
};}else {_gbddf ,_abbdd :=_fdagd (_cbac );if _abbdd !=nil {return nil ,_abbdd ;};_fcfdc .K =append (_fcfdc .K ,_gbddf );};};if _dafaf :=_dcffb .Get ("\u0049\u0044\u0054\u0072\u0065\u0065");_dafaf !=nil {_fcfdc .IDTree =_bdcgb (_dafaf );};if _bcfee :=_dcffb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065");
_bcfee !=nil {_ebfeb :=_bda .ResolveReference (_bcfee );if _ebdbef ,_aebdc :=_bda .GetDict (_ebfeb );_aebdc {_fcfdc .ParentTree =_ebdbef ;};};if _aafea :=_dcffb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079");
_aafea !=nil {_ ,_fedg :=_bda .GetInt (_aafea );if _fedg {_daeeg ,_bbgeg :=_bda .GetNumberAsInt64 (_aafea );if _bbgeg !=nil {return nil ,_bbgeg ;};_fcfdc .ParentTreeNextKey =_daeeg ;};};if _ecad :=_dcffb .Get ("\u0052o\u006c\u0065\u004d\u0061\u0070");_ecad !=nil {switch _fagdd :=_ecad .(type ){case *_bda .PdfIndirectObject :if _gdbed ,_eegabd :=_bda .GetDict (_fagdd .PdfObject );
_eegabd {_fcfdc .RoleMap =_gdbed ;};case *_bda .PdfObjectDictionary :_fcfdc .RoleMap =_fagdd ;case *_bda .PdfObjectString :_fcfdc .RoleMap =_fagdd ;};};if _bggaf :=_dcffb .Get ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070");_bggaf !=nil {if _gdgd ,_gaaa :=_bda .GetDict (_bggaf );
_gaaa {_fcfdc .ClassMap =_gdgd ;};};return _fcfdc ,nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_gdbde *PdfAppender )Write (w _ga .Writer )error {if _gdbde ._ecba {return _gea .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_bbbb :=NewPdfWriter ();_egdg ,_ecg :=_bda .GetDict (_bbbb ._facgd );if !_ecg {return _gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_edac ,_ecg :=_egdg .Get ("\u004b\u0069\u0064\u0073").(*_bda .PdfObjectArray );if !_ecg {return _gea .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ggag ,_ecg :=_egdg .Get ("\u0043\u006f\u0075n\u0074").(*_bda .PdfObjectInteger );if !_ecg {return _gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_ggfef :=_gdbde ._babd ._fdadg ;_cfcd :=_ggfef .GetTrailer ();if _cfcd ==nil {return _gea .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bdff ,_ecg :=_bda .GetIndirect (_cfcd .Get ("\u0052\u006f\u006f\u0074"));
if !_ecg {return _gea .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_dfba ,_ecg :=_bda .GetDict (_bdff );if !_ecg {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_bdff ,*_cfcd );
return _gea .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_aadb :=false ;for _ ,_gaac :=range _gdbde ._babd .AcroForm .signatureFields (){if _gaac .Lock !=nil {_aadb =true ;break ;};};if _aadb {_bbbb ._eefbd =_bdff ;
};for _ ,_eabb :=range _dfba .Keys (){if _bbbb ._geadba .Get (_eabb )==nil {_badg :=_dfba .Get (_eabb );_bbbb ._geadba .Set (_eabb ,_badg );};};if _gdbde ._ggae !=nil {if _gdbde ._ggae ._dacab {if _dagd :=_bda .TraceToDirectObject (_gdbde ._ggae .ToPdfObject ());
!_bda .IsNullObject (_dagd ){_bbbb ._geadba .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dagd );_gdbde .updateObjectsDeep (_dagd ,nil );}else {_ed .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_bbbb ._geadba .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gdbde ._ggae .ToPdfObject ());_gdbde .updateObjectsDeep (_gdbde ._ggae .ToPdfObject (),nil );};};if _gdbde ._afaf !=nil {_gdbde .updateObjectsDeep (_gdbde ._afaf .ToPdfObject (),nil );
_bbbb ._geadba .Set ("\u0044\u0053\u0053",_gdbde ._afaf .GetContainingPdfObject ());};if _gdbde ._gcef !=nil {_bbbb ._geadba .Set ("\u0050\u0065\u0072m\u0073",_gdbde ._gcef .ToPdfObject ());_gdbde .updateObjectsDeep (_gdbde ._gcef .ToPdfObject (),nil );
};if _bbbb ._cdbbdg .Major < 2{_bbbb .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_bbbb .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _eggdg ,_feaga :=_bda .GetDict (_cfcd .Get ("\u0049\u006e\u0066\u006f"));
_feaga {if _abdg ,_fedcc :=_bda .GetDict (_bbbb ._eebef );_fedcc {for _ ,_feae :=range _eggdg .Keys (){if _abdg .Get (_feae )==nil {_abdg .Set (_feae ,_eggdg .Get (_feae ));};};};};if _gdbde ._bdbg !=nil {_bbbb ._eebef =_bda .MakeIndirectObject (_gdbde ._bdbg .ToPdfObject ());
};_gdbde .updateObjectsDeep (_bbbb ._eebef ,nil );_gdbde .updateObjectsDeep (_bbbb ._eefbd ,nil );_cbcb :=false ;if len (_gdbde ._babd .PageList )!=len (_gdbde ._eebd ){_cbcb =true ;}else {for _bebee :=range _gdbde ._babd .PageList {switch {case _gdbde ._eebd [_bebee ]==_gdbde ._babd .PageList [_bebee ]:case _gdbde ._eebd [_bebee ]==_gdbde .Reader .PageList [_bebee ]:default:_cbcb =true ;
};if _cbcb {break ;};};};if _cbcb {_gdbde .updateObjectsDeep (_bbbb ._facgd ,nil );}else {_gdbde ._ffff [_bbbb ._facgd ]=struct{}{};};_bbbb ._facgd .ObjectNumber =_gdbde .Reader ._baeed .ObjectNumber ;_gdbde ._ffge [_bbbb ._facgd ]=_gdbde .Reader ._baeed .ObjectNumber ;
_adca :=[]_bda .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_abbb :=range _gdbde ._eebd {_bfaa :=_abbb .ToPdfObject ();
*_ggag =*_ggag +1;if _acga ,_dffg :=_bfaa .(*_bda .PdfIndirectObject );_dffg &&_acga .GetParser ()==_gdbde ._babd ._fdadg {_edac .Append (&_acga .PdfObjectReference );continue ;};if _eeac ,_begcd :=_bda .GetDict (_bfaa );_begcd {_afg ,_gbdc :=_eeac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bda .PdfIndirectObject );
for _gbdc {_ed .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_afg );_dgcc ,_edc :=_afg .PdfObject .(*_bda .PdfObjectDictionary );if !_edc {return _gea .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_eece :=range _adca {_ed .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eece );if _ebee :=_eeac .Get (_eece );_ebee !=nil {_ed .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
if len (_abbb ._gfaec .Keys ())> 0&&!_cbcb {_gca :=_abbb ._gfaec ;if _fdcb :=_gca .Get (_eece );_fdcb !=nil {if _ebee !=_fdcb {_ed .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_eece ,_fdcb );
_eeac .Set (_eece ,_fdcb );};};};continue ;};if _ceeg :=_dgcc .Get (_eece );_ceeg !=nil {_ed .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eece );_eeac .Set (_eece ,_ceeg );};};
_afg ,_gbdc =_dgcc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bda .PdfIndirectObject );_ed .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dgcc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _cbcb {_eeac .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbbb ._facgd );
};};_gdbde .updateObjectsDeep (_bfaa ,nil );_edac .Append (_bfaa );};if _ ,_bgf :=_gdbde ._eecc .Seek (0,_ga .SeekStart );_bgf !=nil {return _bgf ;};_bbbc :=make (map[SignatureHandler ]_ga .Writer );_gegb :=_bda .MakeArray ();for _ ,_gegc :=range _gdbde ._gaga {if _aeee ,_accg :=_bda .GetIndirect (_gegc );
_accg {if _geeg ,_fcca :=_aeee .PdfObject .(*pdfSignDictionary );_fcca {_addge :=*_geeg ._fcdfe ;var _gefg error ;_bbbc [_addge ],_gefg =_addge .NewDigest (_geeg ._cfefa );if _gefg !=nil {return _gefg ;};_gegb .Append (_bda .MakeInteger (0xfffff),_bda .MakeInteger (0xfffff));
};};};if _gegb .Len ()> 0{_gegb .Append (_bda .MakeInteger (0xfffff),_bda .MakeInteger (0xfffff));};for _ ,_bfef :=range _gdbde ._gaga {if _edcd ,_egc :=_bda .GetIndirect (_bfef );_egc {if _gbfb ,_dbe :=_edcd .PdfObject .(*pdfSignDictionary );_dbe {_gbfb .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_gegb );
};};};_fccac :=len (_bbbc )> 0;var _acdg _ga .Reader =_gdbde ._eecc ;if _fccac {_edbf :=make ([]_ga .Writer ,0,len (_bbbc ));for _ ,_agde :=range _bbbc {_edbf =append (_edbf ,_agde );};_acdg =_ga .TeeReader (_gdbde ._eecc ,_ga .MultiWriter (_edbf ...));
};_cgd ,_edde :=_ga .Copy (w ,_acdg );if _edde !=nil {return _edde ;};if len (_gdbde ._gaga )==0{return nil ;};_bbbb ._eafd =_cgd ;_bbbb .ObjNumOffset =_gdbde ._eaedg ;_bbbb ._eccfc =true ;_bbbb ._bffca =_gdbde ._gagb ;_bbbb ._eafcga =_gdbde ._edff ;_bbbb ._cbedca =_gdbde ._aaaa ;
_bbbb ._cdbbdg =_gdbde ._babd .PdfVersion ();_bbbb ._gcgde =_gdbde ._ffge ;_bbbb ._cbdd =_gdbde ._afcg .GetCrypter ();_bbbb ._dgeba =_gdbde ._afcg .GetEncryptObj ();_ead :=_gdbde ._afcg .GetXrefType ();if _ead !=nil {_edbg :=*_ead ==_bda .XrefTypeObjectStream ;
_bbbb ._fffee =&_edbg ;};_bbbb ._egfad =map[_bda .PdfObject ]struct{}{};_bbbb ._ccbbg =[]_bda .PdfObject {};for _ ,_efac :=range _gdbde ._gaga {if _ ,_gdg :=_gdbde ._ffff [_efac ];_gdg {continue ;};_bbbb .addObject (_efac );};_bgff :=w ;if _fccac {_bgff =_dff .NewBuffer (nil );
};if _gdbde ._bfec !=""&&_bbbb ._cbdd ==nil {_bbbb .Encrypt ([]byte (_gdbde ._bfec ),[]byte (_gdbde ._bfec ),_gdbde ._feed );};if _gcfe :=_cfcd .Get ("\u0049\u0044");_gcfe !=nil {if _bdbb ,_cdf :=_bda .GetArray (_gcfe );_cdf {_bbbb ._ffgbfc =_bdbb ;};};
if _daea :=_bbbb .Write (_bgff );_daea !=nil {return _daea ;};if _fccac {_efaf :=_bgff .(*_dff .Buffer ).Bytes ();_bcdg :=_bda .MakeArray ();var _efafc []*pdfSignDictionary ;var _fdgea int64 ;for _ ,_cgea :=range _bbbb ._ccbbg {if _acgca ,_abag :=_bda .GetIndirect (_cgea );
_abag {if _deed ,_bbdb :=_acgca .PdfObject .(*pdfSignDictionary );_bbdb {_efafc =append (_efafc ,_deed );_aga :=_deed ._dbebg +int64 (_deed ._gcgda );_bcdg .Append (_bda .MakeInteger (_fdgea ),_bda .MakeInteger (_aga -_fdgea ));_fdgea =_deed ._dbebg +int64 (_deed ._dgeg );
};};};_bcdg .Append (_bda .MakeInteger (_fdgea ),_bda .MakeInteger (_cgd +int64 (len (_efaf ))-_fdgea ));_befa :=[]byte (_bcdg .WriteString ());for _ ,_gcac :=range _efafc {_eebc :=int (_gcac ._dbebg -_cgd );for _adagd :=_gcac ._cafdg ;_adagd < _gcac ._eafbd ;
_adagd ++{_efaf [_eebc +_adagd ]=' ';};_fafb :=_efaf [_eebc +_gcac ._cafdg :_eebc +_gcac ._eafbd ];copy (_fafb ,_befa );};var _bdcee int ;for _ ,_bga :=range _efafc {_ffb :=int (_bga ._dbebg -_cgd );_ggcd :=_efaf [_bdcee :_ffb +_bga ._gcgda ];_abccc :=*_bga ._fcdfe ;
_bbbc [_abccc ].Write (_ggcd );_bdcee =_ffb +_bga ._dgeg ;};for _ ,_cddg :=range _efafc {_cgga :=_efaf [_bdcee :];_dgec :=*_cddg ._fcdfe ;_bbbc [_dgec ].Write (_cgga );};for _ ,_bgad :=range _efafc {_bfac :=int (_bgad ._dbebg -_cgd );_bag :=*_bgad ._fcdfe ;
_agga :=_bbbc [_bag ];if _dac :=_bag .Sign (_bgad ._cfefa ,_agga );_dac !=nil {return _dac ;};_bgad ._cfefa .ByteRange =_bcdg ;_bbfbf :=[]byte (_bgad ._cfefa .Contents .WriteString ());for _ffd :=_bgad ._cafdg ;_ffd < _bgad ._eafbd ;_ffd ++{_efaf [_bfac +_ffd ]=' ';
};for _efbdg :=_bgad ._gcgda ;_efbdg < _bgad ._dgeg ;_efbdg ++{_efaf [_bfac +_efbdg ]=' ';};_agee :=_efaf [_bfac +_bgad ._cafdg :_bfac +_bgad ._eafbd ];copy (_agee ,_befa );_agee =_efaf [_bfac +_bgad ._gcgda :_bfac +_bgad ._dgeg ];copy (_agee ,_bbfbf );
};_cdaf :=_dff .NewBuffer (_efaf );_ ,_edde =_ga .Copy (w ,_cdaf );if _edde !=nil {return _edde ;};};_gdbde ._ecba =true ;return nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_cegd *PdfField )SetContext (ctx PdfModel ){_cegd ._aebb =ctx };

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gfae *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gfae .baseFields ()._bedea !=nil {return _gfae .baseFields ()._bedea ;};if _bdgae :=_gfae ._ggada .getFontDescriptor ();_bdgae !=nil {return _bdgae ;};_ed .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gfae );
return nil ;};func (_abdgc *pdfFontType0 )baseFields ()*fontCommon {return &_abdgc .fontCommon };

// Add appends a top level outline item to the outline.
func (_ecbad *Outline )Add (item *OutlineItem ){_ecbad .Entries =append (_ecbad .Entries ,item )};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_eabee *PdfReader )PageFromIndirectObject (ind *_bda .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_eabee .PageList )!=len (_eabee ._cgdac ){return nil ,0,_gea .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _egfd ,_bddbd :=range _eabee ._cgdac {if _bddbd ==ind {return _eabee .PageList [_egfd ],_egfd +1,nil ;};};return nil ,0,_gea .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_eecc _ga .ReadSeeker ;_afcg *_bda .PdfParser ;_babd *PdfReader ;Reader *PdfReader ;_eebd []*PdfPage ;_ggae *PdfAcroForm ;_afaf *DSS ;_gcef *Permissions ;_gagb _bda .XrefTable ;_edff int64 ;_eaedg int ;_gaga []_bda .PdfObject ;_agg map[_bda .PdfObject ]struct{};
_ffge map[_bda .PdfObject ]int64 ;_ffff map[_bda .PdfObject ]struct{};_facc map[_bda .PdfObject ]struct{};_aaaa int64 ;_ecba bool ;_bfec string ;_feed *EncryptOptions ;_bdbg *PdfInfo ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_efag :map[_bda .PdfObject ]struct{}{},_gbdfa :_abdd (),_fdadg :_bda .NewParserFromString (txt )};};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _ad .Time ;ModTime _ad .Time ;};

// K returns the value of the key component of the color.
func (_aebe *PdfColorDeviceCMYK )K ()float64 {return _aebe [3]};func (_agbf *PdfReader )newPdfAnnotationUnderlineFromDict (_gcg *_bda .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_fca :=PdfAnnotationUnderline {};_affb ,_ccf :=_agbf .newPdfAnnotationMarkupFromDict (_gcg );
if _ccf !=nil {return nil ,_ccf ;};_fca .PdfAnnotationMarkup =_affb ;_fca .QuadPoints =_gcg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fca ,nil ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_bfde :=&PdfColorPatternType2 {};return _bfde };func _defaab (_dabe *PdfPage ){_dgfagca :=_dfb .GetLicenseKey ();if _dgfagca !=nil &&_dgfagca .IsLicensed (){return ;};_bdebd :=_bda .PdfObjectName ("\u0055\u0046\u0031");
if !_dabe .Resources .HasFontByName (_bdebd ){_dabe .Resources .SetFontByName (_bdebd ,DefaultFont ().ToPdfObject ());};var _ebcfb []string ;_ebcfb =append (_ebcfb ,"\u0071");_ebcfb =append (_ebcfb ,"\u0042\u0054");_ebcfb =append (_ebcfb ,_c .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_bdebd .String ()));
_ebcfb =append (_ebcfb ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_ebcfb =append (_ebcfb ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_cgafca :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_ebcfb =append (_ebcfb ,_c .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_cgafca ));_ebcfb =append (_ebcfb ,"\u0045\u0054");_ebcfb =append (_ebcfb ,"\u0051");_cfgca :=_ab .Join (_ebcfb ,"\u000a");_dabe .AddContentStreamByString (_cfgca );_dabe .ToPdfObject ();
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ccfcf *PdfShading )ToPdfObject ()_bda .PdfObject {_fdcfe :=_ccfcf ._gfdga ;_bged ,_gcdfe :=_ccfcf .getShadingDict ();if _gcdfe !=nil {_ed .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ccfcf .ShadingType !=nil {_bged .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_ccfcf .ShadingType );};if _ccfcf .ColorSpace !=nil {_bged .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ccfcf .ColorSpace .ToPdfObject ());
};if _ccfcf .Background !=nil {_bged .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_ccfcf .Background );};if _ccfcf .BBox !=nil {_bged .Set ("\u0042\u0042\u006f\u0078",_ccfcf .BBox .ToPdfObject ());};if _ccfcf .AntiAlias !=nil {_bged .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_ccfcf .AntiAlias );
};return _fdcfe ;};func _agcf (_ecfcc *_bda .PdfObjectDictionary )(*PdfFieldButton ,error ){_aefac :=&PdfFieldButton {};_aefac .PdfField =NewPdfField ();_aefac .PdfField .SetContext (_aefac );_aefac .Opt ,_ =_bda .GetArray (_ecfcc .Get ("\u004f\u0070\u0074"));
_agcfd :=NewPdfAnnotationWidget ();_agcfd .A ,_ =_bda .GetDict (_ecfcc .Get ("\u0041"));_agcfd .AP ,_ =_bda .GetDict (_ecfcc .Get ("\u0041\u0050"));_agcfd .SetContext (_aefac );_aefac .PdfField .Annotations =append (_aefac .PdfField .Annotations ,_agcfd );
return _aefac ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_afefb *PdfReader )GetOutlines ()(*Outline ,error ){if _afefb ==nil {return nil ,_gea .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_begbf :=_afefb .GetOutlineTree ();if _begbf ==nil {return nil ,_gea .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _accgg func (_bgegd *PdfOutlineTreeNode ,_gdeed *[]*OutlineItem );_accgg =func (_gabca *PdfOutlineTreeNode ,_fcbae *[]*OutlineItem ){if _gabca ==nil {return ;};if _gabca ._ebabd ==nil {_ed .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _bddd *OutlineItem ;if _eddf ,_befaea :=_gabca ._ebabd .(*PdfOutlineItem );_befaea {_cccge :=_eddf .Dest ;if (_cccge ==nil ||_bda .IsNullObject (_cccge ))&&_eddf .A !=nil {if _cgdad ,_cagd :=_bda .GetDict (_eddf .A );_cagd {if _afdbgc ,_affcf :=_bda .GetArray (_cgdad .Get ("\u0044"));
_affcf {_cccge =_afdbgc ;}else {_fcada ,_edfb :=_bda .GetString (_cgdad .Get ("\u0044"));if !_edfb {return ;};_fgcbf ,_edfb :=_afefb ._dabg .Get ("\u004e\u0061\u006de\u0073").(*_bda .PdfObjectReference );if !_edfb {return ;};_agaba ,_fggdf :=_afefb ._fdadg .LookupByReference (*_fgcbf );
if _fggdf !=nil {_ed .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_fggdf .Error ());
return ;};_cdebca ,_edfb :=_agaba .(*_bda .PdfIndirectObject );if !_edfb {return ;};_eaeab :=map[_bda .PdfObject ]struct{}{};_fggdf =_afefb .buildNameNodes (_cdebca ,_eaeab );if _fggdf !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_fggdf .Error ());
return ;};for _dggef :=range _eaeab {_ccac ,_dgce :=_bda .GetDict (_dggef );if !_dgce {continue ;};_geabea ,_dgce :=_bda .GetArray (_ccac .Get ("\u004e\u0061\u006de\u0073"));if !_dgce {continue ;};for _eggg ,_ccefdb :=range _geabea .Elements (){switch _ccefdb .(type ){case *_bda .PdfObjectString :if _ccefdb .String ()==_fcada .String (){if _dagef :=_geabea .Get (_eggg +1);
_dagef !=nil {if _gefbc ,_dffaa :=_bda .GetDict (_dagef );_dffaa {_cccge =_gefbc .Get ("\u0044");break ;};};};};};};};};};var _bfedc OutlineDest ;if _cccge !=nil &&!_bda .IsNullObject (_cccge ){if _ceabbf ,_agdd :=_fageg (_cccge ,_afefb );_agdd ==nil {_bfedc =*_ceabbf ;
}else {_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_cccge ,_agdd );
};};_bddd =NewOutlineItem (_eddf .Title .Decoded (),_bfedc );*_fcbae =append (*_fcbae ,_bddd );if _eddf .Next !=nil {_accgg (_eddf .Next ,_fcbae );};};if _gabca .First !=nil {if _bddd !=nil {_fcbae =&_bddd .Entries ;};_accgg (_gabca .First ,_fcbae );};
};_ddae :=NewOutline ();_accgg (_begbf ,&_ddae .Entries );return _ddae ,nil ;};func (_addc *XObjectImage )getParamsDict ()*_bda .PdfObjectDictionary {_adfcb :=_bda .MakeDict ();_adfcb .Set ("\u0057\u0069\u0064t\u0068",_bda .MakeInteger (*_addc .Width ));
_adfcb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bda .MakeInteger (*_addc .Height ));_adfcb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bda .MakeInteger (int64 (_addc .ColorSpace .GetNumComponents ())));
_adfcb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bda .MakeInteger (*_addc .BitsPerComponent ));return _adfcb ;};

// Height returns the height of `rect`.
func (_bggbg *PdfRectangle )Height ()float64 {return _ce .Abs (_bggbg .Ury -_bggbg .Lly )};func _gcba (_efdbd _bda .PdfObject ){_ed .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_efdbd ,_efdbd .String ());if _fbcdg ,_fagbb :=_efdbd .(*_bda .PdfObjectStream );
_fagbb {_dffaeg ,_addfe :=_bda .DecodeStream (_fbcdg );if _addfe !=nil {_ed .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_addfe );return ;};_ed .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_dffaeg );}else if _dfdgd ,_gdagbc :=_efdbd .(*_bda .PdfIndirectObject );
_gdagbc {_ed .Log .Debug ("\u0025\u0054\u0020%\u0076",_dfdgd .PdfObject ,_dfdgd .PdfObject );_ed .Log .Debug ("\u0025\u0073",_dfdgd .PdfObject .String ());};};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_aaf :=NewPdfAction ();_ddc :=&PdfActionTrans {};_ddc .PdfAction =_aaf ;_aaf .SetContext (_ddc );return _ddc ;};func (_ecga *Image )samplesAddPadding (_gcge []uint32 )[]uint32 {_fadfd :=_bg .BytesPerLine (int (_ecga .Width ),int (_ecga .BitsPerComponent ),_ecga .ColorComponents )*(8/int (_ecga .BitsPerComponent ));
_gdgff :=_fadfd *int (_ecga .Height );if len (_gcge )==_gdgff {return _gcge ;};_afad :=make ([]uint32 ,_gdgff );_fdfec :=int (_ecga .Width )*_ecga .ColorComponents ;for _aeebf :=0;_aeebf < int (_ecga .Height );_aeebf ++{_bccdg :=_aeebf *int (_ecga .Width );
_cfcea :=_aeebf *_fadfd ;for _dged :=0;_dged < _fdfec ;_dged ++{_afad [_cfcea +_dged ]=_gcge [_bccdg +_dged ];};};return _afad ;};

// GetKDict returns the KDict of the KValue.
func (_gbbce *KValue )GetKDict ()*KDict {return _gbbce ._dfafb };

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bda .PdfObjectStream )(*XObjectForm ,error ){_ddfdd :=&XObjectForm {};_ddfdd ._cdfb =stream ;_eedea :=*(stream .PdfObjectDictionary );_dgdaa ,_efaff :=_bda .NewEncoderFromStream (stream );if _efaff !=nil {return nil ,_efaff ;
};_ddfdd .Filter =_dgdaa ;if _dgcggd :=_eedea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dgcggd !=nil {_ccfccd ,_degfd :=_dgcggd .(*_bda .PdfObjectName );if !_degfd {return nil ,_gea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_ccfccd !="\u0046\u006f\u0072\u006d"{_ed .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_gea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _abgb :=_eedea .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_abgb !=nil {_ddfdd .FormType =_abgb ;};if _aggeb :=_eedea .Get ("\u0042\u0042\u006f\u0078");_aggeb !=nil {_ddfdd .BBox =_aggeb ;};if _fgdfb :=_eedea .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_fgdfb !=nil {_ddfdd .Matrix =_fgdfb ;};if _ecbaa :=_eedea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ecbaa !=nil {_ecbaa =_bda .TraceToDirectObject (_ecbaa );_fcbgf ,_efccc :=_ecbaa .(*_bda .PdfObjectDictionary );if !_efccc {_ed .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bda .ErrTypeError ;};_gggba ,_gaeff :=NewPdfPageResourcesFromDict (_fcbgf );if _gaeff !=nil {_ed .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_gaeff ;};_ddfdd .Resources =_gggba ;_ed .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ddfdd .Resources );};_ddfdd .Group =_eedea .Get ("\u0047\u0072\u006fu\u0070");
_ddfdd .Ref =_eedea .Get ("\u0052\u0065\u0066");_ddfdd .MetaData =_eedea .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ddfdd .PieceInfo =_eedea .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ddfdd .LastModified =_eedea .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ddfdd .StructParent =_eedea .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ddfdd .StructParents =_eedea .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ddfdd .OPI =_eedea .Get ("\u004f\u0050\u0049");
_ddfdd .OC =_eedea .Get ("\u004f\u0043");_ddfdd .Name =_eedea .Get ("\u004e\u0061\u006d\u0065");_ddfdd .Stream =stream .Stream ;return _ddfdd ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_cagff *Outline )Insert (index uint ,item *OutlineItem ){_cegdc :=uint (len (_cagff .Entries ));if index > _cegdc {index =_cegdc ;};_cagff .Entries =append (_cagff .Entries [:index ],append ([]*OutlineItem {item },_cagff .Entries [index :]...)...);
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_afae *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fagb :=vals [0];if _fagb < 0.0||_fagb > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fagb );
return nil ,ErrColorOutOfRange ;};_cfgd :=vals [1];if _cfgd < 0.0||_cfgd > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fagb );return nil ,ErrColorOutOfRange ;
};_ecfbe :=vals [2];if _ecfbe < 0.0||_ecfbe > 1.0{_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fagb );return nil ,ErrColorOutOfRange ;};_ebec :=NewPdfColorDeviceRGB (_fagb ,_cfgd ,_ecfbe );
return _ebec ,nil ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_cdbbc *PdfOutputIntent )GetContainingPdfObject ()_bda .PdfObject {return _cdbbc ._abccce };

// SetStructParentsKey sets the StructParents key.
func (_cdacfe *PdfPage )SetStructParentsKey (key int ){if key ==-1{_cdacfe .StructParents =nil ;}else {_cdacfe .StructParents =_bda .MakeInteger (int64 (key ));};};func _eafb (_aece _bda .PdfObject )(*PdfColorspaceDeviceN ,error ){_degg :=NewPdfColorspaceDeviceN ();
if _bedgb ,_cceag :=_aece .(*_bda .PdfIndirectObject );_cceag {_degg ._ecaf =_bedgb ;};_aece =_bda .TraceToDirectObject (_aece );_aeac ,_beeb :=_aece .(*_bda .PdfObjectArray );if !_beeb {return nil ,_c .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _aeac .Len ()!=4&&_aeac .Len ()!=5{return nil ,_c .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_aece =_aeac .Get (0);
_cdb ,_beeb :=_aece .(*_bda .PdfObjectName );if !_beeb {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cdb !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_c .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_aece =_aeac .Get (1);
_aece =_bda .TraceToDirectObject (_aece );_fcfc ,_beeb :=_aece .(*_bda .PdfObjectArray );if !_beeb {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_degg .ColorantNames =_fcfc ;_aece =_aeac .Get (2);_dedd ,_faae :=NewPdfColorspaceFromPdfObject (_aece );if _faae !=nil {return nil ,_faae ;};_degg .AlternateSpace =_dedd ;_gace ,_faae :=_aaeca (_aeac .Get (3));if _faae !=nil {return nil ,_faae ;};_degg .TintTransform =_gace ;
if _aeac .Len ()==5{_gcaa ,_ddga :=_ggdb (_aeac .Get (4));if _ddga !=nil {return nil ,_ddga ;};_degg .Attributes =_gcaa ;};return _degg ,nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_fbdc *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ed .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ed .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_ed .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ed .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_fgga ,_fdcf :=_bg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ffbd ,img ._bfafe );if _fdcf !=nil {return Image {},_fdcf ;};_ccee ,_fdcf :=_bg .NRGBAConverter .Convert (_fgga );if _fdcf !=nil {return Image {},_fdcf ;
};return _fggae (_ccee .Base ()),nil ;};func _eadef (_fadee *PdfField ,_bbcf _bda .PdfObject ){for _ ,_ggdcd :=range _fadee .Annotations {_ggdcd .AS =_bbcf ;_ggdcd .ToPdfObject ();};};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dcdbg *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ed .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_gea .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_dcdg *PdfAppender )SetDocInfo (info *PdfInfo ){_dcdg ._bdbg =info };func _bcaf (_begf []byte )(_ffef ,_ccgbc string ,_agefb error ){_ed .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_begf ));
_aadcf :=_dacd .FindIndex (_begf );if _aadcf ==nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bda .ErrTypeError ;};_affe :=_aadcf [1];_fddc :=_ab .Index (string (_begf [_affe :]),_cgfee );if _fddc < 0{_ffef =string (_begf [_affe :]);return _ffef ,"",nil ;};_efbb :=_affe +_fddc ;_ffef =string (_begf [_affe :_efbb ]);_cedf :=_efbb ;
_fddc =_ab .Index (string (_begf [_cedf :]),_beda );if _fddc < 0{_ed .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agefb );
return "","",_bda .ErrTypeError ;};_efade :=_cedf +_fddc ;_ccgbc =string (_begf [_cedf :_efade ]);return _ffef ,_ccgbc ,nil ;};func (_cegab *LTV )buildCertChain (_ffbc ,_aagfc []*_bd .Certificate )([]*_bd .Certificate ,map[string ]*_bd .Certificate ,error ){_caaa :=map[string ]*_bd .Certificate {};
for _ ,_cddc :=range _ffbc {_caaa [_cddc .Subject .CommonName ]=_cddc ;};_daaa :=_ffbc ;for _ ,_ddbgb :=range _aagfc {_bfba :=_ddbgb .Subject .CommonName ;if _ ,_fbdg :=_caaa [_bfba ];_fbdg {continue ;};_caaa [_bfba ]=_ddbgb ;_daaa =append (_daaa ,_ddbgb );
};if len (_daaa )==0{return nil ,nil ,ErrSignNoCertificates ;};var _efdfd error ;for _gabfa :=_daaa [0];_gabfa !=nil &&!_cegab .CertClient .IsCA (_gabfa );{_cdfa ,_debc :=_caaa [_gabfa .Issuer .CommonName ];if !_debc {if _cdfa ,_efdfd =_cegab .CertClient .GetIssuer (_gabfa );
_efdfd !=nil {_ed .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_efdfd );
break ;};_caaa [_gabfa .Issuer .CommonName ]=_cdfa ;_daaa =append (_daaa ,_cdfa );};_gabfa =_cdfa ;};return _daaa ,_caaa ,nil ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_eeda *PdfPage )GetRotate ()(int64 ,error ){if _eeda .Rotate !=nil {return *_eeda .Rotate ,nil ;};_dfdef :=_eeda .Parent ;for _dfdef !=nil {_eeace ,_fafca :=_bda .GetDict (_dfdef );if !_fafca {return 0,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _gcag :=_eeace .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gcag !=nil {_fceb ,_cdcca :=_bda .GetInt (_gcag );if !_cdcca {return 0,_gea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _fceb !=nil {return int64 (*_fceb ),nil ;
};return 0,_gea .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_dfdef =_eeace .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_gea .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};func _bcg (_agefg _bda .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_cfbf :=NewPdfColorspaceSpecialSeparation ();if _ffaa ,_ebgd :=_agefg .(*_bda .PdfIndirectObject );_ebgd {_cfbf ._efde =_ffaa ;};_agefg =_bda .TraceToDirectObject (_agefg );
_gdbdc ,_aeca :=_agefg .(*_bda .PdfObjectArray );if !_aeca {return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _gdbdc .Len ()!=4{return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_agefg =_gdbdc .Get (0);_bcefb ,_aeca :=_agefg .(*_bda .PdfObjectName );if !_aeca {return nil ,_c .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bcefb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_c .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_agefg =_gdbdc .Get (1);_bcefb ,_aeca =_agefg .(*_bda .PdfObjectName );if !_aeca {return nil ,_c .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_cfbf .ColorantName =_bcefb ;_agefg =_gdbdc .Get (2);_egddb ,_gdefd :=NewPdfColorspaceFromPdfObject (_agefg );if _gdefd !=nil {return nil ,_gdefd ;};_cfbf .AlternateSpace =_egddb ;_gecf ,_gdefd :=_aaeca (_gdbdc .Get (3));if _gdefd !=nil {return nil ,_gdefd ;
};_cfbf .TintTransform =_gecf ;return _cfbf ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_gbfae :=NewPdfAnnotation ();_fdfcb :=&PdfAnnotationSquare {};_fdfcb .PdfAnnotation =_gbfae ;_fdfcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbfae .SetContext (_fdfcb );return _fdfcb ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_edg *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_efdd :=0.3*_edg .R ()+0.59*_edg .G ()+0.11*_edg .B ();_efdd =_ce .Min (_ce .Max (_efdd ,0.0),1.0);return NewPdfColorDeviceGray (_efdd );};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bda .PdfObject ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_deebb *PdfPageResources )SetColorspaceByName (keyName _bda .PdfObjectName ,cs PdfColorspace )error {_fgae ,_dacdd :=_deebb .GetColorspaces ();if _dacdd !=nil {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dacdd );
return _dacdd ;};if _fgae ==nil {_fgae =NewPdfPageResourcesColorspaces ();_deebb .SetColorSpace (_fgae );};_fgae .Set (keyName ,cs );return nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bda .PdfObject )(_bda .PdfObjectName ,error ){var _gfdf *_bda .PdfObjectName ;var _egbgb *_bda .PdfObjectArray ;if _bffb ,_geabc :=obj .(*_bda .PdfIndirectObject );_geabc {if _ggad ,_gdag :=_bffb .PdfObject .(*_bda .PdfObjectArray );
_gdag {_egbgb =_ggad ;}else if _cede ,_bcagg :=_bffb .PdfObject .(*_bda .PdfObjectName );_bcagg {_gfdf =_cede ;};}else if _dggad ,_ecddb :=obj .(*_bda .PdfObjectArray );_ecddb {_egbgb =_dggad ;}else if _fbad ,_gcfb :=obj .(*_bda .PdfObjectName );_gcfb {_gfdf =_fbad ;
};if _gfdf !=nil {switch *_gfdf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gfdf ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gfdf ,nil ;
};};if _egbgb !=nil &&_egbgb .Len ()> 0{if _ddfba ,_becg :=_egbgb .Get (0).(*_bda .PdfObjectName );_becg {switch *_ddfba {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _egbgb .Len ()==1{return *_ddfba ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_ddfba ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_ddfba ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_ddfba ,nil ;};};};return "",nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_gaeea DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bda .PdfObject ;};

// Val returns the color value.
func (_abdf *PdfColorDeviceGray )Val ()float64 {return float64 (*_abdf )};

// NewStructTreeRoot creates a new structure tree root dictionary.
func NewStructTreeRoot ()*StructTreeRoot {return &StructTreeRoot {K :[]*KDict {},RoleMap :_bda .MakeDict (),ParentTreeNextKey :0};};

// C returns the value of the cyan component of the color.
func (_ceaf *PdfColorDeviceCMYK )C ()float64 {return _ceaf [0]};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gcadd *PdfShading )GetContext ()PdfModel {return _gcadd ._cdded };

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_dbga :=NewPdfAnnotation ();_aade :=&PdfAnnotation3D {};_aade .PdfAnnotation =_dbga ;_dbga .SetContext (_aade );return _aade ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_aafc :=NewPdfAnnotation ();_fbe :=&PdfAnnotationLink {};_fbe .PdfAnnotation =_aafc ;_aafc .SetContext (_fbe );return _fbe ;};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_ffea :fonts ,CurrentFont :fonts [0]};};func (_bgcc *pdfFontSimple )addEncoding ()error {var (_gfbef string ;_gfgg map[_dgb .CharCode ]_dgb .GlyphName ;_dfdca _dgb .SimpleEncoder ;
);if _bgcc .Encoder ()!=nil {_fggc ,_ggefge :=_bgcc .Encoder ().(_dgb .SimpleEncoder );if _ggefge &&_fggc !=nil {_gfbef =_fggc .BaseName ();};};if _bgcc .Encoding !=nil {_eedd ,_ggdbc ,_dgea :=_bgcc .getFontEncoding ();if _dgea !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bgcc ._bcaebe ,_bgcc ._fggeg ,_bgcc .Encoding ,_bgcc .Encoding ,_dgea );
return _dgea ;};if _eedd !=""{_gfbef =_eedd ;};_gfgg =_ggdbc ;_dfdca ,_dgea =_dgb .NewSimpleTextEncoder (_gfbef ,_gfgg );if _dgea !=nil {return _dgea ;};};if _dfdca ==nil {_degf :=_bgcc ._bedea ;if _degf !=nil {switch _bgcc ._fggeg {case "\u0054\u0079\u0070e\u0031":if _degf .fontFile !=nil &&_degf .fontFile ._ffde !=nil {_ed .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_dfdca =_degf .fontFile ._ffde ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _degf ._cgfd !=nil {_ed .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_dfgc ,_fdfab :=_degf ._cgfd .MakeEncoder ();
if _fdfab ==nil {_dfdca =_dfgc ;};if _bgcc ._eeed ==nil {_bgcc ._eeed =_degf ._cgfd .MakeToUnicode ();};};};};};if _dfdca !=nil {if _gfgg !=nil {_ed .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gfgg ,_bgcc .baseFields ());
_dfdca =_dgb .ApplyDifferences (_dfdca ,_gfgg );};_bgcc .SetEncoder (_dfdca );};return nil ;};

// Subtype returns the font's "Subtype" field.
func (_accae *PdfFont )Subtype ()string {_eead :=_accae .baseFields ()._fggeg ;if _bdbae ,_bacee :=_accae ._ggada .(*pdfFontType0 );_bacee {_eead =_eead +"\u003a"+_bdbae .DescendantFont .Subtype ();};return _eead ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_ceff :=NewPdfAnnotation ();_dffb :=&PdfAnnotationSquiggly {};_dffb .PdfAnnotation =_ceff ;_dffb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ceff .SetContext (_dffb );return _dffb ;};

// ToInteger convert to an integer format.
func (_bbcc *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gadf :=_ce .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gadf *_bbcc .C ()),uint32 (_gadf *_bbcc .M ()),uint32 (_gadf *_bbcc .Y ()),uint32 (_gadf *_bbcc .K ())};};

// SetMCID sets the MCID for the KValue.
func (_fgbf *KValue )SetMCID (mcid int ){_fgbf .Clear ();_fgbf ._ecgbg =&mcid };func (_aff *PdfReader )newPdfActionResetFormFromDict (_afc *_bda .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_afc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_afc .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gddgd *OutlineItem )Insert (index uint ,item *OutlineItem ){_bfaad :=uint (len (_gddgd .Entries ));if index > _bfaad {index =_bfaad ;};_gddgd .Entries =append (_gddgd .Entries [:index ],append ([]*OutlineItem {item },_gddgd .Entries [index :]...)...);
};func (_gggbg *LTV )getOCSPs (_cdcc []*_bd .Certificate ,_gbba map[string ]*_bd .Certificate )([][]byte ,error ){_gbcbe :=make ([][]byte ,0,len (_cdcc ));for _ ,_gdagf :=range _cdcc {for _ ,_dded :=range _gdagf .OCSPServer {if _gggbg .CertClient .IsCA (_gdagf ){continue ;
};_bggcd ,_fbedd :=_gbba [_gdagf .Issuer .CommonName ];if !_fbedd {_ed .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_ceccef ,_dedc :=_gggbg .OCSPClient .MakeRequest (_dded ,_gdagf ,_bggcd );if _dedc !=nil {_ed .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_dedc );
continue ;};_gbcbe =append (_gbcbe ,_ceccef );};};return _gbcbe ,nil ;};

// GetStructParentsKey returns the StructParents key.
// If not set, returns -1.
func (_bbead *PdfPage )GetStructParentsKey ()int {if _gaebfd ,_caba :=_bda .GetIntVal (_bbead .StructParents );_caba {return _gaebfd ;};return -1;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_cec :=NewPdfAnnotation ();_fcg :=&PdfAnnotationPolyLine {};_fcg .PdfAnnotation =_cec ;_fcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cec .SetContext (_fcg );return _fcg ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_efcbe *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_efcbe .updateObjectsDeep (dss .ToPdfObject (),nil );};_efcbe ._afaf =dss ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dgdbcc *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_bfdebe :=NewPdfOutlineItem ();_bfdebe .Title =_bda .MakeEncodedString (_dgdbcc .Title ,true );_bfdebe .Dest =_dgdbcc .Dest .ToPdfObject ();var _dbebcf []*PdfOutlineItem ;var _ceceb int64 ;
var _gbbae *PdfOutlineItem ;for _ ,_gcbg :=range _dgdbcc .Entries {_eeef ,_eccge :=_gcbg .ToPdfOutlineItem ();_eeef .Parent =&_bfdebe .PdfOutlineTreeNode ;if _gbbae !=nil {_gbbae .Next =&_eeef .PdfOutlineTreeNode ;_eeef .Prev =&_gbbae .PdfOutlineTreeNode ;
};_dbebcf =append (_dbebcf ,_eeef );_ceceb +=_eccge ;_gbbae =_eeef ;};_cfcda :=len (_dbebcf );_ceceb +=int64 (_cfcda );if _cfcda > 0{_bfdebe .First =&_dbebcf [0].PdfOutlineTreeNode ;_bfdebe .Last =&_dbebcf [_cfcda -1].PdfOutlineTreeNode ;_bfdebe .Count =&_ceceb ;
};return _bfdebe ,_ceceb ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_gcgdf *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ecdea ,_bgbdg :=_bda .GetDict (_gcgdf ._geadba .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_bgbdg {_ecdea =_bda .MakeDict ();_gcgdf ._geadba .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ecdea );
};_gaeaff ,_bgbdg :=_bda .GetDict (_ecdea .Get (_bda .PdfObjectName (extName )));if !_bgbdg {_gaeaff =_bda .MakeDict ();_ecdea .Set (_bda .PdfObjectName (extName ),_gaeaff );};if _ebada ,_ :=_bda .GetNameVal (_gaeaff .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_ebada !=baseVersion {_gaeaff .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bda .MakeName (baseVersion ));};if _agegb ,_ :=_bda .GetIntVal (_gaeaff .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_agegb !=extLevel {_gaeaff .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bda .MakeInteger (int64 (extLevel )));};};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_eefbd *_bda .PdfIndirectObject ;_facgd *_bda .PdfIndirectObject ;_cdbc map[_bda .PdfObject ]struct{};_dgdfe []*_bda .PdfIndirectObject ;_ccbbg []_bda .PdfObject ;_egfad map[_bda .PdfObject ]struct{};_fefdb []*_bda .PdfIndirectObject ;
_fcade *PdfOutlineTreeNode ;_geadba *_bda .PdfObjectDictionary ;_cfagfc []_bda .PdfObject ;_eebef *_bda .PdfIndirectObject ;_ecgbge *_gb .Writer ;_fcdda int64 ;_aebfb error ;_cbdd *_bda .PdfCrypt ;_ecbbb *_bda .PdfObjectDictionary ;_dgeba *_bda .PdfIndirectObject ;
_ffgbfc *_bda .PdfObjectArray ;_cdbbdg _bda .Version ;_fffee *bool ;_dacdaa map[_bda .PdfObject ][]*_bda .PdfObjectDictionary ;_abgf *PdfAcroForm ;_edacf *Names ;_cfcfg Optimizer ;_cebab StandardApplier ;_fcbcd map[int ]crossReference ;_eafd int64 ;ObjNumOffset int ;
_eccfc bool ;_bffca _bda .XrefTable ;_eafcga int64 ;_cbedca int64 ;_gcgde map[_bda .PdfObject ]int64 ;_febfe map[_bda .PdfObject ]struct{};_egegd string ;_dffdf string ;_bdedc []*PdfOutputIntent ;_gagff bool ;_gcbgf ,_ebgegf string ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_cgagb *Image )ColorAt (x ,y int )(_gbf .Color ,error ){_cgeea :=_bg .BytesPerLine (int (_cgagb .Width ),int (_cgagb .BitsPerComponent ),_cgagb .ColorComponents );switch _cgagb .ColorComponents {case 1:return _bg .ColorAtGrayscale (x ,y ,int (_cgagb .BitsPerComponent ),_cgeea ,_cgagb .Data ,_cgagb ._bfafe );
case 3:return _bg .ColorAtNRGBA (x ,y ,int (_cgagb .Width ),_cgeea ,int (_cgagb .BitsPerComponent ),_cgagb .Data ,_cgagb ._ffbd ,_cgagb ._bfafe );case 4:return _bg .ColorAtCMYK (x ,y ,int (_cgagb .Width ),_cgagb .Data ,_cgagb ._bfafe );};_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgagb .ColorComponents ,_cgagb .BitsPerComponent );
return nil ,_gea .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_agdde *PdfShading )getShadingDict ()(*_bda .PdfObjectDictionary ,error ){_geaa :=_agdde ._gfdga ;
if _daabf ,_geade :=_geaa .(*_bda .PdfIndirectObject );_geade {_gbaed ,_gaege :=_daabf .PdfObject .(*_bda .PdfObjectDictionary );if !_gaege {return nil ,_bda .ErrTypeError ;};return _gbaed ,nil ;}else if _egeaf ,_baae :=_geaa .(*_bda .PdfObjectStream );
_baae {return _egeaf .PdfObjectDictionary ,nil ;}else if _gbgae ,_cdbd :=_geaa .(*_bda .PdfObjectDictionary );_cdbd {return _gbgae ,nil ;}else {_ed .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_bda .ErrTypeError ;};};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_fgfaa *PdfPage )GetAllContentStreams ()(string ,error ){_begdf ,_cfbgc :=_fgfaa .GetContentStreams ();if _cfbgc !=nil {return "",_cfbgc ;};return _ab .Join (_begdf ,"\u0020"),nil ;};func (_fdge *PdfReader )newPdfAnnotationPolyLineFromDict (_dafb *_bda .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_gda :=PdfAnnotationPolyLine {};
_bffd ,_fgg :=_fdge .newPdfAnnotationMarkupFromDict (_dafb );if _fgg !=nil {return nil ,_fgg ;};_gda .PdfAnnotationMarkup =_bffd ;_gda .Vertices =_dafb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gda .LE =_dafb .Get ("\u004c\u0045");_gda .BS =_dafb .Get ("\u0042\u0053");
_gda .IC =_dafb .Get ("\u0049\u0043");_gda .BE =_dafb .Get ("\u0042\u0045");_gda .IT =_dafb .Get ("\u0049\u0054");_gda .Measure =_dafb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gda ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ga .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _fdbe ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _efgcc (rs ,opts ,true ,_fdbe );
};func (_cfge *PdfAppender )addNewObject (_eaaf _bda .PdfObject ){if _ ,_eab :=_cfge ._agg [_eaaf ];!_eab {_cfge ._gaga =append (_cfge ._gaga ,_eaaf );_cfge ._agg [_eaaf ]=struct{}{};};};func (_gfggg *PdfReader )newPdfSignatureReferenceFromDict (_fceed *_bda .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _ddaa ,_ggee :=_gfggg ._gbdfa .GetModelFromPrimitive (_fceed ).(*PdfSignatureReference );
_ggee {return _ddaa ,nil ;};_cbcfg :=&PdfSignatureReference {_efgcdg :_fceed ,Data :_fceed .Get ("\u0044\u0061\u0074\u0061")};var _efbfb bool ;_cbcfg .Type ,_ =_bda .GetName (_fceed .Get ("\u0054\u0079\u0070\u0065"));_cbcfg .TransformMethod ,_efbfb =_bda .GetName (_fceed .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_efbfb {_ed .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cbcfg .TransformParams ,_ =_bda .GetDict (_fceed .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_cbcfg .DigestMethod ,_ =_bda .GetName (_fceed .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _cbcfg ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_accff *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _accff .Alternate ==nil {_ed .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _accff .N ==1{_ed .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_fbaaf :=NewPdfColorspaceDeviceGray ();return _fbaaf .ColorToRGB (color );}else if _accff .N ==3{_ed .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _accff .N ==4{_ed .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_acef :=NewPdfColorspaceDeviceCMYK ();return _acef .ColorToRGB (color );}else {return nil ,_gea .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ed .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_accff );
return _accff .Alternate .ColorToRGB (color );};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_dbgeg *BorderStyle )GetPdfName ()string {switch *_dbgeg {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// A returns the value of the A component of the color.
func (_fdde *PdfColorLab )A ()float64 {return _fdde [1]};func (_gdee *PdfReader )newPdfAnnotationInkFromDict (_gab *_bda .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_bgef :=PdfAnnotationInk {};_agbfc ,_ecfb :=_gdee .newPdfAnnotationMarkupFromDict (_gab );
if _ecfb !=nil {return nil ,_ecfb ;};_bgef .PdfAnnotationMarkup =_agbfc ;_bgef .InkList =_gab .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_bgef .BS =_gab .Get ("\u0042\u0053");return &_bgef ,nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bda .PdfObject ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_cgaef ,_bfgf :=_edad (basefont );if _bfgf !=nil {return nil ,_bfgf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_cgaef ._cbedg =_dgb .NewWinAnsiEncoder ();};return &PdfFont {_ggada :&_cgaef },nil ;
};func (_fbfbaf *PdfWriter )flushWriter ()error {if _fbfbaf ._aebfb ==nil {_fbfbaf ._aebfb =_fbfbaf ._ecgbge .Flush ();};return _fbfbaf ._aebfb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_deggd *PdfShadingType2 )ToPdfObject ()_bda .PdfObject {_deggd .PdfShading .ToPdfObject ();_daged ,_bceee :=_deggd .getShadingDict ();if _bceee !=nil {_ed .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _daged ==nil {_ed .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _deggd .Coords !=nil {_daged .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_deggd .Coords );
};if _deggd .Domain !=nil {_daged .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_deggd .Domain );};if _deggd .Function !=nil {if len (_deggd .Function )==1{_daged .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deggd .Function [0].ToPdfObject ());
}else {_egecb :=_bda .MakeArray ();for _ ,_bbcg :=range _deggd .Function {_egecb .Append (_bbcg .ToPdfObject ());};_daged .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egecb );};};if _deggd .Extend !=nil {_daged .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_deggd .Extend );
};return _deggd ._gfdga ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bda .PdfObject ;V _bda .PdfObject ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bda .PdfObject ;Sy _bda .PdfObject ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);func _bbabc ()string {_ggbe .Lock ();
defer _ggbe .Unlock ();return _cdfef };

// SetDirection sets the value of the direction.
func (_dddff *ViewerPreferences )SetDirection (direction Direction ){_dddff ._gbacc =direction };

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_cbedb *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_aadg ,_ ,_gegdea :=_cbedb .CharcodesToUnicodeWithStats (_cbedb .BytesToCharcodes (data ));_ebgaf :=_dgb .ExpandLigatures (_aadg );return _ebgaf ,_a .RuneCountInString (_ebgaf ),_gegdea ;
};

// SetDate sets the `M` field of the signature.
func (_dfefg *PdfSignature )SetDate (date _ad .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_dfefg .M =_bda .MakeString (date .Format (format ));
};

// AllFields returns a flattened list of all fields in the form.
func (_cegcd *PdfAcroForm )AllFields ()[]*PdfField {if _cegcd ==nil {return nil ;};var _fadf []*PdfField ;if _cegcd .Fields !=nil {for _ ,_bcgd :=range *_cegcd .Fields {_fadf =append (_fadf ,_fcfag (_bcgd )...);};};return _fadf ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_abccce :_bda .MakeDict ()};
};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_dd :=NewPdfAction ();_eg :=&PdfActionGoToR {};_eg .PdfAction =_dd ;_dd .SetContext (_eg );return _eg ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_ccce *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_gcfd :=func (_ddcg float64 )float64 {if _ddcg >=6.0/29{return _ddcg *_ddcg *_ddcg ;};return 108.0/841*(_ddcg -4.0/29.0);};_fbec :=img ._bfafe ;if len (_fbec )!=6{_ed .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_fbec =_ccce .DecodeArray ();};_ddeab :=_cf .NewReader (img .getBase ());_eggb :=_bg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._ffbd ,img ._bfafe );_fffc :=_cf .NewWriter (_eggb );_decbd :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;
_ggbacb :=make ([]uint32 ,3);var (_fdfde error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ffc ,_cfca ,_abcde float64 ;);for {_fdfde =_ddeab .ReadSamples (_ggbacb );if _fdfde ==_ga .EOF {break ;}else if _fdfde !=nil {return img ,_fdfde ;};Ls =float64 (_ggbacb [0])/_decbd ;
As =float64 (_ggbacb [1])/_decbd ;Bs =float64 (_ggbacb [2])/_decbd ;Ls =_bg .LinearInterpolate (Ls ,0.0,1.0,_fbec [0],_fbec [1]);As =_bg .LinearInterpolate (As ,0.0,1.0,_fbec [2],_fbec [3]);Bs =_bg .LinearInterpolate (Bs ,0.0,1.0,_fbec [4],_fbec [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_ccce .WhitePoint [0]*_gcfd (L );Y =_ccce .WhitePoint [1]*_gcfd (M );Z =_ccce .WhitePoint [2]*_gcfd (N );_ffc =3.240479*X +-1.537150*Y +-0.498535*Z ;_cfca =-0.969256*X +1.875992*Y +0.041556*Z ;_abcde =0.055648*X +-0.204043*Y +1.057311*Z ;
_ffc =_ce .Min (_ce .Max (_ffc ,0),1.0);_cfca =_ce .Min (_ce .Max (_cfca ,0),1.0);_abcde =_ce .Min (_ce .Max (_abcde ,0),1.0);_ggbacb [0]=uint32 (_ffc *_decbd );_ggbacb [1]=uint32 (_cfca *_decbd );_ggbacb [2]=uint32 (_abcde *_decbd );if _fdfde =_fffc .WriteSamples (_ggbacb );
_fdfde !=nil {return img ,_fdfde ;};};return _fggae (&_eggb ),nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_fgad :=&PdfOutlineItem {_egafc :_bda .MakeIndirectObject (_bda .MakeDict ())};_fgad ._ebabd =_fgad ;return _fgad ;};

// Duplex returns the value of the duplex.
func (_ffaee *ViewerPreferences )Duplex ()Duplex {return _ffaee ._bebac };

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fafcg :=&XObjectForm {};_dgcce :=&_bda .PdfObjectStream {};_dgcce .PdfObjectDictionary =_bda .MakeDict ();_fafcg ._cdfb =_dgcce ;return _fafcg ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_fccf *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_ffacb *PdfSignature )GetDocMDPPermission ()(_gef .DocMDPPermission ,bool ){for _ ,_ffdd :=range _ffacb .Reference .Elements (){if _fdccb ,_aegab :=_bda .GetDict (_ffdd );_aegab {if _cdegc ,_bgcca :=_bda .GetNameVal (_fdccb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_bgcca &&_cdegc =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _afdee ,_afagc :=_bda .GetDict (_fdccb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_afagc {if P ,_gcgdc :=_bda .GetIntVal (_afdee .Get ("\u0050"));
_gcgdc {return _gef .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_eaccd *PdfReader )CheckAccessRights (password []byte )(bool ,_aa .Permissions ,error ){return _eaccd ._fdadg .CheckAccessRights (password );};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_gdba :=NewPdfAnnotation ();_cfc :=&PdfAnnotationText {};_cfc .PdfAnnotation =_gdba ;_cfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdba .SetContext (_cfc );return _cfc ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_eecffg *PdfWriter )SetOpenAction (dest _bda .PdfObject )error {if dest ==nil ||_bda .IsNullObject (dest ){return nil ;};_eecffg ._geadba .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _eecffg .addObjects (dest );
};

// IsTiling specifies if the pattern is a tiling pattern.
func (_fbbfe *PdfPattern )IsTiling ()bool {return _fbbfe .PatternType ==1};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bda .PdfObjectStream )(*XObjectImage ,error ){_cgbbd :=&XObjectImage {};_cgbbd ._eedbf =stream ;_abaec :=*(stream .PdfObjectDictionary );_defad ,_gcea :=_bda .NewEncoderFromStream (stream );if _gcea !=nil {return nil ,_gcea ;
};_cgbbd .Filter =_defad ;if _dgcfd :=_bda .TraceToDirectObject (_abaec .Get ("\u0057\u0069\u0064t\u0068"));_dgcfd !=nil {_bccdfg ,_cdccaf :=_dgcfd .(*_bda .PdfObjectInteger );if !_cdccaf {return nil ,_gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_efgbde :=int64 (*_bccdfg );_cgbbd .Width =&_efgbde ;}else {return nil ,_gea .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gfbf :=_bda .TraceToDirectObject (_abaec .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_gfbf !=nil {_agdge ,_edgb :=_gfbf .(*_bda .PdfObjectInteger );if !_edgb {return nil ,_gea .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fcgaaa :=int64 (*_agdge );
_cgbbd .Height =&_fcgaaa ;}else {return nil ,_gea .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _dbegc :=_bda .TraceToDirectObject (_abaec .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_dbegc !=nil {_fdff ,_bbeab :=NewPdfColorspaceFromPdfObject (_dbegc );if _bbeab !=nil {return nil ,_bbeab ;};_cgbbd .ColorSpace =_fdff ;}else {_ed .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_cgbbd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _gcfed :=_bda .TraceToDirectObject (_abaec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_gcfed !=nil {_acefdb ,_eefcb :=_gcfed .(*_bda .PdfObjectInteger );
if !_eefcb {return nil ,_gea .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_dgcde :=int64 (*_acefdb );_cgbbd .BitsPerComponent =&_dgcde ;};_cgbbd .Intent =_abaec .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_cgbbd .ImageMask =_abaec .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_cgbbd .Mask =_abaec .Get ("\u004d\u0061\u0073\u006b");_cgbbd .Decode =_abaec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_cgbbd .Interpolate =_abaec .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_cgbbd .Alternatives =_abaec .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_cgbbd .SMask =_abaec .Get ("\u0053\u004d\u0061s\u006b");_cgbbd .SMaskInData =_abaec .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_cgbbd .Matte =_abaec .Get ("\u004d\u0061\u0074t\u0065");_cgbbd .Name =_abaec .Get ("\u004e\u0061\u006d\u0065");_cgbbd .StructParent =_abaec .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cgbbd .ID =_abaec .Get ("\u0049\u0044");
_cgbbd .OPI =_abaec .Get ("\u004f\u0050\u0049");_cgbbd .Metadata =_abaec .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cgbbd .OC =_abaec .Get ("\u004f\u0043");_cgbbd .Stream =stream .Stream ;return _cgbbd ,nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_dbgca *_bda .PdfIndirectObject ;};func (_bdde *PdfSignature )extractChainFromCert ()([]*_bd .Certificate ,error ){var _fdcgf *_bda .PdfObjectArray ;
switch _aabca :=_bdde .Cert .(type ){case *_bda .PdfObjectString :_fdcgf =_bda .MakeArray (_aabca );case *_bda .PdfObjectArray :_fdcgf =_aabca ;default:return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_aabca );
};var _gccd _dff .Buffer ;for _ ,_fbdgb :=range _fdcgf .Elements (){_febgc ,_fdfcf :=_bda .GetString (_fbdgb );if !_fdfcf {return nil ,_c .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fbdgb );
};if _ ,_cdbe :=_gccd .Write (_febgc .Bytes ());_cdbe !=nil {return nil ,_cdbe ;};};return _bd .ParseCertificates (_gccd .Bytes ());};func _beefd (_cgfe *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_cgfe }};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// ToPdfObject implements interface PdfModel.
func (_bgde *PdfAnnotation3D )ToPdfObject ()_bda .PdfObject {_bgde .PdfAnnotation .ToPdfObject ();_aabd :=_bgde ._ged ;_bcage :=_aabd .PdfObject .(*_bda .PdfObjectDictionary );_bcage .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0033\u0044"));
_bcage .SetIfNotNil ("\u0033\u0044\u0044",_bgde .T3DD );_bcage .SetIfNotNil ("\u0033\u0044\u0056",_bgde .T3DV );_bcage .SetIfNotNil ("\u0033\u0044\u0041",_bgde .T3DA );_bcage .SetIfNotNil ("\u0033\u0044\u0049",_bgde .T3DI );_bcage .SetIfNotNil ("\u0033\u0044\u0042",_bgde .T3DB );
return _aabd ;};func (_bdcbb *PdfAcroForm )fill (_bdabc FieldValueProvider ,_aecg FieldAppearanceGenerator )error {if _bdcbb ==nil {return nil ;};_deccd ,_ffcg :=_bdabc .FieldValues ();if _ffcg !=nil {return _ffcg ;};for _ ,_acabb :=range _bdcbb .AllFields (){_cdga :=_acabb .PartialName ();
_abfdgc ,_gadc :=_deccd [_cdga ];if !_gadc {if _acccgg ,_dgaad :=_acabb .FullName ();_dgaad ==nil {_abfdgc ,_gadc =_deccd [_acccgg ];};};if !_gadc {_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cdga );
continue ;};if _aafde :=_caae (_acabb ,_abfdgc );_aafde !=nil {return _aafde ;};if _aecg ==nil {continue ;};for _ ,_ecgg :=range _acabb .Annotations {_gbcfc ,_adade :=_aecg .GenerateAppearanceDict (_bdcbb ,_acabb ,_ecgg );if _adade !=nil {return _adade ;
};_ecgg .AP =_gbcfc ;_ecgg .ToPdfObject ();};};return nil ;};func _egcd (_dfcg _bda .PdfObject )(*PdfColorspaceCalRGB ,error ){_bdbaf :=NewPdfColorspaceCalRGB ();if _febgb ,_fgdf :=_dfcg .(*_bda .PdfIndirectObject );_fgdf {_bdbaf ._caacb =_febgb ;};_dfcg =_bda .TraceToDirectObject (_dfcg );
_gbef ,_bgec :=_dfcg .(*_bda .PdfObjectArray );if !_bgec {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gbef .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_dfcg =_bda .TraceToDirectObject (_gbef .Get (0));_fbaef ,_bgec :=_dfcg .(*_bda .PdfObjectName );if !_bgec {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_fbaef !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_c .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_dfcg =_bda .TraceToDirectObject (_gbef .Get (1));
_baa ,_bgec :=_dfcg .(*_bda .PdfObjectDictionary );if !_bgec {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_dfcg =_baa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_dfcg =_bda .TraceToDirectObject (_dfcg );_eefb ,_bgec :=_dfcg .(*_bda .PdfObjectArray );if !_bgec {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _eefb .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ggcf ,_cffb :=_eefb .GetAsFloat64Slice ();
if _cffb !=nil {return nil ,_cffb ;};_bdbaf .WhitePoint =_ggcf ;_dfcg =_baa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dfcg !=nil {_dfcg =_bda .TraceToDirectObject (_dfcg );_febcac ,_adad :=_dfcg .(*_bda .PdfObjectArray );
if !_adad {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _febcac .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_adcd ,_ggcdb :=_febcac .GetAsFloat64Slice ();if _ggcdb !=nil {return nil ,_ggcdb ;};_bdbaf .BlackPoint =_adcd ;};_dfcg =_baa .Get ("\u0047\u0061\u006dm\u0061");if _dfcg !=nil {_dfcg =_bda .TraceToDirectObject (_dfcg );_cggb ,_ffed :=_dfcg .(*_bda .PdfObjectArray );
if !_ffed {return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _cggb .Len ()!=3{return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_bafd ,_deff :=_cggb .GetAsFloat64Slice ();if _deff !=nil {return nil ,_deff ;};_bdbaf .Gamma =_bafd ;};_dfcg =_baa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _dfcg !=nil {_dfcg =_bda .TraceToDirectObject (_dfcg );_agf ,_feef :=_dfcg .(*_bda .PdfObjectArray );
if !_feef {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _agf .Len ()!=9{_ed .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_agf .String ());
return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_bcbg ,_bcadd :=_agf .GetAsFloat64Slice ();if _bcadd !=nil {return nil ,_bcadd ;
};_bdbaf .Matrix =_bcbg ;};return _bdbaf ,nil ;};

// SetHideToolbar sets the value of the hideToolbar flag.
func (_gagga *ViewerPreferences )SetHideToolbar (hideToolbar bool ){_gagga ._dgdec =&hideToolbar };

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_cgddc :=&PdfSignature {Type :_bda .MakeName ("\u0053\u0069\u0067"),Handler :handler };_aebge :=&pdfSignDictionary {PdfObjectDictionary :_bda .MakeDict (),_fcdfe :&handler ,_cfefa :_cgddc };
_cgddc ._gbggff =_bda .MakeIndirectObject (_aebge );return _cgddc ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// C returns the value of the C component of the color.
func (_eaae *PdfColorCalRGB )C ()float64 {return _eaae [2]};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_agbc *_bda .PdfIndirectObject ;};func _ddca (_cbga _bda .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_cgdb :=NewPdfColorspaceSpecialIndexed ();if _cffg ,_gddab :=_cbga .(*_bda .PdfIndirectObject );
_gddab {_cgdb ._agcda =_cffg ;};_cbga =_bda .TraceToDirectObject (_cbga );_gfeb ,_fced :=_cbga .(*_bda .PdfObjectArray );if !_fced {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gfeb .Len ()!=4{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_cbga =_gfeb .Get (0);_agdc ,_fced :=_cbga .(*_bda .PdfObjectName );if !_fced {return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_agdc !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_cbga =_gfeb .Get (1);_ecee ,_cffc :=DetermineColorspaceNameFromPdfObject (_cbga );if _cffc !=nil {return nil ,_cffc ;};if _ecee =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_ecee =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ed .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_ecee );
return nil ,_ceace ;};_eggbb ,_cffc :=NewPdfColorspaceFromPdfObject (_cbga );if _cffc !=nil {return nil ,_cffc ;};_cgdb .Base =_eggbb ;_cbga =_gfeb .Get (2);_ddcc ,_cffc :=_bda .GetNumberAsInt64 (_cbga );if _cffc !=nil {return nil ,_cffc ;};if _ddcc > 255{return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_cgdb .HiVal =int (_ddcc );_cbga =_gfeb .Get (3);_cgdb .Lookup =_cbga ;_cbga =_bda .TraceToDirectObject (_cbga );var _gfdbg []byte ;if _cgdc ,_cdda :=_cbga .(*_bda .PdfObjectString );_cdda {_gfdbg =_cgdc .Bytes ();_ed .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_gfdbg );
}else if _cfdb ,_dgba :=_cbga .(*_bda .PdfObjectStream );_dgba {_ed .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_cbga .String ());_ed .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_cfdb .Stream ),_cfdb .Stream );
_efbe ,_geac :=_bda .DecodeStream (_cfdb );if _geac !=nil {return nil ,_geac ;};_ed .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_efbe ),_efbe );_gfdbg =_efbe ;}else {_ed .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cbga );
return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_gfdbg )< _cgdb .Base .GetNumComponents ()*(_cgdb .HiVal +1){_ed .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_ed .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_gfdbg ),_cgdb .Base .GetNumComponents (),_cgdb .HiVal );
}else {_gfdbg =_gfdbg [:_cgdb .Base .GetNumComponents ()*(_cgdb .HiVal +1)];};_cgdb ._gfda =_gfdbg ;return _cgdb ,nil ;};

// SetPrintPageRange sets the value of the printPageRange.
func (_aaae *ViewerPreferences )SetPrintPageRange (printPageRange []int ){_aaae ._edffc =printPageRange ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_dcbf *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bda .GetNumberAsFloat (_dcbf .Descent );};var _cbbeb =false ;

// ToPdfObject implements interface PdfModel.
func (_bfad *PdfAnnotationStrikeOut )ToPdfObject ()_bda .PdfObject {_bfad .PdfAnnotation .ToPdfObject ();_bfff :=_bfad ._ged ;_fafd :=_bfff .PdfObject .(*_bda .PdfObjectDictionary );_bfad .PdfAnnotationMarkup .appendToPdfDictionary (_fafd );_fafd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_fafd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bfad .QuadPoints );return _bfff ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_egcgec *PdfPageResources )HasExtGState (keyName _bda .PdfObjectName )bool {_ ,_aafac :=_egcgec .GetFontByName (keyName );return _aafac ;};

// SetContext sets the sub action (context).
func (_bb *PdfAction )SetContext (ctx PdfModel ){_bb ._edd =ctx };

// ToPdfObject implements interface PdfModel.
func (_gagf *PdfActionThread )ToPdfObject ()_bda .PdfObject {_gagf .PdfAction .ToPdfObject ();_deg :=_gagf ._gg ;_gf :=_deg .PdfObject .(*_bda .PdfObjectDictionary );_gf .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeThread )));if _gagf .F !=nil {_gf .Set ("\u0046",_gagf .F .ToPdfObject ());
};_gf .SetIfNotNil ("\u0044",_gagf .D );_gf .SetIfNotNil ("\u0042",_gagf .B );return _deg ;};func (_baee fontCommon )fontFlags ()int {if _baee ._bedea ==nil {return 0;};return _baee ._bedea ._fcba ;};

// ToPdfObject implements interface PdfModel.
func (_cgcf *EmbeddedFile )ToPdfObject ()_bda .PdfObject {_fbgf :=_bda .NewFlateEncoder ();_afeec ,_fbfe :=_bda .MakeStream (_cgcf .Content ,_fbgf );if _fbfe !=nil {_ed .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fbfe );
return nil ;};_aaeb :=_afeec .PdfObjectDictionary ;_aaeb .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_aaeb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_bbgbg :=_bda .MakeDict ();_bbgbg .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_bda .MakeString (_cgcf .Hash [:]));_bbgbg .Set ("\u0053\u0069\u007a\u0065",_bda .MakeInteger (int64 (len (_cgcf .Content ))));_bfcb :=_cgcf .CreationTime ;if _bfcb .IsZero (){_bfcb =_ad .Now ();
};_cadb :=_cgcf .ModTime ;if _cadb .IsZero (){_cadb =_bfcb ;};_eeaca ,_fbfe :=NewPdfDateFromTime (_bfcb );if _fbfe !=nil {_ed .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_fbfe );
return nil ;};_ecag ,_fbfe :=NewPdfDateFromTime (_cadb );if _fbfe !=nil {_ed .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_fbfe );
return nil ;};_bbgbg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eeaca .ToPdfObject ());_bbgbg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ecag .ToPdfObject ());_aaeb .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_bbgbg );
_efffg :=_bda .MakeDict ();_efffg .Set (*_bda .MakeName ("\u0046"),_afeec );return _efffg ;};

// SetPrintScaling sets the value of the printScaling.
func (_fgdgb *ViewerPreferences )SetPrintScaling (printScaling PrintScaling ){_fgdgb ._ecffgg =printScaling ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bda .PdfObjectInteger ;TilingType *_bda .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bda .PdfObjectFloat ;YStep *_bda .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bda .PdfObjectArray ;};


// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bda .PdfObjectArray ;_gbcbd *Image ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fabef *PdfColorspaceCalRGB )ToPdfObject ()_bda .PdfObject {_ccaga :=&_bda .PdfObjectArray {};_ccaga .Append (_bda .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_ddec :=_bda .MakeDict ();if _fabef .WhitePoint !=nil {_adgb :=_bda .MakeArray (_bda .MakeFloat (_fabef .WhitePoint [0]),_bda .MakeFloat (_fabef .WhitePoint [1]),_bda .MakeFloat (_fabef .WhitePoint [2]));
_ddec .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_adgb );}else {_ed .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _fabef .BlackPoint !=nil {_cddb :=_bda .MakeArray (_bda .MakeFloat (_fabef .BlackPoint [0]),_bda .MakeFloat (_fabef .BlackPoint [1]),_bda .MakeFloat (_fabef .BlackPoint [2]));_ddec .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cddb );
};if _fabef .Gamma !=nil {_bagf :=_bda .MakeArray (_bda .MakeFloat (_fabef .Gamma [0]),_bda .MakeFloat (_fabef .Gamma [1]),_bda .MakeFloat (_fabef .Gamma [2]));_ddec .Set ("\u0047\u0061\u006dm\u0061",_bagf );};if _fabef .Matrix !=nil {_cgda :=_bda .MakeArray (_bda .MakeFloat (_fabef .Matrix [0]),_bda .MakeFloat (_fabef .Matrix [1]),_bda .MakeFloat (_fabef .Matrix [2]),_bda .MakeFloat (_fabef .Matrix [3]),_bda .MakeFloat (_fabef .Matrix [4]),_bda .MakeFloat (_fabef .Matrix [5]),_bda .MakeFloat (_fabef .Matrix [6]),_bda .MakeFloat (_fabef .Matrix [7]),_bda .MakeFloat (_fabef .Matrix [8]));
_ddec .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cgda );};_ccaga .Append (_ddec );if _fabef ._caacb !=nil {_fabef ._caacb .PdfObject =_ccaga ;return _fabef ._caacb ;};return _ccaga ;};

// String returns a string describing the font descriptor.
func (_bfbg *PdfFontDescriptor )String ()string {var _cdbgf []string ;if _bfbg .FontName !=nil {_cdbgf =append (_cdbgf ,_bfbg .FontName .String ());};if _bfbg .FontFamily !=nil {_cdbgf =append (_cdbgf ,_bfbg .FontFamily .String ());};if _bfbg .fontFile !=nil {_cdbgf =append (_cdbgf ,_bfbg .fontFile .String ());
};if _bfbg ._cgfd !=nil {_cdbgf =append (_cdbgf ,_bfbg ._cgfd .String ());};_cdbgf =append (_cdbgf ,_c .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_bfbg .FontFile3 !=nil ));return _c .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ab .Join (_cdbgf ,"\u002c\u0020"));
};

// ToPdfObject converts the structure tree root to a PDF object.
func (_ffda *StructTreeRoot )ToPdfObject ()_bda .PdfObject {_ffeff :=_ffda ._addd ;if _ffeff ==nil {_ffeff =&_bda .PdfIndirectObject {};_ffeff .PdfObject =_bda .MakeDict ();};_facdb :=_ffeff .PdfObject .(*_bda .PdfObjectDictionary );var _fgce _bda .PdfObject ;
if len (_ffda .K )==1{_fgce =_bda .MakeIndirectObject (_ffda .K [0].ToPdfObject ());}else {_aagb :=_bda .MakeArray ();for _ ,K :=range _ffda .K {_aagb .Append (_bda .MakeIndirectObject (K .ToPdfObject ()));};_fgce =_aagb ;};var (_beabc =[]_bda .PdfObject {};
_afgd =map[_bda .PdfObject ][]_bda .PdfObject {};_bbde =map[string ]_bda .PdfObject {};);_dcab (_fgce ,_ffeff ,_afgd ,_bbde ,&_beabc );_facdb .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));
_facdb .Set ("\u004b",_fgce );if _ffda .IDTree !=nil {_facdb .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_bda .MakeIndirectObject (_ffda .IDTree .ToPdfObject ()));}else if len (_bbde )> 0{_dbag :=_bda .MakeArray ();_ebcc :=make ([]string ,0,len (_bbde ));
for _cadebd :=range _bbde {_ebcc =append (_ebcc ,_cadebd );};_cb .Strings (_ebcc );for _ ,_cedea :=range _ebcc {_dbag .Append (_bda .MakeString (_cedea ));_dbag .Append (_bbde [_cedea ]);};_ffda .IDTree =&IDTree {Names :_dbag ,Limits :_bda .MakeArray (_bda .MakeString (_ebcc [0]),_bda .MakeString (_ebcc [len (_ebcc )-1]))};
_facdb .Set ("\u0049\u0044\u0054\u0072\u0065\u0065",_bda .MakeIndirectObject (_ffda .IDTree .ToPdfObject ()));};if _ffda .ParentTree !=nil {_facdb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_bda .MakeIndirectObject (_ffda .ParentTree ));
}else if len (_afgd )> 0||len (_beabc )> 0{_dcbbg :=_bda .MakeArray ();_dgfgg :=0;for _aaabg ,_gfdfe :=range _afgd {_dcebc :=_bda .MakeArray ();for _ ,_egecbg :=range _gfdfe {_dcebc .Append (_egecbg );};_ebbcd :=_bda .MakeInteger (int64 (_dgfgg ));_dcbbg .Append (_ebbcd );
_dcbbg .Append (_bda .MakeIndirectObject (_dcebc ));if _bbbcb ,_adace :=_bda .GetIndirect (_aaabg );_adace {if _fdbcg ,_bbeca :=_bda .GetDict (_bbbcb .PdfObject );_bbeca {_cgcae :=_fdbcg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
if _cgcae !=nil {if _egfdf ,_geddc :=_bda .GetIntVal (_cgcae );_geddc {if _dgfgg < _egfdf {_fdbcg .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ebbcd );};};}else {_fdbcg .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ebbcd );
};};};_dgfgg ++;};_febfc :=func (_eefga _bda .PdfObject ,_gfbgg *_bda .PdfObjectDictionary )bool {if _cabfb :=_gfbgg .Get ("\u004f\u0062\u006a");_cabfb !=nil {if _dbbfbf ,_afgee :=_bda .GetDict (_cabfb );_afgee {_gcfgg :=_dbbfbf .Get ("\u0054\u0079\u0070\u0065");
_aced :=_dbbfbf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _gcfgg !=nil &&_gcfgg .String ()=="\u0041\u006e\u006eo\u0074"&&_aced !=nil &&_aced .String ()=="\u004c\u0069\u006e\u006b"{_cgdg :=_bda .MakeInteger (int64 (_dgfgg ));_dbbfbf .Set ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cgdg );
_dcbbg .Append (_cgdg );_dcbbg .Append (_eefga );_dgfgg ++;return true ;};};};return false ;};for _ ,_gaebe :=range _beabc {if _ffcbe ,_cgddd :=_bda .GetDict (_gaebe );_cgddd {if _ceafd :=_ffcbe .Get ("\u0053");_ceafd !=nil {if _defdc ,_aafed :=_bda .GetNameVal (_ceafd );
_aafed &&_defdc ==StructureTypeLink {if _gbacad :=_ffcbe .Get ("\u004b");_gbacad !=nil {if _eebad ,_fdacc :=_bda .GetArray (_gbacad );_fdacc {for _ ,_fefeb :=range _eebad .Elements (){if _ffca ,_gfebb :=_bda .GetDict (_fefeb );_gfebb {_febfc (_gaebe ,_ffca );
};};}else if _acabbf ,_dbfdaf :=_bda .GetDict (_gbacad );_dbfdaf {_febfc (_gaebe ,_acabbf );};};};};};};_ffda .ParentTree =_bda .MakeDict ();_ffda .ParentTree .Set ("\u004e\u0075\u006d\u0073",_dcbbg );_ffda .ParentTreeNextKey =int64 (_dgfgg );_facdb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065",_bda .MakeIndirectObject (_ffda .ParentTree ));
};_facdb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074\u0054\u0072\u0065\u0065\u004e\u0065x\u0074\u004b\u0065\u0079",_bda .MakeInteger (_ffda .ParentTreeNextKey ));if _ffda .RoleMap !=nil {_facdb .Set ("\u0052o\u006c\u0065\u004d\u0061\u0070",_ffda .RoleMap );
};if _ffda .ClassMap !=nil {_facdb .Set ("\u0043\u006c\u0061\u0073\u0073\u004d\u0061\u0070",_ffda .ClassMap );};return _ffeff ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cecfd pdfCIDFontType2 )GetRuneMetrics (r rune )(_geg .CharMetrics ,bool ){_bded ,_dfdgg :=_cecfd ._dgccg [r ];if !_dfdgg {_dgbf ,_gcfef :=_bda .GetInt (_cecfd .DW );if !_gcfef {return _geg .CharMetrics {},false ;};_bded =int (*_dgbf );};return _geg .CharMetrics {Wx :float64 (_bded )},true ;
};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_gaeb :=NewPdfAnnotation ();_ggbac :=&PdfAnnotationFreeText {};_ggbac .PdfAnnotation =_gaeb ;_ggbac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gaeb .SetContext (_ggbac );return _ggbac ;};func NewViewerPreferencesFromPdfObject (obj _bda .PdfObject )(*ViewerPreferences ,error ){_fdcag :=_bda .ResolveReference (obj );
_agfaf ,_cfbd :=_bda .GetDict (_fdcag );if !_cfbd {return nil ,_c .Errorf ("e\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0020\u0076i\u0065\u0077\u0065\u0072\u0020\u0070\u0072ef\u0065\u0072\u0065\u006ec\u0065\u0073\u0020\u0069\u0073\u0020\u006e\u006f\u0074 a\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bbbbg :=NewViewerPreferences ();if _cegbc :=_agfaf .Get ("H\u0069\u0064\u0065\u0054\u006f\u006f\u006c\u0062\u0061\u0072");_cegbc !=nil {if _gcbba ,_fgbaa :=_bda .GetBool (_cegbc );_fgbaa {_bbbbg ._dgdec =(*bool )(_gcbba );};};if _ecdeg :=_agfaf .Get ("H\u0069\u0064\u0065\u004d\u0065\u006e\u0075\u0062\u0061\u0072");
_ecdeg !=nil {if _dfafe ,_gcedc :=_bda .GetBool (_ecdeg );_gcedc {_bbbbg ._acbcd =(*bool )(_dfafe );};};if _gcgef :=_agfaf .Get ("\u0048\u0069\u0064e\u0057\u0069\u006e\u0064\u006f\u0077\u0055\u0049");_gcgef !=nil {if _caabg ,_fafdd :=_bda .GetBool (_gcgef );
_fafdd {_bbbbg ._bcddd =(*bool )(_caabg );};};if _bfgad :=_agfaf .Get ("\u0046i\u0074\u0057\u0069\u006e\u0064\u006fw");_bfgad !=nil {if _dgbab ,_cccde :=_bda .GetBool (_bfgad );_cccde {_bbbbg ._gaefd =(*bool )(_dgbab );};};if _abab :=_agfaf .Get ("\u0043\u0065\u006et\u0065\u0072\u0057\u0069\u006e\u0064\u006f\u0077");
_abab !=nil {if _agfeb ,_gfbde :=_bda .GetBool (_abab );_gfbde {_bbbbg ._ecaag =(*bool )(_agfeb );};};if _gdaag :=_agfaf .Get ("\u0044i\u0073p\u006c\u0061\u0079\u0044\u006f\u0063\u0054\u0069\u0074\u006c\u0065");_gdaag !=nil {if _eabbf ,_egdgbe :=_bda .GetBool (_gdaag );
_egdgbe {_bbbbg ._ddeed =(*bool )(_eabbf );};};if _eeacbe :=_agfaf .Get ("N\u006f\u006e\u0046\u0075ll\u0053c\u0072\u0065\u0065\u006e\u0050a\u0067\u0065\u004d\u006f\u0064\u0065");_eeacbe !=nil {if _ecggb ,_fgfdf :=_bda .GetName (_eeacbe );_fgfdf {_bbbbg ._egeea =NonFullScreenPageMode (*_ecggb );
};};if _gbcee :=_agfaf .Get ("\u0044i\u0072\u0065\u0063\u0074\u0069\u006fn");_gbcee !=nil {if _ddadg ,_fdefff :=_bda .GetName (_gbcee );_fdefff {_bbbbg ._gbacc =Direction (*_ddadg );};};if _fbcbfe :=_agfaf .Get ("\u0056\u0069\u0065\u0077\u0041\u0072\u0065\u0061");
_fbcbfe !=nil {if _egfffa ,_dgfbe :=_bda .GetName (_fbcbfe );_dgfbe {_bbbbg ._adbff =PageBoundary (*_egfffa );};};if _dagbe :=_agfaf .Get ("\u0056\u0069\u0065\u0077\u0043\u006c\u0069\u0070");_dagbe !=nil {if _ababg ,_gafcc :=_bda .GetName (_dagbe );_gafcc {_bbbbg ._adecc =PageBoundary (*_ababg );
};};if _fagfgf :=_agfaf .Get ("\u0050r\u0069\u006e\u0074\u0041\u0072\u0065a");_fagfgf !=nil {if _deccdb ,_agdfa :=_bda .GetName (_fagfgf );_agdfa {_bbbbg ._geeda =PageBoundary (*_deccdb );};};if _gagbg :=_agfaf .Get ("\u0050r\u0069\u006e\u0074\u0043\u006c\u0069p");
_gagbg !=nil {if _bgdg ,_aagce :=_bda .GetName (_gagbg );_aagce {_bbbbg ._eefag =PageBoundary (*_bgdg );};};if _acdfb :=_agfaf .Get ("\u0050\u0072\u0069n\u0074\u0053\u0063\u0061\u006c\u0069\u006e\u0067");_acdfb !=nil {if _gfaab ,_ddaff :=_bda .GetName (_acdfb );
_ddaff {_bbbbg ._ecffgg =PrintScaling (*_gfaab );};};if _ebcac :=_agfaf .Get ("\u0044\u0075\u0070\u006c\u0065\u0078");_ebcac !=nil {if _dcade ,_gaccc :=_bda .GetName (_ebcac );_gaccc {_bbbbg ._bebac =Duplex (*_dcade );};};if _fbbaa :=_agfaf .Get ("\u0050\u0069\u0063\u006b\u0054\u0072\u0061\u0079\u0042\u0079\u0050\u0044F\u0053\u0069\u007a\u0065");
_fbbaa !=nil {if _dafga ,_afagb :=_bda .GetBool (_fbbaa );_afagb {_bbbbg ._eedfcc =(*bool )(_dafga );};};if _cafda :=_agfaf .Get ("\u0050\u0072\u0069\u006e\u0074\u0050\u0061\u0067\u0065R\u0061\u006e\u0067\u0065");_cafda !=nil {if _abecf ,_eadba :=_bda .GetArray (_cafda );
_eadba {_bbbbg ._edffc =make ([]int ,_abecf .Len ());for _ecddbe :=range _bbbbg ._edffc {if _dgdab :=_abecf .Get (_ecddbe );_dgdab !=nil {if _ggfgb ,_aecba :=_bda .GetInt (_dgdab );_aecba {_bbbbg ._edffc [_ecddbe ]=int (*_ggfgb );};};};};};if _fbfbb :=_agfaf .Get ("\u004eu\u006d\u0043\u006f\u0070\u0069\u0065s");
_fbfbb !=nil {if _gbbfd ,_befg :=_bda .GetInt (_fbfbb );_befg {_bbbbg ._eaga =int (*_gbbfd );};};return _bbbbg ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bda .PdfObject ;LE _bda .PdfObject ;BS _bda .PdfObject ;IC _bda .PdfObject ;BE _bda .PdfObject ;IT _bda .PdfObject ;Measure _bda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fbac *PdfAnnotationSound )ToPdfObject ()_bda .PdfObject {_fbac .PdfAnnotation .ToPdfObject ();_bbaa :=_fbac ._ged ;_gce :=_bbaa .PdfObject .(*_bda .PdfObjectDictionary );_fbac .PdfAnnotationMarkup .appendToPdfDictionary (_gce );_gce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0053\u006f\u0075n\u0064"));
_gce .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fbac .Sound );_gce .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fbac .Name );return _bbaa ;};

// ToPdfObject converts the K dictionary to a PDF object.
func (_ffae *KValue )ToPdfObject ()_bda .PdfObject {if _ffae ._dfafb !=nil {return _bda .MakeIndirectObject (_ffae ._dfafb .ToPdfObject ());};if _ffae ._bfafef !=nil {return _ffae ._bfafef ;};if _ffae ._ecgbg !=nil {return _bda .MakeInteger (int64 (*_ffae ._ecgbg ));
};return nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_bgbdf *pdfFontSimple )SetEncoder (encoder _dgb .TextEncoder ){_bgbdf ._cbedg =encoder };

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_bceda *PdfPageResources )GetFontByName (keyName _bda .PdfObjectName )(_bda .PdfObject ,bool ){if _bceda .Font ==nil {return nil ,false ;};_eecce ,_gdgb :=_bda .TraceToDirectObject (_bceda .Font ).(*_bda .PdfObjectDictionary );if !_gdgb {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bda .TraceToDirectObject (_bceda .Font ));
return nil ,false ;};if _degad :=_eecce .Get (keyName );_degad !=nil {return _degad ,true ;};return nil ,false ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_afd :=NewPdfAction ();_cff :=&PdfActionMovie {};_cff .PdfAction =_afd ;_afd .SetContext (_cff );return _cff ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_bacc *PdfReader )GetEncryptionMethod ()string {_gddc :=_bacc ._fdadg .GetCrypter ();return _gddc .String ();};func (_ggfc *PdfReader )newPdfAnnotationTrapNetFromDict (_gffc *_bda .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_gbcbg :=PdfAnnotationTrapNet {};
return &_gbcbg ,nil ;};

// SetNonFullScreenPageMode sets the value of the nonFullScreenPageMode.
func (_aebba *ViewerPreferences )SetNonFullScreenPageMode (nonFullScreenPageMode NonFullScreenPageMode ){_aebba ._egeea =nonFullScreenPageMode ;};func (_cccgf *PdfReader )buildNameNodes (_eabag *_bda .PdfIndirectObject ,_cdbbd map[_bda .PdfObject ]struct{})error {if _eabag ==nil {return nil ;
};if _ ,_fdbec :=_cdbbd [_eabag ];_fdbec {_ed .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_eabag .ObjectNumber );
return nil ;};_cdbbd [_eabag ]=struct{}{};_dbfbb ,_efgadc :=_eabag .PdfObject .(*_bda .PdfObjectDictionary );if !_efgadc {return _gea .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _fdbfg ,_aaab :=_bda .GetDict (_dbfbb .Get ("\u0044\u0065\u0073t\u0073"));
_aaab {_eggbe ,_bggd :=_bda .GetArray (_fdbfg .Get ("\u004b\u0069\u0064\u0073"));if !_bggd {return _gea .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_ed .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_eggbe );
for _abgg ,_bcffg :=range _eggbe .Elements (){_eecee ,_caeeb :=_bda .GetIndirect (_bcffg );if !_caeeb {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_eecee );
return _gea .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_eggbe .Set (_abgg ,_eecee );_gbbde :=_cccgf .buildNameNodes (_eecee ,_cdbbd );if _gbbde !=nil {return _gbbde ;
};};};if _dcecb ,_bcdf :=_bda .GetDict (_dbfbb );_bcdf {if !_bda .IsNullObject (_dcecb .Get ("\u004b\u0069\u0064\u0073")){if _bedd ,_cbeea :=_bda .GetArray (_dcecb .Get ("\u004b\u0069\u0064\u0073"));_cbeea {for _bfdcg ,_dbdbe :=range _bedd .Elements (){if _dffae ,_dafdf :=_bda .GetIndirect (_dbdbe );
_dafdf {_bedd .Set (_bfdcg ,_dffae );_feee :=_cccgf .buildNameNodes (_dffae ,_cdbbd );if _feee !=nil {return _feee ;};};};};};};return nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bda .PdfIndirectObject ;SV *_bda .PdfIndirectObject ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_dgdca *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_cfgbd :=RC4_128bit ;if options !=nil {_cfgbd =options .Algorithm ;};_ggebf :=_aa .PermOwner ;if options !=nil {_ggebf =options .Permissions ;};var _dfecbb _dc .Filter ;
switch _cfgbd {case RC4_128bit :_dfecbb =_dc .NewFilterV2 (16);case AES_128bit :_dfecbb =_dc .NewFilterAESV2 ();case AES_256bit :_dfecbb =_dc .NewFilterAESV3 ();default:return _c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_gdebg ,_cbbcg ,_cfbfe :=_bda .PdfCryptNewEncrypt (_dfecbb ,userPass ,ownerPass ,_ggebf );if _cfbfe !=nil {return _cfbfe ;};_dgdca ._cbdd =_gdebg ;if _cbbcg .Major !=0{_dgdca .SetVersion (_cbbcg .Major ,_cbbcg .Minor );};_dgdca ._ecbbb =_cbbcg .Encrypt ;
_dgdca ._gcbgf ,_dgdca ._ebgegf =_cbbcg .ID0 ,_cbbcg .ID1 ;_debdg :=_bda .MakeIndirectObject (_cbbcg .Encrypt );_dgdca ._dgeba =_debdg ;_dgdca .addObject (_debdg );return nil ;};func (_dbddg *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _dbddg ._bedea };
func (_adfcf *PdfWriter )copyObject (_fgadb _bda .PdfObject ,_dbfa map[_bda .PdfObject ]_bda .PdfObject ,_gedbg map[_bda .PdfObject ]struct{},_babffg bool )_bda .PdfObject {_edegca :=!_adfcf ._eccfc &&_gedbg !=nil ;if _afeeb ,_gafcce :=_dbfa [_fgadb ];
_gafcce {if _edegca &&!_babffg {delete (_gedbg ,_fgadb );};return _afeeb ;};if _fgadb ==nil {_dcbaca :=_bda .MakeNull ();return _dcbaca ;};_ccge :=_fgadb ;switch _gafba :=_fgadb .(type ){case *_bda .PdfObjectArray :_gbedf :=_bda .MakeArray ();_ccge =_gbedf ;
_dbfa [_fgadb ]=_ccge ;for _ ,_agge :=range _gafba .Elements (){_gbedf .Append (_adfcf .copyObject (_agge ,_dbfa ,_gedbg ,_babffg ));};case *_bda .PdfObjectStreams :_bgfc :=&_bda .PdfObjectStreams {PdfObjectReference :_gafba .PdfObjectReference };_ccge =_bgfc ;
_dbfa [_fgadb ]=_ccge ;for _ ,_ggefa :=range _gafba .Elements (){_bgfc .Append (_adfcf .copyObject (_ggefa ,_dbfa ,_gedbg ,_babffg ));};case *_bda .PdfObjectStream :_fdceg :=&_bda .PdfObjectStream {Stream :_gafba .Stream ,PdfObjectReference :_gafba .PdfObjectReference ,Lazy :_gafba .Lazy ,TempFile :_gafba .TempFile };
_ccge =_fdceg ;_dbfa [_fgadb ]=_ccge ;_fdceg .PdfObjectDictionary =_adfcf .copyObject (_gafba .PdfObjectDictionary ,_dbfa ,_gedbg ,_babffg ).(*_bda .PdfObjectDictionary );case *_bda .PdfObjectDictionary :var _dfcce bool ;if _edegca &&!_babffg {if _eeabf ,_ :=_bda .GetNameVal (_gafba .Get ("\u0054\u0079\u0070\u0065"));
_eeabf =="\u0050\u0061\u0067\u0065"{_ ,_acgbc :=_adfcf ._cdbc [_gafba ];_babffg =!_acgbc ;_dfcce =_babffg ;};};_dbefae :=_bda .MakeDict ();_ccge =_dbefae ;_dbfa [_fgadb ]=_ccge ;for _ ,_gggede :=range _gafba .Keys (){_dbefae .Set (_gggede ,_adfcf .copyObject (_gafba .Get (_gggede ),_dbfa ,_gedbg ,_babffg ));
};if _dfcce {_ccge =_bda .MakeNull ();_babffg =false ;};case *_bda .PdfIndirectObject :_dbba :=&_bda .PdfIndirectObject {PdfObjectReference :_gafba .PdfObjectReference };_ccge =_dbba ;_dbfa [_fgadb ]=_ccge ;_dbba .PdfObject =_adfcf .copyObject (_gafba .PdfObject ,_dbfa ,_gedbg ,_babffg );
case *_bda .PdfObjectString :_beebe :=*_gafba ;_ccge =&_beebe ;_dbfa [_fgadb ]=_ccge ;case *_bda .PdfObjectName :_adaae :=*_gafba ;_ccge =&_adaae ;_dbfa [_fgadb ]=_ccge ;case *_bda .PdfObjectNull :_ccge =_bda .MakeNull ();_dbfa [_fgadb ]=_ccge ;case *_bda .PdfObjectInteger :_badd :=*_gafba ;
_ccge =&_badd ;_dbfa [_fgadb ]=_ccge ;case *_bda .PdfObjectReference :_gcbfac :=*_gafba ;_ccge =&_gcbfac ;_dbfa [_fgadb ]=_ccge ;case *_bda .PdfObjectFloat :_caccg :=*_gafba ;_ccge =&_caccg ;_dbfa [_fgadb ]=_ccge ;case *_bda .PdfObjectBool :_befbg :=*_gafba ;
_ccge =&_befbg ;_dbfa [_fgadb ]=_ccge ;case *pdfSignDictionary :_fbfgd :=&pdfSignDictionary {PdfObjectDictionary :_bda .MakeDict (),_fcdfe :_gafba ._fcdfe ,_cfefa :_gafba ._cfefa };_ccge =_fbfgd ;_dbfa [_fgadb ]=_ccge ;for _ ,_agabb :=range _gafba .Keys (){_fbfgd .Set (_agabb ,_adfcf .copyObject (_gafba .Get (_agabb ),_dbfa ,_gedbg ,_babffg ));
};default:_ed .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_fgadb );
};if _edegca &&_babffg {_gedbg [_fgadb ]=struct{}{};};return _ccge ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_bcccd *PdfPageResources )ToPdfObject ()_bda .PdfObject {_aababf :=_bcccd ._cfabb ;_aababf .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bcccd .ExtGState );if _bcccd ._cdfgb !=nil {_bcccd .ColorSpace =_bcccd ._cdfgb .ToPdfObject ();
};_aababf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bcccd .ColorSpace );_aababf .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_bcccd .Pattern );_aababf .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bcccd .Shading );
_aababf .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_bcccd .XObject );_aababf .SetIfNotNil ("\u0046\u006f\u006e\u0074",_bcccd .Font );_aababf .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_bcccd .ProcSet );_aababf .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_bcccd .Properties );
return _aababf ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bda .PdfObjectStream ;Data []byte ;_aebd *_bda .PdfIndirectObject ;_ebge *_bda .PdfObjectStream ;};func _gcfbf ()_ad .Time {_ggbe .Lock ();defer _ggbe .Unlock ();return _eddfc };func (_cegg *PdfAppender )updateObjectsDeep (_cfdd _bda .PdfObject ,_ddea map[_bda .PdfObject ]struct{}){if _ddea ==nil {_ddea =map[_bda .PdfObject ]struct{}{};
};if _ ,_ggef :=_ddea [_cfdd ];_ggef ||_cfdd ==nil {return ;};_ddea [_cfdd ]=struct{}{};_gada :=_bda .ResolveReferencesDeep (_cfdd ,_cegg ._facc );if _gada !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gada );};switch _dbde :=_cfdd .(type ){case *_bda .PdfIndirectObject :switch {case _dbde .GetParser ()==_cegg ._babd ._fdadg :return ;
case _dbde .GetParser ()==_cegg .Reader ._fdadg :_aaed ,_ :=_cegg ._babd .GetIndirectObjectByNumber (int (_dbde .ObjectNumber ));_bbd ,_abfg :=_aaed .(*_bda .PdfIndirectObject );if _abfg &&_bbd !=nil {if _bbd .PdfObject !=_dbde .PdfObject &&_bbd .PdfObject .WriteString ()!=_dbde .PdfObject .WriteString (){if _ab .Contains (_dbde .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_ab .Contains (_dbde .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_cegg .addNewObject (_cfdd );_cegg ._ffge [_cfdd ]=_dbde .ObjectNumber ;};};default:_cegg .addNewObject (_cfdd );};_cegg .updateObjectsDeep (_dbde .PdfObject ,_ddea );case *_bda .PdfObjectArray :for _ ,_afcb :=range _dbde .Elements (){_cegg .updateObjectsDeep (_afcb ,_ddea );
};case *_bda .PdfObjectDictionary :for _ ,_accfa :=range _dbde .Keys (){_cegg .updateObjectsDeep (_dbde .Get (_accfa ),_ddea );};case *_bda .PdfObjectStreams :if _dbde .GetParser ()!=_cegg ._babd ._fdadg {for _ ,_aded :=range _dbde .Elements (){_cegg .updateObjectsDeep (_aded ,_ddea );
};};case *_bda .PdfObjectStream :switch {case _dbde .GetParser ()==_cegg ._babd ._fdadg :return ;case _dbde .GetParser ()==_cegg .Reader ._fdadg :if _fbfa ,_begc :=_cegg ._babd ._fdadg .LookupByReference (_dbde .PdfObjectReference );_begc ==nil {var _adag bool ;
if _ggd ,_gggd :=_bda .GetStream (_fbfa );_gggd &&_dff .Equal (_ggd .Stream ,_dbde .Stream ){_adag =true ;};if _gggbe ,_abec :=_bda .GetDict (_fbfa );_adag &&_abec {_adag =_gggbe .WriteString ()==_dbde .PdfObjectDictionary .WriteString ();};if _adag {return ;
};};if _dbde .ObjectNumber !=0{_cegg ._ffge [_cfdd ]=_dbde .ObjectNumber ;};default:if _ ,_cbee :=_cegg ._agg [_cfdd ];!_cbee {_cegg .addNewObject (_cfdd );};};_cegg .updateObjectsDeep (_dbde .PdfObjectDictionary ,_ddea );};};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ga .ReadSeeker )(*PdfReader ,error ){const _edbfag ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _efgcc (rs ,&ReaderOpts {LazyLoad :true },false ,_edbfag );
};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_dgada *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_abge *LTV )validateSig (_baeae *PdfSignature )error {if _baeae ==nil ||_baeae .Contents ==nil ||len (_baeae .Contents .Bytes ())==0{return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_baeae );
};return nil ;};func _agaadb ()_ad .Time {_ggbe .Lock ();defer _ggbe .Unlock ();return _fafddb };const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);func (_eccca *PdfWriter )setDocumentIDs (_ceedc ,_gdbec string ){_eccca ._ffgbfc =_bda .MakeArray (_bda .MakeHexString (_ceedc ),_bda .MakeHexString (_gdbec ));
};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_dedgb *PdfWriter )SetCatalogMetadata (meta _bda .PdfObject )error {if meta ==nil {_dedgb ._geadba .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_gcedgb ,_dfee :=_bda .GetStream (meta );if !_dfee {return _gea .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_dedgb .addObject (_gcedgb );_dedgb ._geadba .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gcedgb );return nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_gagaa :=&PdfPageResourcesColorspaces {};_gagaa .Names =[]string {};_gagaa .Colorspaces =map[string ]PdfColorspace {};_gagaa ._agbc =&_bda .PdfIndirectObject {};return _gagaa ;};func (_geabd *PdfReader )buildOutlineTree (_aaefb _bda .PdfObject ,_begfa *PdfOutlineTreeNode ,_gegf *PdfOutlineTreeNode ,_aacgf map[_bda .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _aacgf ==nil {_aacgf =map[_bda .PdfObject ]struct{}{};
};_aacgf [_aaefb ]=struct{}{};_aebec ,_addgec :=_aaefb .(*_bda .PdfIndirectObject );if !_addgec {return nil ,nil ,_c .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_aaefb );
};_befcgb ,_eefce :=_aebec .PdfObject .(*_bda .PdfObjectDictionary );if !_eefce {return nil ,nil ,_gea .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ed .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_befcgb ,_aebec ,_aebec );
if _eecba :=_befcgb .Get ("\u0054\u0069\u0074l\u0065");_eecba !=nil {_gaabed ,_bfdb :=_geabd .newPdfOutlineItemFromIndirectObject (_aebec );if _bfdb !=nil {return nil ,nil ,_bfdb ;};_gaabed .Parent =_begfa ;_gaabed .Prev =_gegf ;_gbbf :=_bda .ResolveReference (_befcgb .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_cabbd :=_aacgf [_gbbf ];_gbbf !=nil &&_gbbf !=_aebec &&!_cabbd {if !_bda .IsNullObject (_gbbf ){_efdag ,_edecf ,_cbgag :=_geabd .buildOutlineTree (_gbbf ,&_gaabed .PdfOutlineTreeNode ,nil ,_aacgf );if _cbgag !=nil {_ed .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_cbgag );
}else {_gaabed .First =_efdag ;_gaabed .Last =_edecf ;};};};_befae :=_bda .ResolveReference (_befcgb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_cddba :=_aacgf [_befae ];_befae !=nil &&_befae !=_aebec &&!_cddba {if !_bda .IsNullObject (_befae ){_bdfdg ,_decf ,_baccb :=_geabd .buildOutlineTree (_befae ,_begfa ,&_gaabed .PdfOutlineTreeNode ,_aacgf );
if _baccb !=nil {_ed .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_baccb );
}else {_gaabed .Next =_bdfdg ;return &_gaabed .PdfOutlineTreeNode ,_decf ,nil ;};};};return &_gaabed .PdfOutlineTreeNode ,&_gaabed .PdfOutlineTreeNode ,nil ;};_eagb ,_ecdb :=_cdbb (_aebec );if _ecdb !=nil {return nil ,nil ,_ecdb ;};_eagb .Parent =_begfa ;
if _ggeb :=_befcgb .Get ("\u0046\u0069\u0072s\u0074");_ggeb !=nil {_ggeb =_bda .ResolveReference (_ggeb );if _ ,_bafcg :=_aacgf [_ggeb ];_ggeb !=nil &&_ggeb !=_aebec &&!_bafcg {_gefa :=_bda .TraceToDirectObject (_ggeb );if _ ,_gbafg :=_gefa .(*_bda .PdfObjectNull );
!_gbafg &&_gefa !=nil {_bgee ,_gfgfb ,_egacc :=_geabd .buildOutlineTree (_ggeb ,&_eagb .PdfOutlineTreeNode ,nil ,_aacgf );if _egacc !=nil {_ed .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_egacc );
}else {_eagb .First =_bgee ;_eagb .Last =_gfgfb ;};};};};return &_eagb .PdfOutlineTreeNode ,&_eagb .PdfOutlineTreeNode ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_aed :=PdfColorDeviceGray (grayVal );return &_aed ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cafac *Image )ToGoImage ()(_f .Image ,error ){_ed .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_dgdbc ,_caaff :=_bg .NewImage (int (_cafac .Width ),int (_cafac .Height ),int (_cafac .BitsPerComponent ),_cafac .ColorComponents ,_cafac .Data ,_cafac ._ffbd ,_cafac ._bfafe );
if _caaff !=nil {return nil ,_caaff ;};return _dgdbc ,nil ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bda .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bda .PdfObject ;A _bda .PdfObject ;SE _bda .PdfObject ;C _bda .PdfObject ;F _bda .PdfObject ;
_egafc *_bda .PdfIndirectObject ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_bbdbe *PdfInfo )GetCustomInfo (name string )*_bda .PdfObjectString {var _cgag *_bda .PdfObjectString ;if _bbdbe ._feec ==nil {return _cgag ;};if _cbgefe ,_gage :=_bbdbe ._feec .Get (*_bda .MakeName (name )).(*_bda .PdfObjectString );_gage {_cgag =_cbgefe ;
};return _cgag ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dgeb *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddab :=vals [0];if _ddab < 0.0||_ddab > 1.0{_ed .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _ddab < 0.0{_ddab =0.0;}else if _ddab > 1.0{_ddab =1.0;};return NewPdfColorDeviceGray (_ddab ),nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_eccc *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_ggfgf :=map[*PdfAnnotation ]bool {};_dedde ,_bffc :=_eccc .GetAnnotations ();if _bffc !=nil {return _bffc ;};_aebfa :=false ;for _ ,_dbega :=range _dedde {if opts .AnnotFilterFunc !=nil {_ggfgf [_dbega ]=opts .AnnotFilterFunc (_dbega );
}else {_ggfgf [_dbega ]=true ;};if _ggfgf [_dbega ]{_aebfa =true ;};};if !_aebfa {return nil ;};return _eccc .flattenFieldsWithOpts (appgen ,opts ,_ggfgf );};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_caec *PdfReader )GetNameDictionary ()(_bda .PdfObject ,error ){_edfgf :=_bda .ResolveReference (_caec ._dabg .Get ("\u004e\u0061\u006de\u0073"));if _edfgf ==nil {return nil ,nil ;};if !_caec ._aaece {_dfaca :=_caec .traverseObjectData (_edfgf );
if _dfaca !=nil {return nil ,_dfaca ;};};return _edfgf ,nil ;};func (_ffcb *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _ffcb ._bedea };

// Evaluate runs the function. Input is [x1 x2 x3].
func (_faag *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _faag ._edcbd ==nil {_faag ._edcbd =_gag .NewPSExecutor (_faag .Program );};var _dddgg []_gag .PSObject ;for _ ,_ggce :=range xVec {_dddgg =append (_dddgg ,_gag .MakeReal (_ggce ));
};_cfdab ,_edfe :=_faag ._edcbd .Execute (_dddgg );if _edfe !=nil {return nil ,_edfe ;};_accad ,_edfe :=_gag .PSObjectArrayToFloat64Array (_cfdab );if _edfe !=nil {return nil ,_edfe ;};return _accad ,nil ;};func (_ccfe *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _edcb []*PdfFieldSignature ;
for _ ,_dggab :=range _ccfe .AllFields (){switch _edadd :=_dggab .GetContext ().(type ){case *PdfFieldSignature :_gbffe :=_edadd ;_edcb =append (_edcb ,_gbffe );};};return _edcb ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_eefa :=&PdfBorderStyle {};return _eefa };

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gcaffb *PdfRectangle )Normalize (){if _gcaffb .Llx > _gcaffb .Urx {_gcaffb .Llx ,_gcaffb .Urx =_gcaffb .Urx ,_gcaffb .Llx ;};if _gcaffb .Lly > _gcaffb .Ury {_gcaffb .Lly ,_gcaffb .Ury =_gcaffb .Ury ,_gcaffb .Lly ;};};

// AddKDict adds a K dictionary object to the structure tree root.
func (_cbcdg *StructTreeRoot )AddKDict (k *KDict ){_cbcdg .K =append (_cbcdg .K ,k )};

// ViewClip returns the value of the viewClip.
func (_ggfag *ViewerPreferences )ViewClip ()PageBoundary {return _ggfag ._adecc };

// SetHideMenubar sets the value of the hideMenubar flag.
func (_bebd *ViewerPreferences )SetHideMenubar (hideMenubar bool ){_bebd ._acbcd =&hideMenubar };func (_bbbce fontCommon )coreString ()string {_gbgga :="";if _bbbce ._bedea !=nil {_gbgga =_bbbce ._bedea .String ();};return _c .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_bbbce ._fggeg ,_bbbce ._bcaebe ,_bbbce ._faee ,_bbbce ._cadee ,_bbbce ._fbedf !=nil ,_bbbce .fontFlags (),_gbgga );
};

// GetBorderWidth returns the border style's width.
func (_bdb *PdfBorderStyle )GetBorderWidth ()float64 {if _bdb .W ==nil {return 1;};return *_bdb .W ;};func _edad (_egcef StdFontName )(pdfFontSimple ,error ){_afcbf ,_gcda :=_geg .NewStdFontByName (_egcef );if !_gcda {return pdfFontSimple {},ErrFontNotSupported ;
};_face :=_eaac (_afcbf );return _face ,nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_afee :=PdfColorDeviceRGB {r ,g ,b };return &_afee ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_bfbd *PdfAnnotation )ToPdfObject ()_bda .PdfObject {_cgac :=_bfbd ._ged ;_egad :=_cgac .PdfObject .(*_bda .PdfObjectDictionary );_egad .Clear ();_egad .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0041\u006e\u006eo\u0074"));_egad .SetIfNotNil ("\u0052\u0065\u0063\u0074",_bfbd .Rect );
_egad .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bfbd .Contents );_egad .SetIfNotNil ("\u0050",_bfbd .P );_egad .SetIfNotNil ("\u004e\u004d",_bfbd .NM );_egad .SetIfNotNil ("\u004d",_bfbd .M );_egad .SetIfNotNil ("\u0046",_bfbd .F );
_egad .SetIfNotNil ("\u0041\u0050",_bfbd .AP );_egad .SetIfNotNil ("\u0041\u0053",_bfbd .AS );_egad .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_bfbd .Border );_egad .SetIfNotNil ("\u0043",_bfbd .C );_egad .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bfbd .StructParent );
_egad .SetIfNotNil ("\u004f\u0043",_bfbd .OC );return _cgac ;};

// GetAttachedFiles retrieves all the attached files info and content.
func (_bbgd *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_abfe :=[]*EmbeddedFile {};_efcgb ,_gaaeb :=_bbgd .GetNameDictionary ();if _gaaeb !=nil {return nil ,_gaaeb ;};if _efcgb ==nil {return _abfe ,nil ;};_agdcf :=_dcaab (_efcgb );if _agdcf .EmbeddedFiles ==nil {return nil ,nil ;
};_gfaag :=_agdcf .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_becbf ,_eefg :=_gfaag .(*_bda .PdfObjectArray );if !_eefg {return nil ,_gea .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};for _bbbfa :=1;_bbbfa < len (_becbf .Elements ());_bbbfa +=2{if _bbbfa %2!=0{_cbef :=_becbf .Get (_bbbfa );_gfbaf ,_feca :=NewPdfFilespecFromObj (_cbef );if _feca !=nil {return nil ,_feca ;};_gfgfe ,_feca :=NewEmbeddedFileFromObject (_gfbaf .EF );if _feca !=nil {return nil ,_feca ;
};_dbcdd ,_cbag :=_gfbaf .F .(*_bda .PdfObjectString );if _cbag {_gfgfe .Name =_dbcdd .Str ();};_gfgfe .Description =_gfbaf .Desc .WriteString ();_gfgfe .Relationship =RelationshipUnspecified ;if _gfbaf .AFRelationship !=nil {switch _gfbaf .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_gfgfe .Relationship =RelationshipSource ;
case "\u0044\u0061\u0074\u0061":_gfgfe .Relationship =RelationshipData ;case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_gfgfe .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_gfgfe .Relationship =RelationshipSupplement ;
default:_gfgfe .Relationship =RelationshipUnspecified ;};};_abfe =append (_abfe ,_gfgfe );};};return _abfe ,nil ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bda .PdfObject ;};func _bfagf (_effc *_bda .PdfObjectDictionary )(*PdfShadingType5 ,error ){_fbfcd :=PdfShadingType5 {};_cfege :=_effc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cfege ==nil {_ed .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_babfccb ,_gfec :=_cfege .(*_bda .PdfObjectInteger );if !_gfec {_ed .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfege );
return nil ,_bda .ErrTypeError ;};_fbfcd .BitsPerCoordinate =_babfccb ;_cfege =_effc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cfege ==nil {_ed .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_babfccb ,_gfec =_cfege .(*_bda .PdfObjectInteger );if !_gfec {_ed .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cfege );
return nil ,_bda .ErrTypeError ;};_fbfcd .BitsPerComponent =_babfccb ;_cfege =_effc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _cfege ==nil {_ed .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_babfccb ,_gfec =_cfege .(*_bda .PdfObjectInteger );if !_gfec {_ed .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cfege );
return nil ,_bda .ErrTypeError ;};_fbfcd .VerticesPerRow =_babfccb ;_cfege =_effc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cfege ==nil {_ed .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edbgd ,_gfec :=_cfege .(*_bda .PdfObjectArray );if !_gfec {_ed .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfege );
return nil ,_bda .ErrTypeError ;};_fbfcd .Decode =_edbgd ;if _fcggf :=_effc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fcggf !=nil {_fbfcd .Function =[]PdfFunction {};if _bdeea ,_fdgab :=_fcggf .(*_bda .PdfObjectArray );_fdgab {for _ ,_befbc :=range _bdeea .Elements (){_accadfd ,_ecaebf :=_aaeca (_befbc );
if _ecaebf !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecaebf );return nil ,_ecaebf ;};_fbfcd .Function =append (_fbfcd .Function ,_accadfd );
};}else {_caef ,_fgdcf :=_aaeca (_fcggf );if _fgdcf !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgdcf );return nil ,_fgdcf ;
};_fbfcd .Function =append (_fbfcd .Function ,_caef );};};return &_fbfcd ,nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ggdcb *pdfCIDFontType0 )ToPdfObject ()_bda .PdfObject {return _bda .MakeNull ()};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bbda *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bbda .Base .GetNumComponents ();_egee :=int (vals [0])*N ;
if _egee < 0||(_egee +N -1)>=len (_bbda ._gfda ){_ed .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_egee );return nil ,ErrColorOutOfRange ;};_gbda :=_bbda ._gfda [_egee :_egee +N ];
var _defba []float64 ;for _ ,_edeg :=range _gbda {_defba =append (_defba ,float64 (_edeg )/255.0);};_cgdf ,_ecbb :=_bbda .Base .ColorFromFloats (_defba );if _ecbb !=nil {return nil ,_ecbb ;};return _cgdf ,nil ;};

// KValue is a wrapper object to hold various type of K's children objects.
type KValue struct{_dfafb *KDict ;_bfafef _bda .PdfObject ;_ecgbg *int ;};

// ToPdfObject implements interface PdfModel.
func (_ecbc *PdfAnnotationStamp )ToPdfObject ()_bda .PdfObject {_ecbc .PdfAnnotation .ToPdfObject ();_daeb :=_ecbc ._ged ;_ebbc :=_daeb .PdfObject .(*_bda .PdfObjectDictionary );_ecbc .PdfAnnotationMarkup .appendToPdfDictionary (_ebbc );_ebbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0053\u0074\u0061m\u0070"));
_ebbc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ecbc .Name );return _daeb ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_dagee *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_ea *PdfActionGoToR )ToPdfObject ()_bda .PdfObject {_ea .PdfAction .ToPdfObject ();_dgad :=_ea ._gg ;_eec :=_dgad .PdfObject .(*_bda .PdfObjectDictionary );_eec .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeGoToR )));if _ea .F !=nil {_eec .Set ("\u0046",_ea .F .ToPdfObject ());
};_eec .SetIfNotNil ("\u0044",_ea .D );_eec .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ea .NewWindow );return _dgad ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_dgee *PdfPage )ToPdfObject ()_bda .PdfObject {_acfd :=_dgee ._eebfa ;_dgee .GetPageDict ();return _acfd ;};func (_ggde *PdfPage )setContainer (_egeae *_bda .PdfIndirectObject ){_egeae .PdfObject =_ggde ._bdgdg ;_ggde ._eebfa =_egeae ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_efdbg *PdfColorspaceLab )ColorFromPdfObjects (objects []_bda .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfce ,_aceba :=_bda .GetNumbersAsFloat (objects );
if _aceba !=nil {return nil ,_aceba ;};return _efdbg .ColorFromFloats (_cfce );};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_bbgad _ga .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_eeafg _f .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dccf _f .Image )(*Image ,error );

// Compress an image.
Compress (_fdbf *Image ,_gbafd int64 )(*Image ,error );};

// SetAction sets the PDF action for the annotation link.
func (_acca *PdfAnnotationLink )SetAction (action *PdfAction ){_acca ._bdcb =action ;if action ==nil {_acca .A =nil ;};};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_eedg *pdfFontSimple )ToPdfObject ()_bda .PdfObject {if _eedg ._gdagb ==nil {_eedg ._gdagb =&_bda .PdfIndirectObject {};};_efgde :=_eedg .baseFields ().asPdfObjectDictionary ("");_eedg ._gdagb .PdfObject =_efgde ;if _eedg .FirstChar !=nil {_efgde .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_eedg .FirstChar );
};if _eedg .LastChar !=nil {_efgde .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_eedg .LastChar );};if _eedg .Widths !=nil {_efgde .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_eedg .Widths );};if _eedg .Encoding !=nil {_efgde .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eedg .Encoding );
}else if _eedg ._cbedg !=nil {_fcdg :=_eedg ._cbedg .ToPdfObject ();if _fcdg !=nil {_efgde .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fcdg );};};return _eedg ._gdagb ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bda .PdfObject ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bda .PdfObject ;Dest _bda .PdfObject ;H _bda .PdfObject ;PA _bda .PdfObject ;QuadPoints _bda .PdfObject ;BS _bda .PdfObject ;_bdcb *PdfAction ;_bbfb *PdfReader ;};

// ToPdfObject implements interface PdfModel.
func (_eabfa *PdfSignature )ToPdfObject ()_bda .PdfObject {_dcgf :=_eabfa ._gbggff ;var _fbbcae *_bda .PdfObjectDictionary ;if _acdfc ,_bbcea :=_dcgf .PdfObject .(*pdfSignDictionary );_bbcea {_fbbcae =_acdfc .PdfObjectDictionary ;}else {_fbbcae =_dcgf .PdfObject .(*_bda .PdfObjectDictionary );
};_fbbcae .SetIfNotNil ("\u0054\u0079\u0070\u0065",_eabfa .Type );_fbbcae .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_eabfa .Filter );_fbbcae .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_eabfa .SubFilter );_fbbcae .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_eabfa .ByteRange );
_fbbcae .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_eabfa .Contents );_fbbcae .SetIfNotNil ("\u0043\u0065\u0072\u0074",_eabfa .Cert );_fbbcae .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eabfa .Name );_fbbcae .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_eabfa .Reason );
_fbbcae .SetIfNotNil ("\u004d",_eabfa .M );_fbbcae .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_eabfa .Reference );_fbbcae .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_eabfa .Changes );_fbbcae .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_eabfa .ContactInfo );
_fbbcae .SetIfNotNil ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e",_eabfa .Location );return _dcgf ;};func _gafdc (_abacc *_bda .PdfObjectDictionary )(*PdfShadingType4 ,error ){_cgggb :=PdfShadingType4 {};_fdcg :=_abacc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fdcg ==nil {_ed .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gedgf ,_fgcf :=_fdcg .(*_bda .PdfObjectInteger );if !_fgcf {_ed .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdcg );
return nil ,_bda .ErrTypeError ;};_cgggb .BitsPerCoordinate =_gedgf ;_fdcg =_abacc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fdcg ==nil {_ed .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gedgf ,_fgcf =_fdcg .(*_bda .PdfObjectInteger );if !_fgcf {_ed .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fdcg );
return nil ,_bda .ErrTypeError ;};_cgggb .BitsPerComponent =_gedgf ;_fdcg =_abacc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fdcg ==nil {_ed .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gedgf ,_fgcf =_fdcg .(*_bda .PdfObjectInteger );if !_fgcf {_ed .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fdcg );
return nil ,_bda .ErrTypeError ;};_cgggb .BitsPerComponent =_gedgf ;_fdcg =_abacc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fdcg ==nil {_ed .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gafdb ,_fgcf :=_fdcg .(*_bda .PdfObjectArray );if !_fgcf {_ed .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fdcg );
return nil ,_bda .ErrTypeError ;};_cgggb .Decode =_gafdb ;_fdcg =_abacc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fdcg ==nil {_ed .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cgggb .Function =[]PdfFunction {};if _ccbcc ,_ecffd :=_fdcg .(*_bda .PdfObjectArray );_ecffd {for _ ,_cbcfb :=range _ccbcc .Elements (){_cbcd ,_geeb :=_aaeca (_cbcfb );if _geeb !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_geeb );
return nil ,_geeb ;};_cgggb .Function =append (_cgggb .Function ,_cbcd );};}else {_cgaagc ,_efagb :=_aaeca (_fdcg );if _efagb !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efagb );
return nil ,_efagb ;};_cgggb .Function =append (_cgggb .Function ,_cgaagc );};return &_cgggb ,nil ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_abccce :_bda .MakeDict (),ColorComponents :colorComponents };
};

// AddMCIDChild adds a child MCID object.
func (_cfead *KDict )AddMCIDChild (mcid int ){_cfead ._fcbda =append (_cfead ._fcbda ,&KValue {_ecgbg :&mcid });};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_efgcdg *_bda .PdfObjectDictionary ;Type *_bda .PdfObjectName ;TransformMethod *_bda .PdfObjectName ;TransformParams _bda .PdfObject ;Data _bda .PdfObject ;DigestMethod *_bda .PdfObjectName ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bda .StreamEncoder ;FormType _bda .PdfObject ;BBox _bda .PdfObject ;Matrix _bda .PdfObject ;Resources *PdfPageResources ;Group _bda .PdfObject ;Ref _bda .PdfObject ;MetaData _bda .PdfObject ;PieceInfo _bda .PdfObject ;LastModified _bda .PdfObject ;
StructParent _bda .PdfObject ;StructParents _bda .PdfObject ;OPI _bda .PdfObject ;OC _bda .PdfObject ;Name _bda .PdfObject ;

// Stream data.
Stream []byte ;_cdfb *_bda .PdfObjectStream ;};func (_ccc *PdfAnnotation )String ()string {_acf :="";_aef ,_afa :=_ccc .ToPdfObject ().(*_bda .PdfIndirectObject );if _afa {_acf =_c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ccc ._fdeb ,_aef .PdfObject .String ());
};return _acf ;};type pdfCIDFontType0 struct{fontCommon ;_bafce *_bda .PdfIndirectObject ;_bffcf _dgb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bda .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bda .PdfObject ;W _bda .PdfObject ;DW2 _bda .PdfObject ;W2 _bda .PdfObject ;_aabdbg map[_dgb .CharCode ]float64 ;_egcg float64 ;};var _aaead =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bagc *PdfFieldButton )IsRadio ()bool {return _bagc .GetType ()==ButtonTypeRadio };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_dega *_bda .PdfIndirectObject ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_bgbb *PdfInfo )AddCustomInfo (name string ,value string )error {if _bgbb ._feec ==nil {_bgbb ._feec =_bda .MakeDict ();};if _ ,_cfeg :=_ceba [name ];_cfeg {return _c .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_bgbb ._feec .SetIfNotNil (*_bda .MakeName (name ),_bda .MakeString (value ));return nil ;};func (_cdbf *PdfWriter )checkLicense ()error {_gafg :=_dfb .GetLicenseKey ();if (_gafg ==nil ||!_gafg .IsLicensed ())&&!_cbbeb {_c .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_c .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _gea .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};func _aaeca (_begac _bda .PdfObject )(PdfFunction ,error ){_begac =_bda .ResolveReference (_begac );
if _acdeg ,_egddc :=_begac .(*_bda .PdfObjectStream );_egddc {_gbfe :=_acdeg .PdfObjectDictionary ;_gdcg ,_decd :=_gbfe .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bda .PdfObjectInteger );if !_decd {_ed .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_gea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gdcg ==0{return _efea (_acdeg );}else if *_gdcg ==4{return _bebb (_acdeg );
}else {return nil ,_gea .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dgda ,_ebcb :=_begac .(*_bda .PdfIndirectObject );_ebcb {_egcga ,_bbfad :=_dgda .PdfObject .(*_bda .PdfObjectDictionary );
if !_bbfad {_ed .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_gea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_bdegb ,_bbfad :=_egcga .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bda .PdfObjectInteger );
if !_bbfad {_ed .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_gea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_bdegb ==2{return _fbbb (_dgda );}else if *_bdegb ==3{return _bdfc (_dgda );}else {return nil ,_gea .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dcedg ,_cfeaa :=_begac .(*_bda .PdfObjectDictionary );
_cfeaa {_eaegd ,_bbad :=_dcedg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bda .PdfObjectInteger );if !_bbad {_ed .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_gea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_eaegd ==2{return _fbbb (_dcedg );}else if *_eaegd ==3{return _bdfc (_dcedg );
}else {return nil ,_gea .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ed .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_begac );
return nil ,_gea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ToPdfObject implements interface PdfModel.
func (_egg *PdfAnnotationFileAttachment )ToPdfObject ()_bda .PdfObject {_egg .PdfAnnotation .ToPdfObject ();_beg :=_egg ._ged ;_gcdb :=_beg .PdfObject .(*_bda .PdfObjectDictionary );_egg .PdfAnnotationMarkup .appendToPdfDictionary (_gcdb );_gcdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_gcdb .SetIfNotNil ("\u0046\u0053",_egg .FS );_gcdb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_egg .Name );return _beg ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bda .PdfObject ;H _bda .PdfObject ;};func _cdfgg (_cdea _bda .PdfObject )(string ,error ){_cdea =_bda .TraceToDirectObject (_cdea );switch _dgbae :=_cdea .(type ){case *_bda .PdfObjectString :return _dgbae .Str (),nil ;
case *_bda .PdfObjectStream :_gbdff ,_fdfg :=_bda .DecodeStream (_dgbae );if _fdfg !=nil {return "",_fdfg ;};return string (_gbdff ),nil ;};return "",_c .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cdea );
};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bda .PdfObject ;MK _bda .PdfObject ;A _bda .PdfObject ;AA _bda .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gdgfg *PdfShadingType7 )ToPdfObject ()_bda .PdfObject {_gdgfg .PdfShading .ToPdfObject ();_bgeccd ,_agbcd :=_gdgfg .getShadingDict ();if _agbcd !=nil {_ed .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdgfg .BitsPerCoordinate !=nil {_bgeccd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gdgfg .BitsPerCoordinate );};if _gdgfg .BitsPerComponent !=nil {_bgeccd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gdgfg .BitsPerComponent );
};if _gdgfg .BitsPerFlag !=nil {_bgeccd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gdgfg .BitsPerFlag );};if _gdgfg .Decode !=nil {_bgeccd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gdgfg .Decode );};if _gdgfg .Function !=nil {if len (_gdgfg .Function )==1{_bgeccd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdgfg .Function [0].ToPdfObject ());
}else {_debdbb :=_bda .MakeArray ();for _ ,_daddc :=range _gdgfg .Function {_debdbb .Append (_daddc .ToPdfObject ());};_bgeccd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_debdbb );};};return _gdgfg ._gfdga ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bda .PdfObjectArray ;ExtGState _bda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_aae *PdfActionHide )ToPdfObject ()_bda .PdfObject {_aae .PdfAction .ToPdfObject ();_fff :=_aae ._gg ;_geff :=_fff .PdfObject .(*_bda .PdfObjectDictionary );_geff .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeHide )));_geff .SetIfNotNil ("\u0054",_aae .T );
_geff .SetIfNotNil ("\u0048",_aae .H );return _fff ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_abf :=NewPdfAnnotation ();_ege :=&PdfAnnotationStamp {};_ege .PdfAnnotation =_abf ;_ege .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abf .SetContext (_ege );return _ege ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_bafcag *Image )GetParamsDict ()*_bda .PdfObjectDictionary {_bdadb :=_bda .MakeDict ();_bdadb .Set ("\u0057\u0069\u0064t\u0068",_bda .MakeInteger (_bafcag .Width ));_bdadb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bda .MakeInteger (_bafcag .Height ));
_bdadb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bda .MakeInteger (int64 (_bafcag .ColorComponents )));_bdadb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bda .MakeInteger (_bafcag .BitsPerComponent ));
return _bdadb ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_gaa :=NewPdfAction ();_ggf :=&PdfActionNamed {};_ggf .PdfAction =_gaa ;_gaa .SetContext (_ggf );return _ggf ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_aaccf *PdfField )FullName ()(string ,error ){var _daeed _dff .Buffer ;_bddc :=[]string {};if _aaccf .T !=nil {_bddc =append (_bddc ,_aaccf .T .Decoded ());};_gfde :=map[*PdfField ]bool {};_gfde [_aaccf ]=true ;_aaef :=_aaccf .Parent ;for _aaef !=nil {if _ ,_egdgb :=_gfde [_aaef ];
_egdgb {return _daeed .String (),_gea .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _aaef .T ==nil {return _daeed .String (),_gea .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_bddc =append (_bddc ,_aaef .T .Decoded ());_gfde [_aaef ]=true ;_aaef =_aaef .Parent ;};for _bfgb :=len (_bddc )-1;_bfgb >=0;_bfgb --{_daeed .WriteString (_bddc [_bfgb ]);if _bfgb > 0{_daeed .WriteString ("\u002e");};};return _daeed .String (),nil ;
};func (_adea *PdfReader )newPdfAnnotationRichMediaFromDict (_febc *_bda .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_bfga :=&PdfAnnotationRichMedia {};_bfga .RichMediaSettings =_febc .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_bfga .RichMediaContent =_febc .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _bfga ,nil ;};

// Direction returns the value of the direction.
func (_bacac *ViewerPreferences )Direction ()Direction {return _bacac ._gbacc };

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_efdde ,_cddf :=_dfc .ReadFile (path );if _cddf !=nil {return nil ,_cddf ;};_bcaaf :=_fd .Detect (_efdde );_aacd :=_af .Sum (_efdde );_cdgd :=&EmbeddedFile {Name :_cbb .Base (path ),Content :_efdde ,FileType :_bcaaf .String (),Hash :_de .EncodeToString (_aacd [:])};
return _cdgd ,nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bda .PdfObject ;};func (_fegc *PdfReader )newPdfAnnotationPopupFromDict (_bebe *_bda .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_abcc :=PdfAnnotationPopup {};_abcc .Parent =_bebe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_abcc .Open =_bebe .Get ("\u004f\u0070\u0065\u006e");return &_abcc ,nil ;};func _egfc (_feaa *_bda .PdfObjectDictionary ,_gead *fontCommon ,_ddddf _dgb .TextEncoder )(*pdfFontSimple ,error ){_gdcde :=_beefd (_gead );_gdcde ._gdgeg =_ddddf ;if _ddddf ==nil {_faaa :=_feaa .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _faaa ==nil {_faaa =_bda .MakeInteger (0);};_gdcde .FirstChar =_faaa ;_ebeca ,_gdccd :=_bda .GetIntVal (_faaa );if !_gdccd {_ed .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_faaa );
return nil ,_bda .ErrTypeError ;};_afff :=_dgb .CharCode (_ebeca );_faaa =_feaa .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _faaa ==nil {_faaa =_bda .MakeInteger (255);};_gdcde .LastChar =_faaa ;_ebeca ,_gdccd =_bda .GetIntVal (_faaa );
if !_gdccd {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_faaa );return nil ,_bda .ErrTypeError ;
};_bfdff :=_dgb .CharCode (_ebeca );_gdcde ._dfad =make (map[_dgb .CharCode ]float64 );_faaa =_feaa .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _faaa !=nil {_gdcde .Widths =_faaa ;_gefb ,_gfgf :=_bda .GetArray (_faaa );if !_gfgf {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_faaa );
return nil ,_bda .ErrTypeError ;};_dgfe ,_ecgd :=_gefb .ToFloat64Array ();if _ecgd !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ecgd ;};if len (_dgfe )!=int (_bfdff -_afff +1){_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bfdff -_afff +1,len (_dgfe ));
return nil ,_bda .ErrRangeError ;};for _cagf ,_faefc :=range _dgfe {_gdcde ._dfad [_afff +_dgb .CharCode (_cagf )]=_faefc ;};};};_gdcde .Encoding =_bda .TraceToDirectObject (_feaa .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _gdcde ,nil ;
};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dba :=NewPdfAnnotation ();_cbg :=&PdfAnnotationSound {};_cbg .PdfAnnotation =_dba ;_cbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dba .SetContext (_cbg );return _cbg ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_dfecg *PdfOutlineItem )ToPdfObject ()_bda .PdfObject {_fcea :=_dfecg ._egafc ;_gaffc :=_fcea .PdfObject .(*_bda .PdfObjectDictionary );_gaffc .Set ("\u0054\u0069\u0074l\u0065",_dfecg .Title );if _dfecg .A !=nil {_gaffc .Set ("\u0041",_dfecg .A );
};if _fedad :=_gaffc .Get ("\u0053\u0045");_fedad !=nil {_gaffc .Remove ("\u0053\u0045");};if _dfecg .C !=nil {_gaffc .Set ("\u0043",_dfecg .C );};if _dfecg .Dest !=nil {_gaffc .Set ("\u0044\u0065\u0073\u0074",_dfecg .Dest );};if _dfecg .F !=nil {_gaffc .Set ("\u0046",_dfecg .F );
};if _dfecg .Count !=nil {_gaffc .Set ("\u0043\u006f\u0075n\u0074",_bda .MakeInteger (*_dfecg .Count ));};if _dfecg .Next !=nil {_gaffc .Set ("\u004e\u0065\u0078\u0074",_dfecg .Next .ToPdfObject ());};if _dfecg .First !=nil {_gaffc .Set ("\u0046\u0069\u0072s\u0074",_dfecg .First .ToPdfObject ());
};if _dfecg .Prev !=nil {_gaffc .Set ("\u0050\u0072\u0065\u0076",_dfecg .Prev .GetContext ().GetContainingPdfObject ());};if _dfecg .Last !=nil {_gaffc .Set ("\u004c\u0061\u0073\u0074",_dfecg .Last .GetContext ().GetContainingPdfObject ());};if _dfecg .Parent !=nil {_gaffc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dfecg .Parent .GetContext ().GetContainingPdfObject ());
};return _fcea ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_bda .PdfObjectName ;P *_bda .PdfObjectInteger ;V *_bda .PdfObjectName ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_aebb PdfModel ;_ceaeg *_bda .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bda .PdfObjectName ;T *_bda .PdfObjectString ;TU *_bda .PdfObjectString ;TM *_bda .PdfObjectString ;Ff *_bda .PdfObjectInteger ;
V _bda .PdfObject ;DV _bda .PdfObject ;AA _bda .PdfObject ;VariableText *VariableText ;};type pdfFont interface{_geg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bda .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject implements interface PdfModel.
func (_ddfa *PdfAnnotationWidget )ToPdfObject ()_bda .PdfObject {_ddfa .PdfAnnotation .ToPdfObject ();_cggd :=_ddfa ._ged ;_egda :=_cggd .PdfObject .(*_bda .PdfObjectDictionary );if _ddfa ._bbac {return _cggd ;};_ddfa ._bbac =true ;_egda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_egda .SetIfNotNil ("\u0048",_ddfa .H );_egda .SetIfNotNil ("\u004d\u004b",_ddfa .MK );_egda .SetIfNotNil ("\u0041",_ddfa .A );_egda .SetIfNotNil ("\u0041\u0041",_ddfa .AA );_egda .SetIfNotNil ("\u0042\u0053",_ddfa .BS );_baed :=_ddfa .Parent ;if _ddfa ._aee !=nil {if _ddfa ._aee ._ceaeg ==_ddfa ._ged {_ddfa ._aee .ToPdfObject ();
};_baed =_ddfa ._aee .GetContainingPdfObject ();};if _baed !=_cggd {_egda .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_baed );};_ddfa ._bbac =false ;return _cggd ;};func _fbcbf (_acecd string )(string ,error ){var _bdbee _dff .Buffer ;_bdbee .WriteString (_acecd );
_eeab :=make ([]byte ,8+16);_cbdgae :=_ad .Now ().UTC ().UnixNano ();_e .BigEndian .PutUint64 (_eeab ,uint64 (_cbdgae ));_ ,_bagdg :=_ff .Read (_eeab [8:]);if _bagdg !=nil {return "",_bagdg ;};_bdbee .WriteString (_de .EncodeToString (_eeab ));return _bdbee .String (),nil ;
};func _fggae (_ccfff *_bg .ImageBase )(_deabe Image ){_deabe .Width =int64 (_ccfff .Width );_deabe .Height =int64 (_ccfff .Height );_deabe .BitsPerComponent =int64 (_ccfff .BitsPerComponent );_deabe .ColorComponents =_ccfff .ColorComponents ;_deabe .Data =_ccfff .Data ;
_deabe ._bfafe =_ccfff .Decode ;_deabe ._ffbd =_ccfff .Alpha ;return _deabe ;};func (_fdcbc *PdfWriter )writeString (_fbacf string ){if _fdcbc ._aebfb !=nil {return ;};_fdcab ,_fadb :=_fdcbc ._ecgbge .WriteString (_fbacf );_fdcbc ._fcdda +=int64 (_fdcab );
_fdcbc ._aebfb =_fadb ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ad .Time )(PdfDate ,error ){_gbadd :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_bcfde ,_ :=_dg .ParseInt (_gbadd [1:3],10,32);_eegcf ,_ :=_dg .ParseInt (_gbadd [4:6],10,32);return PdfDate {_ggfcc :int64 (timeObj .Year ()),_geacg :int64 (timeObj .Month ()),_cfgbe :int64 (timeObj .Day ()),_gggg :int64 (timeObj .Hour ()),_cbdga :int64 (timeObj .Minute ()),_gddcc :int64 (timeObj .Second ()),_ffcfe :_gbadd [0],_dagdfa :_bcfde ,_dgeec :_eegcf },nil ;
};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_afece *XObjectForm )GetContainingPdfObject ()_bda .PdfObject {return _afece ._cdfb };

// ToPdfObject returns a stream object.
func (_ebbff *XObjectImage )ToPdfObject ()_bda .PdfObject {_ffage :=_ebbff ._eedbf ;if _ebbff ._dfcd {return _ffage ;};_babdf :=_ffage .PdfObjectDictionary ;if _ebbff .Filter !=nil {_babdf =_ebbff .Filter .MakeStreamDict ();_ffage .PdfObjectDictionary =_babdf ;
};_babdf .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_babdf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0049\u006d\u0061g\u0065"));_babdf .Set ("\u0057\u0069\u0064t\u0068",_bda .MakeInteger (*(_ebbff .Width )));
_babdf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bda .MakeInteger (*(_ebbff .Height )));if _ebbff .BitsPerComponent !=nil {_babdf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bda .MakeInteger (*(_ebbff .BitsPerComponent )));
};if _ebbff .ColorSpace !=nil {_babdf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ebbff .ColorSpace .ToPdfObject ());};_babdf .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ebbff .Intent );_babdf .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ebbff .ImageMask );
_babdf .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ebbff .Mask );_gcbd :=_babdf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _ebbff .Decode ==nil &&_gcbd {_babdf .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _ebbff .Decode !=nil {_babdf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ebbff .Decode );
};_babdf .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ebbff .Interpolate );_babdf .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ebbff .Alternatives );_babdf .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ebbff .SMask );
_babdf .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ebbff .SMaskInData );_babdf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ebbff .Matte );_babdf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebbff .Name );_babdf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ebbff .StructParent );
_babdf .SetIfNotNil ("\u0049\u0044",_ebbff .ID );_babdf .SetIfNotNil ("\u004f\u0050\u0049",_ebbff .OPI );_babdf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ebbff .Metadata );_babdf .SetIfNotNil ("\u004f\u0043",_ebbff .OC );_babdf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bda .MakeInteger (int64 (len (_ebbff .Stream ))));
_ffage .Stream =_ebbff .Stream ;_ebbff ._dfcd =true ;return _ffage ;};

// IsFitWindow returns the value of the fitWindow flag.
func (_abgcc *ViewerPreferences )IsFitWindow ()bool {if _abgcc ._gaefd ==nil {return false ;};return *_abgcc ._gaefd ;};

// Val returns the value of the color.
func (_gecc *PdfColorCalGray )Val ()float64 {return float64 (*_gecc )};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_egbge *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_ffebb :=_egbge .GetContentStreamObjs ();wrapContents =wrapContents &&len (_ffebb )> 0;_bdada :=_bda .NewFlateEncoder ();_bfdcd :=_bda .MakeArray ();if wrapContents {_fecd ,_bfdae :=_bda .MakeStream ([]byte ("\u0071\u000a"),_bdada );
if _bfdae !=nil {return _bfdae ;};_bfdcd .Append (_fecd );};_bfdcd .Append (_ffebb ...);if wrapContents {_fcegg ,_cecbf :=_bda .MakeStream ([]byte ("\u000a\u0051\u000a"),_bdada );if _cecbf !=nil {return _cecbf ;};_bfdcd .Append (_fcegg );};_gbec ,_fbbca :=_bda .MakeStream (cs ,_bdada );
if _fbbca !=nil {return _fbbca ;};_bfdcd .Append (_gbec );_egbge .Contents =_bfdcd ;return nil ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_edacd *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _edacd .UnderlyingCS .GetNumComponents ();};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_gccb *PdfPage )SetContentStreams (cStreams []string ,encoder _bda .StreamEncoder )error {if len (cStreams )==0{_gccb .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bda .NewRawEncoder ();};var _aeae []*_bda .PdfObjectStream ;for _ ,_cbfa :=range cStreams {_fcbc :=&_bda .PdfObjectStream {};
_cabed :=encoder .MakeStreamDict ();_dfdac ,_dedce :=encoder .EncodeBytes ([]byte (_cbfa ));if _dedce !=nil {return _dedce ;};_cabed .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bda .MakeInteger (int64 (len (_dfdac ))));_fcbc .PdfObjectDictionary =_cabed ;
_fcbc .Stream =_dfdac ;_aeae =append (_aeae ,_fcbc );};if len (_aeae )==1{_gccb .Contents =_aeae [0];}else {_deaac :=_bda .MakeArray ();for _ ,_debe :=range _aeae {_deaac .Append (_debe );};_gccb .Contents =_deaac ;};return nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_aaac *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbag ,_cgaad :=color .(*PdfColorPattern );if !_cgaad {_ed .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _fbag .Color ==nil {return color ,nil ;};if _aaac .UnderlyingCS ==nil {return nil ,_gea .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _aaac .UnderlyingCS .ColorToRGB (_fbag .Color );
};func (_bgba *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// SetPrintArea sets the value of the printArea.
func (_gbffgf *ViewerPreferences )SetPrintArea (printArea PageBoundary ){_gbffgf ._geeda =printArea };func (_bgbbf *pdfFontType0 )subsetRegistered ()error {_agdg ,_dbdg :=_bgbbf .DescendantFont ._ggada .(*pdfCIDFontType2 );if !_dbdg {_ed .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_bgbbf .DescendantFont );
return nil ;};if _agdg ==nil {return nil ;};if _agdg ._bedea ==nil {_ed .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _bgbbf ._geed ==nil {_ed .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_bafg ,_dbdg :=_bda .GetStream (_agdg ._bedea .FontFile2 );if !_dbdg {_ed .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _gea .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dcdef ,_fdaf :=_bda .DecodeStream (_bafg );if _fdaf !=nil {_ed .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fdaf );
return _fdaf ;};_eagc ,_fdaf :=_gbb .Parse (_dff .NewReader (_dcdef ));if _fdaf !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_bafg .Stream ));
return _fdaf ;};var _bcbcg []rune ;var _acff *_gbb .Font ;switch _edbea :=_bgbbf ._geed .(type ){case *_dgb .TrueTypeFontEncoder :_bcbcg =_edbea .RegisteredRunes ();_acff ,_fdaf =_eagc .SubsetKeepRunes (_bcbcg );if _fdaf !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdaf );
return _fdaf ;};_edbea .SubsetRegistered ();case *_dgb .IdentityEncoder :_bcbcg =_edbea .RegisteredRunes ();_bgc :=make ([]_gbb .GlyphIndex ,len (_bcbcg ));for _beee ,_bdcad :=range _bcbcg {_bgc [_beee ]=_gbb .GlyphIndex (_bdcad );};_acff ,_fdaf =_eagc .SubsetKeepIndices (_bgc );
if _fdaf !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdaf );return _fdaf ;};case _dgb .SimpleEncoder :_bgdc :=_edbea .Charcodes ();for _ ,_agad :=range _bgdc {_gagcd ,_cbgf :=_edbea .CharcodeToRune (_agad );if !_cbgf {_ed .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_agad );
continue ;};_bcbcg =append (_bcbcg ,_gagcd );};default:return _c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_bgbbf ._geed );
};var _fgbbg _dff .Buffer ;_fdaf =_acff .Write (&_fgbbg );if _fdaf !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdaf );return _fdaf ;};if _bgbbf ._eeed !=nil {_eded :=make (map[_dfe .CharCode ]rune ,len (_bcbcg ));for _ ,_dgdb :=range _bcbcg {_adeba ,_geeaa :=_bgbbf ._geed .RuneToCharcode (_dgdb );
if !_geeaa {continue ;};_eded [_dfe .CharCode (_adeba )]=_dgdb ;};_bgbbf ._eeed =_dfe .NewToUnicodeCMap (_eded );};_bafg ,_fdaf =_bda .MakeStream (_fgbbg .Bytes (),_bda .NewFlateEncoder ());if _fdaf !=nil {_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdaf );
return _fdaf ;};_bafg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bda .MakeInteger (int64 (_fgbbg .Len ())));if _faedb ,_bdabf :=_bda .GetStream (_agdg ._bedea .FontFile2 );_bdabf {*_faedb =*_bafg ;}else {_agdg ._bedea .FontFile2 =_bafg ;};_gedaa :=_gdaa ();
if len (_bgbbf ._bcaebe )> 0{_bgbbf ._bcaebe =_adfc (_bgbbf ._bcaebe ,_gedaa );};if len (_agdg ._bcaebe )> 0{_agdg ._bcaebe =_adfc (_agdg ._bcaebe ,_gedaa );};if len (_bgbbf ._faee )> 0{_bgbbf ._faee =_adfc (_bgbbf ._faee ,_gedaa );};if _agdg ._bedea !=nil {_gbff ,_bgaeb :=_bda .GetName (_agdg ._bedea .FontName );
if _bgaeb &&len (_gbff .String ())> 0{_ecfa :=_adfc (_gbff .String (),_gedaa );_agdg ._bedea .FontName =_bda .MakeName (_ecfa );};};return nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_aedd *PdfPattern )ToPdfObject ()_bda .PdfObject {_gaaeca :=_aedd .getDict ();_gaaeca .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gaaeca .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bda .MakeInteger (_aedd .PatternType ));
return _aedd ._cbbgec ;};

// SetAnnotations sets the annotations list.
func (_dfbad *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_dfbad ._bcaef =annotations };const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func (_abcef *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_ebab *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_fdadg *_bda .PdfParser ;_ceabe _bda .PdfObject ;_baeed *_bda .PdfIndirectObject ;_dafaa *_bda .PdfObjectDictionary ;_cgdac []*_bda .PdfIndirectObject ;PageList []*PdfPage ;_gdbe int ;_dabg *_bda .PdfObjectDictionary ;_febfd *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_dbcf *Permissions ;_gdfcc map[*PdfReader ]*PdfReader ;_aaefc []*PdfReader ;_gbdfa *modelManager ;_aaece bool ;_efag map[_bda .PdfObject ]struct{};_adacg _ga .ReadSeeker ;_gbcfb string ;_caadg bool ;_gcbfae string ;
_afdbe *ReaderOpts ;_cadf bool ;};

// GetChildren returns the children of the K dictionary object.
func (_fbdbb *KDict )GetChildren ()[]*KValue {return _fbdbb ._fcbda };

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bda .PdfObject ;};

// GetPerms returns the Permissions dictionary
func (_bcfb *PdfReader )GetPerms ()*Permissions {return _bcfb ._dbcf };

// String returns a string representation of what flags are set.
func (_gebg FieldFlag )String ()string {_ccdf :="";if _gebg ==FieldFlagClear {_ccdf ="\u0043\u006c\u0065a\u0072";return _ccdf ;};if _gebg &FieldFlagReadOnly > 0{_ccdf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _gebg &FieldFlagRequired > 0{_ccdf +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _gebg &FieldFlagNoExport > 0{_ccdf +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _gebg &FieldFlagNoToggleToOff > 0{_ccdf +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _gebg &FieldFlagRadio > 0{_ccdf +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _gebg &FieldFlagPushbutton > 0{_ccdf +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _gebg &FieldFlagRadiosInUnision > 0{_ccdf +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _gebg &FieldFlagMultiline > 0{_ccdf +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _gebg &FieldFlagPassword > 0{_ccdf +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _gebg &FieldFlagFileSelect > 0{_ccdf +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _gebg &FieldFlagDoNotScroll > 0{_ccdf +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _gebg &FieldFlagComb > 0{_ccdf +="\u007c\u0043\u006fm\u0062";};if _gebg &FieldFlagRichText > 0{_ccdf +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _gebg &FieldFlagDoNotSpellCheck > 0{_ccdf +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _gebg &FieldFlagCombo > 0{_ccdf +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _gebg &FieldFlagEdit > 0{_ccdf +="\u007c\u0045\u0064i\u0074";};if _gebg &FieldFlagSort > 0{_ccdf +="\u007c\u0053\u006fr\u0074";};if _gebg &FieldFlagMultiSelect > 0{_ccdf +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _gebg &FieldFlagCommitOnSelChange > 0{_ccdf +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ab .Trim (_ccdf ,"\u007c");};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_eddbd :=&PdfShadingType3 {};_eddbd .PdfShading =&PdfShading {};_eddbd .PdfShading ._gfdga =_bda .MakeIndirectObject (_bda .MakeDict ());_eddbd .PdfShading ._cdded =_eddbd ;return _eddbd ;};

// Encoder returns the font's text encoder.
func (_fgdfe pdfCIDFontType2 )Encoder ()_dgb .TextEncoder {return _fgdfe ._becb };func (_dfabc *fontFile )parseASCIIPart (_debg []byte )error {if len (_debg )< 2||string (_debg [:2])!="\u0025\u0021"{return _gea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_fbcae ,_cgebb ,_aabdf :=_bcaf (_debg );if _aabdf !=nil {return _aabdf ;};_gaaeg :=_aadf (_fbcae );_dfabc ._dddg =_gaaeg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dfabc ._dddg ==""{_ed .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _cgebb !=""{_gddfd ,_dcdde :=_cgcbg (_cgebb );if _dcdde !=nil {return _dcdde ;};_beefdc ,_dcdde :=_dgb .NewCustomSimpleTextEncoder (_gddfd ,nil );if _dcdde !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_dcdde );
return nil ;};_dfabc ._ffde =_beefdc ;};return nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_dee :=NewPdfAction ();_abc :=&PdfActionThread {};_abc .PdfAction =_dee ;_dee .SetContext (_abc );return _abc ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_abaae pdfFontSimple )GetCharMetrics (code _dgb .CharCode )(_geg .CharMetrics ,bool ){if _adaea ,_gebe :=_abaae ._dfad [code ];_gebe {return _geg .CharMetrics {Wx :_adaea },true ;};if _geg .IsStdFont (_geg .StdFontName (_abaae ._bcaebe )){return _geg .CharMetrics {Wx :250},true ;
};return _geg .CharMetrics {},false ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bda .PdfObject ;BS _bda .PdfObject ;};func (_cffe *PdfWriter )addObjects (_adafd _bda .PdfObject )error {_ed .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _befeg ,_fabcf :=_adafd .(*_bda .PdfIndirectObject );_fabcf {_ed .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ed .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_adafd ,_befeg );_ed .Log .Trace ("\u002d\u0020\u0025\u0073",_befeg .PdfObject );
if _cffe .addObject (_befeg ){_aggd :=_cffe .addObjects (_befeg .PdfObject );if _aggd !=nil {return _aggd ;};};return nil ;};if _fefae ,_edgce :=_adafd .(*_bda .PdfObjectStream );_edgce {_ed .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ed .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_adafd ,_adafd );
if _cffe .addObject (_fefae ){_dcdag :=_cffe .addObjects (_fefae .PdfObjectDictionary );if _dcdag !=nil {return _dcdag ;};};return nil ;};if _abdga ,_ebbab :=_adafd .(*_bda .PdfObjectDictionary );_ebbab {_ed .Log .Trace ("\u0044\u0069\u0063\u0074");_ed .Log .Trace ("\u002d\u0020\u0025\u0073",_adafd );
for _ ,_cfbdd :=range _abdga .Keys (){_bfcd :=_abdga .Get (_cfbdd );if _gceb ,_fcafg :=_bfcd .(*_bda .PdfObjectReference );_fcafg {_bfcd =_gceb .Resolve ();_abdga .Set (_cfbdd ,_bfcd );};if _cfbdd !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bafdd :=_cffe .addObjects (_bfcd );
_bafdd !=nil {return _bafdd ;};}else {if _ ,_gbegb :=_bfcd .(*_bda .PdfObjectNull );_gbegb {continue ;};if _egbf :=_cffe .hasObject (_bfcd );!_egbf {_ed .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bfcd ,_bfcd ,_bfcd );
_cffe ._dacdaa [_bfcd ]=append (_cffe ._dacdaa [_bfcd ],_abdga );};};};return nil ;};if _fgdag ,_bbdada :=_adafd .(*_bda .PdfObjectArray );_bbdada {_ed .Log .Trace ("\u0041\u0072\u0072a\u0079");_ed .Log .Trace ("\u002d\u0020\u0025\u0073",_adafd );if _fgdag ==nil {return _gea .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _eccbbd ,_fadec :=range _fgdag .Elements (){if _agac ,_bffbc :=_fadec .(*_bda .PdfObjectReference );_bffbc {_fadec =_agac .Resolve ();_fgdag .Set (_eccbbd ,_fadec );};if _accdf :=_cffe .addObjects (_fadec );_accdf !=nil {return _accdf ;};};return nil ;
};if _ ,_abfgg :=_adafd .(*_bda .PdfObjectReference );_abfgg {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_adafd );
return _gea .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};func _ecbag (_cggg _bda .PdfObject )(*PdfFontDescriptor ,error ){_acfad :=&PdfFontDescriptor {};_cggg =_bda .ResolveReference (_cggg );
if _gaad ,_aggg :=_cggg .(*_bda .PdfIndirectObject );_aggg {_acfad ._gbcd =_gaad ;_cggg =_gaad .PdfObject ;};_fcae ,_ffdc :=_bda .GetDict (_cggg );if !_ffdc {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cggg );
return nil ,_bda .ErrTypeError ;};if _adgd :=_fcae .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_adgd !=nil {_acfad .FontName =_adgd ;}else {_ed .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_efgba ,_ :=_bda .GetName (_acfad .FontName );if _gaaf :=_fcae .Get ("\u0054\u0079\u0070\u0065");_gaaf !=nil {_agba ,_fbdff :=_gaaf .(*_bda .PdfObjectName );if !_fbdff ||string (*_agba )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ed .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gaaf ,_efgba ,_acfad .FontName );
};}else {_ed .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_efgba ,_acfad .FontName );
};_acfad .FontFamily =_fcae .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_acfad .FontStretch =_fcae .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_acfad .FontWeight =_fcae .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_acfad .Flags =_fcae .Get ("\u0046\u006c\u0061g\u0073");_acfad .FontBBox =_fcae .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_acfad .ItalicAngle =_fcae .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_acfad .Ascent =_fcae .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_acfad .Descent =_fcae .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_acfad .Leading =_fcae .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_acfad .CapHeight =_fcae .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_acfad .XHeight =_fcae .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_acfad .StemV =_fcae .Get ("\u0053\u0074\u0065m\u0056");_acfad .StemH =_fcae .Get ("\u0053\u0074\u0065m\u0048");_acfad .AvgWidth =_fcae .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_acfad .MaxWidth =_fcae .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_acfad .MissingWidth =_fcae .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_acfad .FontFile =_fcae .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_acfad .FontFile2 =_fcae .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_acfad .FontFile3 =_fcae .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_acfad .CharSet =_fcae .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_acfad .Style =_fcae .Get ("\u0053\u0074\u0079l\u0065");_acfad .Lang =_fcae .Get ("\u004c\u0061\u006e\u0067");
_acfad .FD =_fcae .Get ("\u0046\u0044");_acfad .CIDSet =_fcae .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _acfad .Flags !=nil {if _afcc ,_aeag :=_bda .GetIntVal (_acfad .Flags );_aeag {_acfad ._fcba =_afcc ;};};if _acfad .MissingWidth !=nil {if _acab ,_fcde :=_bda .GetNumberAsFloat (_acfad .MissingWidth );
_fcde ==nil {_acfad ._fgbad =_acab ;};};if _acfad .FontFile !=nil {_bddcg ,_ddged :=_cacgf (_acfad .FontFile );if _ddged !=nil {return _acfad ,_ddged ;};_ed .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bddcg );_acfad .fontFile =_bddcg ;
};if _acfad .FontFile2 !=nil {_bbbac ,_cegf :=_geg .NewFontFile2FromPdfObject (_acfad .FontFile2 );if _cegf !=nil {return _acfad ,_cegf ;};_ed .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_bbbac .String ());_acfad ._cgfd =&_bbbac ;
};return _acfad ,nil ;};

// SetContext set the sub annotation (context).
func (_dcfab *PdfShading )SetContext (ctx PdfModel ){_dcfab ._cdded =ctx };

// String returns a string that describes `font`.
func (_bfaef *PdfFont )String ()string {_effa :="";if _bfaef ._ggada .Encoder ()!=nil {_effa =_bfaef ._ggada .Encoder ().String ();};return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_bfaef ._ggada ,_bfaef .baseFields ().coreString (),_effa );
};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_eaee FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_eaee .Mask ()&^fl .Mask ())};func _cacgf (_deddg _bda .PdfObject )(*fontFile ,error ){_ed .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_deddg );
_eaag :=&fontFile {};_deddg =_bda .TraceToDirectObject (_deddg );_caff ,_dcbff :=_deddg .(*_bda .PdfObjectStream );if !_dcbff {_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_deddg );
return nil ,_bda .ErrTypeError ;};_efab :=_caff .PdfObjectDictionary ;_feaf ,_bcdge :=_bda .DecodeStream (_caff );if _bcdge !=nil {return nil ,_bcdge ;};_dfabe ,_dcbff :=_bda .GetNameVal (_efab .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dcbff {_eaag ._deag =_dfabe ;
if _dfabe =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ed .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_edbef ,_ :=_bda .GetIntVal (_efab .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_gfca ,_ :=_bda .GetIntVal (_efab .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _edbef > len (_feaf ){_edbef =len (_feaf );
};if _edbef +_gfca > len (_feaf ){_gfca =len (_feaf )-_edbef ;};_gfdd :=_feaf [:_edbef ];var _cgdbb []byte ;if _gfca > 0{_cgdbb =_feaf [_edbef :_edbef +_gfca ];};if _edbef > 0&&_gfca > 0{_fccae :=_eaag .loadFromSegments (_gfdd ,_cgdbb );if _fccae !=nil {return nil ,_fccae ;
};};return _eaag ,nil ;};func (_bfaaa *PdfAcroForm )fillImageWithAppearance (_fdae FieldImageProvider ,_efgg FieldAppearanceGenerator )error {if _bfaaa ==nil {return nil ;};_bgega ,_fbbeg :=_fdae .FieldImageValues ();if _fbbeg !=nil {return _fbbeg ;};for _ ,_acgfe :=range _bfaaa .AllFields (){_gdde :=_acgfe .PartialName ();
_aadgb ,_ebabe :=_bgega [_gdde ];if !_ebabe {if _fgafd ,_eabf :=_acgfe .FullName ();_eabf ==nil {_aadgb ,_ebabe =_bgega [_fgafd ];};};if !_ebabe {_ed .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gdde );
continue ;};switch _cgacb :=_acgfe .GetContext ().(type ){case *PdfFieldButton :if _cgacb .IsPush (){_cgacb .SetFillImage (_aadgb );};};if _efgg ==nil {continue ;};for _ ,_agec :=range _acgfe .Annotations {_gafdd ,_aedbd :=_efgg .GenerateAppearanceDict (_bfaaa ,_acgfe ,_agec );
if _aedbd !=nil {return _aedbd ;};_agec .AP =_gafdd ;_agec .ToPdfObject ();};};return nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_abfa *XObjectImage )SetFilter (encoder _bda .StreamEncoder )error {_fadde :=_abfa .Stream ;_eegdb ,_eegcgf :=_abfa .Filter .DecodeBytes (_fadde );if _eegcgf !=nil {return _eegcgf ;};_abfa .Filter =encoder ;encoder .UpdateParams (_abfa .getParamsDict ());
_fadde ,_eegcgf =encoder .EncodeBytes (_eegdb );if _eegcgf !=nil {return _eegcgf ;};_abfa .Stream =_fadde ;return nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_efgd :=NewPdfAnnotation ();_decc :=&PdfAnnotationInk {};_decc .PdfAnnotation =_efgd ;_decc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efgd .SetContext (_decc );return _decc ;};

// ToInteger convert to an integer format.
func (_ggda *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_ffdf :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ffdf *_ggda .A ()),uint32 (_ffdf *_ggda .B ()),uint32 (_ffdf *_ggda .C ())};};func _dcdfg (_dcfd *_bda .PdfObjectDictionary )(*PdfShadingType7 ,error ){_fffde :=PdfShadingType7 {};
_acea :=_dcfd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _acea ==nil {_ed .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gdfd ,_fgcadg :=_acea .(*_bda .PdfObjectInteger );if !_fgcadg {_ed .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acea );
return nil ,_bda .ErrTypeError ;};_fffde .BitsPerCoordinate =_gdfd ;_acea =_dcfd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _acea ==nil {_ed .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gdfd ,_fgcadg =_acea .(*_bda .PdfObjectInteger );if !_fgcadg {_ed .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_acea );
return nil ,_bda .ErrTypeError ;};_fffde .BitsPerComponent =_gdfd ;_acea =_dcfd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _acea ==nil {_ed .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gdfd ,_fgcadg =_acea .(*_bda .PdfObjectInteger );if !_fgcadg {_ed .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_acea );
return nil ,_bda .ErrTypeError ;};_fffde .BitsPerComponent =_gdfd ;_acea =_dcfd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _acea ==nil {_ed .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aafcg ,_fgcadg :=_acea .(*_bda .PdfObjectArray );if !_fgcadg {_ed .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acea );
return nil ,_bda .ErrTypeError ;};_fffde .Decode =_aafcg ;if _egcf :=_dcfd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_egcf !=nil {_fffde .Function =[]PdfFunction {};if _bdgc ,_ebdcf :=_egcf .(*_bda .PdfObjectArray );_ebdcf {for _ ,_dfbed :=range _bdgc .Elements (){_fcdfd ,_fbbaf :=_aaeca (_dfbed );
if _fbbaf !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbbaf );return nil ,_fbbaf ;};_fffde .Function =append (_fffde .Function ,_fcdfd );
};}else {_edcde ,_eced :=_aaeca (_egcf );if _eced !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eced );return nil ,_eced ;};
_fffde .Function =append (_fffde .Function ,_edcde );};};return &_fffde ,nil ;};func _aadf (_afge string )map[string ]string {_ddadd :=_cegdd .Split (_afge ,-1);_aaebc :=map[string ]string {};for _ ,_gbac :=range _ddadd {_bacdd :=_cgfed .FindStringSubmatch (_gbac );
if _bacdd ==nil {continue ;};_bbce ,_bfeed :=_bacdd [1],_bacdd [2];_aaebc [_bbce ]=_bfeed ;};return _aaebc ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_babb *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cfcc :=_babb .actualFont ();if _cfcc ==nil {_ed .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_babb ._ggada );
return _geg .CharMetrics {},false ;};if _fbcc ,_eegeg :=_cfcc .GetRuneMetrics (r );_eegeg {return _fbcc ,true ;};if _bdgg ,_cdcdb :=_babb .GetFontDescriptor ();_cdcdb ==nil &&_bdgg !=nil {return _geg .CharMetrics {Wx :_bdgg ._fgbad },true ;};_ed .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_babb );
return _geg .CharMetrics {},false ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_gdcb *DSS )GenerateHashMaps ()error {_adaca ,_cdee :=_gdcb .generateHashMap (_gdcb .Certs );if _cdee !=nil {return _cdee ;};_afggg ,_cdee :=_gdcb .generateHashMap (_gdcb .OCSPs );if _cdee !=nil {return _cdee ;};_gfbec ,_cdee :=_gdcb .generateHashMap (_gdcb .CRLs );
if _cdee !=nil {return _cdee ;};_gdcb ._fega =_adaca ;_gdcb ._bcdc =_afggg ;_gdcb ._fbed =_gfbec ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cad *PdfActionGoTo3DView )ToPdfObject ()_bda .PdfObject {_cad .PdfAction .ToPdfObject ();_bba :=_cad ._gg ;_fad :=_bba .PdfObject .(*_bda .PdfObjectDictionary );_fad .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeGoTo3DView )));_fad .SetIfNotNil ("\u0054\u0041",_cad .TA );
_fad .SetIfNotNil ("\u0056",_cad .V );return _bba ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ga .ReadSeeker )(*PdfFont ,error ){_acgb ,_fcadg :=_ga .ReadAll (r );if _fcadg !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fcadg );
return nil ,_fcadg ;};_dbcdf ,_fcadg :=_geg .TtfParse (_dff .NewReader (_acgb ));if _fcadg !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_fcadg );
return nil ,_fcadg ;};_fgbba :=&pdfCIDFontType2 {fontCommon :fontCommon {_fggeg :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bda .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dbcdf .Widths )<=0{return nil ,_gea .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gbbbf :=1000.0/float64 (_dbcdf .UnitsPerEm );_agdbd :=_gbbbf *float64 (_dbcdf .Widths [0]);_abcfbd :=make (map[rune ]int );_edfac :=make (map[_geg .GID ]int );_fdccd :=_geg .GID (len (_dbcdf .Widths ));for _ggccb ,_bfgbf :=range _dbcdf .Chars {if _bfgbf > _fdccd -1{continue ;
};_egec :=int (_gbbbf *float64 (_dbcdf .Widths [_bfgbf ]));_abcfbd [_ggccb ]=_egec ;_edfac [_bfgbf ]=_egec ;};_fgbba ._dgccg =_abcfbd ;_fgbba .DW =_bda .MakeInteger (int64 (_agdbd ));_dfgb :=_cgde (_edfac ,uint16 (_fdccd ));_fgbba .W =_bda .MakeIndirectObject (_dfgb );
_gfefa :=_bda .MakeDict ();_gfefa .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bda .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gfefa .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bda .MakeString ("\u0041\u0064\u006fb\u0065"));
_gfefa .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bda .MakeInteger (0));_fgbba .CIDSystemInfo =_gfefa ;_efeg :=&PdfFontDescriptor {FontName :_bda .MakeName (_dbcdf .PostScriptName ),Ascent :_bda .MakeFloat (_gbbbf *float64 (_dbcdf .TypoAscender )),Descent :_bda .MakeFloat (_gbbbf *float64 (_dbcdf .TypoDescender )),CapHeight :_bda .MakeFloat (_gbbbf *float64 (_dbcdf .CapHeight )),FontBBox :_bda .MakeArrayFromFloats ([]float64 {_gbbbf *float64 (_dbcdf .Xmin ),_gbbbf *float64 (_dbcdf .Ymin ),_gbbbf *float64 (_dbcdf .Xmax ),_gbbbf *float64 (_dbcdf .Ymax )}),ItalicAngle :_bda .MakeFloat (_dbcdf .ItalicAngle ),MissingWidth :_bda .MakeFloat (_agdbd )};
_adffb ,_fcadg :=_bda .MakeStream (_acgb ,_bda .NewFlateEncoder ());if _fcadg !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fcadg );
return nil ,_fcadg ;};_adffb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bda .MakeInteger (int64 (len (_acgb ))));_efeg .FontFile2 =_adffb ;if _dbcdf .Bold {_efeg .StemV =_bda .MakeInteger (120);}else {_efeg .StemV =_bda .MakeInteger (70);
};_fafbb :=_ebcd ;if _dbcdf .IsFixedPitch {_fafbb |=_dbcd ;};if _dbcdf .ItalicAngle !=0{_fafbb |=_fdfdg ;};_efeg .Flags =_bda .MakeInteger (int64 (_fafbb ));_fgbba ._bcaebe =_dbcdf .PostScriptName ;_fgbba ._bedea =_efeg ;_facce :=pdfFontType0 {fontCommon :fontCommon {_fggeg :"\u0054\u0079\u0070e\u0030",_bcaebe :_dbcdf .PostScriptName },DescendantFont :&PdfFont {_ggada :_fgbba },Encoding :_bda .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_geed :_dbcdf .NewEncoder ()};
if len (_dbcdf .Chars )> 0{_ggeab :=make (map[_dfe .CharCode ]rune ,len (_dbcdf .Chars ));for _dbdbdd ,_fgaa :=range _dbcdf .Chars {_aeecgg :=_dfe .CharCode (_fgaa );if _cbde ,_cdca :=_ggeab [_aeecgg ];!_cdca ||(_cdca &&_cbde > _dbdbdd ){_ggeab [_aeecgg ]=_dbdbdd ;
};};_facce ._eeed =_dfe .NewToUnicodeCMap (_ggeab );};_fafcc :=PdfFont {_ggada :&_facce };return &_fafcc ,nil ;};func (_ecab *PdfReader )newPdfSignatureFromIndirect (_ggaff *_bda .PdfIndirectObject )(*PdfSignature ,error ){_ebbga ,_accbe :=_ggaff .PdfObject .(*_bda .PdfObjectDictionary );
if !_accbe {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _gcegg ,_adcace :=_ecab ._gbdfa .GetModelFromPrimitive (_ggaff ).(*PdfSignature );_adcace {return _gcegg ,nil ;};_geece :=&PdfSignature {};_geece ._gbggff =_ggaff ;_geece .Type ,_ =_bda .GetName (_ebbga .Get ("\u0054\u0079\u0070\u0065"));
_geece .Filter ,_accbe =_bda .GetName (_ebbga .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_accbe {_ed .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_geece .SubFilter ,_ =_bda .GetName (_ebbga .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_geece .Contents ,_accbe =_bda .GetString (_ebbga .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_accbe {_ed .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _bdef ,_efcc :=_bda .GetArray (_ebbga .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_efcc {_geece .Reference =_bda .MakeArray ();for _ ,_baaca :=range _bdef .Elements (){_fbgea ,_cdada :=_bda .GetDict (_baaca );
if !_cdada {_ed .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_eefdg ,_fgegc :=_ecab .newPdfSignatureReferenceFromDict (_fbgea );if _fgegc !=nil {return nil ,_fgegc ;};_geece .Reference .Append (_eefdg .ToPdfObject ());};};_geece .Cert =_ebbga .Get ("\u0043\u0065\u0072\u0074");_geece .ByteRange ,_ =_bda .GetArray (_ebbga .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_geece .Changes ,_ =_bda .GetArray (_ebbga .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_geece .Name ,_ =_bda .GetString (_ebbga .Get ("\u004e\u0061\u006d\u0065"));_geece .M ,_ =_bda .GetString (_ebbga .Get ("\u004d"));_geece .Location ,_ =_bda .GetString (_ebbga .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_geece .Reason ,_ =_bda .GetString (_ebbga .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_geece .ContactInfo ,_ =_bda .GetString (_ebbga .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_geece .R ,_ =_bda .GetInt (_ebbga .Get ("\u0052"));
_geece .V ,_ =_bda .GetInt (_ebbga .Get ("\u0056"));_geece .PropBuild ,_ =_bda .GetDict (_ebbga .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_geece .PropAuthTime ,_ =_bda .GetInt (_ebbga .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_geece .PropAuthType ,_ =_bda .GetName (_ebbga .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_ecab ._gbdfa .Register (_ggaff ,_geece );return _geece ,nil ;};func (_fefg *PdfWriter )hasObject (_acdac _bda .PdfObject )bool {_ ,_ffgac :=_fefg ._egfad [_acdac ];
return _ffgac ;};

// ToPdfObject returns a stream object.
func (_bdcfg *XObjectForm )ToPdfObject ()_bda .PdfObject {_eeecf :=_bdcfg ._cdfb ;_dgdce :=_eeecf .PdfObjectDictionary ;if _bdcfg .Filter !=nil {_dgdce =_bdcfg .Filter .MakeStreamDict ();_eeecf .PdfObjectDictionary =_dgdce ;};_dgdce .Set ("\u0054\u0079\u0070\u0065",_bda .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dgdce .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0046\u006f\u0072\u006d"));_dgdce .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_bdcfg .FormType );_dgdce .SetIfNotNil ("\u0042\u0042\u006f\u0078",_bdcfg .BBox );
_dgdce .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_bdcfg .Matrix );if _bdcfg .Resources !=nil {_dgdce .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bdcfg .Resources .ToPdfObject ());};_dgdce .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bdcfg .Group );
_dgdce .SetIfNotNil ("\u0052\u0065\u0066",_bdcfg .Ref );_dgdce .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_bdcfg .MetaData );_dgdce .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bdcfg .PieceInfo );_dgdce .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bdcfg .LastModified );
_dgdce .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bdcfg .StructParent );_dgdce .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bdcfg .StructParents );_dgdce .SetIfNotNil ("\u004f\u0050\u0049",_bdcfg .OPI );
_dgdce .SetIfNotNil ("\u004f\u0043",_bdcfg .OC );_dgdce .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bdcfg .Name );_dgdce .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bda .MakeInteger (int64 (len (_bdcfg .Stream ))));_eeecf .Stream =_bdcfg .Stream ;return _eeecf ;
};func _eeag (_dfeb _bda .PdfObject ,_fgdfc bool )(*PdfFont ,error ){_dfef ,_ccff ,_bcee :=_ggbaf (_dfeb );if _dfef !=nil {_edcee (_dfef );};if _bcee !=nil {if _bcee ==ErrType1CFontNotSupported {_dggebb ,_abgce :=_egfc (_dfef ,_ccff ,nil );if _abgce !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ccff ,_abgce );
return nil ,_bcee ;};return &PdfFont {_ggada :_dggebb },_bcee ;};return nil ,_bcee ;};_aebda :=&PdfFont {};switch _ccff ._fggeg {case "\u0054\u0079\u0070e\u0030":if !_fgdfc {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccff );
return nil ,_gea .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gecd ,_fabd :=_gfdac (_dfef ,_ccff );if _fabd !=nil {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccff ,_fabd );
return nil ,_fabd ;};_aebda ._ggada =_gecd ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _aggf *pdfFontSimple ;_gagd ,_gaffa :=_geg .NewStdFontByName (_geg .StdFontName (_ccff ._bcaebe ));
if _gaffa {_aecab :=_eaac (_gagd );_aebda ._ggada =&_aecab ;_dbefd :=_bda .TraceToDirectObject (_aecab .ToPdfObject ());_bgbg ,_bdgad ,_adae :=_ggbaf (_dbefd );if _adae !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ccff ,_aecab );
return nil ,_adae ;};for _ ,_fdgfd :=range _dfef .Keys (){_bgbg .Set (_fdgfd ,_dfef .Get (_fdgfd ));};_aggf ,_adae =_egfc (_bgbg ,_bdgad ,_aecab ._gdgeg );if _adae !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ccff ,_aecab );
return nil ,_adae ;};_aggf ._dfad =_aecab ._dfad ;_aggf ._feada =_aecab ._feada ;if _aggf ._edaf ==nil {_aggf ._edaf =_aecab ._edaf ;};}else {_aggf ,_bcee =_egfc (_dfef ,_ccff ,nil );if _bcee !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ccff ,_bcee );
return nil ,_bcee ;};};_bcee =_aggf .addEncoding ();if _bcee !=nil {return nil ,_bcee ;};if _gaffa {_aggf .updateStandard14Font ();};if _gaffa &&_aggf ._cbedg ==nil &&_aggf ._gdgeg ==nil {_ed .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aggf );
_ed .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_gagd );};if len (_aggf ._dfad )==0{_ed .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_aggf );};_aebda ._ggada =_aggf ;
case "\u0054\u0079\u0070e\u0033":_defe ,_defbc :=_ccdda (_dfef ,_ccff );if _defbc !=nil {_ed .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_defbc );
return nil ,_defbc ;};_aebda ._ggada =_defe ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_gadfb ,_cefca :=_eafcd (_dfef ,_ccff );if _cefca !=nil {_ed .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_cefca );
return nil ,_cefca ;};_aebda ._ggada =_gadfb ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_egac ,_bebc :=_ggged (_dfef ,_ccff );if _bebc !=nil {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccff ,_bebc );
return nil ,_bebc ;};_aebda ._ggada =_egac ;default:_ed .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_ccff );
return nil ,_c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccff );};return _aebda ,nil ;};

// String returns a string that describes `base`.
func (_ddgf fontCommon )String ()string {return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_ddgf .coreString ());};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gcccd *PdfWriter )SetPageLabels (pageLabels _bda .PdfObject )error {if pageLabels ==nil {return nil ;};_ed .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_gcccd ._geadba .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _gcccd .addObjects (pageLabels );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_fcf *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_cfae *PdfReader )newPdfActionHideFromDict (_fce *_bda .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_fce .Get ("\u0054"),H :_fce .Get ("\u0048")},nil ;
};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func (_ebb *PdfReader )newPdfActionGotoRFromDict (_adc *_bda .PdfObjectDictionary )(*PdfActionGoToR ,error ){_geb ,_ggg :=_ggfe (_adc .Get ("\u0046"));if _ggg !=nil {return nil ,_ggg ;};return &PdfActionGoToR {D :_adc .Get ("\u0044"),NewWindow :_adc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_geb },nil ;
};

// Encoder returns the font's text encoder.
func (_degb *pdfFontSimple )Encoder ()_dgb .TextEncoder {if _degb ._cbedg !=nil {return _degb ._cbedg ;};if _degb ._gdgeg !=nil {return _degb ._gdgeg ;};_ggcfbd ,_ :=_dgb .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _ggcfbd ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bda .PdfObject ;ColorSpace _bda .PdfObject ;Pattern _bda .PdfObject ;Shading _bda .PdfObject ;XObject _bda .PdfObject ;Font _bda .PdfObject ;ProcSet _bda .PdfObject ;Properties _bda .PdfObject ;_cfabb *_bda .PdfObjectDictionary ;
_cdfgb *PdfPageResourcesColorspaces ;};func (_acac *PdfReader )newPdfAnnotationWatermarkFromDict (_fgfc *_bda .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_bbfc :=PdfAnnotationWatermark {};_bbfc .FixedPrint =_fgfc .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_bbfc ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bda .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_efde *_bda .PdfIndirectObject ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_cfddd *PdfAcroForm ,_dcdc *PdfField ,_bbcdd *PdfAnnotationWidget )(*_bda .PdfObjectDictionary ,error );};func _gdaa ()string {_dbcca :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _cfeec _dff .Buffer ;for _efcd :=0;_efcd < 6;_efcd ++{_cfeec .WriteRune (rune (_dbcca [_b .Intn (len (_dbcca ))]));};return _cfeec .String ();};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_ggada pdfFont };func _cadgf (_acbcb _bda .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ed .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_acbcb .String (),_acbcb );
_bdgf :=NewPdfColorspaceSpecialPattern ();if _gbbg ,_bgda :=_acbcb .(*_bda .PdfIndirectObject );_bgda {_bdgf ._ccbb =_gbbg ;};_acbcb =_bda .TraceToDirectObject (_acbcb );if _afdf ,_acccg :=_acbcb .(*_bda .PdfObjectName );_acccg {if *_afdf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _bdgf ,nil ;};_fbeg ,_ddff :=_acbcb .(*_bda .PdfObjectArray );if !_ddff {_ed .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_acbcb );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _fbeg .Len ()!=1&&_fbeg .Len ()!=2{_ed .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_fbeg );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_acbcb =_fbeg .Get (0);if _cecfe ,_ecbg :=_acbcb .(*_bda .PdfObjectName );_ecbg {if *_cecfe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ed .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_cecfe );
return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _fbeg .Len ()> 1{_acbcb =_fbeg .Get (1);_acbcb =_bda .TraceToDirectObject (_acbcb );_efge ,_eecfe :=NewPdfColorspaceFromPdfObject (_acbcb );if _eecfe !=nil {return nil ,_eecfe ;
};_bdgf .UnderlyingCS =_efge ;};_ed .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_bdgf .UnderlyingCS );
return _bdgf ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_fcfaff :=NewPdfOutline ();_fcfaff ._ebabd =&_fcfaff ;return _fcfaff ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_eeea *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _eeea .UnderlyingCS ==nil {return nil ,_gea .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _eeea .UnderlyingCS .ColorFromFloats (vals );};func (_gccga *PdfWriter )setCatalogVersion (){_gccga ._geadba .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bda .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_gccga ._cdbbdg .Major ,_gccga ._cdbbdg .Minor )));
};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_ggbe .Lock ();defer _ggbe .Unlock ();_cdfef =title };func (_dcbc *PdfReader )newPdfAnnotationStampFromDict (_dbaf *_bda .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_bfa :=PdfAnnotationStamp {};_eaed ,_bgbc :=_dcbc .newPdfAnnotationMarkupFromDict (_dbaf );
if _bgbc !=nil {return nil ,_bgbc ;};_bfa .PdfAnnotationMarkup =_eaed ;_bfa .Name =_dbaf .Get ("\u004e\u0061\u006d\u0065");return &_bfa ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bda .PdfObjectInteger ;BitsPerComponent *_bda .PdfObjectInteger ;BitsPerFlag *_bda .PdfObjectInteger ;Decode *_bda .PdfObjectArray ;Function []PdfFunction ;};

// Fill populates `form` with values provided by `provider`.
func (_eddag *PdfAcroForm )Fill (provider FieldValueProvider )error {return _eddag .fill (provider ,nil )};

// ToPdfObject implements interface PdfModel.
func (_fbae *PdfAnnotationText )ToPdfObject ()_bda .PdfObject {_fbae .PdfAnnotation .ToPdfObject ();_bbcd :=_fbae ._ged ;_eef :=_bbcd .PdfObject .(*_bda .PdfObjectDictionary );if _fbae .PdfAnnotationMarkup !=nil {_fbae .PdfAnnotationMarkup .appendToPdfDictionary (_eef );
};_eef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0054\u0065\u0078\u0074"));_eef .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fbae .Open );_eef .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fbae .Name );_eef .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fbae .State );
_eef .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fbae .StateModel );return _bbcd ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_gbbgff ,_ccgba :=_geg .NewStdFontByName (HelveticaName );if !_ccgba {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_dddb :=_eaac (_gbbgff );return &PdfFont {_ggada :&_dddb };};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ecfae *PdfPageResourcesColorspaces )Set (key _bda .PdfObjectName ,val PdfColorspace ){if _ ,_fefa :=_ecfae .Colorspaces [string (key )];!_fefa {_ecfae .Names =append (_ecfae .Names ,string (key ));};_ecfae .Colorspaces [string (key )]=val ;};

// ToGoTime returns the date in time.Time format.
func (_cebge PdfDate )ToGoTime ()_ad .Time {_bfbad :=int (_cebge ._dagdfa *60*60+_cebge ._dgeec *60);switch _cebge ._ffcfe {case '-':_bfbad =-_bfbad ;case 'Z':_bfbad =0;};_cgafe :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_cebge ._ffcfe ,_cebge ._dagdfa ,_cebge ._dgeec );
_bcfeg :=_ad .FixedZone (_cgafe ,_bfbad );return _ad .Date (int (_cebge ._ggfcc ),_ad .Month (_cebge ._geacg ),int (_cebge ._cfgbe ),int (_cebge ._gggg ),int (_cebge ._cbdga ),int (_cebge ._gddcc ),0,_bcfeg );};

// SetFitWindow sets the value of the fitWindow flag.
func (_ggcfd *ViewerPreferences )SetFitWindow (fitWindow bool ){_ggcfd ._gaefd =&fitWindow };func (_egbcae *PdfSignature )extractChainFromPKCS7 ()([]*_bd .Certificate ,error ){_bfded ,_cfebcd :=_ec .Parse (_egbcae .Contents .Bytes ());if _cfebcd !=nil {return nil ,_cfebcd ;
};return _bfded .Certificates ,nil ;};func _efdg ()string {return _ed .Version };

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_ebgff *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _accac []_dgb .TextEncoder ;var _ggga _dgb .CMapEncoder ;if _dcegd :=_ebgff .baseFields ()._eeed ;_dcegd !=nil {_ggga =_dgb .NewCMapEncoder ("",nil ,_dcegd );};_dbbe :=_ebgff .Encoder ();
if _dbbe !=nil {switch _daae :=_dbbe .(type ){case _dgb .SimpleEncoder :_gddf :=_daae .BaseName ();if _ ,_dcee :=_dgcb [_gddf ];_dcee {_accac =append (_accac ,_dbbe );};};};if len (_accac )==0{if _ebgff .baseFields ()._eeed !=nil {_accac =append (_accac ,_ggga );
};if _dbbe !=nil {_accac =append (_accac ,_dbbe );};};var _ccfb _dff .Buffer ;var _affcc int ;for _ ,_ggdfb :=range data {var _acfb bool ;for _ ,_ebafc :=range _accac {if _ggcc :=_ebafc .Encode (string (_ggdfb ));len (_ggcc )> 0{_ccfb .Write (_ggcc );_acfb =true ;
break ;};};if !_acfb {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_ggdfb );
_affcc ++;};};if _affcc !=0{_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_affcc ,_ebgff ,_accac );
};return _ccfb .Bytes (),_affcc ;};func (_eaef *PdfWriter )mapObjectStreams (_eeffa bool )(map[_bda .PdfObject ]bool ,bool ){_fgdaa :=make (map[_bda .PdfObject ]bool );for _ ,_fbcg :=range _eaef ._ccbbg {if _aagfce ,_bgcbe :=_fbcg .(*_bda .PdfObjectStreams );
_bgcbe {_eeffa =true ;for _ ,_agbdf :=range _aagfce .Elements (){_fgdaa [_agbdf ]=true ;if _aggcd ,_cgfdg :=_agbdf .(*_bda .PdfIndirectObject );_cgfdg {_fgdaa [_aggcd .PdfObject ]=true ;};};};};return _fgdaa ,_eeffa ;};func (_dcgef *PdfReader )loadDSS ()(*DSS ,error ){if _dcgef ._fdadg .GetCrypter ()!=nil &&!_dcgef ._fdadg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gabe :=_dcgef ._dabg .Get ("\u0044\u0053\u0053");if _gabe ==nil {return nil ,nil ;};_febdd ,_ :=_bda .GetIndirect (_gabe );_gabe =_bda .TraceToDirectObject (_gabe );switch _egafa :=_gabe .(type ){case *_bda .PdfObjectNull :return nil ,nil ;case *_bda .PdfObjectDictionary :return _gaebg (_febdd ,_egafa );
};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_gabe );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cgaaga pdfFontType3 )GetCharMetrics (code _dgb .CharCode )(_geg .CharMetrics ,bool ){if _gcacc ,_gabg :=_cgaaga ._cebgc [code ];_gabg {return _geg .CharMetrics {Wx :_gcacc },true ;};if _geg .IsStdFont (_geg .StdFontName (_cgaaga ._bcaebe )){return _geg .CharMetrics {Wx :250},true ;
};return _geg .CharMetrics {},false ;};func (_fgaf *PdfReader )newPdfAnnotationMarkupFromDict (_bgd *_bda .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_aec :=&PdfAnnotationMarkup {};if _cfee :=_bgd .Get ("\u0054");_cfee !=nil {_aec .T =_cfee ;};
if _ccea :=_bgd .Get ("\u0050\u006f\u0070u\u0070");_ccea !=nil {_gggb ,_fcc :=_ccea .(*_bda .PdfIndirectObject );if !_fcc {if _ ,_abee :=_ccea .(*_bda .PdfObjectNull );!_abee {return nil ,_gea .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_ddfg ,_faa :=_fgaf .newPdfAnnotationFromIndirectObject (_gggb );if _faa !=nil {return nil ,_faa ;};if _ddfg !=nil {_bfc ,_edea :=_ddfg ._fdeb .(*PdfAnnotationPopup );if !_edea {return nil ,_gea .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_aec .Popup =_bfc ;};};};if _dfdd :=_bgd .Get ("\u0043\u0041");_dfdd !=nil {_aec .CA =_dfdd ;};if _cfbc :=_bgd .Get ("\u0052\u0043");_cfbc !=nil {_aec .RC =_cfbc ;};if _efb :=_bgd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_efb !=nil {_aec .CreationDate =_efb ;};if _bdfg :=_bgd .Get ("\u0049\u0052\u0054");_bdfg !=nil {_aec .IRT =_bdfg ;};if _cgee :=_bgd .Get ("\u0053\u0075\u0062\u006a");_cgee !=nil {_aec .Subj =_cgee ;};if _bbbd :=_bgd .Get ("\u0052\u0054");_bbbd !=nil {_aec .RT =_bbbd ;
};if _egbg :=_bgd .Get ("\u0049\u0054");_egbg !=nil {_aec .IT =_egbg ;};if _bgb :=_bgd .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bgb !=nil {_aec .ExData =_bgb ;};return _aec ,nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_eccb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bfgc []float64 ;for _acbd :=0;_acbd < _eccb .GetNumComponents ();_acbd ++{_bfgc =append (_bfgc ,0.0,1.0);};return _bfgc ;};func _cabge (_feafc rune )string {for _cabfbb ,_adddd :=range _gd .Categories {if len (_cabfbb )==2&&_gd .Is (_adddd ,_feafc ){return _cabfbb ;
};};return "\u0043\u006e";};var (CourierName =_geg .CourierName ;CourierBoldName =_geg .CourierBoldName ;CourierObliqueName =_geg .CourierObliqueName ;CourierBoldObliqueName =_geg .CourierBoldObliqueName ;HelveticaName =_geg .HelveticaName ;HelveticaBoldName =_geg .HelveticaBoldName ;
HelveticaObliqueName =_geg .HelveticaObliqueName ;HelveticaBoldObliqueName =_geg .HelveticaBoldObliqueName ;SymbolName =_geg .SymbolName ;ZapfDingbatsName =_geg .ZapfDingbatsName ;TimesRomanName =_geg .TimesRomanName ;TimesBoldName =_geg .TimesBoldName ;
TimesItalicName =_geg .TimesItalicName ;TimesBoldItalicName =_geg .TimesBoldItalicName ;);

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_ecaae *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_cfdbb *PdfSignature ,_fddd Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_bage *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_ddfab *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_fcac *PdfSignature ,_cgaga Hasher )error ;};

// ToPdfObject implements interface PdfModel.
func (_cgaa *PdfAnnotationHighlight )ToPdfObject ()_bda .PdfObject {_cgaa .PdfAnnotation .ToPdfObject ();_aceg :=_cgaa ._ged ;_dedab :=_aceg .PdfObject .(*_bda .PdfObjectDictionary );_cgaa .PdfAnnotationMarkup .appendToPdfDictionary (_dedab );_dedab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_dedab .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgaa .QuadPoints );return _aceg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bdaf *PdfColorspaceSpecialPattern )ToPdfObject ()_bda .PdfObject {if _bdaf .UnderlyingCS ==nil {return _bda .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_eeba :=_bda .MakeArray (_bda .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_eeba .Append (_bdaf .UnderlyingCS .ToPdfObject ());if _bdaf ._ccbb !=nil {_bdaf ._ccbb .PdfObject =_eeba ;return _bdaf ._ccbb ;};return _eeba ;};

// PrintScaling returns the value of the printScaling.
func (_fbgba *ViewerPreferences )PrintScaling ()PrintScaling {return _fbgba ._ecffgg };func (_adab *PdfReader )newPdfActionGotoEFromDict (_cfa *_bda .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gegd ,_daa :=_ggfe (_cfa .Get ("\u0046"));if _daa !=nil {return nil ,_daa ;
};return &PdfActionGoToE {D :_cfa .Get ("\u0044"),NewWindow :_cfa .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_cfa .Get ("\u0054"),F :_gegd },nil ;};

// Write writes out the PDF.
func (_bgged *PdfWriter )Write (writer _ga .Writer )error {_ed .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _acdab ,_edbfd :=writer .(*_dfc .File );_edbfd {_bgged .SetFileName (_acdab .Name ());};_aggcc :=_bgged .checkLicense ();if _aggcc !=nil {return _aggcc ;
};if _aggcc =_bgged .writeOutlines ();_aggcc !=nil {return _aggcc ;};if _aggcc =_bgged .writeAcroFormFields ();_aggcc !=nil {return _aggcc ;};if _aggcc =_bgged .writeNamesDictionary ();_aggcc !=nil {return _aggcc ;};_bgged .checkPendingObjects ();if _aggcc =_bgged .writeOutputIntents ();
_aggcc !=nil {return _aggcc ;};_bgged .setCatalogVersion ();_bgged .copyObjects ();if _aggcc =_bgged .optimize ();_aggcc !=nil {return _aggcc ;};if _aggcc =_bgged .optimizeDocument ();_aggcc !=nil {return _aggcc ;};var _cccee _cg .Hash ;if _bgged ._gagff {_cccee =_af .New ();
writer =_ga .MultiWriter (_cccee ,writer );};_bgged .setWriter (writer );_dadac :=_bgged .checkCrossReferenceStream ();_gfbb ,_dadac :=_bgged .mapObjectStreams (_dadac );_bgged .adjustXRefAffectedVersion (_dadac );_bgged .writeDocumentVersion ();_bgged .updateObjectNumbers ();
_bgged .writeObjects ();if _aggcc =_bgged .writeObjectsInStreams (_gfbb );_aggcc !=nil {return _aggcc ;};_ecaea :=_bgged ._fcdda ;var _edafaf int ;for _cfaec :=range _bgged ._fcbcd {if _cfaec > _edafaf {_edafaf =_cfaec ;};};if _bgged ._gagff {if _aggcc =_bgged .setHashIDs (_cccee );
_aggcc !=nil {return _aggcc ;};};if _dadac {if _aggcc =_bgged .writeXRefStreams (_edafaf ,_ecaea );_aggcc !=nil {return _aggcc ;};}else {_bgged .writeTrailer (_edafaf );};_bgged .makeOffSetReference (_ecaea );if _aggcc =_bgged .flushWriter ();_aggcc !=nil {return _aggcc ;
};return nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_cca *PdfAnnotation )GetContext ()PdfModel {if _cca ==nil {return nil ;};return _cca ._fdeb ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_abbc *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _efafg []*PdfField ;if _abbc .AcroForm !=nil {_efafg =_abbc .AcroForm .AllFields ();};_dfbaa :=make (map[*PdfField ]struct{},len (_efafg ));for _ ,_dfaa :=range _efafg {_dfbaa [_dfaa ]=struct{}{};
};for _ ,_ggfdf :=range _abbc .PageList {_feagg ,_edged :=_ggfdf .GetAnnotations ();if _edged !=nil {return false ,_edged ;};for _ ,_fbba :=range _feagg {_abfdd ,_aaaad :=_fbba .GetContext ().(*PdfAnnotationWidget );if !_aaaad {continue ;};_fgaad :=_abfdd .Field ();
if _fgaad ==nil {return true ,nil ;};if _ ,_cfaac :=_dfbaa [_fgaad ];!_cfaac {return true ,nil ;};};};return false ,nil ;};

// M returns the value of the magenta component of the color.
func (_dcfbf *PdfColorDeviceCMYK )M ()float64 {return _dcfbf [1]};func _ebdbe (_gdbdec *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_gdbdec }};

// ToPdfObject implements interface PdfModel.
func (_gae *PdfActionSubmitForm )ToPdfObject ()_bda .PdfObject {_gae .PdfAction .ToPdfObject ();_afde :=_gae ._gg ;_ddb :=_afde .PdfObject .(*_bda .PdfObjectDictionary );_ddb .SetIfNotNil ("\u0053",_bda .MakeName (string (ActionTypeSubmitForm )));if _gae .F !=nil {_ddb .Set ("\u0046",_gae .F .ToPdfObject ());
};_ddb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gae .Fields );_ddb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gae .Flags );return _afde ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gbdfb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _gea .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_cdddf :=field .V ;if _cdddf ==nil {return _gea .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_ccbe :=pageNum -1;
if _ccbe < 0||_ccbe > len (_gbdfb ._eebd )-1{return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_edaaa :=_gbdfb .Reader .PageList [_ccbe ];field .P =_edaaa .ToPdfObject ();
if field .T ==nil ||field .T .String ()==""{field .T =_bda .MakeString (_c .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_edaaa .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _gbdfb ._ggae ==_gbdfb ._babd .AcroForm {_gbdfb ._ggae =_gbdfb .Reader .AcroForm ;
};_agcc :=_gbdfb ._ggae ;if _agcc ==nil {_agcc =NewPdfAcroForm ();};_agcc .SigFlags =_bda .MakeInteger (3);if _agcc .NeedAppearances !=nil {_agcc .NeedAppearances =nil ;};_edfa :=append (_agcc .AllFields (),field .PdfField );_agcc .Fields =&_edfa ;_gbdfb .ReplaceAcroForm (_agcc );
_gbdfb .UpdatePage (_edaaa );_gbdfb ._eebd [_ccbe ]=_edaaa ;if _ ,_fgc :=field .V .GetDocMDPPermission ();_fgc {_gbdfb ._gcef =NewPermissions (field .V );};return nil ;};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;func (_efad *PdfReader )newPdfAnnotationMovieFromDict (_bddb *_bda .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_dgfc :=PdfAnnotationMovie {};_dgfc .T =_bddb .Get ("\u0054");_dgfc .Movie =_bddb .Get ("\u004d\u006f\u0076i\u0065");
_dgfc .A =_bddb .Get ("\u0041");return &_dgfc ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_dccd *PdfFunctionType0 )ToPdfObject ()_bda .PdfObject {if _dccd ._gdfcb ==nil {_dccd ._gdfcb =&_bda .PdfObjectStream {};};_debfe :=_bda .MakeDict ();_debfe .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bda .MakeInteger (0));
_cfeea :=&_bda .PdfObjectArray {};for _ ,_ddbdb :=range _dccd .Domain {_cfeea .Append (_bda .MakeFloat (_ddbdb ));};_debfe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cfeea );_cdebc :=&_bda .PdfObjectArray {};for _ ,_cggaa :=range _dccd .Range {_cdebc .Append (_bda .MakeFloat (_cggaa ));
};_debfe .Set ("\u0052\u0061\u006eg\u0065",_cdebc );_ggdfc :=&_bda .PdfObjectArray {};for _ ,_gfba :=range _dccd .Size {_ggdfc .Append (_bda .MakeInteger (int64 (_gfba )));};_debfe .Set ("\u0053\u0069\u007a\u0065",_ggdfc );_debfe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bda .MakeInteger (int64 (_dccd .BitsPerSample )));
if _dccd .Order !=1{_debfe .Set ("\u004f\u0072\u0064e\u0072",_bda .MakeInteger (int64 (_dccd .Order )));};_debfe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bda .MakeInteger (int64 (len (_dccd ._ccbfc ))));_dccd ._gdfcb .Stream =_dccd ._ccbfc ;_dccd ._gdfcb .PdfObjectDictionary =_debfe ;
return _dccd ._gdfcb ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_egaa *PdfColorspaceLab )ToPdfObject ()_bda .PdfObject {_dbeb :=_bda .MakeArray ();_dbeb .Append (_bda .MakeName ("\u004c\u0061\u0062"));_ebfc :=_bda .MakeDict ();if _egaa .WhitePoint !=nil {_dffa :=_bda .MakeArray (_bda .MakeFloat (_egaa .WhitePoint [0]),_bda .MakeFloat (_egaa .WhitePoint [1]),_bda .MakeFloat (_egaa .WhitePoint [2]));
_ebfc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dffa );}else {_ed .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _egaa .BlackPoint !=nil {_fdbc :=_bda .MakeArray (_bda .MakeFloat (_egaa .BlackPoint [0]),_bda .MakeFloat (_egaa .BlackPoint [1]),_bda .MakeFloat (_egaa .BlackPoint [2]));_ebfc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fdbc );
};if _egaa .Range !=nil {_dagc :=_bda .MakeArray (_bda .MakeFloat (_egaa .Range [0]),_bda .MakeFloat (_egaa .Range [1]),_bda .MakeFloat (_egaa .Range [2]),_bda .MakeFloat (_egaa .Range [3]));_ebfc .Set ("\u0052\u0061\u006eg\u0065",_dagc );};_dbeb .Append (_ebfc );
if _egaa ._begd !=nil {_egaa ._begd .PdfObject =_dbeb ;return _egaa ._begd ;};return _dbeb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdgdg *PdfShadingType4 )ToPdfObject ()_bda .PdfObject {_cdgdg .PdfShading .ToPdfObject ();_babgb ,_gcbb :=_cdgdg .getShadingDict ();if _gcbb !=nil {_ed .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cdgdg .BitsPerCoordinate !=nil {_babgb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cdgdg .BitsPerCoordinate );};if _cdgdg .BitsPerComponent !=nil {_babgb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cdgdg .BitsPerComponent );
};if _cdgdg .BitsPerFlag !=nil {_babgb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cdgdg .BitsPerFlag );};if _cdgdg .Decode !=nil {_babgb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cdgdg .Decode );};if _cdgdg .Function !=nil {if len (_cdgdg .Function )==1{_babgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdgdg .Function [0].ToPdfObject ());
}else {_cbedc :=_bda .MakeArray ();for _ ,_bgegb :=range _cdgdg .Function {_cbedc .Append (_bgegb .ToPdfObject ());};_babgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbedc );};};return _cdgdg ._gfdga ;};

// String returns the name of the colorspace (DeviceN).
func (_dbdef *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_geabe int ,_dbgegd *PdfPage );

// ToPdfObject implements interface PdfModel.
func (_ccef *PdfAnnotationPopup )ToPdfObject ()_bda .PdfObject {_ccef .PdfAnnotation .ToPdfObject ();_ccefd :=_ccef ._ged ;_gbbe :=_ccefd .PdfObject .(*_bda .PdfObjectDictionary );_gbbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bda .MakeName ("\u0050\u006f\u0070u\u0070"));
_gbbe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ccef .Parent );_gbbe .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ccef .Open );return _ccefd ;};func _gegda ()string {_ggbe .Lock ();defer _ggbe .Unlock ();if len (_cafe )> 0{return _cafe ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};func (_bedab *PdfWriter )writeTrailer (_cadbf int ){_bedab .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _bdaea :=0;_bdaea <=_cadbf ;{for ;_bdaea <=_cadbf ;_bdaea ++{_added ,_bbfde :=_bedab ._fcbcd [_bdaea ];if _bbfde &&(!_bedab ._eccfc ||_bedab ._eccfc &&(_added .Type ==1&&_added .Offset >=_bedab ._cbedca ||_added .Type ==0)){break ;
};};var _cdbbcf int ;for _cdbbcf =_bdaea +1;_cdbbcf <=_cadbf ;_cdbbcf ++{_dfcea ,_afccg :=_bedab ._fcbcd [_cdbbcf ];if _afccg &&(!_bedab ._eccfc ||_bedab ._eccfc &&(_dfcea .Type ==1&&_dfcea .Offset > _bedab ._cbedca )){continue ;};break ;};_baec :=_c .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_bdaea ,_cdbbcf -_bdaea );
_bedab .writeString (_baec );for _acaff :=_bdaea ;_acaff < _cdbbcf ;_acaff ++{_bdeec :=_bedab ._fcbcd [_acaff ];switch _bdeec .Type {case 0:_baec =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_bedab .writeString (_baec );
case 1:_baec =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bdeec .Offset ,0);_bedab .writeString (_baec );};};_bdaea =_cdbbcf +1;};_dffbc :=_bda .MakeDict ();_dffbc .Set ("\u0049\u006e\u0066\u006f",_bedab ._eebef );
_dffbc .Set ("\u0052\u006f\u006f\u0074",_bedab ._eefbd );_dffbc .Set ("\u0053\u0069\u007a\u0065",_bda .MakeInteger (int64 (_cadbf +1)));if _bedab ._eccfc &&_bedab ._eafcga > 0{_dffbc .Set ("\u0050\u0072\u0065\u0076",_bda .MakeInteger (_bedab ._eafcga ));
};if _bedab ._cbdd !=nil {_dffbc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bedab ._dgeba );};if _bedab ._ffgbfc ==nil &&_bedab ._gcbgf !=""&&_bedab ._ebgegf !=""{_bedab ._ffgbfc =_bda .MakeArray (_bda .MakeHexString (_bedab ._gcbgf ),_bda .MakeHexString (_bedab ._ebgegf ));
};if _bedab ._ffgbfc !=nil {_dffbc .Set ("\u0049\u0044",_bedab ._ffgbfc );_ed .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bedab ._ffgbfc );};_bedab .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_bedab .writeString (_dffbc .WriteString ());
_bedab .writeString ("\u000a");};func _dagbc (_ccffe *_bda .PdfObjectDictionary )(*PdfShadingType3 ,error ){_bdfea :=PdfShadingType3 {};_bcdd :=_ccffe .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bcdd ==nil {_ed .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_dcbee ,_agca :=_bcdd .(*_bda .PdfObjectArray );if !_agca {_ed .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcdd );
return nil ,_bda .ErrTypeError ;};if _dcbee .Len ()!=6{_ed .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dcbee .Len ());return nil ,ErrInvalidAttribute ;
};_bdfea .Coords =_dcbee ;if _bfeaf :=_ccffe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bfeaf !=nil {_bfeaf =_bda .TraceToDirectObject (_bfeaf );_fdabg ,_cddbc :=_bfeaf .(*_bda .PdfObjectArray );if !_cddbc {_ed .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bfeaf );
return nil ,_bda .ErrTypeError ;};_bdfea .Domain =_fdabg ;};_bcdd =_ccffe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bcdd ==nil {_ed .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bdfea .Function =[]PdfFunction {};if _abecba ,_ecffc :=_bcdd .(*_bda .PdfObjectArray );_ecffc {for _ ,_fcfef :=range _abecba .Elements (){_ccabb ,_dfca :=_aaeca (_fcfef );if _dfca !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfca );
return nil ,_dfca ;};_bdfea .Function =append (_bdfea .Function ,_ccabb );};}else {_fdccg ,_fgfga :=_aaeca (_bcdd );if _fgfga !=nil {_ed .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgfga );
return nil ,_fgfga ;};_bdfea .Function =append (_bdfea .Function ,_fdccg );};if _egfea :=_ccffe .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_egfea !=nil {_egfea =_bda .TraceToDirectObject (_egfea );_acbgd ,_fcgac :=_egfea .(*_bda .PdfObjectArray );if !_fcgac {_ed .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egfea );
return nil ,_bda .ErrTypeError ;};if _acbgd .Len ()!=2{_ed .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_acbgd .Len ());return nil ,ErrInvalidAttribute ;
};_bdfea .Extend =_acbgd ;};return &_bdfea ,nil ;};func _eefc ()*Names {return &Names {_ggcg :_bda .MakeIndirectObject (_bda .MakeDict ())}};