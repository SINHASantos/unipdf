//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_f "bufio";_aa "bytes";_dgc "crypto/md5";_gc "crypto/rand";_dd "crypto/sha1";_cd "crypto/x509";_dc "encoding/binary";_ccc "encoding/hex";_ed "errors";_e "fmt";_fe "github.com/gabriel-vasile/mimetype";_de "github.com/unidoc/pkcs7";
_gg "github.com/unidoc/unipdf/v3/common";_bb "github.com/unidoc/unipdf/v3/core";_ba "github.com/unidoc/unipdf/v3/core/security";_cfb "github.com/unidoc/unipdf/v3/core/security/crypt";_af "github.com/unidoc/unipdf/v3/internal/cmap";_gdf "github.com/unidoc/unipdf/v3/internal/imageutil";
_fac "github.com/unidoc/unipdf/v3/internal/license";_bf "github.com/unidoc/unipdf/v3/internal/sampling";_ga "github.com/unidoc/unipdf/v3/internal/textencoding";_db "github.com/unidoc/unipdf/v3/internal/timeutils";_gcac "github.com/unidoc/unipdf/v3/internal/transform";
_fa "github.com/unidoc/unipdf/v3/model/internal/docutil";_dcg "github.com/unidoc/unipdf/v3/model/internal/fonts";_eg "github.com/unidoc/unipdf/v3/model/mdp";_bag "github.com/unidoc/unipdf/v3/model/sigutil";_gca "github.com/unidoc/unipdf/v3/ps";_ad "github.com/unidoc/unitype";
_ega "golang.org/x/xerrors";_dg "hash";_b "image";_g "image/color";_ "image/gif";_ "image/png";_ecb "io";_gf "io/ioutil";_bdd "math";_cf "math/rand";_be "os";_bd "path/filepath";_fc "regexp";_cc "sort";_fd "strconv";_dce "strings";_c "sync";_fb "time";
_bg "unicode";_a "unicode/utf8";);

// Flags returns the field flags for the field accounting for any inherited flags.
func (_efcc *PdfField )Flags ()FieldFlag {var _ddfeaa FieldFlag ;_caef ,_bbef :=_efcc .inherit (func (_egcg *PdfField )bool {if _egcg .Ff !=nil {_ddfeaa =FieldFlag (*_egcg .Ff );return true ;};return false ;});if _bbef !=nil {_gg .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_bbef );
};if !_caef {_gg .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _ddfeaa ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_ccfdd *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfVersion returns version of the PDF file.
func (_bdffc *PdfReader )PdfVersion ()_bb .Version {return _bdffc ._cfaef .PdfVersion ()};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_cfcc *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _cfcc .Range };func (_dbfa *PdfReader )newPdfAnnotationPolygonFromDict (_egfe *_bb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_babe :=PdfAnnotationPolygon {};_dgff ,_fceg :=_dbfa .newPdfAnnotationMarkupFromDict (_egfe );
if _fceg !=nil {return nil ,_fceg ;};_babe .PdfAnnotationMarkup =_dgff ;_babe .Vertices =_egfe .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_babe .LE =_egfe .Get ("\u004c\u0045");_babe .BS =_egfe .Get ("\u0042\u0053");_babe .IC =_egfe .Get ("\u0049\u0043");
_babe .BE =_egfe .Get ("\u0042\u0045");_babe .IT =_egfe .Get ("\u0049\u0054");_babe .Measure =_egfe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_babe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dgfe *PdfAnnotationPolygon )ToPdfObject ()_bb .PdfObject {_dgfe .PdfAnnotation .ToPdfObject ();_facee :=_dgfe ._aaf ;_ggec :=_facee .PdfObject .(*_bb .PdfObjectDictionary );_dgfe .PdfAnnotationMarkup .appendToPdfDictionary (_ggec );_ggec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_ggec .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dgfe .Vertices );_ggec .SetIfNotNil ("\u004c\u0045",_dgfe .LE );_ggec .SetIfNotNil ("\u0042\u0053",_dgfe .BS );_ggec .SetIfNotNil ("\u0049\u0043",_dgfe .IC );_ggec .SetIfNotNil ("\u0042\u0045",_dgfe .BE );
_ggec .SetIfNotNil ("\u0049\u0054",_dgfe .IT );_ggec .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dgfe .Measure );return _facee ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bb .PdfObject ;};

// GetOptimizer returns current PDF optimizer.
func (_bgaf *PdfWriter )GetOptimizer ()Optimizer {return _bgaf ._baafb };

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_cedef :=NewPdfAnnotation ();_faa :=&PdfAnnotationInk {};_faa .PdfAnnotation =_cedef ;_faa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cedef .SetContext (_faa );return _faa ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ecb .ReadSeeker )(*PdfReader ,error ){const _bbecf ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dgdcf (rs ,&ReaderOpts {LazyLoad :true },false ,_bbecf );
};

// Encoder returns the font's text encoder.
func (_cdggd *PdfFont )Encoder ()_ga .TextEncoder {_effe :=_cdggd .actualFont ();if _effe ==nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_cdggd ._gbagg );
return nil ;};return _effe .Encoder ();};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gfbe *PdfColorspaceDeviceRGB )ToPdfObject ()_bb .PdfObject {return _bb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_cacfc int64 ;_degfb int64 ;_gfaa int64 ;_gdfge int64 ;_fbfcae int64 ;_ffcg int64 ;_dbcea byte ;_gcfcd int64 ;_cbgdf int64 ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_def :=NewPdfAnnotation ();_gcf :=&PdfAnnotationSquiggly {};_gcf .PdfAnnotation =_def ;_gcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_def .SetContext (_gcf );return _gcf ;};func (_degfg *PdfWriter )writeOutputIntents ()error {if len (_degfg ._bebeg )==0{return nil ;
};_fcede :=make ([]_bb .PdfObject ,len (_degfg ._bebeg ));for _fggfc ,_cgdda :=range _degfg ._bebeg {_acbcf :=_cgdda .ToPdfObject ();_fcede [_fggfc ]=_bb .MakeIndirectObject (_acbcf );};_deabb :=_bb .MakeIndirectObject (_bb .MakeArray (_fcede ...));_degfg ._ebgdb .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_deabb );
if _cfgbb :=_degfg .addObjects (_deabb );_cfgbb !=nil {return _cfgbb ;};return nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_efae FieldFlag )Mask ()uint32 {return uint32 (_efae )};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bb .PdfObject ;MK _bb .PdfObject ;A _bb .PdfObject ;AA _bb .PdfObject ;BS _bb .PdfObject ;Parent _bb .PdfObject ;_dbef *PdfField ;_daf bool ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_abefg *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _abefg ._aafef .(*PdfShadingPattern );};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_fefb *Image )ConvertToBinary ()error {if _fefb .ColorComponents ==1&&_fefb .BitsPerComponent ==1{return nil ;};_bfcb ,_ccbca :=_fefb .ToGoImage ();if _ccbca !=nil {return _ccbca ;};_adga ,_ccbca :=_gdf .MonochromeConverter .Convert (_bfcb );if _ccbca !=nil {return _ccbca ;
};_fefb .Data =_adga .Base ().Data ;_fefb ._cebdb ,_ccbca =_gdf .ScaleAlphaToMonochrome (_fefb ._cebdb ,int (_fefb .Width ),int (_fefb .Height ));if _ccbca !=nil {return _ccbca ;};_fefb .BitsPerComponent =1;_fefb .ColorComponents =1;_fefb ._dafdc =nil ;
return nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bb .PdfObject ;_fgae []byte ;_cedea *_bb .PdfIndirectObject ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cdgdb *PdfColorspaceCalRGB )ToPdfObject ()_bb .PdfObject {_ffdg :=&_bb .PdfObjectArray {};_ffdg .Append (_bb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_ffdae :=_bb .MakeDict ();if _cdgdb .WhitePoint !=nil {_faada :=_bb .MakeArray (_bb .MakeFloat (_cdgdb .WhitePoint [0]),_bb .MakeFloat (_cdgdb .WhitePoint [1]),_bb .MakeFloat (_cdgdb .WhitePoint [2]));
_ffdae .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_faada );}else {_gg .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _cdgdb .BlackPoint !=nil {_dccc :=_bb .MakeArray (_bb .MakeFloat (_cdgdb .BlackPoint [0]),_bb .MakeFloat (_cdgdb .BlackPoint [1]),_bb .MakeFloat (_cdgdb .BlackPoint [2]));_ffdae .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dccc );
};if _cdgdb .Gamma !=nil {_fccd :=_bb .MakeArray (_bb .MakeFloat (_cdgdb .Gamma [0]),_bb .MakeFloat (_cdgdb .Gamma [1]),_bb .MakeFloat (_cdgdb .Gamma [2]));_ffdae .Set ("\u0047\u0061\u006dm\u0061",_fccd );};if _cdgdb .Matrix !=nil {_gfca :=_bb .MakeArray (_bb .MakeFloat (_cdgdb .Matrix [0]),_bb .MakeFloat (_cdgdb .Matrix [1]),_bb .MakeFloat (_cdgdb .Matrix [2]),_bb .MakeFloat (_cdgdb .Matrix [3]),_bb .MakeFloat (_cdgdb .Matrix [4]),_bb .MakeFloat (_cdgdb .Matrix [5]),_bb .MakeFloat (_cdgdb .Matrix [6]),_bb .MakeFloat (_cdgdb .Matrix [7]),_bb .MakeFloat (_cdgdb .Matrix [8]));
_ffdae .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfca );};_ffdg .Append (_ffdae );if _cdgdb ._eaga !=nil {_cdgdb ._eaga .PdfObject =_ffdg ;return _cdgdb ._eaga ;};return _ffdg ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_bfgd *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bb .PdfObject {_dgbf :=_bb .MakeDict ();if _bfgd .Subtype !=nil {_dgbf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bfgd .Subtype );};_dgbf .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_bfgd .Colorants );
_dgbf .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_bfgd .Process );_dgbf .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_bfgd .MixingHints );if _bfgd ._cgfab !=nil {_bfgd ._cgfab .PdfObject =_dgbf ;return _bfgd ._cgfab ;
};return _dgbf ;};func (_dgaf fontCommon )isCIDFont ()bool {if _dgaf ._ecdc ==""{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgaf );
};_cebcgc :=false ;switch _dgaf ._ecdc {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cebcgc =true ;};_gg .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_cebcgc ,_dgaf );
return _cebcgc ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func _gfdg (_beae *_bb .PdfIndirectObject ,_dgfac *_bb .PdfObjectDictionary )(*DSS ,error ){if _beae ==nil {_beae =_bb .MakeIndirectObject (nil );};_beae .PdfObject =_bb .MakeDict ();_cccgc :=map[string ]*VRI {};if _fddeb ,_ccfc :=_bb .GetDict (_dgfac .Get ("\u0056\u0052\u0049"));
_ccfc {for _ ,_eedf :=range _fddeb .Keys (){if _ggfeb ,_fdcg :=_bb .GetDict (_fddeb .Get (_eedf ));_fdcg {_cccgc [_dce .ToUpper (_eedf .String ())]=_bfgdf (_ggfeb );};};};return &DSS {Certs :_edaff (_dgfac .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_edaff (_dgfac .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_edaff (_dgfac .Get ("\u0043\u0052\u004c\u0073")),VRI :_cccgc ,_facae :_beae },nil ;
};func _aaec (_gafg *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_gafg }};func _efcb (_facb []byte )[]byte {const _bbafc =52845;const _becgd =22719;_beef :=55665;for _ ,_bggdd :=range _facb [:4]{_beef =(int (_bggdd )+_beef )*_bbafc +_becgd ;
};_efdcd :=make ([]byte ,len (_facb )-4);for _cgbbf ,_gebdg :=range _facb [4:]{_efdcd [_cgbbf ]=byte (int (_gebdg )^_beef >>8);_beef =(int (_gebdg )+_beef )*_bbafc +_becgd ;};return _efdcd ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ecbe :=NewPdfAction ();_aaa :=&PdfActionTrans {};_aaa .PdfAction =_ecbe ;_ecbe .SetContext (_aaa );return _aaa ;};func (_dceb *PdfReader )newPdfActionThreadFromDict (_ccb *_bb .PdfObjectDictionary )(*PdfActionThread ,error ){_gffe ,_fbb :=_fda (_ccb .Get ("\u0046"));
if _fbb !=nil {return nil ,_fbb ;};return &PdfActionThread {D :_ccb .Get ("\u0044"),B :_ccb .Get ("\u0042"),F :_gffe },nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_ggfdb *Outline )ToPdfObject ()_bb .PdfObject {return _ggfdb .ToPdfOutline ().ToPdfObject ()};func _cadee ()string {_gbdbb .Lock ();defer _gbdbb .Unlock ();return _adce };func (_dbdg *PdfFilespec )getDict ()*_bb .PdfObjectDictionary {if _acde ,_gdccg :=_dbdg ._eggff .(*_bb .PdfIndirectObject );
_gdccg {_ceeg ,_ebfg :=_acde .PdfObject .(*_bb .PdfObjectDictionary );if !_ebfg {return nil ;};return _ceeg ;}else if _gcgg ,_fedb :=_dbdg ._eggff .(*_bb .PdfObjectDictionary );_fedb {return _gcgg ;}else {_gg .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_dbdg ._eggff );
return nil ;};};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bb .PdfObjectArray )(*PdfRectangle ,error ){_feefb :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _gfdcdd error ;_feefb .Llx ,_gfdcdd =_bb .GetNumberAsFloat (arr .Get (0));if _gfdcdd !=nil {return nil ,_gfdcdd ;};_feefb .Lly ,_gfdcdd =_bb .GetNumberAsFloat (arr .Get (1));if _gfdcdd !=nil {return nil ,_gfdcdd ;};_feefb .Urx ,_gfdcdd =_bb .GetNumberAsFloat (arr .Get (2));
if _gfdcdd !=nil {return nil ,_gfdcdd ;};_feefb .Ury ,_gfdcdd =_bb .GetNumberAsFloat (arr .Get (3));if _gfdcdd !=nil {return nil ,_gfdcdd ;};return &_feefb ,nil ;};func (_efgd *PdfReader )newPdfAnnotationSquigglyFromDict (_gefb *_bb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bfad :=PdfAnnotationSquiggly {};
_dabc ,_gdg :=_efgd .newPdfAnnotationMarkupFromDict (_gefb );if _gdg !=nil {return nil ,_gdg ;};_bfad .PdfAnnotationMarkup =_dabc ;_bfad .QuadPoints =_gefb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bfad ,nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_fafe *PdfField )ToPdfObject ()_bb .PdfObject {_ceage :=_fafe ._afbea ;_eddfc :=_ceage .PdfObject .(*_bb .PdfObjectDictionary );_bggeg :=_bb .MakeArray ();for _ ,_fadaf :=range _fafe .Kids {_bggeg .Append (_fadaf .ToPdfObject ());};for _ ,_cfcb :=range _fafe .Annotations {if _cfcb ._aaf !=_fafe ._afbea {_bggeg .Append (_cfcb .GetContext ().ToPdfObject ());
};};if _fafe .Parent !=nil {_eddfc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fafe .Parent .GetContainingPdfObject ());};if _bggeg .Len ()> 0{_eddfc .Set ("\u004b\u0069\u0064\u0073",_bggeg );};_eddfc .SetIfNotNil ("\u0046\u0054",_fafe .FT );
_eddfc .SetIfNotNil ("\u0054",_fafe .T );_eddfc .SetIfNotNil ("\u0054\u0055",_fafe .TU );_eddfc .SetIfNotNil ("\u0054\u004d",_fafe .TM );_eddfc .SetIfNotNil ("\u0046\u0066",_fafe .Ff );_eddfc .SetIfNotNil ("\u0056",_fafe .V );_eddfc .SetIfNotNil ("\u0044\u0056",_fafe .DV );
_eddfc .SetIfNotNil ("\u0041\u0041",_fafe .AA );if _fafe .VariableText !=nil {_eddfc .SetIfNotNil ("\u0044\u0041",_fafe .VariableText .DA );_eddfc .SetIfNotNil ("\u0051",_fafe .VariableText .Q );_eddfc .SetIfNotNil ("\u0044\u0053",_fafe .VariableText .DS );
_eddfc .SetIfNotNil ("\u0052\u0056",_fafe .VariableText .RV );};return _ceage ;};func (_dbcec *pdfFontType0 )baseFields ()*fontCommon {return &_dbcec .fontCommon };

// ToPdfObject converts the font to a PDF representation.
func (_gcaa *pdfFontType0 )ToPdfObject ()_bb .PdfObject {if _gcaa ._adea ==nil {_gcaa ._adea =&_bb .PdfIndirectObject {};};_cggea :=_gcaa .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_gcaa ._adea .PdfObject =_cggea ;if _gcaa .Encoding !=nil {_cggea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gcaa .Encoding );
}else if _gcaa ._fbfad !=nil {_cggea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gcaa ._fbfad .ToPdfObject ());};if _gcaa .DescendantFont !=nil {_cggea .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bb .MakeArray (_gcaa .DescendantFont .ToPdfObject ()));
};return _gcaa ._adea ;};func (_gacfg *DSS )generateHashMap (_geda []*_bb .PdfObjectStream )(map[string ]*_bb .PdfObjectStream ,error ){_gbad :=map[string ]*_bb .PdfObjectStream {};for _ ,_aaca :=range _geda {_eeeda ,_bcdc :=_bb .DecodeStream (_aaca );
if _bcdc !=nil {return nil ,_bcdc ;};_fcad ,_bcdc :=_faef (_eeeda );if _bcdc !=nil {return nil ,_bcdc ;};_gbad [string (_fcad )]=_aaca ;};return _gbad ,nil ;};var (CourierName =_dcg .CourierName ;CourierBoldName =_dcg .CourierBoldName ;CourierObliqueName =_dcg .CourierObliqueName ;
CourierBoldObliqueName =_dcg .CourierBoldObliqueName ;HelveticaName =_dcg .HelveticaName ;HelveticaBoldName =_dcg .HelveticaBoldName ;HelveticaObliqueName =_dcg .HelveticaObliqueName ;HelveticaBoldObliqueName =_dcg .HelveticaBoldObliqueName ;SymbolName =_dcg .SymbolName ;
ZapfDingbatsName =_dcg .ZapfDingbatsName ;TimesRomanName =_dcg .TimesRomanName ;TimesBoldName =_dcg .TimesBoldName ;TimesItalicName =_dcg .TimesItalicName ;TimesBoldItalicName =_dcg .TimesBoldItalicName ;);func (_debad *PdfWriter )adjustXRefAffectedVersion (_febfa bool ){if _febfa &&_debad ._gecfd .Major ==1&&_debad ._gecfd .Minor < 5{_debad ._gecfd .Minor =5;
};};func (_dfccb *PdfWriter )makeOffSetReference (_egdbd int64 ){_ccbge :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_egdbd );_dfccb .writeString (_ccbge );_dfccb .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_bfee *_bb .PdfObjectDictionary ;};func _begbc (_cbabgc _bb .PdfObject )(*PdfShading ,error ){_cdfb :=&PdfShading {};var _ccbdb *_bb .PdfObjectDictionary ;if _gaaa ,_fcbfd :=_bb .GetIndirect (_cbabgc );_fcbfd {_cdfb ._dacad =_gaaa ;
_dddaf ,_defd :=_gaaa .PdfObject .(*_bb .PdfObjectDictionary );if !_defd {_gg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bb .ErrTypeError ;
};_ccbdb =_dddaf ;}else if _fggge ,_bgabf :=_bb .GetStream (_cbabgc );_bgabf {_cdfb ._dacad =_fggge ;_ccbdb =_fggge .PdfObjectDictionary ;}else if _eccde ,_ecbbf :=_bb .GetDict (_cbabgc );_ecbbf {_cdfb ._dacad =_eccde ;_ccbdb =_eccde ;}else {_gg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_cbabgc );
return nil ,_bb .ErrTypeError ;};if _ccbdb ==nil {_gg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ed .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_cbabgc =_ccbdb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cbabgc ==nil {_gg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbabgc =_bb .TraceToDirectObject (_cbabgc );_fcgea ,_ccege :=_cbabgc .(*_bb .PdfObjectInteger );if !_ccege {_gg .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cbabgc );
return nil ,_bb .ErrTypeError ;};if *_fcgea < 1||*_fcgea > 7{_gg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_fcgea );
return nil ,_bb .ErrTypeError ;};_cdfb .ShadingType =_fcgea ;_cbabgc =_ccbdb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _cbabgc ==nil {_gg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dgcf ,_egefgb :=NewPdfColorspaceFromPdfObject (_cbabgc );if _egefgb !=nil {_gg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_egefgb );
return nil ,_egefgb ;};_cdfb .ColorSpace =_dgcf ;_cbabgc =_ccbdb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _cbabgc !=nil {_cbabgc =_bb .TraceToDirectObject (_cbabgc );_feebc ,_efbef :=_cbabgc .(*_bb .PdfObjectArray );if !_efbef {_gg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cbabgc );
return nil ,_bb .ErrTypeError ;};_cdfb .Background =_feebc ;};_cbabgc =_ccbdb .Get ("\u0042\u0042\u006f\u0078");if _cbabgc !=nil {_cbabgc =_bb .TraceToDirectObject (_cbabgc );_edceea ,_gafaa :=_cbabgc .(*_bb .PdfObjectArray );if !_gafaa {_gg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cbabgc );
return nil ,_bb .ErrTypeError ;};_aecac ,_acbgc :=NewPdfRectangle (*_edceea );if _acbgc !=nil {_gg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_acbgc );return nil ,_acbgc ;};_cdfb .BBox =_aecac ;};_cbabgc =_ccbdb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _cbabgc !=nil {_cbabgc =_bb .TraceToDirectObject (_cbabgc );_aegde ,_gfcbd :=_cbabgc .(*_bb .PdfObjectBool );if !_gfcbd {_gg .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbabgc );
return nil ,_bb .ErrTypeError ;};_cdfb .AntiAlias =_aegde ;};switch *_fcgea {case 1:_gbde ,_gagef :=_bbagg (_ccbdb );if _gagef !=nil {return nil ,_gagef ;};_gbde .PdfShading =_cdfb ;_cdfb ._gbbdg =_gbde ;return _cdfb ,nil ;case 2:_fbfac ,_eefa :=_egbdd (_ccbdb );
if _eefa !=nil {return nil ,_eefa ;};_fbfac .PdfShading =_cdfb ;_cdfb ._gbbdg =_fbfac ;return _cdfb ,nil ;case 3:_fdfab ,_dbdgf :=_afgg (_ccbdb );if _dbdgf !=nil {return nil ,_dbdgf ;};_fdfab .PdfShading =_cdfb ;_cdfb ._gbbdg =_fdfab ;return _cdfb ,nil ;
case 4:_gfeca ,_aecgbd :=_aeecce (_ccbdb );if _aecgbd !=nil {return nil ,_aecgbd ;};_gfeca .PdfShading =_cdfb ;_cdfb ._gbbdg =_gfeca ;return _cdfb ,nil ;case 5:_feggb ,_agfc :=_fegbc (_ccbdb );if _agfc !=nil {return nil ,_agfc ;};_feggb .PdfShading =_cdfb ;
_cdfb ._gbbdg =_feggb ;return _cdfb ,nil ;case 6:_cgcbg ,_abba :=_cbfa (_ccbdb );if _abba !=nil {return nil ,_abba ;};_cgcbg .PdfShading =_cdfb ;_cdfb ._gbbdg =_cgcbg ;return _cdfb ,nil ;case 7:_bgaae ,_fcceca :=_faab (_ccbdb );if _fcceca !=nil {return nil ,_fcceca ;
};_bgaae .PdfShading =_cdfb ;_cdfb ._gbbdg =_bgaae ;return _cdfb ,nil ;};return nil ,_ed .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func (_eceda *PdfReader )newPdfFieldFromIndirectObject (_acggc *_bb .PdfIndirectObject ,_dbce *PdfField )(*PdfField ,error ){if _aagb ,_cabab :=_eceda ._geeca .GetModelFromPrimitive (_acggc ).(*PdfField );
_cabab {return _aagb ,nil ;};_gdacb ,_aefdd :=_bb .GetDict (_acggc );if !_aefdd {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dabf :=NewPdfField ();_dabf ._afbea =_acggc ;_dabf ._afbea .PdfObject =_gdacb ;if _gffdd ,_dddcc :=_bb .GetName (_gdacb .Get ("\u0046\u0054"));_dddcc {_dabf .FT =_gffdd ;};if _dbce !=nil {_dabf .Parent =_dbce ;};_dabf .T ,_ =_gdacb .Get ("\u0054").(*_bb .PdfObjectString );
_dabf .TU ,_ =_gdacb .Get ("\u0054\u0055").(*_bb .PdfObjectString );_dabf .TM ,_ =_gdacb .Get ("\u0054\u004d").(*_bb .PdfObjectString );_dabf .Ff ,_ =_gdacb .Get ("\u0046\u0066").(*_bb .PdfObjectInteger );_dabf .V =_gdacb .Get ("\u0056");_dabf .DV =_gdacb .Get ("\u0044\u0056");
_dabf .AA =_gdacb .Get ("\u0041\u0041");if DA :=_gdacb .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_bb .GetString (DA );_dabf .VariableText =&VariableText {DA :DA };Q ,_ :=_gdacb .Get ("\u0051").(*_bb .PdfObjectInteger );DS ,_ :=_gdacb .Get ("\u0044\u0053").(*_bb .PdfObjectString );
RV :=_gdacb .Get ("\u0052\u0056");_dabf .VariableText .Q =Q ;_dabf .VariableText .DS =DS ;_dabf .VariableText .RV =RV ;};_cacgc :=_dabf .FT ;if _cacgc ==nil &&_dbce !=nil {_cacgc =_dbce .FT ;};if _cacgc !=nil {switch *_cacgc {case "\u0054\u0078":_dace ,_egfc :=_bebd (_gdacb );
if _egfc !=nil {return nil ,_egfc ;};_dace .PdfField =_dabf ;_dabf ._babcg =_dace ;case "\u0043\u0068":_efad ,_ebaa :=_abcga (_gdacb );if _ebaa !=nil {return nil ,_ebaa ;};_efad .PdfField =_dabf ;_dabf ._babcg =_efad ;case "\u0042\u0074\u006e":_afba ,_fdgd :=_daeb (_gdacb );
if _fdgd !=nil {return nil ,_fdgd ;};_afba .PdfField =_dabf ;_dabf ._babcg =_afba ;case "\u0053\u0069\u0067":_cgdgc ,_gbdc :=_eceda .newPdfFieldSignatureFromDict (_gdacb );if _gbdc !=nil {return nil ,_gbdc ;};_cgdgc .PdfField =_dabf ;_dabf ._babcg =_cgdgc ;
default:_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_dabf .FT );return nil ,_ed .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _gabb ,_ggaa :=_bb .GetName (_gdacb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_ggaa {if *_gabb =="\u0057\u0069\u0064\u0067\u0065\u0074"{_dgbde ,_dfge :=_eceda .newPdfAnnotationFromIndirectObject (_acggc );if _dfge !=nil {return nil ,_dfge ;
};_eddc ,_acbc :=_dgbde .GetContext ().(*PdfAnnotationWidget );if !_acbc {return nil ,_ed .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_eddc ._dbef =_dabf ;_eddc .Parent =_dabf ._afbea ;
_dabf .Annotations =append (_dabf .Annotations ,_eddc );return _dabf ,nil ;};};_abad :=true ;if _feea ,_fecdg :=_bb .GetArray (_gdacb .Get ("\u004b\u0069\u0064\u0073"));_fecdg {_abbd :=make ([]*_bb .PdfIndirectObject ,0,_feea .Len ());for _ ,_fbfc :=range _feea .Elements (){_geefe ,_gcec :=_bb .GetIndirect (_fbfc );
if !_gcec {_cbba ,_eaae :=_bb .GetStream (_fbfc );if _eaae &&_cbba .PdfObjectDictionary !=nil {_baga ,_dbceg :=_bb .GetNameVal (_cbba .Get ("\u0054\u0079\u0070\u0065"));if _dbceg &&_baga =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_gg .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ed .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_fgdf ,_fbacb :=_bb .GetDict (_geefe );
if !_fbacb {return nil ,ErrTypeCheck ;};if _abad {_abad =!_dgdaa (_fgdf );};_abbd =append (_abbd ,_geefe );};for _ ,_afgc :=range _abbd {if _abad {_abef ,_gbbd :=_eceda .newPdfAnnotationFromIndirectObject (_afgc );if _gbbd !=nil {_gg .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gbbd );
return nil ,_gbbd ;};_egdc ,_acfd :=_abef ._ff .(*PdfAnnotationWidget );if !_acfd {return nil ,ErrTypeCheck ;};_egdc ._dbef =_dabf ;_dabf .Annotations =append (_dabf .Annotations ,_egdc );}else {_feg ,_feba :=_eceda .newPdfFieldFromIndirectObject (_afgc ,_dabf );
if _feba !=nil {_gg .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_feba );return nil ,_feba ;};_dabf .Kids =append (_dabf .Kids ,_feg );
};};};return _dabf ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_eed *PdfAnnotation )GetContext ()PdfModel {if _eed ==nil {return nil ;};return _eed ._ff ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_faadb *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _faadb .flattenFieldsWithOpts (allannots ,appgen ,nil );};func (_ceabc *LTV )validateSig (_abcag *PdfSignature )error {if _abcag ==nil ||_abcag .Contents ==nil ||len (_abcag .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_abcag );
};return nil ;};func (_cccf *pdfFontSimple )getFontEncoding ()(_ddcda string ,_aabea map[_ga .CharCode ]_ga .GlyphName ,_dgcb error ){_ddcda ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _eeeb ,_bacef :=_bfce [_cccf ._gdaeed ];
_bacef {_ddcda =_eeeb ;}else if _cccf .fontFlags ()&_gebb !=0{for _aedd ,_feede :=range _bfce {if _dce .Contains (_cccf ._gdaeed ,_aedd ){_ddcda =_feede ;break ;};};};if _cccf .Encoding ==nil {return _ddcda ,nil ,nil ;};switch _cggag :=_cccf .Encoding .(type ){case *_bb .PdfObjectName :return string (*_cggag ),nil ,nil ;
case *_bb .PdfObjectDictionary :_fffcc ,_cbea :=_bb .GetName (_cggag .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cbea {_ddcda =_fffcc .String ();};if _bfdc :=_cggag .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_bfdc !=nil {_aadda ,_efdfb :=_bb .GetArray (_bfdc );if !_efdfb {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_cggag ,_cggag .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bb .ErrTypeError ;};_aabea ,_dgcb =_ga .FromFontDifferences (_aadda );};return _ddcda ,_aabea ,_dgcb ;default:_gg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_cccf .Encoding ,_cccf .Encoding );
return "",nil ,_bb .ErrTypeError ;};};

// AddWatermarkImage adds a watermark to the page.
func (_geefc *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_edbdc ,_cdca :=_geefc .GetMediaBox ();if _cdca !=nil {return _cdca ;};_aeabd :=_edbdc .Urx -_edbdc .Llx ;_bbgcd :=_edbdc .Ury -_edbdc .Lly ;_agefe :=float64 (*ximg .Width );
_cafa :=(_aeabd -_agefe )/2;if opt .FitToWidth {_agefe =_aeabd ;_cafa =0;};_adebb :=_bbgcd ;_fccfg :=float64 (0);if opt .PreserveAspectRatio {_adebb =_agefe *float64 (*ximg .Height )/float64 (*ximg .Width );_fccfg =(_bbgcd -_adebb )/2;};if _geefc .Resources ==nil {_geefc .Resources =NewPdfPageResources ();
};_bbegae :=0;_bdgfg :=_bb .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_bbegae ));for _geefc .Resources .HasXObjectByName (_bdgfg ){_bbegae ++;_bdgfg =_bb .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_bbegae ));};_cdca =_geefc .AddImageResource (_bdgfg ,ximg );
if _cdca !=nil {return _cdca ;};_bbegae =0;_gbdff :=_bb .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_bbegae ));for _geefc .HasExtGState (_gbdff ){_bbegae ++;_gbdff =_bb .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_bbegae ));};_aafc :=_bb .MakeDict ();
_aafc .Set ("\u0042\u004d",_bb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_aafc .Set ("\u0043\u0041",_bb .MakeFloat (opt .Alpha ));_aafc .Set ("\u0063\u0061",_bb .MakeFloat (opt .Alpha ));_cdca =_geefc .AddExtGState (_gbdff ,_aafc );if _cdca !=nil {return _cdca ;
};_ddec :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_gbdff ,_agefe ,_adebb ,_cafa ,_fccfg ,_bdgfg );
_geefc .AddContentStreamByString (_ddec );return nil ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_dfba *PdfAppender )SetDocInfo (info *PdfInfo ){_dfba ._dbbg =info };

// SetName sets the `Name` field of the signature.
func (_gdfed *PdfSignature )SetName (name string ){_gdfed .Name =_bb .MakeEncodedString (name ,true )};func (_fcaa *PdfWriter )optimize ()error {if _fcaa ._baafb ==nil {return nil ;};var _fbgcd error ;_fcaa ._cgfff ,_fbgcd =_fcaa ._baafb .Optimize (_fcaa ._cgfff );
if _fbgcd !=nil {return _fbgcd ;};_eacgc :=make (map[_bb .PdfObject ]struct{},len (_fcaa ._cgfff ));for _ ,_agbca :=range _fcaa ._cgfff {_eacgc [_agbca ]=struct{}{};};_fcaa ._bfdb =_eacgc ;return nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bb .PdfObjectArray ;TI *_bb .PdfObjectInteger ;I *_bb .PdfObjectArray ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_abeb *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_abeb .HiVal )};};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cccb pdfCIDFontType2 )GetCharMetrics (code _ga .CharCode )(_dcg .CharMetrics ,bool ){if _bfbb ,_gbbaf :=_cccb ._fdedf [code ];_gbbaf {return _dcg .CharMetrics {Wx :_bfbb },true ;};_dgeg :=rune (code );_bdefd ,_adfc :=_cccb ._cgee [_dgeg ];if !_adfc {_bdefd =int (_cccb ._ddda );
};return _dcg .CharMetrics {Wx :float64 (_bdefd )},true ;};func (_ggae *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _ggae ._eadda };

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_aadcb *PdfReader )GetNameDictionary ()(_bb .PdfObject ,error ){_bgfca :=_bb .ResolveReference (_aadcb ._effcg .Get ("\u004e\u0061\u006de\u0073"));if _bgfca ==nil {return nil ,nil ;};if !_aadcb ._becge {_fcbcg :=_aadcb .traverseObjectData (_bgfca );
if _fcbcg !=nil {return nil ,_fcbcg ;};};return _bgfca ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_dfdb *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_gdcb :=func (_fcdd float64 )float64 {if _fcdd >=6.0/29{return _fcdd *_fcdd *_fcdd ;};return 108.0/841*(_fcdd -4.0/29.0);};_dafe :=img ._dafdc ;if len (_dafe )!=6{_gg .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_dafe =_dfdb .DecodeArray ();};_geec :=_bf .NewReader (img .getBase ());_bgfbd :=_gdf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._cebdb ,img ._dafdc );_aaggg :=_bf .NewWriter (_bgfbd );_aead :=_bdd .Pow (2,float64 (img .BitsPerComponent ))-1;
_bebba :=make ([]uint32 ,3);var (_feed error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ccgc ,_afgaa ,_edaf float64 ;);for {_feed =_geec .ReadSamples (_bebba );if _feed ==_ecb .EOF {break ;}else if _feed !=nil {return img ,_feed ;};Ls =float64 (_bebba [0])/_aead ;
As =float64 (_bebba [1])/_aead ;Bs =float64 (_bebba [2])/_aead ;Ls =_gdf .LinearInterpolate (Ls ,0.0,1.0,_dafe [0],_dafe [1]);As =_gdf .LinearInterpolate (As ,0.0,1.0,_dafe [2],_dafe [3]);Bs =_gdf .LinearInterpolate (Bs ,0.0,1.0,_dafe [4],_dafe [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_dfdb .WhitePoint [0]*_gdcb (L );Y =_dfdb .WhitePoint [1]*_gdcb (M );Z =_dfdb .WhitePoint [2]*_gdcb (N );_ccgc =3.240479*X +-1.537150*Y +-0.498535*Z ;_afgaa =-0.969256*X +1.875992*Y +0.041556*Z ;_edaf =0.055648*X +-0.204043*Y +1.057311*Z ;
_ccgc =_bdd .Min (_bdd .Max (_ccgc ,0),1.0);_afgaa =_bdd .Min (_bdd .Max (_afgaa ,0),1.0);_edaf =_bdd .Min (_bdd .Max (_edaf ,0),1.0);_bebba [0]=uint32 (_ccgc *_aead );_bebba [1]=uint32 (_afgaa *_aead );_bebba [2]=uint32 (_edaf *_aead );if _feed =_aaggg .WriteSamples (_bebba );
_feed !=nil {return img ,_feed ;};};return _dffda (&_bgfbd ),nil ;};func _ggbe (_eccc _bb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gaac :=&PdfColorspaceDeviceNAttributes {};var _caea *_bb .PdfObjectDictionary ;switch _fgde :=_eccc .(type ){case *_bb .PdfIndirectObject :_gaac ._cgfab =_fgde ;
var _gegga bool ;_caea ,_gegga =_fgde .PdfObject .(*_bb .PdfObjectDictionary );if !_gegga {_gg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bb .PdfObjectDictionary :_caea =_fgde ;case *_bb .PdfObjectReference :_ceaf :=_fgde .Resolve ();return _ggbe (_ceaf );default:_gg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbce :=_caea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bbce !=nil {_daac ,_bbbc :=_bb .TraceToDirectObject (_bbce ).(*_bb .PdfObjectName );if !_bbbc {_gg .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gaac .Subtype =_daac ;};if _abgcf :=_caea .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_abgcf !=nil {_gaac .Colorants =_abgcf ;};if _dddc :=_caea .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_dddc !=nil {_gaac .Process =_dddc ;};if _fecd :=_caea .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_fecd !=nil {_gaac .MixingHints =_fecd ;};return _gaac ,nil ;};func _ebac (_cgdea _bb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fdafe :=NewPdfColorspaceSpecialSeparation ();
if _gagb ,_gbeg :=_cgdea .(*_bb .PdfIndirectObject );_gbeg {_fdafe ._ggcgb =_gagb ;};_cgdea =_bb .TraceToDirectObject (_cgdea );_ccfga ,_cbda :=_cgdea .(*_bb .PdfObjectArray );if !_cbda {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _ccfga .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_cgdea =_ccfga .Get (0);
_abdg ,_cbda :=_cgdea .(*_bb .PdfObjectName );if !_cbda {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_abdg !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_cgdea =_ccfga .Get (1);_abdg ,_cbda =_cgdea .(*_bb .PdfObjectName );if !_cbda {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_fdafe .ColorantName =_abdg ;_cgdea =_ccfga .Get (2);_cfge ,_addgda :=NewPdfColorspaceFromPdfObject (_cgdea );if _addgda !=nil {return nil ,_addgda ;};_fdafe .AlternateSpace =_cfge ;_fded ,_addgda :=_gbcd (_ccfga .Get (3));if _addgda !=nil {return nil ,_addgda ;
};_fdafe .TintTransform =_fded ;return _fdafe ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_bbbd *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _bbbd .Alternate ==nil {_gg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _bbbd .N ==1{_gg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_gaed :=NewPdfColorspaceDeviceGray ();return _gaed .ImageToRGB (img );}else if _bbbd .N ==3{_gg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _bbbd .N ==4{_gg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bdafe :=NewPdfColorspaceDeviceCMYK ();return _bdafe .ImageToRGB (img );}else {return img ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bbbd );
_abffg ,_deaf :=_bbbd .Alternate .ImageToRGB (img );_gg .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_gg .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_abffg );
return _abffg ,_deaf ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_bdbg *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ed .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_bdbg .S =subtype ;return nil ;};

// HasExtGState checks if ExtGState name is available.
func (_dcad *PdfPage )HasExtGState (name _bb .PdfObjectName )bool {if _dcad .Resources ==nil {return false ;};if _dcad .Resources .ExtGState ==nil {return false ;};_cdcgd ,_geace :=_bb .TraceToDirectObject (_dcad .Resources .ExtGState ).(*_bb .PdfObjectDictionary );
if !_geace {_gg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bb .TraceToDirectObject (_dcad .Resources .ExtGState ));
return false ;};_fefce :=_cdcgd .Get (name );_cbccb :=_fefce !=nil ;return _cbccb ;};

// AllFields returns a flattened list of all fields in the form.
func (_acded *PdfAcroForm )AllFields ()[]*PdfField {if _acded ==nil {return nil ;};var _gffb []*PdfField ;if _acded .Fields !=nil {for _ ,_cffe :=range *_acded .Fields {_gffb =append (_gffb ,_bbfae (_cffe )...);};};return _gffb ;};

// ToPdfObject implements interface PdfModel.
func (_acgg *PdfAnnotationUnderline )ToPdfObject ()_bb .PdfObject {_acgg .PdfAnnotation .ToPdfObject ();_gegg :=_acgg ._aaf ;_ffd :=_gegg .PdfObject .(*_bb .PdfObjectDictionary );_acgg .PdfAnnotationMarkup .appendToPdfDictionary (_ffd );_ffd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ffd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_acgg .QuadPoints );return _gegg ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cdd :=NewPdfAnnotation ();_bde :=&PdfAnnotationProjection {};_bde .PdfAnnotation =_cdd ;_bde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdd .SetContext (_bde );return _bde ;};var _aaeab =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};
func _bggee (_gdag _bb .PdfObject )(*PdfColorspaceDeviceN ,error ){_ccdde :=NewPdfColorspaceDeviceN ();if _egeg ,_dec :=_gdag .(*_bb .PdfIndirectObject );_dec {_ccdde ._cbgf =_egeg ;};_gdag =_bb .TraceToDirectObject (_gdag );_ecbce ,_afdg :=_gdag .(*_bb .PdfObjectArray );
if !_afdg {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _ecbce .Len ()!=4&&_ecbce .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_gdag =_ecbce .Get (0);_becf ,_afdg :=_gdag .(*_bb .PdfObjectName );if !_afdg {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_becf !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_gdag =_ecbce .Get (1);
_gdag =_bb .TraceToDirectObject (_gdag );_bebag ,_afdg :=_gdag .(*_bb .PdfObjectArray );if !_afdg {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_ccdde .ColorantNames =_bebag ;_gdag =_ecbce .Get (2);_ebba ,_fgaa :=NewPdfColorspaceFromPdfObject (_gdag );if _fgaa !=nil {return nil ,_fgaa ;};_ccdde .AlternateSpace =_ebba ;_cafg ,_fgaa :=_gbcd (_ecbce .Get (3));if _fgaa !=nil {return nil ,_fgaa ;
};_ccdde .TintTransform =_cafg ;if _ecbce .Len ()==5{_cbdd ,_ecgb :=_ggbe (_ecbce .Get (4));if _ecgb !=nil {return nil ,_ecgb ;};_ccdde .Attributes =_cbdd ;};return _ccdde ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fdac *PdfAnnotationInk )ToPdfObject ()_bb .PdfObject {_fdac .PdfAnnotation .ToPdfObject ();_fage :=_fdac ._aaf ;_bccg :=_fage .PdfObject .(*_bb .PdfObjectDictionary );_fdac .PdfAnnotationMarkup .appendToPdfDictionary (_bccg );_bccg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0049\u006e\u006b"));
_bccg .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fdac .InkList );_bccg .SetIfNotNil ("\u0042\u0053",_fdac .BS );return _fage ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_bega :=NewPdfAnnotation ();_fff :=&PdfAnnotationPrinterMark {};_fff .PdfAnnotation =_bega ;_bega .SetContext (_fff );return _fff ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_gaad :=PdfColorCalRGB {a ,b ,c };return &_gaad ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_gbdbb .Lock ();defer _gbdbb .Unlock ();_ebcaf =producer };

// GetDescent returns the Descent of the font `descriptor`.
func (_bcee *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bb .GetNumberAsFloat (_bcee .Descent );};

// SetContext sets the sub annotation (context).
func (_bab *PdfAnnotation )SetContext (ctx PdfModel ){_bab ._ff =ctx };

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_gcfbe :=&PdfAppender {_eaff :reader ._bfcab ,Reader :reader ,_gdga :reader ._cfaef ,_eaag :reader ._ddafg };_fab ,_gggb :=_gcfbe ._eaff .Seek (0,_ecb .SeekEnd );
if _gggb !=nil {return nil ,_gggb ;};_gcfbe ._dfeb =_fab ;if _ ,_gggb =_gcfbe ._eaff .Seek (0,_ecb .SeekStart );_gggb !=nil {return nil ,_gggb ;};_gcfbe ._aadf ,_gggb =NewPdfReaderWithOpts (_gcfbe ._eaff ,opts );if _gggb !=nil {return nil ,_gggb ;};for _ ,_fefc :=range _gcfbe .Reader .GetObjectNums (){if _gcfbe ._gadbe < _fefc {_gcfbe ._gadbe =_fefc ;
};};_gcfbe ._aadd =_gcfbe ._gdga .GetXrefTable ();_gcfbe ._ccge =_gcfbe ._gdga .GetXrefOffset ();_gcfbe ._baef =append (_gcfbe ._baef ,_gcfbe ._aadf .PageList ...);_gcfbe ._bgbge =make (map[_bb .PdfObject ]struct{});_gcfbe ._gecf =make (map[_bb .PdfObject ]int64 );
_gcfbe ._cfbbc =make (map[_bb .PdfObject ]struct{});_gcfbe ._gbfg =_gcfbe ._aadf .AcroForm ;_gcfbe ._gdgc =_gcfbe ._aadf .DSS ;if opts !=nil {_gcfbe ._fcgd =opts .Password ;};if encryptOptions !=nil {_gcfbe ._beff =encryptOptions ;};return _gcfbe ,nil ;
};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_ddgg *PdfColorspaceCalGray )ToPdfObject ()_bb .PdfObject {_fcbf :=&_bb .PdfObjectArray {};_fcbf .Append (_bb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_ddba :=_bb .MakeDict ();if _ddgg .WhitePoint !=nil {_ddba .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bb .MakeArray (_bb .MakeFloat (_ddgg .WhitePoint [0]),_bb .MakeFloat (_ddgg .WhitePoint [1]),_bb .MakeFloat (_ddgg .WhitePoint [2])));
}else {_gg .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _ddgg .BlackPoint !=nil {_ddba .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bb .MakeArray (_bb .MakeFloat (_ddgg .BlackPoint [0]),_bb .MakeFloat (_ddgg .BlackPoint [1]),_bb .MakeFloat (_ddgg .BlackPoint [2])));
};_ddba .Set ("\u0047\u0061\u006dm\u0061",_bb .MakeFloat (_ddgg .Gamma ));_fcbf .Append (_ddba );if _ddgg ._aggb !=nil {_ddgg ._aggb .PdfObject =_fcbf ;return _ddgg ._aggb ;};return _fcbf ;};func (_ccad *PdfReader )newPdfAnnotationLinkFromDict (_gef *_bb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_geged :=PdfAnnotationLink {};
_geged .A =_gef .Get ("\u0041");_geged .Dest =_gef .Get ("\u0044\u0065\u0073\u0074");_geged .H =_gef .Get ("\u0048");_geged .PA =_gef .Get ("\u0050\u0041");_geged .QuadPoints =_gef .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_geged .BS =_gef .Get ("\u0042\u0053");
return &_geged ,nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bb .PdfObject )(_bb .PdfObjectName ,error ){var _cbbf *_bb .PdfObjectName ;var _fbdf *_bb .PdfObjectArray ;if _agd ,_egdg :=obj .(*_bb .PdfIndirectObject );_egdg {if _caeb ,_edgb :=_agd .PdfObject .(*_bb .PdfObjectArray );
_edgb {_fbdf =_caeb ;}else if _aeafa ,_cgdc :=_agd .PdfObject .(*_bb .PdfObjectName );_cgdc {_cbbf =_aeafa ;};}else if _aebc ,_agea :=obj .(*_bb .PdfObjectArray );_agea {_fbdf =_aebc ;}else if _ffgd ,_ffe :=obj .(*_bb .PdfObjectName );_ffe {_cbbf =_ffgd ;
};if _cbbf !=nil {switch *_cbbf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_cbbf ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_cbbf ,nil ;
};};if _fbdf !=nil &&_fbdf .Len ()> 0{if _abaf ,_ebcd :=_fbdf .Get (0).(*_bb .PdfObjectName );_ebcd {switch *_abaf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fbdf .Len ()==1{return *_abaf ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_abaf ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_abaf ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_abaf ,nil ;};};};return "",nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_begc *_bb .PdfObjectDictionary ;_eaga *_bb .PdfIndirectObject ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_eeee *PdfFieldText )ToPdfObject ()_bb .PdfObject {_eeee .PdfField .ToPdfObject ();_ecef :=_eeee ._afbea ;_agef :=_ecef .PdfObject .(*_bb .PdfObjectDictionary );_agef .Set ("\u0046\u0054",_bb .MakeName ("\u0054\u0078"));if _eeee .DA !=nil {_agef .Set ("\u0044\u0041",_eeee .DA );
};if _eeee .Q !=nil {_agef .Set ("\u0051",_eeee .Q );};if _eeee .DS !=nil {_agef .Set ("\u0044\u0053",_eeee .DS );};if _eeee .RV !=nil {_agef .Set ("\u0052\u0056",_eeee .RV );};if _eeee .MaxLen !=nil {_agef .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_eeee .MaxLen );
};return _ecef ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_bbba *PdfFont )BytesToCharcodes (data []byte )[]_ga .CharCode {_gg .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _ggdcb ,_cdff :=_bbba ._gbagg .(*pdfFontType0 );_cdff &&_ggdcb ._dcfda !=nil {if _gcb ,_adgfb :=_ggdcb .bytesToCharcodes (data );_adgfb {return _gcb ;};};var (_cbeb =make ([]_ga .CharCode ,0,len (data )+len (data )%2);_gddgf =_bbba .baseFields (););
if _gddgf ._beee !=nil {if _fefcc ,_gdbbe :=_gddgf ._beee .BytesToCharcodes (data );_gdbbe {for _ ,_bcddcf :=range _fefcc {_cbeb =append (_cbeb ,_ga .CharCode (_bcddcf ));};return _cbeb ;};};if _gddgf .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _aedg :=0;_aedg < len (data );_aedg +=2{_cegg :=uint16 (data [_aedg ])<<8|uint16 (data [_aedg +1]);_cbeb =append (_cbeb ,_ga .CharCode (_cegg ));};}else {for _ ,_dagf :=range data {_cbeb =append (_cbeb ,_ga .CharCode (_dagf ));
};};return _cbeb ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bb .PdfObject ;NewWindow _bb .PdfObject ;T _bb .PdfObject ;};

// WriteToFile writes the output PDF to file.
func (_aggc *PdfWriter )WriteToFile (outputFilePath string )error {_cdegc ,_bbfbf :=_be .Create (outputFilePath );if _bbfbf !=nil {return _bbfbf ;};defer _cdegc .Close ();return _aggc .Write (_cdegc );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_agdde *PdfOutlineItem )GetContainingPdfObject ()_bb .PdfObject {return _agdde ._bbcf };

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_edbdb :=&PdfShadingPatternType2 {};_edbdb .Matrix =_bb .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_edbdb .PdfPattern =&PdfPattern {};_edbdb .PdfPattern .PatternType =int64 (*_bb .MakeInteger (2));
_edbdb .PdfPattern ._aafef =_edbdb ;_edbdb .PdfPattern ._aeff =_bb .MakeIndirectObject (_bb .MakeDict ());return _edbdb ;};func _aeec ()string {_cdcd :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _eefd _aa .Buffer ;for _gbba :=0;_gbba < 6;_gbba ++{_eefd .WriteRune (rune (_cdcd [_cf .Intn (len (_cdcd ))]));};return _eefd .String ();};func (_ebe *PdfAnnotation )String ()string {_aaed :="";_gbc ,_gged :=_ebe .ToPdfObject ().(*_bb .PdfIndirectObject );
if _gged {_aaed =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ebe ._ff ,_gbc .PdfObject .String ());};return _aaed ;};

// ToPdfObject implements interface PdfModel.
func (_afcd *PdfAnnotationScreen )ToPdfObject ()_bb .PdfObject {_afcd .PdfAnnotation .ToPdfObject ();_cecb :=_afcd ._aaf ;_gdfaf :=_cecb .PdfObject .(*_bb .PdfObjectDictionary );_gdfaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_gdfaf .SetIfNotNil ("\u0054",_afcd .T );_gdfaf .SetIfNotNil ("\u004d\u004b",_afcd .MK );_gdfaf .SetIfNotNil ("\u0041",_afcd .A );_gdfaf .SetIfNotNil ("\u0041\u0041",_afcd .AA );return _cecb ;};

// GetContainingPdfObject implements interface PdfModel.
func (_eedcaf *PdfSignatureReference )GetContainingPdfObject ()_bb .PdfObject {return _eedcaf ._fbfcb };

// GetXObjectByName gets XObject by name.
func (_ebcc *PdfPage )GetXObjectByName (name _bb .PdfObjectName )(_bb .PdfObject ,bool ){_begba ,_fdgda :=_ebcc .Resources .XObject .(*_bb .PdfObjectDictionary );if !_fdgda {return nil ,false ;};if _adfdc :=_begba .Get (name );_adfdc !=nil {return _adfdc ,true ;
};return nil ,false ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_bcega *Image )GetSamples ()[]uint32 {_aefbb :=_bf .ResampleBytes (_bcega .Data ,int (_bcega .BitsPerComponent ));if _bcega .BitsPerComponent < 8{_aefbb =_bcega .samplesTrimPadding (_aefbb );};_eecfc :=int (_bcega .Width )*int (_bcega .Height )*_bcega .ColorComponents ;
if len (_aefbb )< _eecfc {_gg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_aefbb ),_eecfc );
return _aefbb ;}else if len (_aefbb )> _eecfc {_gg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_aefbb ),_eecfc );
_aefbb =_aefbb [:_eecfc ];};return _aefbb ;};

// ToPdfObject implements interface PdfModel.
func (_cbge *PdfActionHide )ToPdfObject ()_bb .PdfObject {_cbge .PdfAction .ToPdfObject ();_gae :=_cbge ._dcc ;_bfb :=_gae .PdfObject .(*_bb .PdfObjectDictionary );_bfb .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeHide )));_bfb .SetIfNotNil ("\u0054",_cbge .T );
_bfb .SetIfNotNil ("\u0048",_cbge .H );return _gae ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bb .PdfObject ;H _bb .PdfObject ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _fb .Time ){_gbdbb .Lock ();defer _gbdbb .Unlock ();_gfbee =creationDate ;};

// GetNumComponents returns the number of color components.
func (_fbfaa *PdfColorspaceICCBased )GetNumComponents ()int {return _fbfaa .N };

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_fga :=NewPdfAction ();_afb :=&PdfActionNamed {};_afb .PdfAction =_fga ;_fga .SetContext (_afb );return _afb ;};func _agec (_cbgc *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_cbgc }};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};func (_agbfgf *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bb .PdfObject )(*PdfFilespec ,error ){_ebab :=&PdfFilespec {};var _bbfg *_bb .PdfObjectDictionary ;if _dgdcg ,_bgcae :=_bb .GetIndirect (obj );_bgcae {_ebab ._eggff =_dgdcg ;_eeeg ,_bcgef :=_bb .GetDict (_dgdcg .PdfObject );
if !_bcgef {_gg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bb .ErrTypeError ;};_bbfg =_eeeg ;}else if _ggbd ,_gafac :=_bb .GetDict (obj );
_gafac {_ebab ._eggff =_ggbd ;_bbfg =_ggbd ;}else {_gg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bb .ErrTypeError ;};if _bbfg ==nil {_gg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ed .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ccag :=_bbfg .Get ("\u0054\u0079\u0070\u0065");_ccag !=nil {_gfggg ,_ceda :=_ccag .(*_bb .PdfObjectName );if !_ceda {_gg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ccag );
}else {if *_gfggg !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_gg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_gfggg );
};};};if _bbaa :=_bbfg .Get ("\u0046\u0053");_bbaa !=nil {_ebab .FS =_bbaa ;};if _fdebc :=_bbfg .Get ("\u0046");_fdebc !=nil {_ebab .F =_fdebc ;};if _fcfab :=_bbfg .Get ("\u0055\u0046");_fcfab !=nil {_ebab .UF =_fcfab ;};if _daeg :=_bbfg .Get ("\u0044\u004f\u0053");
_daeg !=nil {_ebab .DOS =_daeg ;};if _geca :=_bbfg .Get ("\u004d\u0061\u0063");_geca !=nil {_ebab .Mac =_geca ;};if _gddac :=_bbfg .Get ("\u0055\u006e\u0069\u0078");_gddac !=nil {_ebab .Unix =_gddac ;};if _ecca :=_bbfg .Get ("\u0049\u0044");_ecca !=nil {_ebab .ID =_ecca ;
};if _agdb :=_bbfg .Get ("\u0056");_agdb !=nil {_ebab .V =_agdb ;};if _bada :=_bbfg .Get ("\u0045\u0046");_bada !=nil {_ebab .EF =_bada ;};if _dbcg :=_bbfg .Get ("\u0052\u0046");_dbcg !=nil {_ebab .RF =_dbcg ;};if _bacg :=_bbfg .Get ("\u0044\u0065\u0073\u0063");
_bacg !=nil {_ebab .Desc =_bacg ;};if _fbbe :=_bbfg .Get ("\u0043\u0049");_fbbe !=nil {_ebab .CI =_fbbe ;};if _ddbaf :=_bbfg .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_ddbaf !=nil {_ebab .AFRelationship =_ddbaf ;
};return _ebab ,nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bb .PdfObject ;FontFamily _bb .PdfObject ;FontStretch _bb .PdfObject ;FontWeight _bb .PdfObject ;Flags _bb .PdfObject ;FontBBox _bb .PdfObject ;ItalicAngle _bb .PdfObject ;Ascent _bb .PdfObject ;Descent _bb .PdfObject ;
Leading _bb .PdfObject ;CapHeight _bb .PdfObject ;XHeight _bb .PdfObject ;StemV _bb .PdfObject ;StemH _bb .PdfObject ;AvgWidth _bb .PdfObject ;MaxWidth _bb .PdfObject ;MissingWidth _bb .PdfObject ;FontFile _bb .PdfObject ;FontFile2 _bb .PdfObject ;FontFile3 _bb .PdfObject ;
CharSet _bb .PdfObject ;_ebgfe int ;_acgcg float64 ;*fontFile ;_cgbaa *_dcg .TtfType ;

// Additional entries for CIDFonts
Style _bb .PdfObject ;Lang _bb .PdfObject ;FD _bb .PdfObject ;CIDSet _bb .PdfObject ;_gddge *_bb .PdfIndirectObject ;};func _gcafb (_ggacc _bb .PdfObject )(*PdfFunctionType3 ,error ){_bbcg :=&PdfFunctionType3 {};var _gddbe *_bb .PdfObjectDictionary ;if _ebbc ,_accec :=_ggacc .(*_bb .PdfIndirectObject );
_accec {_ggca ,_bbdbe :=_ebbc .PdfObject .(*_bb .PdfObjectDictionary );if !_bbdbe {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbcg ._bcgb =_ebbc ;_gddbe =_ggca ;}else if _ffdea ,_bgcgf :=_ggacc .(*_bb .PdfObjectDictionary );
_bgcgf {_gddbe =_ffdea ;}else {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edgd ,_gacced :=_bb .TraceToDirectObject (_gddbe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bb .PdfObjectArray );
if !_gacced {_gg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _edgd .Len ()!=2{_gg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_edeed ,_cgeaa :=_edgd .ToFloat64Array ();
if _cgeaa !=nil {return nil ,_cgeaa ;};_bbcg .Domain =_edeed ;_edgd ,_gacced =_bb .TraceToDirectObject (_gddbe .Get ("\u0052\u0061\u006eg\u0065")).(*_bb .PdfObjectArray );if _gacced {if _edgd .Len ()< 0||_edgd .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bgga ,_bbfd :=_edgd .ToFloat64Array ();if _bbfd !=nil {return nil ,_bbfd ;};_bbcg .Range =_bgga ;};_edgd ,_gacced =_bb .TraceToDirectObject (_gddbe .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bb .PdfObjectArray );if !_gacced {_gg .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bbcg .Functions =[]PdfFunction {};
for _ ,_bfcdb :=range _edgd .Elements (){_cgcdd ,_fcdae :=_gbcd (_bfcdb );if _fcdae !=nil {return nil ,_fcdae ;};_bbcg .Functions =append (_bbcg .Functions ,_cgcdd );};_edgd ,_gacced =_bb .TraceToDirectObject (_gddbe .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bb .PdfObjectArray );
if !_gacced {_gg .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_badg ,_cgeaa :=_edgd .ToFloat64Array ();if _cgeaa !=nil {return nil ,_cgeaa ;};_bbcg .Bounds =_badg ;if len (_bbcg .Bounds )!=len (_bbcg .Functions )-1{_gg .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_bbcg .Bounds ),len (_bbcg .Functions ));
return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edgd ,_gacced =_bb .TraceToDirectObject (_gddbe .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bb .PdfObjectArray );if !_gacced {_gg .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dgab ,_cgeaa :=_edgd .ToFloat64Array ();
if _cgeaa !=nil {return nil ,_cgeaa ;};_bbcg .Encode =_dgab ;if len (_bbcg .Encode )!=2*len (_bbcg .Functions ){_gg .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_bbcg .Encode ),len (_bbcg .Functions ));
return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _bbcg ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_cfbae :=NewPdfAnnotation ();_bgfg :=&PdfAnnotationFileAttachment {};_bgfg .PdfAnnotation =_cfbae ;_bgfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfbae .SetContext (_bgfg );return _bgfg ;
};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_bcff *_bb .PdfIndirectObject ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_ggdcbd :=PdfPage {};_ggdcbd ._deab =_bb .MakeDict ();_ggdcbd .Resources =NewPdfPageResources ();_dage :=_bb .PdfIndirectObject {};_dage .PdfObject =_ggdcbd ._deab ;_ggdcbd ._beaf =&_dage ;_ggdcbd ._eegfb =*_ggdcbd ._deab ;return &_ggdcbd ;
};

// AddCustomInfo adds a custom info into document info dictionary.
func (_gggbd *PdfInfo )AddCustomInfo (name string ,value string )error {if _gggbd ._bege ==nil {_gggbd ._bege =_bb .MakeDict ();};if _ ,_gfgdd :=_fbdfa [name ];_gfgdd {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_gggbd ._bege .SetIfNotNil (*_bb .MakeName (name ),_bb .MakeString (value ));return nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ddcd *PdfFontDescriptor )ToPdfObject ()_bb .PdfObject {_cfffd :=_bb .MakeDict ();if _ddcd ._gddge ==nil {_ddcd ._gddge =&_bb .PdfIndirectObject {};};_ddcd ._gddge .PdfObject =_cfffd ;_cfffd .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _ddcd .FontName !=nil {_cfffd .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ddcd .FontName );};if _ddcd .FontFamily !=nil {_cfffd .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ddcd .FontFamily );};if _ddcd .FontStretch !=nil {_cfffd .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ddcd .FontStretch );
};if _ddcd .FontWeight !=nil {_cfffd .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ddcd .FontWeight );};if _ddcd .Flags !=nil {_cfffd .Set ("\u0046\u006c\u0061g\u0073",_ddcd .Flags );};if _ddcd .FontBBox !=nil {_cfffd .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ddcd .FontBBox );
};if _ddcd .ItalicAngle !=nil {_cfffd .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ddcd .ItalicAngle );};if _ddcd .Ascent !=nil {_cfffd .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ddcd .Ascent );};if _ddcd .Descent !=nil {_cfffd .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ddcd .Descent );
};if _ddcd .Leading !=nil {_cfffd .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ddcd .Leading );};if _ddcd .CapHeight !=nil {_cfffd .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ddcd .CapHeight );};if _ddcd .XHeight !=nil {_cfffd .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ddcd .XHeight );
};if _ddcd .StemV !=nil {_cfffd .Set ("\u0053\u0074\u0065m\u0056",_ddcd .StemV );};if _ddcd .StemH !=nil {_cfffd .Set ("\u0053\u0074\u0065m\u0048",_ddcd .StemH );};if _ddcd .AvgWidth !=nil {_cfffd .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ddcd .AvgWidth );
};if _ddcd .MaxWidth !=nil {_cfffd .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ddcd .MaxWidth );};if _ddcd .MissingWidth !=nil {_cfffd .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ddcd .MissingWidth );};if _ddcd .FontFile !=nil {_cfffd .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ddcd .FontFile );
};if _ddcd .FontFile2 !=nil {_cfffd .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ddcd .FontFile2 );};if _ddcd .FontFile3 !=nil {_cfffd .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ddcd .FontFile3 );};if _ddcd .CharSet !=nil {_cfffd .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ddcd .CharSet );
};if _ddcd .Style !=nil {_cfffd .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ddcd .FontName );};if _ddcd .Lang !=nil {_cfffd .Set ("\u004c\u0061\u006e\u0067",_ddcd .Lang );};if _ddcd .FD !=nil {_cfffd .Set ("\u0046\u0044",_ddcd .FD );};if _ddcd .CIDSet !=nil {_cfffd .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ddcd .CIDSet );
};return _ddcd ._gddge ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bbb *PdfAnnotationWidget )Field ()*PdfField {return _bbb ._dbef };func _faab (_cdfba *_bb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_ebbe :=PdfShadingType7 {};_dgafdb :=_cdfba .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _dgafdb ==nil {_gg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_caaaf ,_cbgfe :=_dgafdb .(*_bb .PdfObjectInteger );if !_cbgfe {_gg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgafdb );
return nil ,_bb .ErrTypeError ;};_ebbe .BitsPerCoordinate =_caaaf ;_dgafdb =_cdfba .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dgafdb ==nil {_gg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_caaaf ,_cbgfe =_dgafdb .(*_bb .PdfObjectInteger );if !_cbgfe {_gg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dgafdb );
return nil ,_bb .ErrTypeError ;};_ebbe .BitsPerComponent =_caaaf ;_dgafdb =_cdfba .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dgafdb ==nil {_gg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_caaaf ,_cbgfe =_dgafdb .(*_bb .PdfObjectInteger );if !_cbgfe {_gg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dgafdb );
return nil ,_bb .ErrTypeError ;};_ebbe .BitsPerComponent =_caaaf ;_dgafdb =_cdfba .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dgafdb ==nil {_gg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fecfd ,_cbgfe :=_dgafdb .(*_bb .PdfObjectArray );if !_cbgfe {_gg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgafdb );
return nil ,_bb .ErrTypeError ;};_ebbe .Decode =_fecfd ;if _fcbad :=_cdfba .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fcbad !=nil {_ebbe .Function =[]PdfFunction {};if _afebd ,_fcefe :=_fcbad .(*_bb .PdfObjectArray );_fcefe {for _ ,_efdaf :=range _afebd .Elements (){_acagf ,_dcggeg :=_gbcd (_efdaf );
if _dcggeg !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcggeg );return nil ,_dcggeg ;};_ebbe .Function =append (_ebbe .Function ,_acagf );
};}else {_ggfbb ,_beaa :=_gbcd (_fcbad );if _beaa !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beaa );return nil ,_beaa ;};
_ebbe .Function =append (_ebbe .Function ,_ggfbb );};};return &_ebbe ,nil ;};

// SetReason sets the `Reason` field of the signature.
func (_aaafb *PdfSignature )SetReason (reason string ){_aaafb .Reason =_bb .MakeEncodedString (reason ,true );};

// GetStandardApplier gets currently used StandardApplier..
func (_gfgdc *PdfWriter )GetStandardApplier ()StandardApplier {return _gfgdc ._ddfcc };

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_ddag :=NewPdfAnnotation ();_dga :=&PdfAnnotationRichMedia {};_dga .PdfAnnotation =_ddag ;_ddag .SetContext (_dga );return _dga ;};

// GetCatalogLanguage gets catalog Language object.
func (_dbeec *PdfReader )GetCatalogLanguage ()(_bb .PdfObject ,bool ){if _dbeec ._effcg ==nil {return nil ,false ;};_ebgd :=_dbeec ._effcg .Get ("\u004c\u0061\u006e\u0067");return _ebgd ,_ebgd !=nil ;};

// ToPdfObject implements interface PdfModel.
func (_cefe *PdfAnnotationWidget )ToPdfObject ()_bb .PdfObject {_cefe .PdfAnnotation .ToPdfObject ();_ecaa :=_cefe ._aaf ;_aedf :=_ecaa .PdfObject .(*_bb .PdfObjectDictionary );if _cefe ._daf {return _ecaa ;};_cefe ._daf =true ;_aedf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_aedf .SetIfNotNil ("\u0048",_cefe .H );_aedf .SetIfNotNil ("\u004d\u004b",_cefe .MK );_aedf .SetIfNotNil ("\u0041",_cefe .A );_aedf .SetIfNotNil ("\u0041\u0041",_cefe .AA );_aedf .SetIfNotNil ("\u0042\u0053",_cefe .BS );_fada :=_cefe .Parent ;if _cefe ._dbef !=nil {if _cefe ._dbef ._afbea ==_cefe ._aaf {_cefe ._dbef .ToPdfObject ();
};_fada =_cefe ._dbef .GetContainingPdfObject ();};if _fada !=_ecaa {_aedf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fada );};_cefe ._daf =false ;return _ecaa ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ga .SimpleEncoder ,error ){_bacd ,_cbgd :=_bacgg (basefont );if _cbgd !=nil {return nil ,nil ,_cbgd ;};_gcdf ,_dfgc :=_bacd .Encoder ().(_ga .SimpleEncoder );
if !_dfgc {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_bacd .Encoder ());
};_aecga :=make (map[rune ]_ga .GlyphName );for _edbab :=range alphabet {if _ ,_cfcad :=_gcdf .RuneToCharcode (_edbab );!_cfcad {_ ,_aefgd :=_bacd ._cbec .Read (_edbab );if !_aefgd {_gg .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_edbab ,_edbab );
continue ;};_cabaa ,_aefgd :=_ga .RuneToGlyph (_edbab );if !_aefgd {_gg .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_edbab ,_edbab );continue ;};if len (_aecga )>=255{return nil ,nil ,_ed .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_aecga [_edbab ]=_cabaa ;};};var (_geffg []_ga .CharCode ;_gcdg []_ga .CharCode ;);for _gagfgc :=_ga .CharCode (1);_gagfgc <=0xff;_gagfgc ++{_dbbgd ,_fddg :=_gcdf .CharcodeToRune (_gagfgc );if !_fddg {_geffg =append (_geffg ,_gagfgc );continue ;};if _ ,_fddg =alphabet [_dbbgd ];
!_fddg {_gcdg =append (_gcdg ,_gagfgc );};};_ccgeg :=append (_geffg ,_gcdg ...);if len (_ccgeg )< len (_aecga ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_aecga ),len (_ccgeg ));
};_ddagd :=make ([]rune ,0,len (_aecga ));for _aaac :=range _aecga {_ddagd =append (_ddagd ,_aaac );};_cc .Slice (_ddagd ,func (_bfgfe ,_eebe int )bool {return _ddagd [_bfgfe ]< _ddagd [_eebe ]});_bbad :=make (map[_ga .CharCode ]_ga .GlyphName ,len (_ddagd ));
for _ ,_eedbg :=range _ddagd {_gcaf :=_ccgeg [0];_ccgeg =_ccgeg [1:];_bbad [_gcaf ]=_aecga [_eedbg ];};_gcdf =_ga .ApplyDifferences (_gcdf ,_bbad );_bacd .SetEncoder (_gcdf );return &PdfFont {_gbagg :&_bacd },_gcdf ,nil ;};

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_bfgdg *PdfWriter )SetCatalogViewerPreferences (pref _bb .PdfObject )error {if pref ==nil {_bfgdg ._ebgdb .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _baebcd ,_bfdcg :=pref .(*_bb .PdfObjectReference );
_bfdcg {pref =_baebcd .Resolve ();if pref ==nil {_bfgdg ._ebgdb .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};_bfgdg .addObject (pref );_bfgdg ._ebgdb .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fed *PdfAnnotationHighlight )ToPdfObject ()_bb .PdfObject {_fed .PdfAnnotation .ToPdfObject ();_beag :=_fed ._aaf ;_cff :=_beag .PdfObject .(*_bb .PdfObjectDictionary );_fed .PdfAnnotationMarkup .appendToPdfDictionary (_cff );_cff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_cff .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fed .QuadPoints );return _beag ;};func (_cdeag *Image )resampleLowBits (_cecf []uint32 ){_ggegd :=_gdf .BytesPerLine (int (_cdeag .Width ),int (_cdeag .BitsPerComponent ),_cdeag .ColorComponents );
_begcb :=make ([]byte ,_cdeag .ColorComponents *_ggegd *int (_cdeag .Height ));_gcdac :=int (_cdeag .BitsPerComponent )*_cdeag .ColorComponents *int (_cdeag .Width );_ffgaf :=uint8 (8);var (_agfef ,_ffec int ;_cddgc uint32 ;);for _dagdc :=0;_dagdc < int (_cdeag .Height );
_dagdc ++{_ffec =_dagdc *_ggegd ;for _fcfef :=0;_fcfef < _gcdac ;_fcfef ++{_cddgc =_cecf [_agfef ];_ffgaf -=uint8 (_cdeag .BitsPerComponent );_begcb [_ffec ]|=byte (_cddgc )<<_ffgaf ;if _ffgaf ==0{_ffgaf =8;_ffec ++;};_agfef ++;};};_cdeag .Data =_begcb ;
};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bb .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _fdeb *_bb .PdfIndirectObject ;var _gdgb *_bb .PdfObjectName ;var _gfdb *_bb .PdfObjectArray ;if _gccc ,_feaa :=obj .(*_bb .PdfIndirectObject );
_feaa {_fdeb =_gccc ;};obj =_bb .TraceToDirectObject (obj );switch _bdfd :=obj .(type ){case *_bb .PdfObjectArray :_gfdb =_bdfd ;case *_bb .PdfObjectName :_gdgb =_bdfd ;};if _gdgb !=nil {switch *_gdgb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_gg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_gdgb );return nil ,_fabfb ;};};if _gfdb !=nil &&_gfdb .Len ()> 0{var _dafda _bb .PdfObject =_fdeb ;
if _fdeb ==nil {_dafda =_gfdb ;};if _gedc ,_addg :=_bb .GetName (_gfdb .Get (0));_addg {switch _gedc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gfdb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gfdb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gfdb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _dggf (_dafda );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _gdbf (_dafda );
case "\u004c\u0061\u0062":return _cagf (_dafda );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _aecg (_dafda );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _eegg (_dafda );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _fffed (_dafda );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _ebac (_dafda );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _bggee (_dafda );default:_gg .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_gedc );
};};};_gg .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_cbag *PdfReader )newPdfActionSoundFromDict (_bfca *_bb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_bfca .Get ("\u0053\u006f\u0075n\u0064"),Volume :_bfca .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_bfca .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_bfca .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_bfca .Get ("\u004d\u0069\u0078")},nil ;
};func _efdga ()*modelManager {_bdcc :=modelManager {};_bdcc ._fdgab =map[PdfModel ]_bb .PdfObject {};_bdcc ._dffg =map[_bb .PdfObject ]PdfModel {};return &_bdcc ;};var _bdfgf =_fc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_debd *PdfFont )GetCharMetrics (code _ga .CharCode )(CharMetrics ,bool ){var _cdfa _dcg .CharMetrics ;switch _edbgg :=_debd ._gbagg .(type ){case *pdfFontSimple :if _edgea ,_cbcf :=_edbgg .GetCharMetrics (code );_cbcf {return _edgea ,_cbcf ;};case *pdfFontType0 :if _cdffa ,_abcgf :=_edbgg .GetCharMetrics (code );
_abcgf {return _cdffa ,_abcgf ;};case *pdfCIDFontType0 :if _eegf ,_bebe :=_edbgg .GetCharMetrics (code );_bebe {return _eegf ,_bebe ;};case *pdfCIDFontType2 :if _dadc ,_fdagb :=_edbgg .GetCharMetrics (code );_fdagb {return _dadc ,_fdagb ;};case *pdfFontType3 :if _gbbgd ,_eggb :=_edbgg .GetCharMetrics (code );
_eggb {return _gbbgd ,_eggb ;};default:_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_debd ._gbagg );
return _cdfa ,false ;};if _gffc ,_gfbc :=_debd .GetFontDescriptor ();_gfbc ==nil &&_gffc !=nil {return _dcg .CharMetrics {Wx :_gffc ._acgcg },true ;};_gg .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_debd );
return _cdfa ,false ;};func _bdbbd (_babcb *_bb .PdfObjectDictionary ,_edab *fontCommon )(*pdfFontType0 ,error ){_afdb ,_cabdd :=_bb .GetArray (_babcb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_cabdd {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_edab );
return nil ,_bb .ErrRangeError ;};if _afdb .Len ()!=1{_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_afdb .Len ());return nil ,_bb .ErrRangeError ;
};_fcbc ,_dacec :=_decd (_afdb .Get (0),false );if _dacec !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_dacec ,_edab );
return nil ,_dacec ;};_bgbfe :=_babcb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_aaddb :="";_bcgg :=_efaeg (_edab );_bcgg .DescendantFont =_fcbc ;switch _eacd :=_bgbfe .(type ){case *_bb .PdfObjectName :_aaddb ,_cabdd =_bb .GetNameVal (_bgbfe );
if _cabdd {if _aaddb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_aaddb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bcgg ._fbfad =_ga .NewIdentityTextEncoder (_aaddb );}else if _af .IsPredefinedCMap (_aaddb ){_bcgg ._dcfda ,_dacec =_af .LoadPredefinedCMap (_aaddb );
if _dacec !=nil {_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_aaddb ,_dacec );
};}else {_gg .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_aaddb );};};case *_bb .PdfObjectStream :if _bcgg ._daab ==nil {_fgfc ,_agae :=_af .NewCIDSystemInfo (_eacd .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _agae !=nil {_gg .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_agae );};_cada :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fgfc .Registry ,_fgfc .Ordering );
if _af .IsPredefinedCMap (_cada ){_bcgg ._dcfda ,_agae =_af .LoadPredefinedCMap (_cada );if _agae !=nil {_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cada ,_agae );
};}else {_cada =_eacd .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_cafdg ,_bcda :=_bb .DecodeStream (_eacd );if _bcda !=nil {_gg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_bcda );
return _bcgg ,_bcda ;};if _eefb :=_cada =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_cada =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_eefb {_bcgg ._dcfda ,_bcda =_af .LoadCmapFromData (_cafdg ,_eefb );
if _bcda !=nil {_gg .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_bcda ,string (_cafdg ));
return _bcgg ,_bcda ;};_bebbfa :=make (map[_af .CharCode ]rune ,256);for _ecga :=0x00;_ecga <=0xFF;_ecga ++{_bebbfa [_af .CharCode (_ecga )]=rune (_ecga );};_bcgg ._beee =_af .NewToUnicodeCMap (_bebbfa );};};};};if _agge :=_fcbc .baseFields ()._beee ;_agge !=nil {if _egdgd :=_agge .Name ();
_egdgd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_egdgd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_egdgd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_egdgd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bcgg ._fbfad =_ga .NewCMapEncoder (_aaddb ,_bcgg ._dcfda ,_agge );
};};return _bcgg ,nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _fb .Time )(PdfDate ,error ){_bdda :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_deafe ,_ :=_fd .ParseInt (_bdda [1:3],10,32);_fageg ,_ :=_fd .ParseInt (_bdda [4:6],10,32);return PdfDate {_cacfc :int64 (timeObj .Year ()),_degfb :int64 (timeObj .Month ()),_gfaa :int64 (timeObj .Day ()),_gdfge :int64 (timeObj .Hour ()),_fbfcae :int64 (timeObj .Minute ()),_ffcg :int64 (timeObj .Second ()),_dbcea :_bdda [0],_gcfcd :_deafe ,_cbgdf :_fageg },nil ;
};

// WriteString outputs the object as it is to be written to file.
func (_adggb *PdfTransformParamsDocMDP )WriteString ()string {return _adggb .ToPdfObject ().WriteString ();};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cbed *PdfColorspaceDeviceCMYK )ToPdfObject ()_bb .PdfObject {return _bb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fbcfe :=&XObjectForm {};_fbgff :=&_bb .PdfObjectStream {};_fbgff .PdfObjectDictionary =_bb .MakeDict ();_fbcfe ._fbabg =_fbgff ;return _fbcfe ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_aggf *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfac :=vals [0];if _gfac < 0.0||_gfac > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gfac );
return nil ,ErrColorOutOfRange ;};_ccfg :=vals [1];if _ccfg < 0.0||_ccfg > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ccfg );return nil ,ErrColorOutOfRange ;
};_agfdc :=vals [2];if _agfdc < 0.0||_agfdc > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_agfdc );return nil ,ErrColorOutOfRange ;};_gfce :=vals [3];
if _gfce < 0.0||_gfce > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gfce );return nil ,ErrColorOutOfRange ;};_cced :=NewPdfColorDeviceCMYK (_gfac ,_ccfg ,_agfdc ,_gfce );
return _cced ,nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_eaff _ecb .ReadSeeker ;_gdga *_bb .PdfParser ;_aadf *PdfReader ;Reader *PdfReader ;_baef []*PdfPage ;_gbfg *PdfAcroForm ;_gdgc *DSS ;_cecbd *Permissions ;_aadd _bb .XrefTable ;_ccge int64 ;_gadbe int ;_ffb []_bb .PdfObject ;_bgbge map[_bb .PdfObject ]struct{};
_gecf map[_bb .PdfObject ]int64 ;_cfbbc map[_bb .PdfObject ]struct{};_eaag map[_bb .PdfObject ]struct{};_dfeb int64 ;_bcea bool ;_fcgd string ;_beff *EncryptOptions ;_dbbg *PdfInfo ;};

// GetContainingPdfObject implements interface PdfModel.
func (_affc *PdfAnnotation )GetContainingPdfObject ()_bb .PdfObject {return _affc ._aaf };func _dgbe (_fgfg *PdfField ,_aeefb _bb .PdfObject ){for _ ,_agbgf :=range _fgfg .Annotations {_agbgf .AS =_aeefb ;_agbgf .ToPdfObject ();};};func (_adfgg *fontFile )parseASCIIPart (_gefd []byte )error {if len (_gefd )< 2||string (_gefd [:2])!="\u0025\u0021"{return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_gffgf ,_eaca ,_eggaa :=_acefg (_gefd );if _eggaa !=nil {return _eggaa ;};_efgb :=_fadf (_gffgf );_adfgg ._aacfg =_efgb ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _adfgg ._aacfg ==""{_gg .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _eaca !=""{_gfgde ,_ggfbg :=_gedb (_eaca );if _ggfbg !=nil {return _ggfbg ;};_gede ,_ggfbg :=_ga .NewCustomSimpleTextEncoder (_gfgde ,nil );if _ggfbg !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_ggfbg );
return nil ;};_adfgg ._abecc =_gede ;};return nil ;};func (_dcgd *PdfReader )newPdfActionJavaScriptFromDict (_abeg *_bb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_abeg .Get ("\u004a\u0053")},nil ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_cefdc *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_efdcdc :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_cccab ,_ffdb :=_cefdc .GetNumPages ();if _ffdb !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffdb );
return nil ,_ffdb ;};for _gdbcd :=1;_gdbcd <=_cccab ;_gdbcd ++{_dccd ,_gbabb :=_cefdc .GetPage (_gdbcd );if _gbabb !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbabb );return nil ,_gbabb ;};if opts .PageProcessCallback !=nil {_gbabb =opts .PageProcessCallback (_gdbcd ,_dccd );
if _gbabb !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbabb );return nil ,_gbabb ;};}else if opts .PageCallback !=nil {opts .PageCallback (_gdbcd ,_dccd );};_gbabb =_efdcdc .AddPage (_dccd );if _gbabb !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbabb );
return nil ,_gbabb ;};};_efdcdc ._gecfd =_cefdc .PdfVersion ();if !opts .SkipInfo {_acadf ,_afgcb :=_cefdc .GetPdfInfo ();if _afgcb !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afgcb );}else {_efdcdc ._gefda .PdfObject =_acadf .ToPdfObject ();
};};if !opts .SkipMetadata {if _cddffa :=_cefdc ._effcg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cddffa !=nil {if _ccddg :=_efdcdc .SetCatalogMetadata (_cddffa );_ccddg !=nil {return nil ,_ccddg ;};};};if !opts .SkipMarkInfo {if _fbade ,_edbff :=_cefdc .GetCatalogMarkInfo ();
_edbff {if _egebb :=_efdcdc .SetCatalogMarkInfo (_fbade );_egebb !=nil {return nil ,_egebb ;};};};if !opts .SkipAcroForm {_fagbf :=_efdcdc .SetForms (_cefdc .AcroForm );if _fagbf !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fagbf );
return nil ,_fagbf ;};};if !opts .SkipViewerPreferences {if _dead ,_ccacb :=_cefdc .GetCatalogViewerPreferences ();_ccacb {if _bebeb :=_efdcdc .SetCatalogViewerPreferences (_dead );_bebeb !=nil {return nil ,_bebeb ;};};};if !opts .SkipLanguage {if _gdcgb ,_cdffaf :=_cefdc .GetCatalogLanguage ();
_cdffaf {if _egfbe :=_efdcdc .SetCatalogLanguage (_gdcgb );_egfbe !=nil {return nil ,_egfbe ;};};};if !opts .SkipOutlines {_efdcdc .AddOutlineTree (_cefdc .GetOutlineTree ());};if !opts .SkipOCProperties {_dedgba ,_bdccd :=_cefdc .GetOCProperties ();if _bdccd !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdccd );
}else {_bdccd =_efdcdc .SetOCProperties (_dedgba );if _bdccd !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdccd );};};};if !opts .SkipPageLabels {_addc ,_geefd :=_cefdc .GetPageLabels ();if _geefd !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_geefd );
}else {_geefd =_efdcdc .SetPageLabels (_addc );if _geefd !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_geefd );};};};if !opts .SkipNamedDests {_eeagbe ,_begd :=_cefdc .GetNamedDestinations ();if _begd !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_begd );
}else {_begd =_efdcdc .SetNamedDestinations (_eeagbe );if _begd !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_begd );};};};if !opts .SkipNameDictionary {_ffcd ,_caged :=_cefdc .GetNameDictionary ();if _caged !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caged );
}else {_caged =_efdcdc .SetNameDictionary (_ffcd );if _caged !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caged );};};};_eafga ,_babdd :=_cefdc .GetCatalogStructTreeRoot ();if _babdd {_bgdb :=_efdcdc .SetCatalogStructTreeRoot (_eafga );
if _bgdb !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgdb );};};if !opts .SkipRotation &&_cefdc .Rotate !=nil {if _edgba :=_efdcdc .SetRotation (*_cefdc .Rotate );_edgba !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edgba );
};};return &_efdcdc ,nil ;};func (_ffaag *PdfReader )newPdfOutlineItemFromIndirectObject (_eccca *_bb .PdfIndirectObject )(*PdfOutlineItem ,error ){_ccecb ,_efcbe :=_eccca .PdfObject .(*_bb .PdfObjectDictionary );if !_efcbe {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eabcc :=NewPdfOutlineItem ();_eeece :=_ccecb .Get ("\u0054\u0069\u0074l\u0065");if _eeece ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_ceaag ,_bdcbc :=_bb .GetString (_eeece );if !_bdcbc {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_eeece );};_eabcc .Title =_ceaag ;if _eebc :=_ccecb .Get ("\u0043\u006f\u0075n\u0074");
_eebc !=nil {_eegb ,_eeeab :=_eebc .(*_bb .PdfObjectInteger );if !_eeeab {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_eebc );};_cfdac :=int64 (*_eegb );
_eabcc .Count =&_cfdac ;};if _abgee :=_ccecb .Get ("\u0044\u0065\u0073\u0074");_abgee !=nil {_eabcc .Dest =_bb .ResolveReference (_abgee );if !_ffaag ._becge {_ebgbe :=_ffaag .traverseObjectData (_eabcc .Dest );if _ebgbe !=nil {return nil ,_ebgbe ;};};
};if _bcefd :=_ccecb .Get ("\u0041");_bcefd !=nil {_eabcc .A =_bb .ResolveReference (_bcefd );if !_ffaag ._becge {_fbeba :=_ffaag .traverseObjectData (_eabcc .A );if _fbeba !=nil {return nil ,_fbeba ;};};};if _edbfa :=_ccecb .Get ("\u0053\u0045");_edbfa !=nil {_eabcc .SE =nil ;
};if _beeae :=_ccecb .Get ("\u0043");_beeae !=nil {_eabcc .C =_bb .ResolveReference (_beeae );};if _acbd :=_ccecb .Get ("\u0046");_acbd !=nil {_eabcc .F =_bb .ResolveReference (_acbd );};return _eabcc ,nil ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_ffff *CompliancePdfReader )error ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;};func _daaef (_ceec _bb .PdfObject )(*_bb .PdfObjectDictionary ,*fontCommon ,error ){_ggcc :=&fontCommon {};if _baeb ,_gfade :=_ceec .(*_bb .PdfIndirectObject );
_gfade {_ggcc ._fffc =_baeb .ObjectNumber ;};_cbdad ,_dbdf :=_bb .GetDict (_ceec );if !_dbdf {_gg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ceec );
return nil ,nil ,ErrFontNotSupported ;};_gbage ,_dbdf :=_bb .GetNameVal (_cbdad .Get ("\u0054\u0079\u0070\u0065"));if !_dbdf {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _gbage !="\u0046\u006f\u006e\u0074"{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gbage ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bb .ErrTypeError ;};_gbdf ,_dbdf :=_bb .GetNameVal (_cbdad .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dbdf {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_ggcc ._ecdc =_gbdf ;_efgae ,_dbdf :=_bb .GetNameVal (_cbdad .Get ("\u004e\u0061\u006d\u0065"));if _dbdf {_ggcc ._ffed =_efgae ;};_dfaf :=_cbdad .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _dfaf !=nil {_ggcc ._daab =_bb .TraceToDirectObject (_dfaf );
_adbc ,_agfae :=_aaegg (_ggcc ._daab ,_ggcc );if _agfae !=nil {return _cbdad ,_ggcc ,_agfae ;};_ggcc ._beee =_adbc ;}else if _gbdf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gbdf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_eegfg ,_fdgc :=_af .NewCIDSystemInfo (_cbdad .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _fdgc !=nil {return _cbdad ,_ggcc ,_fdgc ;};_cdbbc :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_eegfg .Registry ,_eegfg .Ordering );if _af .IsPredefinedCMap (_cdbbc ){_ggcc ._beee ,_fdgc =_af .LoadPredefinedCMap (_cdbbc );
if _fdgc !=nil {_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cdbbc ,_fdgc );
};};};_cdgde :=_cbdad .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _cdgde !=nil {_edegc ,_ggff :=_ccdbd (_cdgde );if _ggff !=nil {_gg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggff );
return _cbdad ,_ggcc ,_ggff ;};_ggcc ._eadda =_edegc ;};if _gbdf !="\u0054\u0079\u0070e\u0033"{_gafb ,_dffcf :=_bb .GetNameVal (_cbdad .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dffcf {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _cbdad ,_ggcc ,ErrRequiredAttributeMissing ;};_ggcc ._gdaeed =_gafb ;};return _cbdad ,_ggcc ,nil ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;IC _bb .PdfObject ;RO _bb .PdfObject ;OverlayText _bb .PdfObject ;Repeat _bb .PdfObject ;DA _bb .PdfObject ;Q _bb .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_acgf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggcg :=vals [0];if _ggcg < 0.0||_ggcg > 1.0{_gg .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _ggcg < 0.0{_ggcg =0.0;}else if _ggcg > 1.0{_ggcg =1.0;};return NewPdfColorDeviceGray (_ggcg ),nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_dbbbd *Image )ToGoImage ()(_b .Image ,error ){_gg .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_bdffe ,_aabfdc :=_gdf .NewImage (int (_dbbbd .Width ),int (_dbbbd .Height ),int (_dbbbd .BitsPerComponent ),_dbbbd .ColorComponents ,_dbbbd .Data ,_dbbbd ._cebdb ,_dbbbd ._dafdc );
if _aabfdc !=nil {return nil ,_aabfdc ;};return _bdffe ,nil ;};func (_edec *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _afab :=_edec ._eadda ;_afab !=nil {return _afab ;};return _edec ._dfcc ;};func (_gadfd *LTV )getCRLs (_ggfc []*_cd .Certificate )([][]byte ,error ){_edda :=make ([][]byte ,0,len (_ggfc ));
for _ ,_ffbee :=range _ggfc {for _ ,_ccggf :=range _ffbee .CRLDistributionPoints {if _gadfd .CertClient .IsCA (_ffbee ){continue ;};_gecca ,_dfec :=_gadfd .CRLClient .MakeRequest (_ccggf ,_ffbee );if _dfec !=nil {_gg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_dfec );
continue ;};_edda =append (_edda ,_gecca );};};return _edda ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_ggaed *_bb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bb .PdfObjectName ;Filter *_bb .PdfObjectName ;SubFilter *_bb .PdfObjectName ;Contents *_bb .PdfObjectString ;Cert _bb .PdfObject ;ByteRange *_bb .PdfObjectArray ;Reference *_bb .PdfObjectArray ;Changes *_bb .PdfObjectArray ;Name *_bb .PdfObjectString ;
M *_bb .PdfObjectString ;Location *_bb .PdfObjectString ;Reason *_bb .PdfObjectString ;ContactInfo *_bb .PdfObjectString ;R *_bb .PdfObjectInteger ;V *_bb .PdfObjectInteger ;PropBuild *_bb .PdfObjectDictionary ;PropAuthTime *_bb .PdfObjectInteger ;PropAuthType *_bb .PdfObjectName ;
};func (_acea *PdfWriter )seekByName (_ggfbf _bb .PdfObject ,_fgcae []string ,_eggdf string )([]_bb .PdfObject ,error ){_gg .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_ggfbf );var _febdc []_bb .PdfObject ;
if _affab ,_gfaaf :=_ggfbf .(*_bb .PdfIndirectObject );_gfaaf {return _acea .seekByName (_affab .PdfObject ,_fgcae ,_eggdf );};if _efddf ,_cggef :=_ggfbf .(*_bb .PdfObjectStream );_cggef {return _acea .seekByName (_efddf .PdfObjectDictionary ,_fgcae ,_eggdf );
};if _ececc ,_efgba :=_ggfbf .(*_bb .PdfObjectDictionary );_efgba {_gg .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_fdccc :=range _ececc .Keys (){_abgab :=_ececc .Get (_fdccc );if string (_fdccc )==_eggdf {_febdc =append (_febdc ,_abgab );};for _ ,_dedcd :=range _fgcae {if string (_fdccc )==_dedcd {_gg .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_dedcd );
_fedaf ,_fcddc :=_acea .seekByName (_abgab ,_fgcae ,_eggdf );if _fcddc !=nil {return _febdc ,_fcddc ;};_febdc =append (_febdc ,_fedaf ...);break ;};};};return _febdc ,nil ;};return _febdc ,nil ;};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_edgf ,_cfec :=_be .ReadFile (path );if _cfec !=nil {return nil ,_cfec ;};_fdab :=_fe .Detect (_edgf );_cage :=_dgc .Sum (_edgf );_daebf :=&EmbeddedFile {Name :_bd .Base (path ),Content :_edgf ,FileType :_fdab .String (),Hash :_ccc .EncodeToString (_cage [:])};
return _daebf ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cggg *PdfColorspaceDeviceGray )ToPdfObject ()_bb .PdfObject {return _bb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_daaac *PdfWriter )writeOutlines ()error {if _daaac ._eccedg ==nil {return nil ;};_gg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_daaac ._eccedg );
_ddaca :=_daaac ._eccedg .ToPdfObject ();_gg .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ddaca ,_ddaca ,_ddaca );_daaac ._ebgdb .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ddaca );
_fadaa :=_daaac .addObjects (_ddaca );if _fadaa !=nil {return _fadaa ;};return nil ;};

// Encoder returns the font's text encoder.
func (_aadb pdfFontType3 )Encoder ()_ga .TextEncoder {return _aadb ._acaf };

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bb .PdfObjectName ;};func _dgdcf (_gbddd _ecb .ReadSeeker ,_ccbd *ReaderOpts ,_dfdfe bool ,_bfcda string )(*PdfReader ,error ){if _ccbd ==nil {_ccbd =NewReaderOpts ();};_abccf :=*_ccbd ;_cgdca :=&PdfReader {_bfcab :_gbddd ,_ddafg :map[_bb .PdfObject ]struct{}{},_geeca :_efdga (),_becge :_ccbd .LazyLoad ,_fdgad :_ccbd .ComplianceMode ,_fgffe :_dfdfe ,_gdab :&_abccf };
_ffcf ,_eagcc :=_bdeba ("\u0072");if _eagcc !=nil {return nil ,_eagcc ;};_eagcc =_fac .Track (_ffcf ,_bfcda );if _eagcc !=nil {return nil ,_eagcc ;};_cgdca ._egfbb =_ffcf ;var _cedfg *_bb .PdfParser ;if !_cgdca ._fdgad {_cedfg ,_eagcc =_bb .NewParser (_gbddd );
}else {_cedfg ,_eagcc =_bb .NewCompliancePdfParser (_gbddd );};if _eagcc !=nil {return nil ,_eagcc ;};_cgdca ._cfaef =_cedfg ;_ebbgd ,_eagcc :=_cgdca .IsEncrypted ();if _eagcc !=nil {return nil ,_eagcc ;};if !_ebbgd {_eagcc =_cgdca .loadStructure ();if _eagcc !=nil {return nil ,_eagcc ;
};}else if _dfdfe {_aeag ,_bdabf :=_cgdca .Decrypt ([]byte (_ccbd .Password ));if _bdabf !=nil {return nil ,_bdabf ;};if !_aeag {return nil ,_ed .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_cgdca ._agbfc =make (map[*PdfReader ]*PdfReader );_cgdca ._egbda =make ([]*PdfReader ,_cedfg .GetRevisionNumber ());return _cgdca ,nil ;};func _aaef (_abcgd *_bb .PdfObjectDictionary ,_ddcc *fontCommon )(*pdfCIDFontType0 ,error ){if _ddcc ._ecdc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_gg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ddcc );
return nil ,_bb .ErrRangeError ;};_febfge :=_aaec (_ddcc );_fdabc ,_becc :=_bb .GetDict (_abcgd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_becc {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ddcc );
return nil ,ErrRequiredAttributeMissing ;};_febfge .CIDSystemInfo =_fdabc ;_febfge .DW =_abcgd .Get ("\u0044\u0057");_febfge .W =_abcgd .Get ("\u0057");_febfge .DW2 =_abcgd .Get ("\u0044\u0057\u0032");_febfge .W2 =_abcgd .Get ("\u0057\u0032");_febfge ._cbcef =1000.0;
if _fadee ,_egbag :=_bb .GetNumberAsFloat (_febfge .DW );_egbag ==nil {_febfge ._cbcef =_fadee ;};_egbaa ,_gaccb :=_fdbc (_febfge .W );if _gaccb !=nil {return nil ,_gaccb ;};if _egbaa ==nil {_egbaa =map[_ga .CharCode ]float64 {};};_febfge ._bfeg =_egbaa ;
return _febfge ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_gbdbb .Lock ();defer _gbdbb .Unlock ();_gebba =title };

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_edcca ,_caggc :=NewStandard14Font (basefont );if _caggc !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _edcca ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edfb *PdfShadingType3 )ToPdfObject ()_bb .PdfObject {_edfb .PdfShading .ToPdfObject ();_dbecf ,_fgffcb :=_edfb .getShadingDict ();if _fgffcb !=nil {_gg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _edfb .Coords !=nil {_dbecf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_edfb .Coords );};if _edfb .Domain !=nil {_dbecf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_edfb .Domain );};if _edfb .Function !=nil {if len (_edfb .Function )==1{_dbecf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edfb .Function [0].ToPdfObject ());
}else {_deeaa :=_bb .MakeArray ();for _ ,_ddffe :=range _edfb .Function {_deeaa .Append (_ddffe .ToPdfObject ());};_dbecf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deeaa );};};if _edfb .Extend !=nil {_dbecf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_edfb .Extend );
};return _edfb ._dacad ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cefbg *PdfShading )ToPdfObject ()_bb .PdfObject {_adedd :=_cefbg ._dacad ;_daea ,_ggdcd :=_cefbg .getShadingDict ();if _ggdcd !=nil {_gg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cefbg .ShadingType !=nil {_daea .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cefbg .ShadingType );};if _cefbg .ColorSpace !=nil {_daea .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cefbg .ColorSpace .ToPdfObject ());
};if _cefbg .Background !=nil {_daea .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cefbg .Background );};if _cefbg .BBox !=nil {_daea .Set ("\u0042\u0042\u006f\u0078",_cefbg .BBox .ToPdfObject ());};if _cefbg .AntiAlias !=nil {_daea .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cefbg .AntiAlias );
};return _adedd ;};func (_eaa *PdfAnnotationMarkup )appendToPdfDictionary (_gceb *_bb .PdfObjectDictionary ){_gceb .SetIfNotNil ("\u0054",_eaa .T );if _eaa .Popup !=nil {_gceb .Set ("\u0050\u006f\u0070u\u0070",_eaa .Popup .ToPdfObject ());};_gceb .SetIfNotNil ("\u0043\u0041",_eaa .CA );
_gceb .SetIfNotNil ("\u0052\u0043",_eaa .RC );_gceb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eaa .CreationDate );_gceb .SetIfNotNil ("\u0049\u0052\u0054",_eaa .IRT );_gceb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_eaa .Subj );
_gceb .SetIfNotNil ("\u0052\u0054",_eaa .RT );_gceb .SetIfNotNil ("\u0049\u0054",_eaa .IT );_gceb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_eaa .ExData );};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_aeeff :=&PdfShadingType2 {};_aeeff .PdfShading =&PdfShading {};_aeeff .PdfShading ._dacad =_bb .MakeIndirectObject (_bb .MakeDict ());_aeeff .PdfShading ._gbbdg =_aeeff ;return _aeeff ;};func (_deedf *PdfWriter )checkPendingObjects (){for _bbgeae ,_ebgae :=range _deedf ._aaccg {if !_deedf .hasObject (_bbgeae ){_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_bbgeae ,_bbgeae ,_bbgeae );
for _ ,_beeagb :=range _ebgae {for _ ,_bfebc :=range _beeagb .Keys (){_agac :=_beeagb .Get (_bfebc );if _agac ==_bbgeae {_gg .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_beeagb .Set (_bfebc ,_bb .MakeNull ());break ;};};};};};};var _bfce =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// ToPdfObject returns the PDF representation of the function.
func (_dcec *PdfFunctionType0 )ToPdfObject ()_bb .PdfObject {if _dcec ._agdc ==nil {_dcec ._agdc =&_bb .PdfObjectStream {};};_ddbag :=_bb .MakeDict ();_ddbag .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (0));
_cgec :=&_bb .PdfObjectArray {};for _ ,_ddced :=range _dcec .Domain {_cgec .Append (_bb .MakeFloat (_ddced ));};_ddbag .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgec );_gcbf :=&_bb .PdfObjectArray {};for _ ,_egabg :=range _dcec .Range {_gcbf .Append (_bb .MakeFloat (_egabg ));
};_ddbag .Set ("\u0052\u0061\u006eg\u0065",_gcbf );_ddbcf :=&_bb .PdfObjectArray {};for _ ,_cbecb :=range _dcec .Size {_ddbcf .Append (_bb .MakeInteger (int64 (_cbecb )));};_ddbag .Set ("\u0053\u0069\u007a\u0065",_ddbcf );_ddbag .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bb .MakeInteger (int64 (_dcec .BitsPerSample )));
if _dcec .Order !=1{_ddbag .Set ("\u004f\u0072\u0064e\u0072",_bb .MakeInteger (int64 (_dcec .Order )));};_ddbag .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_dcec ._baac ))));_dcec ._agdc .Stream =_dcec ._baac ;_dcec ._agdc .PdfObjectDictionary =_ddbag ;
return _dcec ._agdc ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_gddg *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// AddImageResource adds an image to the XObject resources.
func (_bdbdef *PdfPage )AddImageResource (name _bb .PdfObjectName ,ximg *XObjectImage )error {var _bcddd *_bb .PdfObjectDictionary ;if _bdbdef .Resources .XObject ==nil {_bcddd =_bb .MakeDict ();_bdbdef .Resources .XObject =_bcddd ;}else {var _bffg bool ;
_bcddd ,_bffg =(_bdbdef .Resources .XObject ).(*_bb .PdfObjectDictionary );if !_bffg {return _ed .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bcddd .Set (name ,ximg .ToPdfObject ());
return nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_cdfdg *LTV )Enable (sig *PdfSignature ,extraCerts []*_cd .Certificate )error {if _eegag :=_cdfdg .validateSig (sig );_eegag !=nil {return _eegag ;};_babf ,_abbgd :=_cdfdg .generateVRIKey (sig );if _abbgd !=nil {return _abbgd ;};if _ ,_fdffd :=_cdfdg ._ebfa .VRI [_babf ];
_fdffd &&_cdfdg .SkipExisting {return nil ;};_beeea ,_abbgd :=sig .GetCerts ();if _abbgd !=nil {return _abbgd ;};return _cdfdg .enable (_beeea ,extraCerts ,_babf );};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_gaacf *PdfReader )GetCatalogStructTreeRoot ()(_bb .PdfObject ,bool ){_dddag :=_bb .ResolveReference (_gaacf ._effcg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _dddag ==nil {return nil ,false ;};if !_gaacf ._becge {_feef :=_gaacf .traverseObjectData (_dddag );
if _feef !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_feef );
return nil ,false ;};};return _dddag ,true ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_eggd :=NewPdfAnnotation ();_ecgc :=&PdfAnnotationSound {};_ecgc .PdfAnnotation =_eggd ;_ecgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eggd .SetContext (_ecgc );return _ecgc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_abddd *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_abddd .Base .GetNumComponents ();_cgga :=int (vals [0])*N ;
if _cgga < 0||(_cgga +N -1)>=len (_abddd ._fgae ){_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cgga );return nil ,ErrColorOutOfRange ;};_ebagc :=_abddd ._fgae [_cgga :_cgga +N ];
var _dbgd []float64 ;for _ ,_cebg :=range _ebagc {_dbgd =append (_dbgd ,float64 (_cebg )/255.0);};_bca ,_eagea :=_abddd .Base .ColorFromFloats (_dbgd );if _eagea !=nil {return nil ,_eagea ;};return _bca ,nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_cgfc *PdfReader )GetObjectNums ()[]int {return _cgfc ._cfaef .GetObjectNums ()};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bb .PdfObject ;Name _bb .PdfObject ;State _bb .PdfObject ;StateModel _bb .PdfObject ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_ddfffg *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_ddfffg .Type ,_ddfffg .P ,_ddfffg .V );};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bb .PdfObjectStream ;Data []byte ;_ccab *_bb .PdfIndirectObject ;_eabcb *_bb .PdfObjectStream ;};func _bebd (_fabb *_bb .PdfObjectDictionary )(*PdfFieldText ,error ){_ffdff :=&PdfFieldText {};_ffdff .DA ,_ =_bb .GetString (_fabb .Get ("\u0044\u0041"));
_ffdff .Q ,_ =_bb .GetInt (_fabb .Get ("\u0051"));_ffdff .DS ,_ =_bb .GetString (_fabb .Get ("\u0044\u0053"));_ffdff .RV =_fabb .Get ("\u0052\u0056");_ffdff .MaxLen ,_ =_bb .GetInt (_fabb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _ffdff ,nil ;
};

// GetAction returns the PDF action for the annotation link.
func (_dad *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _dad ._abc !=nil {return _dad ._abc ,nil ;};if _dad .A ==nil {return nil ,nil ;};if _dad ._gcg ==nil {return nil ,nil ;};_fbg ,_fadd :=_dad ._gcg .loadAction (_dad .A );if _fadd !=nil {return nil ,_fadd ;
};_dad ._abc =_fbg ;return _dad ._abc ,nil ;};func _bbfae (_edcbb *PdfField )[]*PdfField {_gebe :=[]*PdfField {_edcbb };for _ ,_cbbd :=range _edcbb .Kids {_gebe =append (_gebe ,_bbfae (_cbbd )...);};return _gebe ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_ecggf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_fabg :=func (_ffdf float64 )float64 {if _ffdf >=6.0/29{return _ffdf *_ffdf *_ffdf ;};return 108.0/841*(_ffdf -4.0/29.0);};_egca ,_ecdaf :=color .(*PdfColorLab );if !_ecdaf {_gg .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_egca .L ();AStar :=_egca .A ();BStar :=_egca .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_ecggf .WhitePoint [0]*_fabg (L );Y :=_ecggf .WhitePoint [1]*_fabg (M );Z :=_ecggf .WhitePoint [2]*_fabg (N );_cged :=3.240479*X +-1.537150*Y +-0.498535*Z ;_baffg :=-0.969256*X +1.875992*Y +0.041556*Z ;_bbded :=0.055648*X +-0.204043*Y +1.057311*Z ;
_cged =_bdd .Min (_bdd .Max (_cged ,0),1.0);_baffg =_bdd .Min (_bdd .Max (_baffg ,0),1.0);_bbded =_bdd .Min (_bdd .Max (_bbded ,0),1.0);return NewPdfColorDeviceRGB (_cged ,_baffg ,_bbded ),nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_cadb *PdfPage )GetPageDict ()*_bb .PdfObjectDictionary {_eadac :=_cadb ._deab ;_eadac .Clear ();_eadac .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0050\u0061\u0067\u0065"));_eadac .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cadb .Parent );
if _cadb .LastModified !=nil {_eadac .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cadb .LastModified .ToPdfObject ());};if _cadb .Resources !=nil {_eadac .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cadb .Resources .ToPdfObject ());
};if _cadb .CropBox !=nil {_eadac .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_cadb .CropBox .ToPdfObject ());};if _cadb .MediaBox !=nil {_eadac .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_cadb .MediaBox .ToPdfObject ());};if _cadb .BleedBox !=nil {_eadac .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_cadb .BleedBox .ToPdfObject ());
};if _cadb .TrimBox !=nil {_eadac .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_cadb .TrimBox .ToPdfObject ());};if _cadb .ArtBox !=nil {_eadac .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_cadb .ArtBox .ToPdfObject ());};_eadac .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_cadb .BoxColorInfo );
_eadac .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cadb .Contents );if _cadb .Rotate !=nil {_eadac .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bb .MakeInteger (*_cadb .Rotate ));};_eadac .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cadb .Group );
_eadac .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_cadb .Thumb );_eadac .SetIfNotNil ("\u0042",_cadb .B );_eadac .SetIfNotNil ("\u0044\u0075\u0072",_cadb .Dur );_eadac .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cadb .Trans );_eadac .SetIfNotNil ("\u0041\u0041",_cadb .AA );
_eadac .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cadb .Metadata );_eadac .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cadb .PieceInfo );_eadac .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cadb .StructParents );
_eadac .SetIfNotNil ("\u0049\u0044",_cadb .ID );_eadac .SetIfNotNil ("\u0050\u005a",_cadb .PZ );_eadac .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_cadb .SeparationInfo );_eadac .SetIfNotNil ("\u0054\u0061\u0062\u0073",_cadb .Tabs );
_eadac .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_cadb .TemplateInstantiated );_eadac .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_cadb .PresSteps );_eadac .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_cadb .UserUnit );
_eadac .SetIfNotNil ("\u0056\u0050",_cadb .VP );if _cadb ._cfafb !=nil {_daacf :=_bb .MakeArray ();for _ ,_fdgef :=range _cadb ._cfafb {if _egbf :=_fdgef .GetContext ();_egbf !=nil {_daacf .Append (_egbf .ToPdfObject ());}else {_daacf .Append (_fdgef .ToPdfObject ());
};};if _daacf .Len ()> 0{_eadac .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_daacf );};}else if _cadb .Annots !=nil {_eadac .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_cadb .Annots );};return _eadac ;};func _baggc (_fcbd []*_bb .PdfObjectStream )*_bb .PdfObjectArray {if len (_fcbd )==0{return nil ;
};_bcbd :=make ([]_bb .PdfObject ,0,len (_fcbd ));for _ ,_gbcc :=range _fcbd {_bcbd =append (_bcbd ,_gbcc );};return _bb .MakeArray (_bcbd ...);};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_ccff *PdfAppender )Write (w _ecb .Writer )error {if _ccff ._bcea {return _ed .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_badf :=NewPdfWriter ();_dceaa ,_cdf :=_bb .GetDict (_badf ._faebd );if !_cdf {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_eagb ,_cdf :=_dceaa .Get ("\u004b\u0069\u0064\u0073").(*_bb .PdfObjectArray );if !_cdf {return _ed .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bedb ,_cdf :=_dceaa .Get ("\u0043\u006f\u0075n\u0074").(*_bb .PdfObjectInteger );if !_cdf {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_fefdb :=_ccff ._aadf ._cfaef ;_cgdg :=_fefdb .GetTrailer ();if _cgdg ==nil {return _ed .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_cbfe ,_cdf :=_bb .GetIndirect (_cgdg .Get ("\u0052\u006f\u006f\u0074"));
if !_cdf {return _ed .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_becg ,_cdf :=_bb .GetDict (_cbfe );if !_cdf {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cbfe ,*_cgdg );
return _ed .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cead :=false ;for _ ,_deaa :=range _ccff ._aadf .AcroForm .signatureFields (){if _deaa .Lock !=nil {_cead =true ;break ;};};if _cead {_badf ._eecbb =_cbfe ;
};for _ ,_gedf :=range _becg .Keys (){if _badf ._ebgdb .Get (_gedf )==nil {_eeab :=_becg .Get (_gedf );_badf ._ebgdb .Set (_gedf ,_eeab );};};if _ccff ._gbfg !=nil {if _ccff ._gbfg ._dgeaa {if _fcea :=_bb .TraceToDirectObject (_ccff ._gbfg .ToPdfObject ());
!_bb .IsNullObject (_fcea ){_badf ._ebgdb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fcea );_ccff .updateObjectsDeep (_fcea ,nil );}else {_gg .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_badf ._ebgdb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ccff ._gbfg .ToPdfObject ());_ccff .updateObjectsDeep (_ccff ._gbfg .ToPdfObject (),nil );};};if _ccff ._gdgc !=nil {_ccff .updateObjectsDeep (_ccff ._gdgc .ToPdfObject (),nil );
_badf ._ebgdb .Set ("\u0044\u0053\u0053",_ccff ._gdgc .GetContainingPdfObject ());};if _ccff ._cecbd !=nil {_badf ._ebgdb .Set ("\u0050\u0065\u0072m\u0073",_ccff ._cecbd .ToPdfObject ());_ccff .updateObjectsDeep (_ccff ._cecbd .ToPdfObject (),nil );};if _badf ._gecfd .Major < 2{_badf .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_badf .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _eedb ,_cddg :=_bb .GetDict (_cgdg .Get ("\u0049\u006e\u0066\u006f"));_cddg {if _eaeea ,_cbagd :=_bb .GetDict (_badf ._gefda );_cbagd {for _ ,_abfa :=range _eedb .Keys (){if _eaeea .Get (_abfa )==nil {_eaeea .Set (_abfa ,_eedb .Get (_abfa ));
};};};};if _ccff ._dbbg !=nil {_badf ._gefda =_bb .MakeIndirectObject (_ccff ._dbbg .ToPdfObject ());};_ccff .updateObjectsDeep (_badf ._gefda ,nil );_ccff .updateObjectsDeep (_badf ._eecbb ,nil );_gcgef :=false ;if len (_ccff ._aadf .PageList )!=len (_ccff ._baef ){_gcgef =true ;
}else {for _bgfgc :=range _ccff ._aadf .PageList {switch {case _ccff ._baef [_bgfgc ]==_ccff ._aadf .PageList [_bgfgc ]:case _ccff ._baef [_bgfgc ]==_ccff .Reader .PageList [_bgfgc ]:default:_gcgef =true ;};if _gcgef {break ;};};};if _gcgef {_ccff .updateObjectsDeep (_badf ._faebd ,nil );
}else {_ccff ._cfbbc [_badf ._faebd ]=struct{}{};};_badf ._faebd .ObjectNumber =_ccff .Reader ._acgfb .ObjectNumber ;_ccff ._gecf [_badf ._faebd ]=_ccff .Reader ._acgfb .ObjectNumber ;_dcgg :=[]_bb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_dbag :=range _ccff ._baef {_fgbb :=_dbag .ToPdfObject ();*_bedb =*_bedb +1;if _ecde ,_cfeg :=_fgbb .(*_bb .PdfIndirectObject );_cfeg &&_ecde .GetParser ()==_ccff ._aadf ._cfaef {_eagb .Append (&_ecde .PdfObjectReference );continue ;};if _cccaa ,_cddd :=_bb .GetDict (_fgbb );
_cddd {_eacb ,_ffda :=_cccaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bb .PdfIndirectObject );for _ffda {_gg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eacb );_daad ,_gba :=_eacb .PdfObject .(*_bb .PdfObjectDictionary );
if !_gba {return _ed .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_efe :=range _dcgg {_gg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_efe );if _gdda :=_cccaa .Get (_efe );
_gdda !=nil {_gg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_dbag ._eegfb .Keys ())> 0&&!_gcgef {_aadaa :=_dbag ._eegfb ;if _ecdg :=_aadaa .Get (_efe );_ecdg !=nil {if _gdda !=_ecdg {_gg .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_efe ,_ecdg );
_cccaa .Set (_efe ,_ecdg );};};};continue ;};if _fcgb :=_daad .Get (_efe );_fcgb !=nil {_gg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_efe );_cccaa .Set (_efe ,_fcgb );};};_eacb ,_ffda =_daad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bb .PdfIndirectObject );
_gg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_daad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _gcgef {_cccaa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_badf ._faebd );};};_ccff .updateObjectsDeep (_fgbb ,nil );
_eagb .Append (_fgbb );};if _ ,_ddfcd :=_ccff ._eaff .Seek (0,_ecb .SeekStart );_ddfcd !=nil {return _ddfcd ;};_bcgd :=make (map[SignatureHandler ]_ecb .Writer );_eegc :=_bb .MakeArray ();for _ ,_bfag :=range _ccff ._ffb {if _agbg ,_gbcb :=_bb .GetIndirect (_bfag );
_gbcb {if _cgfa ,_cgea :=_agbg .PdfObject .(*pdfSignDictionary );_cgea {_dca :=*_cgfa ._cefbf ;var _egcdg error ;_bcgd [_dca ],_egcdg =_dca .NewDigest (_cgfa ._febed );if _egcdg !=nil {return _egcdg ;};_eegc .Append (_bb .MakeInteger (0xfffff),_bb .MakeInteger (0xfffff));
};};};if _eegc .Len ()> 0{_eegc .Append (_bb .MakeInteger (0xfffff),_bb .MakeInteger (0xfffff));};for _ ,_caa :=range _ccff ._ffb {if _gcgc ,_dcab :=_bb .GetIndirect (_caa );_dcab {if _bdce ,_dfabd :=_gcgc .PdfObject .(*pdfSignDictionary );_dfabd {_bdce .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_eegc );
};};};_gedg :=len (_bcgd )> 0;var _abbg _ecb .Reader =_ccff ._eaff ;if _gedg {_cgbdd :=make ([]_ecb .Writer ,0,len (_bcgd ));for _ ,_egeb :=range _bcgd {_cgbdd =append (_cgbdd ,_egeb );};_abbg =_ecb .TeeReader (_ccff ._eaff ,_ecb .MultiWriter (_cgbdd ...));
};_dcbca ,_fdfe :=_ecb .Copy (w ,_abbg );if _fdfe !=nil {return _fdfe ;};if len (_ccff ._ffb )==0{return nil ;};_badf ._dacf =_dcbca ;_badf .ObjNumOffset =_ccff ._gadbe ;_badf ._aedgc =true ;_badf ._dbgcc =_ccff ._aadd ;_badf ._fedgb =_ccff ._ccge ;_badf ._daabg =_ccff ._dfeb ;
_badf ._gecfd =_ccff ._aadf .PdfVersion ();_badf ._dcggdc =_ccff ._gecf ;_badf ._efgdff =_ccff ._gdga .GetCrypter ();_badf ._bafbg =_ccff ._gdga .GetEncryptObj ();_deddf :=_ccff ._gdga .GetXrefType ();if _deddf !=nil {_fbde :=*_deddf ==_bb .XrefTypeObjectStream ;
_badf ._aebec =&_fbde ;};_badf ._bfdb =map[_bb .PdfObject ]struct{}{};_badf ._cgfff =[]_bb .PdfObject {};for _ ,_bgea :=range _ccff ._ffb {if _ ,_deef :=_ccff ._cfbbc [_bgea ];_deef {continue ;};_badf .addObject (_bgea );};_gdegb :=w ;if _gedg {_gdegb =_aa .NewBuffer (nil );
};if _ccff ._fcgd !=""&&_badf ._efgdff ==nil {_badf .Encrypt ([]byte (_ccff ._fcgd ),[]byte (_ccff ._fcgd ),_ccff ._beff );};if _fgee :=_cgdg .Get ("\u0049\u0044");_fgee !=nil {if _bggf ,_afae :=_bb .GetArray (_fgee );_afae {_badf ._fggfg =_bggf ;};};if _fecg :=_badf .Write (_gdegb );
_fecg !=nil {return _fecg ;};if _gedg {_ecda :=_gdegb .(*_aa .Buffer ).Bytes ();_dbaga :=_bb .MakeArray ();var _ggbb []*pdfSignDictionary ;var _edac int64 ;for _ ,_cgbf :=range _badf ._cgfff {if _geab ,_dbgg :=_bb .GetIndirect (_cgbf );_dbgg {if _gbdb ,_bbafe :=_geab .PdfObject .(*pdfSignDictionary );
_bbafe {_ggbb =append (_ggbb ,_gbdb );_ggdd :=_gbdb ._ggddf +int64 (_gbdb ._gceca );_dbaga .Append (_bb .MakeInteger (_edac ),_bb .MakeInteger (_ggdd -_edac ));_edac =_gbdb ._ggddf +int64 (_gbdb ._fceca );};};};_dbaga .Append (_bb .MakeInteger (_edac ),_bb .MakeInteger (_dcbca +int64 (len (_ecda ))-_edac ));
_dgdc :=[]byte (_dbaga .WriteString ());for _ ,_eceg :=range _ggbb {_cgcb :=int (_eceg ._ggddf -_dcbca );for _gedgf :=_eceg ._faggb ;_gedgf < _eceg ._eccdf ;_gedgf ++{_ecda [_cgcb +_gedgf ]=' ';};_ggfe :=_ecda [_cgcb +_eceg ._faggb :_cgcb +_eceg ._eccdf ];
copy (_ggfe ,_dgdc );};var _cgbgf int ;for _ ,_aecf :=range _ggbb {_egfdd :=int (_aecf ._ggddf -_dcbca );_bgfd :=_ecda [_cgbgf :_egfdd +_aecf ._gceca ];_gecc :=*_aecf ._cefbf ;_bcgd [_gecc ].Write (_bgfd );_cgbgf =_egfdd +_aecf ._fceca ;};for _ ,_fefdg :=range _ggbb {_acgef :=_ecda [_cgbgf :];
_abea :=*_fefdg ._cefbf ;_bcgd [_abea ].Write (_acgef );};for _ ,_eggfb :=range _ggbb {_dccfg :=int (_eggfb ._ggddf -_dcbca );_gadc :=*_eggfb ._cefbf ;_bdcdb :=_bcgd [_gadc ];if _bdbdb :=_gadc .Sign (_eggfb ._febed ,_bdcdb );_bdbdb !=nil {return _bdbdb ;
};_eggfb ._febed .ByteRange =_dbaga ;_ddad :=[]byte (_eggfb ._febed .Contents .WriteString ());for _gdeb :=_eggfb ._faggb ;_gdeb < _eggfb ._eccdf ;_gdeb ++{_ecda [_dccfg +_gdeb ]=' ';};for _ggcb :=_eggfb ._gceca ;_ggcb < _eggfb ._fceca ;_ggcb ++{_ecda [_dccfg +_ggcb ]=' ';
};_dgge :=_ecda [_dccfg +_eggfb ._faggb :_dccfg +_eggfb ._eccdf ];copy (_dgge ,_dgdc );_dgge =_ecda [_dccfg +_eggfb ._gceca :_dccfg +_eggfb ._fceca ];copy (_dgge ,_ddad );};_febc :=_aa .NewBuffer (_ecda );_ ,_fdfe =_ecb .Copy (w ,_febc );if _fdfe !=nil {return _fdfe ;
};};_ccff ._bcea =true ;return nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_facae *_bb .PdfIndirectObject ;Certs []*_bb .PdfObjectStream ;OCSPs []*_bb .PdfObjectStream ;CRLs []*_bb .PdfObjectStream ;VRI map[string ]*VRI ;_bfda map[string ]*_bb .PdfObjectStream ;_fccf map[string ]*_bb .PdfObjectStream ;_fdbe map[string ]*_bb .PdfObjectStream ;
};func (_ggb *PdfReader )newPdfActionResetFormFromDict (_dab *_bb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dab .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dab .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func _gegd (_ddge *PdfPage )map[_bb .PdfObjectName ]_bb .PdfObject {_gfa :=make (map[_bb .PdfObjectName ]_bb .PdfObject );if _ddge .Resources ==nil {return _gfa ;};if _ddge .Resources .Font !=nil {if _ggaf ,_bgaad :=_bb .GetDict (_ddge .Resources .Font );
_bgaad {for _ ,_dcbc :=range _ggaf .Keys (){_gfa [_dcbc ]=_ggaf .Get (_dcbc );};};};if _ddge .Resources .ExtGState !=nil {if _dbefb ,_bdef :=_bb .GetDict (_ddge .Resources .ExtGState );_bdef {for _ ,_aeca :=range _dbefb .Keys (){_gfa [_aeca ]=_dbefb .Get (_aeca );
};};};if _ddge .Resources .XObject !=nil {if _dgdd ,_abgg :=_bb .GetDict (_ddge .Resources .XObject );_abgg {for _ ,_ccbb :=range _dgdd .Keys (){_gfa [_ccbb ]=_dgdd .Get (_ccbb );};};};if _ddge .Resources .Pattern !=nil {if _fdbb ,_bad :=_bb .GetDict (_ddge .Resources .Pattern );
_bad {for _ ,_ecge :=range _fdbb .Keys (){_gfa [_ecge ]=_fdbb .Get (_ecge );};};};if _ddge .Resources .Shading !=nil {if _cege ,_eaee :=_bb .GetDict (_ddge .Resources .Shading );_eaee {for _ ,_faca :=range _cege .Keys (){_gfa [_faca ]=_cege .Get (_faca );
};};};if _ddge .Resources .ProcSet !=nil {if _gefea ,_ccdd :=_bb .GetDict (_ddge .Resources .ProcSet );_ccdd {for _ ,_dfb :=range _gefea .Keys (){_gfa [_dfb ]=_gefea .Get (_dfb );};};};if _ddge .Resources .Properties !=nil {if _accd ,_cgcc :=_bb .GetDict (_ddge .Resources .Properties );
_cgcc {for _ ,_eaeec :=range _accd .Keys (){_gfa [_eaeec ]=_accd .Get (_eaeec );};};};return _gfa ;};type fontFile struct{_aacfg string ;_dcbf string ;_abecc _ga .SimpleEncoder ;};

// ToPdfObject converts rectangle to a PDF object.
func (_gdgf *PdfRectangle )ToPdfObject ()_bb .PdfObject {return _bb .MakeArray (_bb .MakeFloat (_gdgf .Llx ),_bb .MakeFloat (_gdgf .Lly ),_bb .MakeFloat (_gdgf .Urx ),_bb .MakeFloat (_gdgf .Ury ));};func _fffed (_defc _bb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_befa :=NewPdfColorspaceSpecialIndexed ();
if _bdff ,_edee :=_defc .(*_bb .PdfIndirectObject );_edee {_befa ._cedea =_bdff ;};_defc =_bb .TraceToDirectObject (_defc );_abccb ,_dfbbc :=_defc .(*_bb .PdfObjectArray );if !_dfbbc {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _abccb .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_defc =_abccb .Get (0);
_gbefe ,_dfbbc :=_defc .(*_bb .PdfObjectName );if !_dfbbc {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_gbefe !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_defc =_abccb .Get (1);_afeed ,_ggdge :=DetermineColorspaceNameFromPdfObject (_defc );if _ggdge !=nil {return nil ,_ggdge ;};if _afeed =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_afeed =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gg .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_afeed );
return nil ,_fabfb ;};_ffdfa ,_ggdge :=NewPdfColorspaceFromPdfObject (_defc );if _ggdge !=nil {return nil ,_ggdge ;};_befa .Base =_ffdfa ;_defc =_abccb .Get (2);_aeaaf ,_ggdge :=_bb .GetNumberAsInt64 (_defc );if _ggdge !=nil {return nil ,_ggdge ;};if _aeaaf > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_befa .HiVal =int (_aeaaf );_defc =_abccb .Get (3);_befa .Lookup =_defc ;_defc =_bb .TraceToDirectObject (_defc );var _cddgf []byte ;if _afbb ,_ccdf :=_defc .(*_bb .PdfObjectString );_ccdf {_cddgf =_afbb .Bytes ();_gg .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_cddgf );
}else if _ffbg ,_gdfg :=_defc .(*_bb .PdfObjectStream );_gdfg {_gg .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_defc .String ());_gg .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_ffbg .Stream ),_ffbg .Stream );
_gcea ,_dfae :=_bb .DecodeStream (_ffbg );if _dfae !=nil {return nil ,_dfae ;};_gg .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_gcea ),_gcea );_cddgf =_gcea ;}else {_gg .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_defc );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_cddgf )< _befa .Base .GetNumComponents ()*(_befa .HiVal +1){_gg .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_gg .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_cddgf ),_befa .Base .GetNumComponents (),_befa .HiVal );
}else {_cddgf =_cddgf [:_befa .Base .GetNumComponents ()*(_befa .HiVal +1)];};_befa ._fgae =_cddgf ;return _befa ,nil ;};func (_ceb *PdfAppender )replaceObject (_aacb ,_aece _bb .PdfObject ){switch _gfgg :=_aacb .(type ){case *_bb .PdfIndirectObject :_ceb ._gecf [_aece ]=_gfgg .ObjectNumber ;
case *_bb .PdfObjectStream :_ceb ._gecf [_aece ]=_gfgg .ObjectNumber ;};};

// SetFlag sets the flag for the field.
func (_gaggb *PdfField )SetFlag (flag FieldFlag ){_gaggb .Ff =_bb .MakeInteger (int64 (flag ))};

// ReplacePage replaces the original page to a new page.
func (_cafd *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_dfbc :=pageNum -1;for _agfa :=range _cafd ._baef {if _agfa ==_dfbc {_abda :=page .Duplicate ();_fccad (_abda );_cafd ._baef [_agfa ]=_abda ;};};};

// RemovePage removes a page by number.
func (_ggdg *PdfAppender )RemovePage (pageNum int ){_dddb :=pageNum -1;_ggdg ._baef =append (_ggdg ._baef [0:_dddb ],_ggdg ._baef [pageNum :]...);};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gefc *PdfOutlineItem )ToPdfObject ()_bb .PdfObject {_cccbc :=_gefc ._bbcf ;_beagb :=_cccbc .PdfObject .(*_bb .PdfObjectDictionary );_beagb .Set ("\u0054\u0069\u0074l\u0065",_gefc .Title );if _gefc .A !=nil {_beagb .Set ("\u0041",_gefc .A );};if _cffce :=_beagb .Get ("\u0053\u0045");
_cffce !=nil {_beagb .Remove ("\u0053\u0045");};if _gefc .C !=nil {_beagb .Set ("\u0043",_gefc .C );};if _gefc .Dest !=nil {_beagb .Set ("\u0044\u0065\u0073\u0074",_gefc .Dest );};if _gefc .F !=nil {_beagb .Set ("\u0046",_gefc .F );};if _gefc .Count !=nil {_beagb .Set ("\u0043\u006f\u0075n\u0074",_bb .MakeInteger (*_gefc .Count ));
};if _gefc .Next !=nil {_beagb .Set ("\u004e\u0065\u0078\u0074",_gefc .Next .ToPdfObject ());};if _gefc .First !=nil {_beagb .Set ("\u0046\u0069\u0072s\u0074",_gefc .First .ToPdfObject ());};if _gefc .Prev !=nil {_beagb .Set ("\u0050\u0072\u0065\u0076",_gefc .Prev .GetContext ().GetContainingPdfObject ());
};if _gefc .Last !=nil {_beagb .Set ("\u004c\u0061\u0073\u0074",_gefc .Last .GetContext ().GetContainingPdfObject ());};if _gefc .Parent !=nil {_beagb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gefc .Parent .GetContext ().GetContainingPdfObject ());
};return _cccbc ;};

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_dfgcb []*PdfFont ;CurrentFont *PdfFont ;};func (_ddfc *PdfReader )newPdfActionGotoEFromDict (_fecf *_bb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dae ,_bfg :=_fda (_fecf .Get ("\u0046"));if _bfg !=nil {return nil ,_bfg ;
};return &PdfActionGoToE {D :_fecf .Get ("\u0044"),NewWindow :_fecf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_fecf .Get ("\u0054"),F :_dae },nil ;};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dgdb *PdfAppender )GetDSS ()(_febea *DSS ){return _dgdb ._gdgc };

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bggcb *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bggcb ._cfafb !=nil {return _bggcb ._cfafb ,nil ;};if _bggcb .Annots ==nil {_bggcb ._cfafb =[]*PdfAnnotation {};return nil ,nil ;};if _bggcb ._cgeab ==nil {_bggcb ._cfafb =[]*PdfAnnotation {};
return nil ,nil ;};_ggbdg ,_aabc :=_bggcb ._cgeab .loadAnnotations (_bggcb .Annots );if _aabc !=nil {return nil ,_aabc ;};if _ggbdg ==nil {_bggcb ._cfafb =[]*PdfAnnotation {};};_bggcb ._cfafb =_ggbdg ;return _bggcb ._cfafb ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cbbg FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cbbg .Mask ()&^fl .Mask ())};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_gdcfg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ed .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_fbdg ,_gddb :=_gdf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cebdb ,img ._dafdc );if _gddb !=nil {return img ,_gddb ;};_egdd ,_gddb :=_gdf .GrayConverter .Convert (_fbdg );if _gddb !=nil {return img ,_gddb ;
};return _dffda (_egdd .Base ()),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fbdga *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceab ,_gdcfe :=_bb .GetNumbersAsFloat (objects );
if _gdcfe !=nil {return nil ,_gdcfe ;};return _fbdga .ColorFromFloats (_ceab );};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_ebga :=&PdfColorspaceDeviceN {};return _ebga };

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_abadg :=NewPdfOutline ();_abadg ._fegg =&_abadg ;return _abadg ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_dcdba *PdfPage )GetContentStreamObjs ()[]_bb .PdfObject {if _dcdba .Contents ==nil {return nil ;};_bgega :=_bb .TraceToDirectObject (_dcdba .Contents );if _bbdf ,_afgagb :=_bgega .(*_bb .PdfObjectArray );_afgagb {return _bbdf .Elements ();};return []_bb .PdfObject {_bgega };
};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_cdfe _bb .ParserMetadata ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_daebc *XObjectImage )SetFilter (encoder _bb .StreamEncoder )error {_cggeb :=_daebc .Stream ;_feageg ,_fedfcc :=_daebc .Filter .DecodeBytes (_cggeb );if _fedfcc !=nil {return _fedfcc ;};_daebc .Filter =encoder ;encoder .UpdateParams (_daebc .getParamsDict ());
_cggeb ,_fedfcc =encoder .EncodeBytes (_feageg );if _fedfcc !=nil {return _fedfcc ;};_daebc .Stream =_cggeb ;return nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_agfdcg *PdfReader )Inspect ()(map[string ]int ,error ){return _agfdcg ._cfaef .Inspect ()};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_bgc :=NewPdfAnnotation ();_aff :=&PdfAnnotationUnderline {};_aff .PdfAnnotation =_bgc ;_aff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgc .SetContext (_aff );return _aff ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_fccdc *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_cefa :=map[*PdfAnnotation ]bool {};_baffe ,_bcdd :=_fccdc .GetAnnotations ();if _bcdd !=nil {return _bcdd ;};_ddaf :=false ;for _ ,_becb :=range _baffe {if opts .AnnotFilterFunc !=nil {_cefa [_becb ]=opts .AnnotFilterFunc (_becb );
}else {_cefa [_becb ]=true ;};if _cefa [_becb ]{_ddaf =true ;};};if !_ddaf {return nil ;};return _fccdc .flattenFieldsWithOpts (appgen ,opts ,_cefa );};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bb .PdfObject ;Dest _bb .PdfObject ;H _bb .PdfObject ;PA _bb .PdfObject ;QuadPoints _bb .PdfObject ;BS _bb .PdfObject ;_abc *PdfAction ;_gcg *PdfReader ;};func (_daade *pdfFontSimple )updateStandard14Font (){_fecb ,_ffeb :=_daade .Encoder ().(_ga .SimpleEncoder );
if !_ffeb {_gg .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_daade .Encoder (),_daade );return ;};_dgfd :=_fecb .Charcodes ();
_daade ._cbgg =make (map[_ga .CharCode ]float64 ,len (_dgfd ));for _ ,_ggfb :=range _dgfd {_efdca ,_ :=_fecb .CharcodeToRune (_ggfb );_ccgf ,_ :=_daade ._cbec .Read (_efdca );_daade ._cbgg [_ggfb ]=_ccgf .Wx ;};};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_abgfe *PdfFieldChoice )ToPdfObject ()_bb .PdfObject {_abgfe .PdfField .ToPdfObject ();_dgadd :=_abgfe ._afbea ;_bcgdc :=_dgadd .PdfObject .(*_bb .PdfObjectDictionary );_bcgdc .Set ("\u0046\u0054",_bb .MakeName ("\u0043\u0068"));if _abgfe .Opt !=nil {_bcgdc .Set ("\u004f\u0070\u0074",_abgfe .Opt );
};if _abgfe .TI !=nil {_bcgdc .Set ("\u0054\u0049",_abgfe .TI );};if _abgfe .I !=nil {_bcgdc .Set ("\u0049",_abgfe .I );};return _dgadd ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_ab :=NewPdfAction ();_gb :=&PdfActionSound {};_gb .PdfAction =_ab ;_ab .SetContext (_gb );return _gb ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// A returns the value of the A component of the color.
func (_ddbc *PdfColorCalRGB )A ()float64 {return _ddbc [0]};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_agbfg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func _ggggab (_bbdgg *_bb .PdfObjectDictionary ,_ecab *fontCommon )(*pdfFontType3 ,error ){_febb :=_ceece (_ecab );
_eacdf :=_bbdgg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _eacdf ==nil {_eacdf =_bb .MakeInteger (0);};_febb .FirstChar =_eacdf ;_gbega ,_cggb :=_bb .GetIntVal (_eacdf );if !_cggb {_gg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eacdf );
return nil ,_bb .ErrTypeError ;};_dgcab :=_ga .CharCode (_gbega );_eacdf =_bbdgg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _eacdf ==nil {_eacdf =_bb .MakeInteger (255);};_febb .LastChar =_eacdf ;_gbega ,_cggb =_bb .GetIntVal (_eacdf );
if !_cggb {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_eacdf );return nil ,_bb .ErrTypeError ;
};_dbagac :=_ga .CharCode (_gbega );_eacdf =_bbdgg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _eacdf !=nil {_febb .Resources =_eacdf ;};_eacdf =_bbdgg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _eacdf ==nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_eacdf );
return nil ,_bb .ErrNotSupported ;};_febb .CharProcs =_eacdf ;_eacdf =_bbdgg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _eacdf ==nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_eacdf );
return nil ,_bb .ErrNotSupported ;};_febb .FontMatrix =_eacdf ;_febb ._daed =make (map[_ga .CharCode ]float64 );_eacdf =_bbdgg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _eacdf !=nil {_febb .Widths =_eacdf ;_dggd ,_dedbd :=_bb .GetArray (_eacdf );
if !_dedbd {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_eacdf );return nil ,_bb .ErrTypeError ;
};_fdebf ,_cfbd :=_dggd .ToFloat64Array ();if _cfbd !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cfbd ;};if len (_fdebf )!=int (_dbagac -_dgcab +1){_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dbagac -_dgcab +1,len (_fdebf ));
return nil ,_bb .ErrRangeError ;};_efadb ,_dedbd :=_bb .GetArray (_febb .FontMatrix );if !_dedbd {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_efadb );
return nil ,_cfbd ;};_dgee ,_cfbd :=_efadb .ToFloat64Array ();if _cfbd !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cfbd ;};_dfgb :=_gcac .NewMatrix (_dgee [0],_dgee [1],_dgee [2],_dgee [3],_dgee [4],_dgee [5]);for _aecd ,_egeaf :=range _fdebf {_edca ,_ :=_dfgb .Transform (_egeaf ,_egeaf );_febb ._daed [_dgcab +_ga .CharCode (_aecd )]=_edca ;};};_febb .Encoding =_bb .TraceToDirectObject (_bbdgg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_abeaag :=_bbdgg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _abeaag !=nil {_febb ._daab =_bb .TraceToDirectObject (_abeaag );_fgec ,_ebfd :=_aaegg (_febb ._daab ,&_febb .fontCommon );if _ebfd !=nil {return nil ,_ebfd ;};_febb ._beee =_fgec ;
};if _cdafd :=_febb ._beee ;_cdafd !=nil {_febb ._acaf =_ga .NewCMapEncoder ("",nil ,_cdafd );}else {_febb ._acaf =_ga .NewPdfDocEncoder ();};return _febb ,nil ;};func _ccdbd (_aagce _bb .PdfObject )(*PdfFontDescriptor ,error ){_efgfc :=&PdfFontDescriptor {};
_aagce =_bb .ResolveReference (_aagce );if _bceae ,_baag :=_aagce .(*_bb .PdfIndirectObject );_baag {_efgfc ._gddge =_bceae ;_aagce =_bceae .PdfObject ;};_afdc ,_bbea :=_bb .GetDict (_aagce );if !_bbea {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aagce );
return nil ,_bb .ErrTypeError ;};if _beagd :=_afdc .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_beagd !=nil {_efgfc .FontName =_beagd ;}else {_gg .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_gdfb ,_ :=_bb .GetName (_efgfc .FontName );if _bcbcf :=_afdc .Get ("\u0054\u0079\u0070\u0065");_bcbcf !=nil {_ccaf ,_eeba :=_bcbcf .(*_bb .PdfObjectName );if !_eeba ||string (*_ccaf )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_gg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bcbcf ,_gdfb ,_efgfc .FontName );
};}else {_gg .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gdfb ,_efgfc .FontName );
};_efgfc .FontFamily =_afdc .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_efgfc .FontStretch =_afdc .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_efgfc .FontWeight =_afdc .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_efgfc .Flags =_afdc .Get ("\u0046\u006c\u0061g\u0073");_efgfc .FontBBox =_afdc .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_efgfc .ItalicAngle =_afdc .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_efgfc .Ascent =_afdc .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_efgfc .Descent =_afdc .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_efgfc .Leading =_afdc .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_efgfc .CapHeight =_afdc .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_efgfc .XHeight =_afdc .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_efgfc .StemV =_afdc .Get ("\u0053\u0074\u0065m\u0056");_efgfc .StemH =_afdc .Get ("\u0053\u0074\u0065m\u0048");_efgfc .AvgWidth =_afdc .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_efgfc .MaxWidth =_afdc .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_efgfc .MissingWidth =_afdc .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_efgfc .FontFile =_afdc .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_efgfc .FontFile2 =_afdc .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_efgfc .FontFile3 =_afdc .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_efgfc .CharSet =_afdc .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_efgfc .Style =_afdc .Get ("\u0053\u0074\u0079l\u0065");_efgfc .Lang =_afdc .Get ("\u004c\u0061\u006e\u0067");
_efgfc .FD =_afdc .Get ("\u0046\u0044");_efgfc .CIDSet =_afdc .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _efgfc .Flags !=nil {if _efaa ,_dcfggf :=_bb .GetIntVal (_efgfc .Flags );_dcfggf {_efgfc ._ebgfe =_efaa ;};};if _efgfc .MissingWidth !=nil {if _cfed ,_aaag :=_bb .GetNumberAsFloat (_efgfc .MissingWidth );
_aaag ==nil {_efgfc ._acgcg =_cfed ;};};if _efgfc .FontFile !=nil {_ffeg ,_fggd :=_cgedba (_efgfc .FontFile );if _fggd !=nil {return _efgfc ,_fggd ;};_gg .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_ffeg );_efgfc .fontFile =_ffeg ;
};if _efgfc .FontFile2 !=nil {_cdag ,_fcgcf :=_dcg .NewFontFile2FromPdfObject (_efgfc .FontFile2 );if _fcgcf !=nil {return _efgfc ,_fcgcf ;};_gg .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_cdag .String ());_efgfc ._cgbaa =&_cdag ;
};return _efgfc ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_gbaeb *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _gbaeb ._cfafb ==nil {_gbaeb .GetAnnotations ();};_gbaeb ._cfafb =append (_gbaeb ._cfafb ,annot );};

// MergePageWith appends page content to source Pdf file page content.
func (_ebd *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_gfec :=pageNum -1;var _cadgb *PdfPage ;for _dfbe ,_dcbd :=range _ebd ._baef {if _dfbe ==_gfec {_cadgb =_dcbd ;};};if _cadgb ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _cadgb ._beaf !=nil &&_cadgb ._beaf .GetParser ()==_ebd ._aadf ._cfaef {_cadgb =_cadgb .Duplicate ();_ebd ._baef [_gfec ]=_cadgb ;};page =page .Duplicate ();_fccad (page );_cbef :=_gegd (_cadgb );_fdag :=_gegd (page );_cegff :=make (map[_bb .PdfObjectName ]_bb .PdfObjectName );
for _fgf :=range _fdag {if _ ,_dadg :=_cbef [_fgf ];_dadg {for _faadd :=1;true ;_faadd ++{_eecb :=_bb .PdfObjectName (string (_fgf )+_fd .Itoa (_faadd ));if _ ,_fbce :=_cbef [_eecb ];!_fbce {_cegff [_fgf ]=_eecb ;break ;};};};};_gfae ,_gea :=page .GetContentStreams ();
if _gea !=nil {return _gea ;};_abgf ,_gea :=_cadgb .GetContentStreams ();if _gea !=nil {return _gea ;};for _eeed ,_gbd :=range _gfae {for _fcge ,_ebea :=range _cegff {_gbd =_dce .Replace (_gbd ,"\u002f"+string (_fcge ),"\u002f"+string (_ebea ),-1);};_gfae [_eeed ]=_gbd ;
};_abgf =append (_abgf ,_gfae ...);if _bbgg :=_cadgb .SetContentStreams (_abgf ,_bb .NewFlateEncoder ());_bbgg !=nil {return _bbgg ;};_cadgb ._cfafb =append (_cadgb ._cfafb ,page ._cfafb ...);if _cadgb .Resources ==nil {_cadgb .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_cadgb .Resources .Font =_ebd .mergeResources (_cadgb .Resources .Font ,page .Resources .Font ,_cegff );_cadgb .Resources .XObject =_ebd .mergeResources (_cadgb .Resources .XObject ,page .Resources .XObject ,_cegff );_cadgb .Resources .Properties =_ebd .mergeResources (_cadgb .Resources .Properties ,page .Resources .Properties ,_cegff );
if _cadgb .Resources .ProcSet ==nil {_cadgb .Resources .ProcSet =page .Resources .ProcSet ;};_cadgb .Resources .Shading =_ebd .mergeResources (_cadgb .Resources .Shading ,page .Resources .Shading ,_cegff );_cadgb .Resources .ExtGState =_ebd .mergeResources (_cadgb .Resources .ExtGState ,page .Resources .ExtGState ,_cegff );
};_agf ,_gea :=_cadgb .GetMediaBox ();if _gea !=nil {return _gea ;};_dgad ,_gea :=page .GetMediaBox ();if _gea !=nil {return _gea ;};var _gcgd bool ;if _agf .Llx > _dgad .Llx {_agf .Llx =_dgad .Llx ;_gcgd =true ;};if _agf .Lly > _dgad .Lly {_agf .Lly =_dgad .Lly ;
_gcgd =true ;};if _agf .Urx < _dgad .Urx {_agf .Urx =_dgad .Urx ;_gcgd =true ;};if _agf .Ury < _dgad .Ury {_agf .Ury =_dgad .Ury ;_gcgd =true ;};if _gcgd {_cadgb .MediaBox =_agf ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bff *PdfActionMovie )ToPdfObject ()_bb .PdfObject {_bff .PdfAction .ToPdfObject ();_cg :=_bff ._dcc ;_cfbe :=_cg .PdfObject .(*_bb .PdfObjectDictionary );_cfbe .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeMovie )));_cfbe .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_bff .Annotation );
_cfbe .SetIfNotNil ("\u0054",_bff .T );_cfbe .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_bff .Operation );return _cg ;};

// K returns the value of the key component of the color.
func (_ggde *PdfColorDeviceCMYK )K ()float64 {return _ggde [3]};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_eegbd *PdfPageResources )GetExtGState (keyName _bb .PdfObjectName )(_bb .PdfObject ,bool ){if _eegbd .ExtGState ==nil {return nil ,false ;};_cgegb ,_cccac :=_bb .TraceToDirectObject (_eegbd .ExtGState ).(*_bb .PdfObjectDictionary );if !_cccac {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eegbd .ExtGState );
return nil ,false ;};if _aeffg :=_cgegb .Get (keyName );_aeffg !=nil {return _aeffg ,true ;};return nil ,false ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_cffg *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_befgb :=_bf .NewReader (img .getBase ());_egbd :=_gdf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dcaf :=_bf .NewWriter (_egbd );
_ggdde :=_bdd .Pow (2,float64 (img .BitsPerComponent ))-1;_edfg :=make ([]uint32 ,3);var (_ddfad error ;_feeee ,_abfg ,_deea ,_dbac ,_gbff ,_fdbbf float64 ;);for {_ddfad =_befgb .ReadSamples (_edfg );if _ddfad ==_ecb .EOF {break ;}else if _ddfad !=nil {return img ,_ddfad ;
};_feeee =float64 (_edfg [0])/_ggdde ;_abfg =float64 (_edfg [1])/_ggdde ;_deea =float64 (_edfg [2])/_ggdde ;_dbac =_cffg .Matrix [0]*_bdd .Pow (_feeee ,_cffg .Gamma [0])+_cffg .Matrix [3]*_bdd .Pow (_abfg ,_cffg .Gamma [1])+_cffg .Matrix [6]*_bdd .Pow (_deea ,_cffg .Gamma [2]);
_gbff =_cffg .Matrix [1]*_bdd .Pow (_feeee ,_cffg .Gamma [0])+_cffg .Matrix [4]*_bdd .Pow (_abfg ,_cffg .Gamma [1])+_cffg .Matrix [7]*_bdd .Pow (_deea ,_cffg .Gamma [2]);_fdbbf =_cffg .Matrix [2]*_bdd .Pow (_feeee ,_cffg .Gamma [0])+_cffg .Matrix [5]*_bdd .Pow (_abfg ,_cffg .Gamma [1])+_cffg .Matrix [8]*_bdd .Pow (_deea ,_cffg .Gamma [2]);
_feeee =3.240479*_dbac +-1.537150*_gbff +-0.498535*_fdbbf ;_abfg =-0.969256*_dbac +1.875992*_gbff +0.041556*_fdbbf ;_deea =0.055648*_dbac +-0.204043*_gbff +1.057311*_fdbbf ;_feeee =_bdd .Min (_bdd .Max (_feeee ,0),1.0);_abfg =_bdd .Min (_bdd .Max (_abfg ,0),1.0);
_deea =_bdd .Min (_bdd .Max (_deea ,0),1.0);_edfg [0]=uint32 (_feeee *_ggdde );_edfg [1]=uint32 (_abfg *_ggdde );_edfg [2]=uint32 (_deea *_ggdde );if _ddfad =_dcaf .WriteSamples (_edfg );_ddfad !=nil {return img ,_ddfad ;};};return _dffda (&_egbd ),nil ;
};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_ecdfb *PdfPage )GetContainingPdfObject ()_bb .PdfObject {return _ecdfb ._beaf };

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_agab :=map[rune ]int {};for _ ,_afgbb :=range text {_agab [_afgbb ]++;};return _agab ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bb .PdfObjectStream ;OCSP []*_bb .PdfObjectStream ;CRL []*_bb .PdfObjectStream ;TU *_bb .PdfObjectString ;TS *_bb .PdfObjectString ;};func (_efdd *PdfReader )newPdfAnnotationStrikeOut (_fgba *_bb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_deba :=PdfAnnotationStrikeOut {};
_gcfb ,_dbeff :=_efdd .newPdfAnnotationMarkupFromDict (_fgba );if _dbeff !=nil {return nil ,_dbeff ;};_deba .PdfAnnotationMarkup =_gcfb ;_deba .QuadPoints =_fgba .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_deba ,nil ;
};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_baca *PdfPageResourcesColorspaces )Set (key _bb .PdfObjectName ,val PdfColorspace ){if _ ,_cgddf :=_baca .Colorspaces [string (key )];!_cgddf {_baca .Names =append (_baca .Names ,string (key ));};_baca .Colorspaces [string (key )]=val ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func (_dffgb *PdfWriter )flushWriter ()error {if _dffgb ._ggcbb ==nil {_dffgb ._ggcbb =_dffgb ._daeee .Flush ();};return _dffgb ._ggcbb ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_cfede :_bb .MakeDict (),ColorComponents :colorComponents };
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_acca pdfFontType0 )GetRuneMetrics (r rune )(_dcg .CharMetrics ,bool ){if _acca .DescendantFont ==nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_acca );
return _dcg .CharMetrics {},false ;};return _acca .DescendantFont .GetRuneMetrics (r );};

// GetNumComponents returns the number of color components (1 for Separation).
func (_dffaf *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bcfcd *PdfShadingType1 )ToPdfObject ()_bb .PdfObject {_bcfcd .PdfShading .ToPdfObject ();_eecea ,_feaged :=_bcfcd .getShadingDict ();if _feaged !=nil {_gg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bcfcd .Domain !=nil {_eecea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bcfcd .Domain );};if _bcfcd .Matrix !=nil {_eecea .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bcfcd .Matrix );};if _bcfcd .Function !=nil {if len (_bcfcd .Function )==1{_eecea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcfcd .Function [0].ToPdfObject ());
}else {_cbadg :=_bb .MakeArray ();for _ ,_ebaag :=range _bcfcd .Function {_cbadg .Append (_ebaag .ToPdfObject ());};_eecea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbadg );};};return _bcfcd ._dacad ;};func _bdfgb (_fdafec map[_dcg .GID ]int ,_eeag uint16 )*_bb .PdfObjectArray {_efff :=&_bb .PdfObjectArray {};
_faedb :=_dcg .GID (_eeag );for _dbdb :=_dcg .GID (0);_dbdb < _faedb ;{_acdee ,_dabfe :=_fdafec [_dbdb ];if !_dabfe {_dbdb ++;continue ;};_dcgge :=_dbdb ;for _eadb :=_dcgge +1;_eadb < _faedb ;_eadb ++{if _accea ,_dggc :=_fdafec [_eadb ];!_dggc ||_acdee !=_accea {break ;
};_dcgge =_eadb ;};_efff .Append (_bb .MakeInteger (int64 (_dbdb )));_efff .Append (_bb .MakeInteger (int64 (_dcgge )));_efff .Append (_bb .MakeInteger (int64 (_acdee )));_dbdb =_dcgge +1;};return _efff ;};

// GetBorderWidth returns the border style's width.
func (_bdgg *PdfBorderStyle )GetBorderWidth ()float64 {if _bdgg .W ==nil {return 1;};return *_bdgg .W ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_afbad *PdfPageResourcesColorspaces )ToPdfObject ()_bb .PdfObject {_fbfg :=_bb .MakeDict ();for _ ,_cceg :=range _afbad .Names {_fbfg .Set (_bb .PdfObjectName (_cceg ),_afbad .Colorspaces [_cceg ].ToPdfObject ());};if _afbad ._baeab !=nil {_afbad ._baeab .PdfObject =_fbfg ;
return _afbad ._baeab ;};return _fbfg ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_eedcga *PdfPageResources )GetXObjectImageByName (keyName _bb .PdfObjectName )(*XObjectImage ,error ){_fcade ,_bcgab :=_eedcga .GetXObjectByName (keyName );if _fcade ==nil {return nil ,nil ;};if _bcgab !=XObjectTypeImage {return nil ,_ed .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_fdbd ,_geccac :=NewXObjectImageFromStream (_fcade );if _geccac !=nil {return nil ,_geccac ;};return _fdbd ,nil ;};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;func _aecg (_agcb _bb .PdfObject )(*PdfColorspaceICCBased ,error ){_fgbee :=&PdfColorspaceICCBased {};if _feafd ,_eagc :=_agcb .(*_bb .PdfIndirectObject );_eagc {_fgbee ._ccab =_feafd ;};_agcb =_bb .TraceToDirectObject (_agcb );
_dgefd ,_dceba :=_agcb .(*_bb .PdfObjectArray );if !_dceba {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dgefd .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_agcb =_bb .TraceToDirectObject (_dgefd .Get (0));_aecb ,_dceba :=_agcb .(*_bb .PdfObjectName );if !_dceba {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_aecb !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_agcb =_dgefd .Get (1);
_dcgfg ,_dceba :=_bb .GetStream (_agcb );if !_dceba {_gg .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_agcb );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_agaf :=_dcgfg .PdfObjectDictionary ;_eeedd ,_dceba :=_agaf .Get ("\u004e").(*_bb .PdfObjectInteger );
if !_dceba {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_eeedd !=1&&*_eeedd !=3&&*_eeedd !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_fgbee .N =int (*_eeedd );if _ffa :=_agaf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_ffa !=nil {_abdd ,_eaffa :=NewPdfColorspaceFromPdfObject (_ffa );if _eaffa !=nil {return nil ,_eaffa ;};_fgbee .Alternate =_abdd ;};if _ecegd :=_agaf .Get ("\u0052\u0061\u006eg\u0065");
_ecegd !=nil {_ecegd =_bb .TraceToDirectObject (_ecegd );_dbgga ,_ggac :=_ecegd .(*_bb .PdfObjectArray );if !_ggac {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _dbgga .Len ()!=2*_fgbee .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_aedcc ,_adfd :=_dbgga .GetAsFloat64Slice ();if _adfd !=nil {return nil ,_adfd ;};_fgbee .Range =_aedcc ;}else {_fgbee .Range =make ([]float64 ,2*_fgbee .N );for _faed :=0;_faed < _fgbee .N ;_faed ++{_fgbee .Range [2*_faed ]=0.0;_fgbee .Range [2*_faed +1]=1.0;
};};if _caebc :=_agaf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_caebc !=nil {_fcce ,_bfac :=_caebc .(*_bb .PdfObjectStream );if !_bfac {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_fgbee .Metadata =_fcce ;};_dedg ,_dffa :=_bb .DecodeStream (_dcgfg );if _dffa !=nil {return nil ,_dffa ;};_fgbee .Data =_dedg ;_fgbee ._eabcb =_dcgfg ;return _fgbee ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_fedfc *PdfShading )GetContext ()PdfModel {return _fedfc ._gbbdg };func (_ggbg *PdfWriter )hasObject (_bbafg _bb .PdfObject )bool {_ ,_dabee :=_ggbg ._bfdb [_bbafg ];return _dabee ;};

// WriteString outputs the object as it is to be written to file.
func (_eaaee *pdfSignDictionary )WriteString ()string {_eaaee ._gceca =0;_eaaee ._fceca =0;_eaaee ._faggb =0;_eaaee ._eccdf =0;_gdcdd :=_aa .NewBuffer (nil );_gdcdd .WriteString ("\u003c\u003c");for _ ,_afgaad :=range _eaaee .Keys (){_cbae :=_eaaee .Get (_afgaad );
switch _afgaad {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gdcdd .WriteString (_afgaad .WriteString ());_gdcdd .WriteString ("\u0020");_eaaee ._faggb =_gdcdd .Len ();_gdcdd .WriteString (_cbae .WriteString ());_gdcdd .WriteString ("\u0020");_eaaee ._eccdf =_gdcdd .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gdcdd .WriteString (_afgaad .WriteString ());_gdcdd .WriteString ("\u0020");_eaaee ._gceca =_gdcdd .Len ();_gdcdd .WriteString (_cbae .WriteString ());_gdcdd .WriteString ("\u0020");_eaaee ._fceca =_gdcdd .Len ()-1;
default:_gdcdd .WriteString (_afgaad .WriteString ());_gdcdd .WriteString ("\u0020");_gdcdd .WriteString (_cbae .WriteString ());};};_gdcdd .WriteString ("\u003e\u003e");return _gdcdd .String ();};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_gcc :=NewPdfAnnotation ();_ddb :=&PdfAnnotationPolyLine {};_ddb .PdfAnnotation =_gcc ;_ddb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcc .SetContext (_ddb );return _ddb ;};func (_bce *PdfReader )newPdfActionGotoRFromDict (_cgd *_bb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_dda ,_ca :=_fda (_cgd .Get ("\u0046"));
if _ca !=nil {return nil ,_ca ;};return &PdfActionGoToR {D :_cgd .Get ("\u0044"),NewWindow :_cgd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dda },nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_ageaf *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgge ,_feffc :=_bb .GetNumbersAsFloat (objects );
if _feffc !=nil {return nil ,_feffc ;};return _ageaf .ColorFromFloats (_fgge );};

// HasXObjectByName checks if has XObject resource by name.
func (_aaege *PdfPage )HasXObjectByName (name _bb .PdfObjectName )bool {_ccda ,_ecfd :=_aaege .Resources .XObject .(*_bb .PdfObjectDictionary );if !_ecfd {return false ;};if _abfeg :=_ccda .Get (name );_abfeg !=nil {return true ;};return false ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bb .PdfObjectDictionary )(*PdfPageResources ,error ){_ecgcd :=NewPdfPageResources ();if _ggdggg :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ggdggg !=nil {_ecgcd .ExtGState =_ggdggg ;};if _begbaa :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_begbaa !=nil &&!_bb .IsNullObject (_begbaa ){_ecgcd .ColorSpace =_begbaa ;};if _edfgf :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_edfgf !=nil {_ecgcd .Pattern =_edfgf ;};if _fddfa :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_fddfa !=nil {_ecgcd .Shading =_fddfa ;
};if _gcggg :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_gcggg !=nil {_ecgcd .XObject =_gcggg ;};if _fgafd :=_bb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fgafd !=nil {_ecgcd .Font =_fgafd ;};if _fdade :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_fdade !=nil {_ecgcd .ProcSet =_fdade ;};if _dafce :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dafce !=nil {_ecgcd .Properties =_dafce ;};return _ecgcd ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_cgbb *PdfFieldButton )ToPdfObject ()_bb .PdfObject {_cgbb .PdfField .ToPdfObject ();_gebgg :=_cgbb ._afbea ;_dade :=_gebgg .PdfObject .(*_bb .PdfObjectDictionary );_dade .Set ("\u0046\u0054",_bb .MakeName ("\u0042\u0074\u006e"));if _cgbb .Opt !=nil {_dade .Set ("\u004f\u0070\u0074",_cgbb .Opt );
};return _gebgg ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_aebde *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_eaac FieldFlag )Has (fl FieldFlag )bool {return (_eaac .Mask ()&fl .Mask ())> 0};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_fgfbb *PdfFont )CharcodesToUnicode (charcodes []_ga .CharCode )[]rune {_caggd ,_ ,_ :=_fgfbb .CharcodesToUnicodeWithStats (charcodes );return _caggd ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_egaa :=NewPdfAnnotation ();_cccd :=&PdfAnnotationScreen {};_cccd .PdfAnnotation =_egaa ;_egaa .SetContext (_cccd );return _cccd ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_aefb *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aggd ,_fgbd :=_bb .GetNumbersAsFloat (objects );
if _fgbd !=nil {return nil ,_fgbd ;};return _aefb .ColorFromFloats (_aggd );};

// String returns a human readable description of `fontfile`.
func (_fagb *fontFile )String ()string {_dgeeb :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fagb ._abecc !=nil {_dgeeb =_fagb ._abecc .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fagb ._aacfg ,_dgeeb );
};var ErrColorOutOfRange =_ed .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");func _acefg (_cacdf []byte )(_ggcf ,_cdfae string ,_ecbf error ){_gg .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cacdf ));
_cfcg :=_gfagf .FindIndex (_cacdf );if _cfcg ==nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bb .ErrTypeError ;};_acfg :=_cfcg [1];_gagad :=_dce .Index (string (_cacdf [_acfg :]),_aeacc );if _gagad < 0{_ggcf =string (_cacdf [_acfg :]);return _ggcf ,"",nil ;};_fcbac :=_acfg +_gagad ;_ggcf =string (_cacdf [_acfg :_fcbac ]);_affdf :=_fcbac ;
_gagad =_dce .Index (string (_cacdf [_affdf :]),_fcadf );if _gagad < 0{_gg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ecbf );
return "","",_bb .ErrTypeError ;};_egee :=_affdf +_gagad ;_cdfae =string (_cacdf [_affdf :_egee ]);return _ggcf ,_cdfae ,nil ;};func (_facc *PdfReader )newPdfActionTransFromDict (_ced *_bb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ced .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// AddOCSPs adds OCSPs to DSS.
func (_gcgee *DSS )AddOCSPs (ocsps [][]byte )([]*_bb .PdfObjectStream ,error ){return _gcgee .add (&_gcgee .OCSPs ,_gcgee ._fccf ,ocsps );};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bb .PdfObject ;Name _bb .PdfObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_aggbc *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ed .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_edag ,_ddafa :=_bacgg (basefont );if _ddafa !=nil {return nil ,_ddafa ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_edag ._fcdce =_ga .NewWinAnsiEncoder ();};return &PdfFont {_gbagg :&_edag },nil ;
};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bcfc *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bcfc .baseFields ()._eadda !=nil {return _bcfc .baseFields ()._eadda ;};if _dedgb :=_bcfc ._gbagg .getFontDescriptor ();_dedgb !=nil {return _dedgb ;};_gg .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bcfc );
return nil ;};func _gdbf (_bafa _bb .PdfObject )(*PdfColorspaceCalRGB ,error ){_bgcb :=NewPdfColorspaceCalRGB ();if _bgge ,_ddfa :=_bafa .(*_bb .PdfIndirectObject );_ddfa {_bgcb ._eaga =_bgge ;};_bafa =_bb .TraceToDirectObject (_bafa );_fcbg ,_dbfg :=_bafa .(*_bb .PdfObjectArray );
if !_dbfg {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fcbg .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bafa =_bb .TraceToDirectObject (_fcbg .Get (0));_bacfa ,_dbfg :=_bafa .(*_bb .PdfObjectName );if !_dbfg {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_bacfa !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_bafa =_bb .TraceToDirectObject (_fcbg .Get (1));
_bcgc ,_dbfg :=_bafa .(*_bb .PdfObjectDictionary );if !_dbfg {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_bafa =_bcgc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_bafa =_bb .TraceToDirectObject (_bafa );_fdbbc ,_dbfg :=_bafa .(*_bb .PdfObjectArray );if !_dbfg {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _fdbbc .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_agfe ,_acef :=_fdbbc .GetAsFloat64Slice ();
if _acef !=nil {return nil ,_acef ;};_bgcb .WhitePoint =_agfe ;_bafa =_bcgc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bafa !=nil {_bafa =_bb .TraceToDirectObject (_bafa );_aceg ,_fabf :=_bafa .(*_bb .PdfObjectArray );if !_fabf {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _aceg .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ebf ,_gbgb :=_aceg .GetAsFloat64Slice ();
if _gbgb !=nil {return nil ,_gbgb ;};_bgcb .BlackPoint =_ebf ;};_bafa =_bcgc .Get ("\u0047\u0061\u006dm\u0061");if _bafa !=nil {_bafa =_bb .TraceToDirectObject (_bafa );_fbfa ,_edfc :=_bafa .(*_bb .PdfObjectArray );if !_edfc {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _fbfa .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_fgdc ,_bgegc :=_fbfa .GetAsFloat64Slice ();if _bgegc !=nil {return nil ,_bgegc ;
};_bgcb .Gamma =_fgdc ;};_bafa =_bcgc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _bafa !=nil {_bafa =_bb .TraceToDirectObject (_bafa );_efcf ,_gfde :=_bafa .(*_bb .PdfObjectArray );if !_gfde {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _efcf .Len ()!=9{_gg .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_efcf .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_deed ,_cebb :=_efcf .GetAsFloat64Slice ();if _cebb !=nil {return nil ,_cebb ;};_bgcb .Matrix =_deed ;};return _bgcb ,nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_gabd :=&PdfColorspaceCalGray {};_gabd .BlackPoint =[]float64 {0.0,0.0,0.0};_gabd .Gamma =1;return _gabd ;};

// ToInteger convert to an integer format.
func (_dcabf *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_ecba :=_bdd .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_ecba *_dcabf .C ()),uint32 (_ecba *_dcabf .M ()),uint32 (_ecba *_dcabf .Y ()),uint32 (_ecba *_dcabf .K ())};};

// ToPdfObject implements interface PdfModel.
func (_gbb *PdfActionGoToR )ToPdfObject ()_bb .PdfObject {_gbb .PdfAction .ToPdfObject ();_dfg :=_gbb ._dcc ;_ccf :=_dfg .PdfObject .(*_bb .PdfObjectDictionary );_ccf .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeGoToR )));if _gbb .F !=nil {_ccf .Set ("\u0046",_gbb .F .ToPdfObject ());
};_ccf .SetIfNotNil ("\u0044",_gbb .D );_ccf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gbb .NewWindow );return _dfg ;};func (_bfcd *pdfFontType0 )subsetRegistered ()error {_ecbdc ,_effge :=_bfcd .DescendantFont ._gbagg .(*pdfCIDFontType2 );
if !_effge {_gg .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_bfcd .DescendantFont );return nil ;};if _ecbdc ==nil {return nil ;
};if _ecbdc ._eadda ==nil {_gg .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _bfcd ._fbfad ==nil {_gg .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_gbfgf ,_effge :=_bb .GetStream (_ecbdc ._eadda .FontFile2 );if !_effge {_gg .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ed .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bgggea ,_efgfg :=_bb .DecodeStream (_gbfgf );if _efgfg !=nil {_gg .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_efgfg );
return _efgfg ;};_dfcbd ,_efgfg :=_ad .Parse (_aa .NewReader (_bgggea ));if _efgfg !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gbfgf .Stream ));
return _efgfg ;};var _fdee []rune ;var _efef *_ad .Font ;switch _faag :=_bfcd ._fbfad .(type ){case *_ga .TrueTypeFontEncoder :_fdee =_faag .RegisteredRunes ();_efef ,_efgfg =_dfcbd .SubsetKeepRunes (_fdee );if _efgfg !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efgfg );
return _efgfg ;};_faag .SubsetRegistered ();case *_ga .IdentityEncoder :_fdee =_faag .RegisteredRunes ();_afeeb :=make ([]_ad .GlyphIndex ,len (_fdee ));for _dgde ,_ggbbc :=range _fdee {_afeeb [_dgde ]=_ad .GlyphIndex (_ggbbc );};_efef ,_efgfg =_dfcbd .SubsetKeepIndices (_afeeb );
if _efgfg !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efgfg );return _efgfg ;};case _ga .SimpleEncoder :_eccbd :=_faag .Charcodes ();for _ ,_fdabe :=range _eccbd {_cafce ,_cdbbb :=_faag .CharcodeToRune (_fdabe );if !_cdbbb {_gg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_fdabe );
continue ;};_fdee =append (_fdee ,_cafce );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_bfcd ._fbfad );
};var _gfdf _aa .Buffer ;_efgfg =_efef .Write (&_gfdf );if _efgfg !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efgfg );return _efgfg ;};if _bfcd ._beee !=nil {_cagba :=make (map[_af .CharCode ]rune ,len (_fdee ));for _ ,_bcde :=range _fdee {_gdfc ,_effb :=_bfcd ._fbfad .RuneToCharcode (_bcde );
if !_effb {continue ;};_cagba [_af .CharCode (_gdfc )]=_bcde ;};_bfcd ._beee =_af .NewToUnicodeCMap (_cagba );};_gbfgf ,_efgfg =_bb .MakeStream (_gfdf .Bytes (),_bb .NewFlateEncoder ());if _efgfg !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efgfg );
return _efgfg ;};_gbfgf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bb .MakeInteger (int64 (_gfdf .Len ())));if _agde ,_abcf :=_bb .GetStream (_ecbdc ._eadda .FontFile2 );_abcf {*_agde =*_gbfgf ;}else {_ecbdc ._eadda .FontFile2 =_gbfgf ;};_aeef :=_aeec ();
if len (_bfcd ._gdaeed )> 0{_bfcd ._gdaeed =_gfacd (_bfcd ._gdaeed ,_aeef );};if len (_ecbdc ._gdaeed )> 0{_ecbdc ._gdaeed =_gfacd (_ecbdc ._gdaeed ,_aeef );};if len (_bfcd ._ffed )> 0{_bfcd ._ffed =_gfacd (_bfcd ._ffed ,_aeef );};if _ecbdc ._eadda !=nil {_fafb ,_dcabd :=_bb .GetName (_ecbdc ._eadda .FontName );
if _dcabd &&len (_fafb .String ())> 0{_gdfcc :=_gfacd (_fafb .String (),_aeef );_ecbdc ._eadda .FontName =_bb .MakeName (_gdfcc );};};return nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_ebee :=&PdfColorspaceSpecialSeparation {};return _ebee ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dbggb pdfFontType3 )GetCharMetrics (code _ga .CharCode )(_dcg .CharMetrics ,bool ){if _bccee ,_cgdeab :=_dbggb ._daed [code ];_cgdeab {return _dcg .CharMetrics {Wx :_bccee },true ;};if _dcg .IsStdFont (_dcg .StdFontName (_dbggb ._gdaeed )){return _dcg .CharMetrics {Wx :250},true ;
};return _dcg .CharMetrics {},false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_ecdec *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacg :=vals [0];if _cacg < 0.0||_cacg > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cacg );
return nil ,ErrColorOutOfRange ;};_gcfa :=vals [1];if _gcfa < 0.0||_gcfa > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gcfa );return nil ,ErrColorOutOfRange ;
};_abfca :=vals [2];if _abfca < 0.0||_abfca > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_abfca );return nil ,ErrColorOutOfRange ;};_ddbf :=NewPdfColorCalRGB (_cacg ,_gcfa ,_abfca );
return _ddbf ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gfge *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eecd :=vals [0];if _eecd < 0.0||_eecd > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eecd );
return nil ,ErrColorOutOfRange ;};_ggfaf :=NewPdfColorCalGray (_eecd );return _ggfaf ,nil ;};func _fadf (_agggb string )map[string ]string {_gfaec :=_bdfgf .Split (_agggb ,-1);_gbafd :=map[string ]string {};for _ ,_fcgg :=range _gfaec {_agdd :=_gdaga .FindStringSubmatch (_fcgg );
if _agdd ==nil {continue ;};_ggce ,_afaae :=_agdd [1],_agdd [2];_gbafd [_ggce ]=_afaae ;};return _gbafd ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ffae ,_fagdg :=_be .Open (filePath );if _fagdg !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fagdg );
return nil ,_fagdg ;};defer _ffae .Close ();return NewPdfFontFromTTF (_ffae );};func (_bbgdf *PdfWriter )setCatalogVersion (){_bbgdf ._ebgdb .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bb .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_bbgdf ._gecfd .Major ,_bbgdf ._gecfd .Minor )));
};

// Encoder returns the font's text encoder.
func (_febfg pdfFontType0 )Encoder ()_ga .TextEncoder {return _febfg ._fbfad };func (_dfdfg *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _dfdfg ._eadda };

// GetFontDescriptor returns the font descriptor for `font`.
func (_cacf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _cacf ._gbagg .getFontDescriptor (),nil ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_bb .PdfObjectName ;P *_bb .PdfObjectInteger ;V *_bb .PdfObjectName ;};func (_agg *PdfReader )newPdfAnnotationWidgetFromDict (_fbbc *_bb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_aebg :=PdfAnnotationWidget {};
_aebg .H =_fbbc .Get ("\u0048");_aebg .MK =_fbbc .Get ("\u004d\u004b");_aebg .A =_fbbc .Get ("\u0041");_aebg .AA =_fbbc .Get ("\u0041\u0041");_aebg .BS =_fbbc .Get ("\u0042\u0053");_aebg .Parent =_fbbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_aebg ,nil ;
};func _eggde ()_fb .Time {_gbdbb .Lock ();defer _gbdbb .Unlock ();return _fdadc };

// Write writes out the PDF.
func (_gabgg *PdfWriter )Write (writer _ecb .Writer )error {_gg .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_agcdd :=_gabgg .checkLicense ();if _agcdd !=nil {return _agcdd ;};if _agcdd =_gabgg .writeOutlines ();_agcdd !=nil {return _agcdd ;};
if _agcdd =_gabgg .writeAcroFormFields ();_agcdd !=nil {return _agcdd ;};if _agcdd =_gabgg .writeNamesDictionary ();_agcdd !=nil {return _agcdd ;};_gabgg .checkPendingObjects ();if _agcdd =_gabgg .writeOutputIntents ();_agcdd !=nil {return _agcdd ;};_gabgg .setCatalogVersion ();
_gabgg .copyObjects ();if _agcdd =_gabgg .optimize ();_agcdd !=nil {return _agcdd ;};if _agcdd =_gabgg .optimizeDocument ();_agcdd !=nil {return _agcdd ;};var _cfcec _dg .Hash ;if _gabgg ._dddbg {_cfcec =_dgc .New ();writer =_ecb .MultiWriter (_cfcec ,writer );
};_gabgg .setWriter (writer );_fdbbe :=_gabgg .checkCrossReferenceStream ();_abbcd ,_fdbbe :=_gabgg .mapObjectStreams (_fdbbe );_gabgg .adjustXRefAffectedVersion (_fdbbe );_gabgg .writeDocumentVersion ();_gabgg .updateObjectNumbers ();_gabgg .writeObjects ();
if _agcdd =_gabgg .writeObjectsInStreams (_abbcd );_agcdd !=nil {return _agcdd ;};_afabe :=_gabgg ._ggaef ;var _aeccff int ;for _aagdg :=range _gabgg ._gaded {if _aagdg > _aeccff {_aeccff =_aagdg ;};};if _gabgg ._dddbg {if _agcdd =_gabgg .setHashIDs (_cfcec );
_agcdd !=nil {return _agcdd ;};};if _fdbbe {if _agcdd =_gabgg .writeXRefStreams (_aeccff ,_afabe );_agcdd !=nil {return _agcdd ;};}else {_gabgg .writeTrailer (_aeccff );};_gabgg .makeOffSetReference (_afabe );if _agcdd =_gabgg .flushWriter ();_agcdd !=nil {return _agcdd ;
};return nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_baeab *_bb .PdfIndirectObject ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _bb .PdfObjectName ;};

// IsCID returns true if the underlying font is CID.
func (_afgag *PdfFont )IsCID ()bool {return _afgag .baseFields ().isCIDFont ()};func _fda (_afa _bb .PdfObject )(*PdfFilespec ,error ){if _afa ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_afa );};

// ToPdfObject implements interface PdfModel.
func (_fgafa *PdfAnnotationSound )ToPdfObject ()_bb .PdfObject {_fgafa .PdfAnnotation .ToPdfObject ();_dcb :=_fgafa ._aaf ;_fgadc :=_dcb .PdfObject .(*_bb .PdfObjectDictionary );_fgafa .PdfAnnotationMarkup .appendToPdfDictionary (_fgadc );_fgadc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u006f\u0075n\u0064"));
_fgadc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fgafa .Sound );_fgadc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fgafa .Name );return _dcb ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gce *PdfAction )GetContext ()PdfModel {if _gce ==nil {return nil ;};return _gce ._afg ;};func (_gfgcg *PdfWriter )AttachFile (file *EmbeddedFile )error {_dbbgc :=_gfgcg ._bccad ;if _dbbgc ==nil {_dbbgc =_bgcc ();};_gfeec :=_dbbgc .addEmbeddedFile (file );
if _gfeec !=nil {return _gfeec ;};_gfgcg ._bccad =_dbbgc ;return nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_gfcd *PdfFieldSignature )ToPdfObject ()_bb .PdfObject {if _gfcd .PdfAnnotationWidget !=nil {_gfcd .PdfAnnotationWidget .ToPdfObject ();};_gfcd .PdfField .ToPdfObject ();_egceb :=_gfcd ._afbea ;_dfdg :=_egceb .PdfObject .(*_bb .PdfObjectDictionary );
_dfdg .SetIfNotNil ("\u0046\u0054",_bb .MakeName ("\u0053\u0069\u0067"));_dfdg .SetIfNotNil ("\u004c\u006f\u0063\u006b",_gfcd .Lock );_dfdg .SetIfNotNil ("\u0053\u0056",_gfcd .SV );if _gfcd .V !=nil {_dfdg .SetIfNotNil ("\u0056",_gfcd .V .ToPdfObject ());
};return _egceb ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_geeb :=&PdfColorPatternType3 {};return _geeb };func (_ffaa *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func (_ceegb fontCommon )asPdfObjectDictionary (_aebge string )*_bb .PdfObjectDictionary {if _aebge !=""&&_ceegb ._ecdc !=""&&_aebge !=_ceegb ._ecdc {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_aebge ,_ceegb );
}else if _aebge ==""&&_ceegb ._ecdc ==""{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ceegb );
}else if _ceegb ._ecdc ==""{_ceegb ._ecdc =_aebge ;};_bcfa :=_bb .MakeDict ();_bcfa .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0046\u006f\u006e\u0074"));_bcfa .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bb .MakeName (_ceegb ._gdaeed ));
_bcfa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName (_ceegb ._ecdc ));if _ceegb ._eadda !=nil {_bcfa .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_ceegb ._eadda .ToPdfObject ());};if _ceegb ._daab !=nil {_bcfa .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ceegb ._daab );
}else if _ceegb ._beee !=nil {_cafb ,_fadgc :=_ceegb ._beee .Stream ();if _fadgc !=nil {_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_fadgc );
}else {_bcfa .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cafb );};};return _bcfa ;};func _eggae (_degdd _bb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cddffe :=&PdfPageResourcesColorspaces {};if _bgdd ,_ggee :=_degdd .(*_bb .PdfIndirectObject );
_ggee {_cddffe ._baeab =_bgdd ;_degdd =_bgdd .PdfObject ;};_cdcab ,_cbbcf :=_bb .GetDict (_degdd );if !_cbbcf {return nil ,_ed .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_cddffe .Names =[]string {};_cddffe .Colorspaces =map[string ]PdfColorspace {};for _ ,_ffgdc :=range _cdcab .Keys (){_gcag :=_cdcab .Get (_ffgdc );_cddffe .Names =append (_cddffe .Names ,string (_ffgdc ));_bgagb ,_ffgb :=NewPdfColorspaceFromPdfObject (_gcag );
if _ffgb !=nil {return nil ,_ffgb ;};_cddffe .Colorspaces [string (_ffgdc )]=_bgagb ;};return _cddffe ,nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bb .PdfObject ;PreserveRB _bb .PdfObject ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_bagb *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _bb .GetNumberAsFloat (_bagb .XHeight );};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_bb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cbgf *_bb .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_gbf *PdfActionTrans )ToPdfObject ()_bb .PdfObject {_gbf .PdfAction .ToPdfObject ();_aeba :=_gbf ._dcc ;_ea :=_aeba .PdfObject .(*_bb .PdfObjectDictionary );_ea .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeTrans )));_ea .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gbf .Trans );
return _aeba ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bb .PdfIndirectObject ;SV *_bb .PdfIndirectObject ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_fgdb *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_eead :=0.3*_fgdb .R ()+0.59*_fgdb .G ()+0.11*_fgdb .B ();_eead =_bdd .Min (_bdd .Max (_eead ,0.0),1.0);return NewPdfColorDeviceGray (_eead );};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ToPdfObject implements interface PdfModel.
func (_gadg *PdfAnnotationCircle )ToPdfObject ()_bb .PdfObject {_gadg .PdfAnnotation .ToPdfObject ();_efcd :=_gadg ._aaf ;_abcb :=_efcd .PdfObject .(*_bb .PdfObjectDictionary );_gadg .PdfAnnotationMarkup .appendToPdfDictionary (_abcb );_abcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_abcb .SetIfNotNil ("\u0042\u0053",_gadg .BS );_abcb .SetIfNotNil ("\u0049\u0043",_gadg .IC );_abcb .SetIfNotNil ("\u0042\u0045",_gadg .BE );_abcb .SetIfNotNil ("\u0052\u0044",_gadg .RD );return _efcd ;};

// GetNumPages returns the number of pages in the document.
func (_gbabc *PdfReader )GetNumPages ()(int ,error ){if _gbabc ._cfaef .GetCrypter ()!=nil &&!_gbabc ._cfaef .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_gbabc ._dggdb ),nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bb .PdfObjectArray ;Matrix *_bb .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gegb *PdfColorspaceSpecialPattern )ToPdfObject ()_bb .PdfObject {if _gegb .UnderlyingCS ==nil {return _bb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_bfbab :=_bb .MakeArray (_bb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bfbab .Append (_gegb .UnderlyingCS .ToPdfObject ());
if _gegb ._egaaa !=nil {_gegb ._egaaa .PdfObject =_bfbab ;return _gegb ._egaaa ;};return _bfbab ;};func _abcga (_bgeaa *_bb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_gbac :=&PdfFieldChoice {};_gbac .Opt ,_ =_bb .GetArray (_bgeaa .Get ("\u004f\u0070\u0074"));
_gbac .TI ,_ =_bb .GetInt (_bgeaa .Get ("\u0054\u0049"));_gbac .I ,_ =_bb .GetArray (_bgeaa .Get ("\u0049"));return _gbac ,nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_edg :=NewPdfAnnotation ();_dccfc :=&PdfAnnotationCaret {};_dccfc .PdfAnnotation =_edg ;_dccfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edg .SetContext (_dccfc );return _dccfc ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_fbfcb *_bb .PdfObjectDictionary ;Type *_bb .PdfObjectName ;TransformMethod *_bb .PdfObjectName ;TransformParams _bb .PdfObject ;Data _bb .PdfObject ;DigestMethod *_bb .PdfObjectName ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_ageg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if _ageg .Alternate ==nil {if _ageg .N ==1{_gbag :=NewPdfColorspaceDeviceGray ();return _gbag .ColorFromPdfObjects (objects );}else if _ageg .N ==3{_cegca :=NewPdfColorspaceDeviceRGB ();
return _cegca .ColorFromPdfObjects (objects );}else if _ageg .N ==4{_acga :=NewPdfColorspaceDeviceCMYK ();return _acga .ColorFromPdfObjects (objects );}else {return nil ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _ageg .Alternate .ColorFromPdfObjects (objects );};type pdfFontSimple struct{fontCommon ;_edea *_bb .PdfIndirectObject ;_cbgg map[_ga .CharCode ]float64 ;_fcdce _ga .TextEncoder ;_gfgb _ga .TextEncoder ;_dfcc *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bb .PdfObject ;LastChar _bb .PdfObject ;Widths _bb .PdfObject ;Encoding _bb .PdfObject ;_cbec *_dcg .RuneCharSafeMap ;};var _fbdfa =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func (_cddde *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ba .Permissions ;Algorithm EncryptionAlgorithm ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ggbaa *Permissions )GetContainingPdfObject ()_bb .PdfObject {return _ggbaa ._bfee };

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_bb .PdfObjectString ;Q *_bb .PdfObjectInteger ;DS *_bb .PdfObjectString ;RV _bb .PdfObject ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_acgbd byte )byte ;

// Register registers (caches) a model to primitive object relationship.
func (_aabg *modelManager )Register (primitive _bb .PdfObject ,model PdfModel ){_aabg ._fdgab [model ]=primitive ;_aabg ._dffg [primitive ]=model ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_ggcgb *_bb .PdfIndirectObject ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_afccf *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_gcdb :=_afccf .fill (provider ,appGen );if _gcdb !=nil {return _gcdb ;};if _ ,_acec :=provider .(FieldImageProvider );_acec {_gcdb =_afccf .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _gcdb ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_fecae *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _bdcdf []*PdfField ;_fbebad :=map[*_bb .PdfIndirectObject ]struct{}{};for _ ,_agcae :=range _fecae .PageList {_ecfbd ,_dgbag :=_agcae .GetAnnotations ();if _dgbag !=nil {return _dgbag ;
};for _ ,_dbacc :=range _ecfbd {var _ecfcb *PdfField ;switch _fdfad :=_dbacc .GetContext ().(type ){case *PdfAnnotationWidget :if _fdfad ._dbef !=nil {_ecfcb =_fdfad ._dbef ;break ;};if _ffdc ,_cdcgbd :=_bb .GetIndirect (_fdfad .Parent );_cdcgbd {_ecfcb ,_dgbag =_fecae .newPdfFieldFromIndirectObject (_ffdc ,nil );
if _dgbag ==nil {break ;};_gg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ffdc ,_dgbag );
};if _fdfad ._aaf !=nil {_ecfcb ,_dgbag =_fecae .newPdfFieldFromIndirectObject (_fdfad ._aaf ,nil );if _dgbag ==nil {break ;};_gg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fdfad ._aaf ,_dgbag );
};};if _ecfcb ==nil {continue ;};if _ ,_eeggd :=_fbebad [_ecfcb ._afbea ];_eeggd {continue ;};_fbebad [_ecfcb ._afbea ]=struct{}{};_bdcdf =append (_bdcdf ,_ecfcb );};};if len (_bdcdf )==0{return nil ;};if _fecae .AcroForm ==nil {_fecae .AcroForm =NewPdfAcroForm ();
};_fecae .AcroForm .Fields =&_bdcdf ;return nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ecbgc *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_ecbgc .updateObjectsDeep (dss .ToPdfObject (),nil );};_ecbgc ._gdgc =dss ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_gafe *_fa .Document )error ;};func (_adac *PdfWriter )copyObjects (){_fgfgb :=make (map[_bb .PdfObject ]_bb .PdfObject );_dbafc :=make ([]_bb .PdfObject ,0,len (_adac ._cgfff ));_fbbf :=make (map[_bb .PdfObject ]struct{},len (_adac ._cgfff ));
_cdage :=make (map[_bb .PdfObject ]struct{});for _ ,_acfc :=range _adac ._cgfff {_eccg :=_adac .copyObject (_acfc ,_fgfgb ,_cdage ,false );if _ ,_bfgfg :=_cdage [_acfc ];_bfgfg {continue ;};_dbafc =append (_dbafc ,_eccg );_fbbf [_eccg ]=struct{}{};};_adac ._cgfff =_dbafc ;
_adac ._bfdb =_fbbf ;_adac ._gefda =_adac .copyObject (_adac ._gefda ,_fgfgb ,nil ,false ).(*_bb .PdfIndirectObject );_adac ._eecbb =_adac .copyObject (_adac ._eecbb ,_fgfgb ,nil ,false ).(*_bb .PdfIndirectObject );if _adac ._bafbg !=nil {_adac ._bafbg =_adac .copyObject (_adac ._bafbg ,_fgfgb ,nil ,false ).(*_bb .PdfIndirectObject );
};if _adac ._aedgc {_faedbg :=make (map[_bb .PdfObject ]int64 );for _faaab ,_efdcdf :=range _adac ._dcggdc {if _degge ,_bcgbg :=_fgfgb [_faaab ];_bcgbg {_faedbg [_degge ]=_efdcdf ;}else {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_adac ._dcggdc =_faedbg ;};};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_fagc *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_fddbf ,_edbba :=color .(*PdfColorPattern );if !_edbba {_gg .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _fddbf .Color ==nil {return color ,nil ;};if _fagc .UnderlyingCS ==nil {return nil ,_ed .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _fagc .UnderlyingCS .ColorToRGB (_fddbf .Color );
};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_aec :=NewPdfAnnotation ();_cfdf :=&PdfAnnotationCircle {};_cfdf .PdfAnnotation =_aec ;_cfdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aec .SetContext (_cfdf );return _cfdf ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bea :=NewPdfAnnotation ();_cceb :=&PdfAnnotationHighlight {};_cceb .PdfAnnotation =_bea ;_cceb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bea .SetContext (_cceb );return _cceb ;};

// SetAnnotations sets the annotations list.
func (_cbde *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_cbde ._cfafb =annotations };

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bb .PdfIndirectObject )*PdfOutlineItem {_ebbcf :=PdfOutlineItem {};_ebbcf ._fegg =&_ebbcf ;_ebbcf .Title =_bb .MakeString (title );_febcb :=_bb .MakeArray ();_febcb .Append (page );_febcb .Append (_bb .MakeName ("\u0046\u0069\u0074"));
_ebbcf .Dest =_febcb ;return &_ebbcf ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_fdcc :=&PdfOutlineItem {_bbcf :_bb .MakeIndirectObject (_bb .MakeDict ())};_fdcc ._fegg =_fdcc ;return _fdcc ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bb .PdfObject ;ColorSpace _bb .PdfObject ;Pattern _bb .PdfObject ;Shading _bb .PdfObject ;XObject _bb .PdfObject ;Font _bb .PdfObject ;ProcSet _bb .PdfObject ;Properties _bb .PdfObject ;_agfg *_bb .PdfObjectDictionary ;
_cgaa *PdfPageResourcesColorspaces ;};func (_gbcg *PdfReader )newPdfAnnotation3DFromDict (_caf *_bb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_dcef :=PdfAnnotation3D {};_dcef .T3DD =_caf .Get ("\u0033\u0044\u0044");_dcef .T3DV =_caf .Get ("\u0033\u0044\u0056");
_dcef .T3DA =_caf .Get ("\u0033\u0044\u0041");_dcef .T3DI =_caf .Get ("\u0033\u0044\u0049");_dcef .T3DB =_caf .Get ("\u0033\u0044\u0042");return &_dcef ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bgaed *PdfShadingType6 )ToPdfObject ()_bb .PdfObject {_bgaed .PdfShading .ToPdfObject ();_ddbcc ,_dfaeb :=_bgaed .getShadingDict ();if _dfaeb !=nil {_gg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bgaed .BitsPerCoordinate !=nil {_ddbcc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bgaed .BitsPerCoordinate );};if _bgaed .BitsPerComponent !=nil {_ddbcc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bgaed .BitsPerComponent );
};if _bgaed .BitsPerFlag !=nil {_ddbcc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bgaed .BitsPerFlag );};if _bgaed .Decode !=nil {_ddbcc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bgaed .Decode );};if _bgaed .Function !=nil {if len (_bgaed .Function )==1{_ddbcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bgaed .Function [0].ToPdfObject ());
}else {_gcfac :=_bb .MakeArray ();for _ ,_gagab :=range _bgaed .Function {_gcfac .Append (_gagab .ToPdfObject ());};_ddbcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcfac );};};return _bgaed ._dacad ;};

// GetOutlineTree returns the outline tree.
func (_cccaff *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _cccaff ._aagda };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gacd *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_eaada :=&PdfPageResources {};_eaada ._agfg =_bb .MakeDict ();return _eaada ;};func _eaeb (_gdaf []byte )bool {if len (_gdaf )< 4{return true ;};for _ggeg :=range _gdaf [:4]{_fgcf :=rune (_ggeg );if !_bg .Is (_bg .ASCII_Hex_Digit ,_fgcf )&&!_bg .IsSpace (_fgcf ){return true ;
};};return false ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _bb .PdfObject )(*PdfInfo ,error ){var _cedb PdfInfo ;_dfbef ,_eeecc :=obj .(*_bb .PdfObjectDictionary );if !_eeecc {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_fbeb :=range _dfbef .Keys (){switch _fbeb {case "\u0054\u0069\u0074l\u0065":_cedb .Title ,_ =_bb .GetString (_dfbef .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_cedb .Author ,_ =_bb .GetString (_dfbef .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_cedb .Subject ,_ =_bb .GetString (_dfbef .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_cedb .Keywords ,_ =_bb .GetString (_dfbef .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_cedb .Creator ,_ =_bb .GetString (_dfbef .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_cedb .Producer ,_ =_bb .GetString (_dfbef .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_cedb .Trapped ,_ =_bb .GetName (_dfbef .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _egcf ,_dada :=_bb .GetString (_dfbef .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_dada &&_egcf .String ()!=""{_dacg ,_bccb :=NewPdfDate (_egcf .String ());if _bccb !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_bccb );
};_cedb .CreationDate =&_dacg ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _dedb ,_bfgc :=_bb .GetString (_dfbef .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_bfgc &&_dedb .String ()!=""{_dfaga ,_bbae :=NewPdfDate (_dedb .String ());if _bbae !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_bbae );
};_cedb .ModifiedDate =&_dfaga ;};default:_egda ,_ :=_bb .GetString (_dfbef .Get (_fbeb ));if _cedb ._bege ==nil {_cedb ._bege =_bb .MakeDict ();};_cedb ._bege .Set (_fbeb ,_egda );};};return &_cedb ,nil ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_bcgff *PdfReader )GetRevisionNumber ()int {return _bcgff ._cfaef .GetRevisionNumber ()};

// ValidateSignatures validates digital signatures in the document.
func (_debaa *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _debaa .AcroForm ==nil {return nil ,nil ;};if _debaa .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ffce *PdfSignature ;
_fgaed *PdfField ;_bcfdg SignatureHandler ;};var _fdegf []*sigFieldPair ;for _ ,_gdaca :=range _debaa .AcroForm .AllFields (){if _gdaca .V ==nil {continue ;};if _adfbe ,_bbebf :=_bb .GetDict (_gdaca .V );_bbebf {if _cgcdc ,_fddae :=_bb .GetNameVal (_adfbe .Get ("\u0054\u0079\u0070\u0065"));
_fddae &&(_cgcdc =="\u0053\u0069\u0067"||_cgcdc =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_faade ,_aeagg :=_bb .GetIndirect (_gdaca .V );if !_aeagg {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_gfbeg ,_ccafe :=_debaa .newPdfSignatureFromIndirect (_faade );if _ccafe !=nil {return nil ,_ccafe ;};var _gcdfa SignatureHandler ;for _ ,_fagf :=range handlers {if _fagf .IsApplicable (_gfbeg ){_gcdfa =_fagf ;break ;};};_fdegf =append (_fdegf ,&sigFieldPair {_ffce :_gfbeg ,_fgaed :_gdaca ,_bcfdg :_gcdfa });
};};};var _cfgg []SignatureValidationResult ;for _ ,_bccba :=range _fdegf {_eeffa :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_bccba ._fgaed }};if _bccba ._bcfdg ==nil {_eeffa .Errors =append (_eeffa .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_cfgg =append (_cfgg ,_eeffa );continue ;};_adag ,_cfgc :=_bccba ._bcfdg .NewDigest (_bccba ._ffce );if _cfgc !=nil {_eeffa .Errors =append (_eeffa .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cfgc .Error ());_cfgg =append (_cfgg ,_eeffa );
continue ;};_bdafec :=_bccba ._ffce .ByteRange ;if _bdafec ==nil {_eeffa .Errors =append (_eeffa .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_cfgg =append (_cfgg ,_eeffa );continue ;};for _acbge :=0;
_acbge < _bdafec .Len ();_acbge =_acbge +2{_baaf ,_ :=_bb .GetNumberAsInt64 (_bdafec .Get (_acbge ));_dbdgc ,_ :=_bb .GetIntVal (_bdafec .Get (_acbge +1));if _ ,_cgfae :=_debaa ._bfcab .Seek (_baaf ,_ecb .SeekStart );_cgfae !=nil {return nil ,_cgfae ;};
_gcfd :=make ([]byte ,_dbdgc );if _ ,_dfad :=_debaa ._bfcab .Read (_gcfd );_dfad !=nil {return nil ,_dfad ;};_adag .Write (_gcfd );};var _efgfcc SignatureValidationResult ;if _fbec ,_agggdf :=_bccba ._bcfdg .(SignatureHandlerDocMDP );_agggdf {_efgfcc ,_cfgc =_fbec .ValidateWithOpts (_bccba ._ffce ,_adag ,SignatureHandlerDocMDPParams {Parser :_debaa ._cfaef });
}else {_efgfcc ,_cfgc =_bccba ._bcfdg .Validate (_bccba ._ffce ,_adag );};if _cfgc !=nil {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_cfgc ,_bccba ._bcfdg );_efgfcc .Errors =append (_efgfcc .Errors ,_cfgc .Error ());
};_efgfcc .Name =_bccba ._ffce .Name .Decoded ();_efgfcc .Reason =_bccba ._ffce .Reason .Decoded ();if _bccba ._ffce .M !=nil {_dbfag ,_afgba :=NewPdfDate (_bccba ._ffce .M .String ());if _afgba !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afgba );
_efgfcc .Errors =append (_efgfcc .Errors ,_afgba .Error ());continue ;};_efgfcc .Date =_dbfag ;};_efgfcc .ContactInfo =_bccba ._ffce .ContactInfo .Decoded ();_efgfcc .Location =_bccba ._ffce .Location .Decoded ();_efgfcc .Fields =_eeffa .Fields ;_cfgg =append (_cfgg ,_efgfcc );
};return _cfgg ,nil ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdff pdfFontSimple )GetRuneMetrics (r rune )(_dcg .CharMetrics ,bool ){if _fdff ._cbec !=nil {_cbcc ,_ceeed :=_fdff ._cbec .Read (r );if _ceeed {return _cbcc ,true ;};};_cdffg :=_fdff .Encoder ();if _cdffg ==nil {_gg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fdff );
return _dcg .CharMetrics {},false ;};_ccbcf ,_eadcf :=_cdffg .RuneToCharcode (r );if !_eadcf {if r !=' '{_gg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fdff );
};return _dcg .CharMetrics {},false ;};_fggaf ,_afbaea :=_fdff .GetCharMetrics (_ccbcf );return _fggaf ,_afbaea ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eded pdfCIDFontType2 )GetRuneMetrics (r rune )(_dcg .CharMetrics ,bool ){_eade ,_cfedc :=_eded ._cgee [r ];if !_cfedc {_afdd ,_gabg :=_bb .GetInt (_eded .DW );if !_gabg {return _dcg .CharMetrics {},false ;};_eade =int (*_afdd );};return _dcg .CharMetrics {Wx :float64 (_eade )},true ;
};func (_ccbbg *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_ccbbg ._gecfd .Major ,_ccbbg ._gecfd .Minor );};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_cfgd *PdfFieldButton )IsRadio ()bool {return _cfgd .GetType ()==ButtonTypeRadio };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adfg pdfCIDFontType0 )GetRuneMetrics (r rune )(_dcg .CharMetrics ,bool ){return _dcg .CharMetrics {Wx :_adfg ._cbcef },true ;};type pdfCIDFontType0 struct{fontCommon ;_bgba *_bb .PdfIndirectObject ;_gdcfb _ga .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bb .PdfObject ;W _bb .PdfObject ;DW2 _bb .PdfObject ;W2 _bb .PdfObject ;_bfeg map[_ga .CharCode ]float64 ;_cbcef float64 ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_adgb *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _adgb .UnderlyingCS ==nil {return nil ,_ed .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _adgb .UnderlyingCS .ColorFromFloats (vals );};

// ToPdfObject convert PdfInfo to pdf object.
func (_ebbg *PdfInfo )ToPdfObject ()_bb .PdfObject {_gcgde :=_bb .MakeDict ();_gcgde .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_ebbg .Title );_gcgde .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_ebbg .Author );_gcgde .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_ebbg .Subject );
_gcgde .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ebbg .Keywords );_gcgde .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_ebbg .Creator );_gcgde .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_ebbg .Producer );
_gcgde .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_ebbg .Trapped );if _ebbg .CreationDate !=nil {_gcgde .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ebbg .CreationDate .ToPdfObject ());};if _ebbg .ModifiedDate !=nil {_gcgde .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_ebbg .ModifiedDate .ToPdfObject ());
};for _ ,_ccbba :=range _ebbg ._bege .Keys (){_gcgde .SetIfNotNil (_ccbba ,_ebbg ._bege .Get (_ccbba ));};return _gcgde ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bb .StreamEncoder )(*XObjectImage ,error ){_aaafbd :=NewXObjectImage ();return UpdateXObjectImageFromImage (_aaafbd ,img ,cs ,encoder );};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_acad *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_edcc *DSS )GetContainingPdfObject ()_bb .PdfObject {return _edcc ._facae };func (_ddc *PdfReader )newPdfActionSubmitFormFromDict (_bgb *_bb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_bebb ,_eec :=_fda (_bgb .Get ("\u0046"));if _eec !=nil {return nil ,_eec ;
};return &PdfActionSubmitForm {F :_bebb ,Fields :_bgb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bgb .Get ("\u0046\u006c\u0061g\u0073")},nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;
BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bffbe *PdfFont )CharcodesToStrings (charcodes []_ga .CharCode ,replacementText string )([]string ,int ,int ){_edbg :=_bffbe .baseFields ();_gddgg :=make ([]string ,0,len (charcodes ));_bdgda :=0;_gcafa :=_bffbe .Encoder ();_cbff :=_edbg ._beee !=nil &&_bffbe .IsSimple ()&&_bffbe .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_dce .Contains (_edbg ._beee .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_cbff &&_gcafa !=nil {switch _aefgc :=_gcafa .(type ){case _ga .SimpleEncoder :_cacab :=_aefgc .BaseName ();if _ ,_caefg :=_aaeab [_cacab ];_caefg {for _ ,_cafdc :=range charcodes {if _cgbgb ,_fecab :=_gcafa .CharcodeToRune (_cafdc );_fecab {_gddgg =append (_gddgg ,string (_cgbgb ));
}else {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cafdc ,charcodes ,_edbg .isCIDFont (),_bffbe ,_gcafa );
_bdgda ++;_gddgg =append (_gddgg ,_af .MissingCodeString );};};return _gddgg ,len (_gddgg ),_bdgda ;};};};for _ ,_cfbbf :=range charcodes {if _edbg ._beee !=nil {if _adgg ,_fbdeg :=_edbg ._beee .CharcodeToUnicode (_af .CharCode (_cfbbf ));_fbdeg {_bdbc ,_ :=_a .DecodeLastRuneInString (_adgg );
_egcdc :=_cbdaa (_bdbc );if !(_egcdc =="\u0043\u006f"){_gddgg =append (_gddgg ,_adgg );continue ;};_gg .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_cfbbf ,_adgg );
};};if _gcafa !=nil {if _bdaga ,_cfecf :=_gcafa .CharcodeToRune (_cfbbf );_cfecf {_acff :=_cbdaa (_bdaga );if !(_acff =="\u0043\u006f"){_gddgg =append (_gddgg ,string (_bdaga ));continue ;};_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_cfbbf ,string (_bdaga ));
};};if replacementText !=""{_gddgg =append (_gddgg ,replacementText );}else {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cfbbf ,charcodes ,_edbg .isCIDFont (),_bffbe ,_gcafa );
_bdgda ++;_gddgg =append (_gddgg ,_af .MissingCodeString );};};if _bdgda !=0{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_bdgda ,_bffbe );
};return _gddgg ,len (_gddgg ),_bdgda ;};func _afgg (_bfaed *_bb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_gdcec :=PdfShadingType3 {};_bafce :=_bfaed .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bafce ==nil {_gg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_gggcc ,_gacdg :=_bafce .(*_bb .PdfObjectArray );if !_gacdg {_gg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bafce );
return nil ,_bb .ErrTypeError ;};if _gggcc .Len ()!=6{_gg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gggcc .Len ());return nil ,ErrInvalidAttribute ;
};_gdcec .Coords =_gggcc ;if _faddf :=_bfaed .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_faddf !=nil {_faddf =_bb .TraceToDirectObject (_faddf );_ebde ,_ebad :=_faddf .(*_bb .PdfObjectArray );if !_ebad {_gg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_faddf );
return nil ,_bb .ErrTypeError ;};_gdcec .Domain =_ebde ;};_bafce =_bfaed .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bafce ==nil {_gg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gdcec .Function =[]PdfFunction {};if _bgdf ,_ffdca :=_bafce .(*_bb .PdfObjectArray );_ffdca {for _ ,_affda :=range _bgdf .Elements (){_acdag ,_facg :=_gbcd (_affda );if _facg !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_facg );
return nil ,_facg ;};_gdcec .Function =append (_gdcec .Function ,_acdag );};}else {_edbfb ,_fggcc :=_gbcd (_bafce );if _fggcc !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fggcc );
return nil ,_fggcc ;};_gdcec .Function =append (_gdcec .Function ,_edbfb );};if _gbbfb :=_bfaed .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gbbfb !=nil {_gbbfb =_bb .TraceToDirectObject (_gbbfb );_ebbcg ,_cccega :=_gbbfb .(*_bb .PdfObjectArray );if !_cccega {_gg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbbfb );
return nil ,_bb .ErrTypeError ;};if _ebbcg .Len ()!=2{_gg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ebbcg .Len ());return nil ,ErrInvalidAttribute ;
};_gdcec .Extend =_ebbcg ;};return &_gdcec ,nil ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_gcdgf *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_eaagad :=_gcdgf ._cfaef .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _eaagad {return nil ,_ed .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_eaagad {return _gcdgf ,nil ;};if _gcdgf ._egbda [revisionNumber ]!=nil {return _gcdgf ._egbda [revisionNumber ],nil ;};_cfcd :=_gcdgf ;for _dacc :=_eaagad -1;_dacc >=revisionNumber ;_dacc --{_eaaeg ,_cdcb :=_cfcd .GetPreviousRevision ();
if _cdcb !=nil {return nil ,_cdcb ;};_gcdgf ._egbda [_dacc ]=_eaaeg ;_cfcd =_eaaeg ;};return _cfcd ,nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_gfc *PdfAnnotation )ToPdfObject ()_bb .PdfObject {_afge :=_gfc ._aaf ;_ceee :=_afge .PdfObject .(*_bb .PdfObjectDictionary );_ceee .Clear ();_ceee .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0041\u006e\u006eo\u0074"));_ceee .SetIfNotNil ("\u0052\u0065\u0063\u0074",_gfc .Rect );
_ceee .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gfc .Contents );_ceee .SetIfNotNil ("\u0050",_gfc .P );_ceee .SetIfNotNil ("\u004e\u004d",_gfc .NM );_ceee .SetIfNotNil ("\u004d",_gfc .M );_ceee .SetIfNotNil ("\u0046",_gfc .F );_ceee .SetIfNotNil ("\u0041\u0050",_gfc .AP );
_ceee .SetIfNotNil ("\u0041\u0053",_gfc .AS );_ceee .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_gfc .Border );_ceee .SetIfNotNil ("\u0043",_gfc .C );_ceee .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gfc .StructParent );
_ceee .SetIfNotNil ("\u004f\u0043",_gfc .OC );return _afge ;};

// ImageToRGB convert an indexed image to RGB.
func (_afgb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_afgb .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_bacea :=_gdf .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._cebdb ,img ._dafdc );_eaaga :=_bf .NewReader (img .getBase ());_faeb :=_bf .NewWriter (_bacea );var (_dgdbe uint32 ;_aegb int ;_bfagf error ;);for {_dgdbe ,_bfagf =_eaaga .ReadSample ();
if _bfagf ==_ecb .EOF {break ;}else if _bfagf !=nil {return img ,_bfagf ;};_aegb =int (_dgdbe );_gg .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_aegb ,N ,len (_afgb ._fgae ));
if (_aegb +1)*N > len (_afgb ._fgae ){_aegb =len (_afgb ._fgae )/N -1;_gg .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_aegb );if _aegb < 0{_gg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _adeb :=_aegb *N ;_adeb < (_aegb +1)*N ;_adeb ++{if _bfagf =_faeb .WriteSample (uint32 (_afgb ._fgae [_adeb ]));_bfagf !=nil {return img ,_bfagf ;};};};return _afgb .Base .ImageToRGB (_dffda (&_bacea ));};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_egdb *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_feda ,_ ,_acdg :=_egdb .CharcodesToUnicodeWithStats (_egdb .BytesToCharcodes (data ));_cfda :=_ga .ExpandLigatures (_feda );return _cfda ,_a .RuneCountInString (_cfda ),_acdg ;
};func _cbfa (_eaeeg *_bb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ebebc :=PdfShadingType6 {};_bgbea :=_eaeeg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bgbea ==nil {_gg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dcdbd ,_cabg :=_bgbea .(*_bb .PdfObjectInteger );if !_cabg {_gg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgbea );
return nil ,_bb .ErrTypeError ;};_ebebc .BitsPerCoordinate =_dcdbd ;_bgbea =_eaeeg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bgbea ==nil {_gg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dcdbd ,_cabg =_bgbea .(*_bb .PdfObjectInteger );if !_cabg {_gg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bgbea );
return nil ,_bb .ErrTypeError ;};_ebebc .BitsPerComponent =_dcdbd ;_bgbea =_eaeeg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bgbea ==nil {_gg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dcdbd ,_cabg =_bgbea .(*_bb .PdfObjectInteger );if !_cabg {_gg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bgbea );
return nil ,_bb .ErrTypeError ;};_ebebc .BitsPerComponent =_dcdbd ;_bgbea =_eaeeg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bgbea ==nil {_gg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_efaab ,_cabg :=_bgbea .(*_bb .PdfObjectArray );if !_cabg {_gg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgbea );
return nil ,_bb .ErrTypeError ;};_ebebc .Decode =_efaab ;if _dageg :=_eaeeg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dageg !=nil {_ebebc .Function =[]PdfFunction {};if _edbaf ,_bacfb :=_dageg .(*_bb .PdfObjectArray );_bacfb {for _ ,_beda :=range _edbaf .Elements (){_fbacd ,_ebgde :=_gbcd (_beda );
if _ebgde !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebgde );return nil ,_ebgde ;};_ebebc .Function =append (_ebebc .Function ,_fbacd );
};}else {_ebdec ,_bbbbe :=_gbcd (_dageg );if _bbbbe !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbbbe );return nil ,_bbbbe ;
};_ebebc .Function =append (_ebebc .Function ,_ebdec );};};return &_ebebc ,nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_ebaf *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func (_ebfdaa *PdfWriter )writeDocumentVersion (){if _ebfdaa ._aedgc {_ebfdaa .writeString ("\u000a");}else {_ebfdaa .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_ebfdaa ._gecfd .Major ,_ebfdaa ._gecfd .Minor ));
_ebfdaa .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_geff *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// ToPdfObject implements interface PdfModel.
func (_cce *PdfActionSetOCGState )ToPdfObject ()_bb .PdfObject {_cce .PdfAction .ToPdfObject ();_cgc :=_cce ._dcc ;_dbc :=_cgc .PdfObject .(*_bb .PdfObjectDictionary );_dbc .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeSetOCGState )));_dbc .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cce .State );
_dbc .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_cce .PreserveRB );return _cgc ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bb .PdfObject ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ecb .ReadSeeker )(*PdfFont ,error ){const _ccee =_ga .CharCode (32);const _edccc =_ga .CharCode (255);_bfcea ,_ffedf :=_gf .ReadAll (r );if _ffedf !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ffedf );
return nil ,_ffedf ;};_efce ,_ffedf :=_dcg .TtfParse (_aa .NewReader (_bfcea ));if _ffedf !=nil {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_ffedf );
return nil ,_ffedf ;};_fgebf :=&pdfFontSimple {_cbgg :make (map[_ga .CharCode ]float64 ),fontCommon :fontCommon {_ecdc :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_fgebf ._fcdce =_ga .NewWinAnsiEncoder ();_fgebf ._gdaeed =_efce .PostScriptName ;
_fgebf .FirstChar =_bb .MakeInteger (int64 (_ccee ));_fgebf .LastChar =_bb .MakeInteger (int64 (_edccc ));_bfaab :=1000.0/float64 (_efce .UnitsPerEm );if len (_efce .Widths )<=0{return nil ,_ed .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gdfbe :=_bfaab *float64 (_efce .Widths [0]);_cebd :=make ([]float64 ,0,_edccc -_ccee +1);for _gcgdb :=_ccee ;_gcgdb <=_edccc ;_gcgdb ++{_dcfc ,_bbdcd :=_fgebf .Encoder ().CharcodeToRune (_gcgdb );if !_bbdcd {_gg .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_gcgdb );
_cebd =append (_cebd ,_gdfbe );continue ;};_gbddf ,_cdde :=_efce .Chars [_dcfc ];if !_cdde {_gg .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_cebd =append (_cebd ,_gdfbe );continue ;
};_dbagc :=_bfaab *float64 (_efce .Widths [_gbddf ]);_cebd =append (_cebd ,_dbagc );};_fgebf .Widths =_bb .MakeIndirectObject (_bb .MakeArrayFromFloats (_cebd ));if len (_cebd )< int (_edccc -_ccee +1){_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_cebd ),255-32+1);
return nil ,_bb .ErrRangeError ;};for _ddfff :=_ccee ;_ddfff <=_edccc ;_ddfff ++{_fgebf ._cbgg [_ddfff ]=_cebd [_ddfff -_ccee ];};_fgebf .Encoding =_bb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_edcb :=&PdfFontDescriptor {};
_edcb .FontName =_bb .MakeName (_efce .PostScriptName );_edcb .Ascent =_bb .MakeFloat (_bfaab *float64 (_efce .TypoAscender ));_edcb .Descent =_bb .MakeFloat (_bfaab *float64 (_efce .TypoDescender ));_edcb .CapHeight =_bb .MakeFloat (_bfaab *float64 (_efce .CapHeight ));
_edcb .FontBBox =_bb .MakeArrayFromFloats ([]float64 {_bfaab *float64 (_efce .Xmin ),_bfaab *float64 (_efce .Ymin ),_bfaab *float64 (_efce .Xmax ),_bfaab *float64 (_efce .Ymax )});_edcb .ItalicAngle =_bb .MakeFloat (_efce .ItalicAngle );_edcb .MissingWidth =_bb .MakeFloat (_bfaab *float64 (_efce .Widths [0]));
_bcagg ,_ffedf :=_bb .MakeStream (_bfcea ,_bb .NewFlateEncoder ());if _ffedf !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ffedf );
return nil ,_ffedf ;};_bcagg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bb .MakeInteger (int64 (len (_bfcea ))));_edcb .FontFile2 =_bcagg ;if _efce .Bold {_edcb .StemV =_bb .MakeInteger (120);}else {_edcb .StemV =_bb .MakeInteger (70);
};_eeac :=_fbag ;if _efce .IsFixedPitch {_eeac |=_daaea ;};if _efce .ItalicAngle !=0{_eeac |=_bfabc ;};_edcb .Flags =_bb .MakeInteger (int64 (_eeac ));_fgebf ._eadda =_edcb ;_fegb :=&PdfFont {_gbagg :_fgebf };return _fegb ,nil ;};

// PartialName returns the partial name of the field.
func (_bbdgb *PdfField )PartialName ()string {_abbf :="";if _bbdgb .T !=nil {_abbf =_bbdgb .T .Decoded ();}else {_gg .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _abbf ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_cede :=NewPdfAnnotation ();_bgbg :=&PdfAnnotationLink {};_bgbg .PdfAnnotation =_cede ;_cede .SetContext (_bgbg );return _bgbg ;};

// String implements interface PdfObject.
func (_deb *PdfAction )String ()string {_ag ,_gdb :=_deb .ToPdfObject ().(*_bb .PdfIndirectObject );if _gdb {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_deb ._afg ,_ag .PdfObject .String ());};return "";};func (_cbcged *XObjectImage )getParamsDict ()*_bb .PdfObjectDictionary {_eddgd :=_bb .MakeDict ();
_eddgd .Set ("\u0057\u0069\u0064t\u0068",_bb .MakeInteger (*_cbcged .Width ));_eddgd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bb .MakeInteger (*_cbcged .Height ));_eddgd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bb .MakeInteger (int64 (_cbcged .ColorSpace .GetNumComponents ())));
_eddgd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bb .MakeInteger (*_cbcged .BitsPerComponent ));return _eddgd ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_dcfgb *PdfColorspaceLab )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgeb ,_fbac :=_bb .GetNumbersAsFloat (objects );
if _fbac !=nil {return nil ,_fbac ;};return _dcfgb .ColorFromFloats (_fgeb );};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_bddc *PdfPageResources )GetFontByName (keyName _bb .PdfObjectName )(_bb .PdfObject ,bool ){if _bddc .Font ==nil {return nil ,false ;};_fdfc ,_dacac :=_bb .TraceToDirectObject (_bddc .Font ).(*_bb .PdfObjectDictionary );if !_dacac {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bb .TraceToDirectObject (_bddc .Font ));
return nil ,false ;};if _dgfbf :=_fdfc .Get (keyName );_dgfbf !=nil {return _dgfbf ,true ;};return nil ,false ;};func _gbcd (_ggbbf _bb .PdfObject )(PdfFunction ,error ){_ggbbf =_bb .ResolveReference (_ggbbf );if _faaf ,_bdeb :=_ggbbf .(*_bb .PdfObjectStream );
_bdeb {_fccfd :=_faaf .PdfObjectDictionary ;_acgga ,_addbg :=_fccfd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bb .PdfObjectInteger );if !_addbg {_gg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_acgga ==0{return _cffad (_faaf );}else if *_acgga ==4{return _edcg (_faaf );
}else {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gggbda ,_bgcac :=_ggbbf .(*_bb .PdfIndirectObject );_bgcac {_ecgcf ,_debg :=_gggbda .PdfObject .(*_bb .PdfObjectDictionary );
if !_debg {_gg .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_ecdf ,_debg :=_ecgcf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bb .PdfObjectInteger );
if !_debg {_gg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_ecdf ==2{return _bagbg (_gggbda );}else if *_ecdf ==3{return _gcafb (_gggbda );}else {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _eeagb ,_daddc :=_ggbbf .(*_bb .PdfObjectDictionary );
_daddc {_cgdcc ,_ddeeae :=_eeagb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bb .PdfObjectInteger );if !_ddeeae {_gg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_cgdcc ==2{return _bagbg (_eeagb );}else if *_cgdcc ==3{return _gcafb (_eeagb );
}else {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_gg .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_ggbbf );
return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};func (_cdbcf *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _cdbcf ._cfaef .GetCrypter ()!=nil &&!_cdbcf ._cfaef .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cddfg :=_cdbcf ._effcg ;_dcebac :=_cddfg .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _dcebac ==nil {return nil ,nil ;};_bgdc ,_faea :=_bb .GetIndirect (_dcebac );_dcebac =_bb .TraceToDirectObject (_dcebac );if _bb .IsNullObject (_dcebac ){_gg .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_ebda ,_agebd :=_bb .GetDict (_dcebac );if !_agebd {_gg .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dcebac );_gg .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dcebac );};_gg .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_gg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_cdbcf ._becge {_baab :=_cdbcf .traverseObjectData (_ebda );
if _baab !=nil {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_baab );
return nil ,_baab ;};};_ddbb ,_gbegc :=_cdbcf .newPdfAcroFormFromDict (_bgdc ,_ebda );if _gbegc !=nil {return nil ,_gbegc ;};_ddbb ._dgeaa =!_faea ;return _ddbb ,nil ;};

// GetFillImage get attached model.Image in push button.
func (_ecfa *PdfFieldButton )GetFillImage ()*Image {if _ecfa .IsPush (){return _ecfa ._aegba ;};return nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_deac *PdfOutlineTreeNode )GetContext ()PdfModel {if _dbfb ,_aecfd :=_deac ._fegg .(*PdfOutline );_aecfd {return _dbfb ;};if _acdbc ,_ecfce :=_deac ._fegg .(*PdfOutlineItem );_ecfce {return _acdbc ;};_gg .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};func (_abfda *Image )samplesAddPadding (_gbaega []uint32 )[]uint32 {_eaad :=_gdf .BytesPerLine (int (_abfda .Width ),int (_abfda .BitsPerComponent ),_abfda .ColorComponents )*(8/int (_abfda .BitsPerComponent ));_befgc :=_eaad *int (_abfda .Height );
if len (_gbaega )==_befgc {return _gbaega ;};_deggg :=make ([]uint32 ,_befgc );_fbff :=int (_abfda .Width )*_abfda .ColorComponents ;for _eccf :=0;_eccf < int (_abfda .Height );_eccf ++{_beeage :=_eccf *int (_abfda .Width );_cdfd :=_eccf *_eaad ;for _bdffg :=0;
_bdffg < _fbff ;_bdffg ++{_deggg [_cdfd +_bdffg ]=_gbaega [_beeage +_bdffg ];};};return _deggg ;};

// SetCatalogLanguage sets the catalog language.
func (_ffadf *PdfWriter )SetCatalogStructTreeRoot (tree _bb .PdfObject )error {if tree ==nil {_ffadf ._ebgdb .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_ffadf ._ebgdb .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _ffadf .addObjects (tree );};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_gca .PSProgram ;_edbcd *_gca .PSExecutor ;_eafbd []byte ;_fabdb *_bb .PdfObjectStream ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_ef :=NewPdfAction ();_fdd :=&PdfActionSubmitForm {};_fdd .PdfAction =_ef ;_ef .SetContext (_fdd );return _fdd ;};

// GetPage returns the PdfPage model for the specified page number.
func (_gage *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _gage ._cfaef .GetCrypter ()!=nil &&!_gage ._cfaef .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_gage ._dggdb )< pageNumber {return nil ,_ed .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_aafee :=pageNumber -1;if _aafee < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_gace :=_gage .PageList [_aafee ];
return _gace ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cefgc *PdfColorspaceLab )ToPdfObject ()_bb .PdfObject {_adadf :=_bb .MakeArray ();_adadf .Append (_bb .MakeName ("\u004c\u0061\u0062"));_adee :=_bb .MakeDict ();if _cefgc .WhitePoint !=nil {_cegaf :=_bb .MakeArray (_bb .MakeFloat (_cefgc .WhitePoint [0]),_bb .MakeFloat (_cefgc .WhitePoint [1]),_bb .MakeFloat (_cefgc .WhitePoint [2]));
_adee .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cegaf );}else {_gg .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _cefgc .BlackPoint !=nil {_acdf :=_bb .MakeArray (_bb .MakeFloat (_cefgc .BlackPoint [0]),_bb .MakeFloat (_cefgc .BlackPoint [1]),_bb .MakeFloat (_cefgc .BlackPoint [2]));_adee .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_acdf );
};if _cefgc .Range !=nil {_ebefa :=_bb .MakeArray (_bb .MakeFloat (_cefgc .Range [0]),_bb .MakeFloat (_cefgc .Range [1]),_bb .MakeFloat (_cefgc .Range [2]),_bb .MakeFloat (_cefgc .Range [3]));_adee .Set ("\u0052\u0061\u006eg\u0065",_ebefa );};_adadf .Append (_adee );
if _cefgc ._bcff !=nil {_cefgc ._bcff .PdfObject =_adadf ;return _cefgc ._bcff ;};return _adadf ;};func _bdeba (_acefa string )(string ,error ){var _fgea _aa .Buffer ;_fgea .WriteString (_acefa );_egdga :=make ([]byte ,8+16);_deaaeg :=_fb .Now ().UTC ().UnixNano ();
_dc .BigEndian .PutUint64 (_egdga ,uint64 (_deaaeg ));_ ,_abbdg :=_gc .Read (_egdga [8:]);if _abbdg !=nil {return "",_abbdg ;};_fgea .WriteString (_ccc .EncodeToString (_egdga ));return _fgea .String (),nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_feage *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _feage .flattenFieldsWithOpts (false ,appgen ,opts );};

// ToPdfObject implements interface PdfModel.
func (_fdagf *PdfSignatureReference )ToPdfObject ()_bb .PdfObject {_cgdeb :=_bb .MakeDict ();_cgdeb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fdagf .Type );_cgdeb .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_fdagf .TransformMethod );
_cgdeb .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_fdagf .TransformParams );_cgdeb .SetIfNotNil ("\u0044\u0061\u0074\u0061",_fdagf .Data );_cgdeb .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_fdagf .DigestMethod );
return _cgdeb ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_bgce *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _fdbec []_ga .TextEncoder ;var _dedba _ga .CMapEncoder ;if _dffb :=_bgce .baseFields ()._beee ;_dffb !=nil {_dedba =_ga .NewCMapEncoder ("",nil ,_dffb );};_cabd :=_bgce .Encoder ();
if _cabd !=nil {switch _fcgeb :=_cabd .(type ){case _ga .SimpleEncoder :_gaga :=_fcgeb .BaseName ();if _ ,_bdae :=_aaeab [_gaga ];_bdae {_fdbec =append (_fdbec ,_cabd );};};};if len (_fdbec )==0{if _bgce .baseFields ()._beee !=nil {_fdbec =append (_fdbec ,_dedba );
};if _cabd !=nil {_fdbec =append (_fdbec ,_cabd );};};var _baaa _aa .Buffer ;var _bfcc int ;for _ ,_debbb :=range data {var _abadc bool ;for _ ,_gedcc :=range _fdbec {if _cffab :=_gedcc .Encode (string (_debbb ));len (_cffab )> 0{_baaa .Write (_cffab );
_abadc =true ;break ;};};if !_abadc {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_debbb );
_bfcc ++;};};if _bfcc !=0{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_bfcc ,_bgce ,_fdbec );
};return _baaa .Bytes (),_bfcc ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_gcdc *PdfPageResources )SetPatternByName (keyName _bb .PdfObjectName ,pattern _bb .PdfObject )error {if _gcdc .Pattern ==nil {_gcdc .Pattern =_bb .MakeDict ();};_dggbb ,_dddaa :=_bb .GetDict (_gcdc .Pattern );if !_dddaa {return _bb .ErrTypeError ;
};_dggbb .Set (keyName ,pattern );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbcab *PdfTransformParamsDocMDP )ToPdfObject ()_bb .PdfObject {_afdgf :=_bb .MakeDict ();_afdgf .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dbcab .Type );_afdgf .SetIfNotNil ("\u0056",_dbcab .V );_afdgf .SetIfNotNil ("\u0050",_dbcab .P );return _afdgf ;
};

// GetCustomInfo returns a custom info value for the specified name.
func (_dadag *PdfInfo )GetCustomInfo (name string )*_bb .PdfObjectString {var _ffc *_bb .PdfObjectString ;if _dadag ._bege ==nil {return _ffc ;};if _affg ,_geef :=_dadag ._bege .Get (*_bb .MakeName (name )).(*_bb .PdfObjectString );_geef {_ffc =_affg ;
};return _ffc ;};func (_gccec *PdfWriter )optimizeDocument ()error {if _gccec ._ddfcc ==nil {return nil ;};_aacfb ,_bdead :=_bb .GetDict (_gccec ._gefda );if !_bdead {return _ed .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bcdcff :=_fa .Document {ID :[2]string {_gccec ._eacbd ,_gccec ._dedff },Version :_gccec ._gecfd ,Objects :_gccec ._cgfff ,Info :_aacfb ,Crypt :_gccec ._efgdff ,UseHashBasedID :_gccec ._dddbg };if _agdf :=_gccec ._ddfcc .ApplyStandard (&_bcdcff );_agdf !=nil {return _agdf ;
};_gccec ._eacbd ,_gccec ._dedff =_bcdcff .ID [0],_bcdcff .ID [1];_gccec ._gecfd =_bcdcff .Version ;_gccec ._cgfff =_bcdcff .Objects ;_gccec ._gefda .PdfObject =_bcdcff .Info ;_gccec ._dddbg =_bcdcff .UseHashBasedID ;_gccec ._efgdff =_bcdcff .Crypt ;_dabg :=make (map[_bb .PdfObject ]struct{},len (_gccec ._cgfff ));
for _ ,_fdfdd :=range _gccec ._cgfff {_dabg [_fdfdd ]=struct{}{};};_gccec ._bfdb =_dabg ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdcf *PdfAnnotationStrikeOut )ToPdfObject ()_bb .PdfObject {_gdcf .PdfAnnotation .ToPdfObject ();_dcgf :=_gdcf ._aaf ;_afga :=_dcgf .PdfObject .(*_bb .PdfObjectDictionary );_gdcf .PdfAnnotationMarkup .appendToPdfDictionary (_afga );_afga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_afga .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdcf .QuadPoints );return _dcgf ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_gbeb *Image )Resample (targetBitsPerComponent int64 ){if _gbeb .BitsPerComponent ==targetBitsPerComponent {return ;};_agbfga :=_gbeb .GetSamples ();if targetBitsPerComponent < _gbeb .BitsPerComponent {_ggdce :=_gbeb .BitsPerComponent -targetBitsPerComponent ;
for _cgcce :=range _agbfga {_agbfga [_cgcce ]>>=uint (_ggdce );};}else if targetBitsPerComponent > _gbeb .BitsPerComponent {_dabb :=targetBitsPerComponent -_gbeb .BitsPerComponent ;for _bgbb :=range _agbfga {_agbfga [_bgbb ]<<=uint (_dabb );};};_gbeb .BitsPerComponent =targetBitsPerComponent ;
if _gbeb .BitsPerComponent < 8{_gbeb .resampleLowBits (_agbfga );return ;};_baadb :=_gdf .BytesPerLine (int (_gbeb .Width ),int (_gbeb .BitsPerComponent ),_gbeb .ColorComponents );_eedce :=make ([]byte ,_baadb *int (_gbeb .Height ));var (_caeg ,_dbgdd ,_efgec ,_abffd int ;
_bdaeg uint32 ;);for _efgec =0;_efgec < int (_gbeb .Height );_efgec ++{_caeg =_efgec *_baadb ;_dbgdd =(_efgec +1)*_baadb -1;_agee :=_bf .ResampleUint32 (_agbfga [_caeg :_dbgdd ],int (targetBitsPerComponent ),8);for _abffd ,_bdaeg =range _agee {_eedce [_abffd +_caeg ]=byte (_bdaeg );
};};_gbeb .Data =_eedce ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_bcaga *PdfSignature ,_ddcg Hasher ,_cfdaea SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_ddgfd *PdfPageResources )GetContainingPdfObject ()_bb .PdfObject {return _ddgfd ._agfg };

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_fdfd *PdfColorspaceSpecialIndexed )ToPdfObject ()_bb .PdfObject {_eabg :=_bb .MakeArray (_bb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_eabg .Append (_fdfd .Base .ToPdfObject ());_eabg .Append (_bb .MakeInteger (int64 (_fdfd .HiVal )));
_eabg .Append (_fdfd .Lookup );if _fdfd ._cedea !=nil {_fdfd ._cedea .PdfObject =_eabg ;return _fdfd ._cedea ;};return _eabg ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_agafc *_bb .PdfIndirectObject ;};type pdfSignDictionary struct{*_bb .PdfObjectDictionary ;_cefbf *SignatureHandler ;_febed *PdfSignature ;_ggddf int64 ;
_gceca int ;_fceca int ;_faggb int ;_eccdf int ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_cedf *PdfOutputIntent )GetContainingPdfObject ()_bb .PdfObject {return _cedf ._cfede };func (_aeaa *PdfReader )newPdfAnnotationHighlightFromDict (_abdb *_bb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_aegc :=PdfAnnotationHighlight {};
_bfgf ,_ccadf :=_aeaa .newPdfAnnotationMarkupFromDict (_abdb );if _ccadf !=nil {return nil ,_ccadf ;};_aegc .PdfAnnotationMarkup =_bfgf ;_aegc .QuadPoints =_abdb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aegc ,nil ;
};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bb .PdfObjectStream )(*XObjectImage ,error ){_gfga :=&XObjectImage {};_gfga ._eddaa =stream ;_efde :=*(stream .PdfObjectDictionary );_degabe ,_dfbcg :=_bb .NewEncoderFromStream (stream );if _dfbcg !=nil {return nil ,_dfbcg ;
};_gfga .Filter =_degabe ;if _bcaf :=_bb .TraceToDirectObject (_efde .Get ("\u0057\u0069\u0064t\u0068"));_bcaf !=nil {_fcccf ,_gbbbde :=_bcaf .(*_bb .PdfObjectInteger );if !_gbbbde {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fbbca :=int64 (*_fcccf );_gfga .Width =&_fbbca ;}else {return nil ,_ed .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fddge :=_bb .TraceToDirectObject (_efde .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_fddge !=nil {_agcac ,_dbdba :=_fddge .(*_bb .PdfObjectInteger );if !_dbdba {return nil ,_ed .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fbeee :=int64 (*_agcac );
_gfga .Height =&_fbeee ;}else {return nil ,_ed .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _edfbb :=_bb .TraceToDirectObject (_efde .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_edfbb !=nil {_dadbe ,_fbaf :=NewPdfColorspaceFromPdfObject (_edfbb );if _fbaf !=nil {return nil ,_fbaf ;};_gfga .ColorSpace =_dadbe ;}else {_gg .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_gfga .ColorSpace =NewPdfColorspaceDeviceGray ();};if _dgbgf :=_bb .TraceToDirectObject (_efde .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dgbgf !=nil {_edeca ,_fdbg :=_dgbgf .(*_bb .PdfObjectInteger );
if !_fdbg {return nil ,_ed .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_afbbeb :=int64 (*_edeca );_gfga .BitsPerComponent =&_afbbeb ;};_gfga .Intent =_efde .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_gfga .ImageMask =_efde .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_gfga .Mask =_efde .Get ("\u004d\u0061\u0073\u006b");_gfga .Decode =_efde .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_gfga .Interpolate =_efde .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_gfga .Alternatives =_efde .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_gfga .SMask =_efde .Get ("\u0053\u004d\u0061s\u006b");_gfga .SMaskInData =_efde .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_gfga .Matte =_efde .Get ("\u004d\u0061\u0074t\u0065");_gfga .Name =_efde .Get ("\u004e\u0061\u006d\u0065");_gfga .StructParent =_efde .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gfga .ID =_efde .Get ("\u0049\u0044");_gfga .OPI =_efde .Get ("\u004f\u0050\u0049");
_gfga .Metadata =_efde .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gfga .OC =_efde .Get ("\u004f\u0043");_gfga .Stream =stream .Stream ;return _gfga ,nil ;};func _fegbc (_aedgf *_bb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_addbe :=PdfShadingType5 {};
_aaedg :=_aedgf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aaedg ==nil {_gg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgcc ,_ebdd :=_aaedg .(*_bb .PdfObjectInteger );if !_ebdd {_gg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaedg );
return nil ,_bb .ErrTypeError ;};_addbe .BitsPerCoordinate =_fgcc ;_aaedg =_aedgf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aaedg ==nil {_gg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fgcc ,_ebdd =_aaedg .(*_bb .PdfObjectInteger );if !_ebdd {_gg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aaedg );
return nil ,_bb .ErrTypeError ;};_addbe .BitsPerComponent =_fgcc ;_aaedg =_aedgf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _aaedg ==nil {_gg .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_fgcc ,_ebdd =_aaedg .(*_bb .PdfObjectInteger );if !_ebdd {_gg .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aaedg );
return nil ,_bb .ErrTypeError ;};_addbe .VerticesPerRow =_fgcc ;_aaedg =_aedgf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aaedg ==nil {_gg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_deebe ,_ebdd :=_aaedg .(*_bb .PdfObjectArray );if !_ebdd {_gg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aaedg );
return nil ,_bb .ErrTypeError ;};_addbe .Decode =_deebe ;if _dffgg :=_aedgf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dffgg !=nil {_addbe .Function =[]PdfFunction {};if _eceeb ,_adda :=_dffgg .(*_bb .PdfObjectArray );_adda {for _ ,_bbgff :=range _eceeb .Elements (){_dfabdd ,_agcfb :=_gbcd (_bbgff );
if _agcfb !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agcfb );return nil ,_agcfb ;};_addbe .Function =append (_addbe .Function ,_dfabdd );
};}else {_gaba ,_bbcfb :=_gbcd (_dffgg );if _bbcfb !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbcfb );return nil ,_bbcfb ;
};_addbe .Function =append (_addbe .Function ,_gaba );};};return &_addbe ,nil ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_bgdac *PdfWriter )SetOptimizer (optimizer Optimizer ){_bgdac ._baafb =optimizer };func (_gafd *PdfReader )newPdfAnnotationSoundFromDict (_ebag *_bb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_dcf :=PdfAnnotationSound {};_cfaa ,_dac :=_gafd .newPdfAnnotationMarkupFromDict (_ebag );
if _dac !=nil {return nil ,_dac ;};_dcf .PdfAnnotationMarkup =_cfaa ;_dcf .Name =_ebag .Get ("\u004e\u0061\u006d\u0065");_dcf .Sound =_ebag .Get ("\u0053\u006f\u0075n\u0064");return &_dcf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dgfg *PdfActionURI )ToPdfObject ()_bb .PdfObject {_dgfg .PdfAction .ToPdfObject ();_acd :=_dgfg ._dcc ;_ee :=_acd .PdfObject .(*_bb .PdfObjectDictionary );_ee .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeURI )));_ee .SetIfNotNil ("\u0055\u0052\u0049",_dgfg .URI );
_ee .SetIfNotNil ("\u0049\u0073\u004da\u0070",_dgfg .IsMap );return _acd ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_ffbgc *PdfPageResources )GenerateXObjectName ()_bb .PdfObjectName {_gdfea :=1;for {_bgfbdb :=_bb .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_gdfea ));if !_ffbgc .HasXObjectByName (*_bgfbdb ){return *_bgfbdb ;};_gdfea ++;};};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_cgge *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bdab :=_bf .NewReader (img .getBase ());_adde :=_gdf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cggc :=_bf .NewWriter (_adde );
_efab :=_bdd .Pow (2,float64 (img .BitsPerComponent ))-1;_deg :=make ([]uint32 ,3);var (_fgfd uint32 ;ANorm ,X ,Y ,Z ,_ddbe ,_gaa ,_affe float64 ;_bfbd error ;);for {_fgfd ,_bfbd =_bdab .ReadSample ();if _bfbd ==_ecb .EOF {break ;}else if _bfbd !=nil {return img ,_bfbd ;
};ANorm =float64 (_fgfd )/_efab ;X =_cgge .WhitePoint [0]*_bdd .Pow (ANorm ,_cgge .Gamma );Y =_cgge .WhitePoint [1]*_bdd .Pow (ANorm ,_cgge .Gamma );Z =_cgge .WhitePoint [2]*_bdd .Pow (ANorm ,_cgge .Gamma );_ddbe =3.240479*X +-1.537150*Y +-0.498535*Z ;
_gaa =-0.969256*X +1.875992*Y +0.041556*Z ;_affe =0.055648*X +-0.204043*Y +1.057311*Z ;_ddbe =_bdd .Min (_bdd .Max (_ddbe ,0),1.0);_gaa =_bdd .Min (_bdd .Max (_gaa ,0),1.0);_affe =_bdd .Min (_bdd .Max (_affe ,0),1.0);_deg [0]=uint32 (_ddbe *_efab );_deg [1]=uint32 (_gaa *_efab );
_deg [2]=uint32 (_affe *_efab );if _bfbd =_cggc .WriteSamples (_deg );_bfbd !=nil {return img ,_bfbd ;};};return _dffda (&_adde ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_bbab *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=_bbab .GetNumComponents (){return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeea ,_cbfd :=_bb .GetNumbersAsFloat (objects );
if _cbfd !=nil {return nil ,_cbfd ;};return _bbab .ColorFromFloats (_eeea );};

// L returns the value of the L component of the color.
func (_deeb *PdfColorLab )L ()float64 {return _deeb [0]};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_fcgbg ,_cffeb :=_db .ParsePdfTime (dateStr );if _cffeb !=nil {return PdfDate {},_cffeb ;};return NewPdfDateFromTime (_fcgbg );};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bb .PdfObject ;Movie _bb .PdfObject ;A _bb .PdfObject ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_fabbg *PdfPageResources )HasExtGState (keyName _bb .PdfObjectName )bool {_ ,_cgda :=_fabbg .GetFontByName (keyName );return _cgda ;};

// Items returns all children outline items.
func (_bdfe *Outline )Items ()[]*OutlineItem {return _bdfe .Entries };

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_dbe :=NewPdfAction ();_bga :=&PdfActionGoTo {};_bga .PdfAction =_dbe ;_dbe .SetContext (_bga );return _bga ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_edcee *pdfCIDFontType0 )ToPdfObject ()_bb .PdfObject {return _bb .MakeNull ()};

// Encrypt encrypts the output file with a specified user/owner password.
func (_dgag *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_cfdbf :=RC4_128bit ;if options !=nil {_cfdbf =options .Algorithm ;};_eeadf :=_ba .PermOwner ;if options !=nil {_eeadf =options .Permissions ;};var _bcffc _cfb .Filter ;
switch _cfdbf {case RC4_128bit :_bcffc =_cfb .NewFilterV2 (16);case AES_128bit :_bcffc =_cfb .NewFilterAESV2 ();case AES_256bit :_bcffc =_cfb .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_cabc ,_abeee ,_gdcege :=_bb .PdfCryptNewEncrypt (_bcffc ,userPass ,ownerPass ,_eeadf );if _gdcege !=nil {return _gdcege ;};_dgag ._efgdff =_cabc ;if _abeee .Major !=0{_dgag .SetVersion (_abeee .Major ,_abeee .Minor );};_dgag ._cfdd =_abeee .Encrypt ;
_dgag ._eacbd ,_dgag ._dedff =_abeee .ID0 ,_abeee .ID1 ;_dgegb :=_bb .MakeIndirectObject (_abeee .Encrypt );_dgag ._bafbg =_dgegb ;_dgag .addObject (_dgegb );return nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gebdbf *PdfReader )PageFromIndirectObject (ind *_bb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gebdbf .PageList )!=len (_gebdbf ._dggdb ){return nil ,0,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _fdedg ,_cbbde :=range _gebdbf ._dggdb {if _cbbde ==ind {return _gebdbf .PageList [_fdedg ],_fdedg +1,nil ;};};return nil ,0,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_gffgea *PdfReader )newPdfPageFromDict (_accde *_bb .PdfObjectDictionary )(*PdfPage ,error ){_daee :=NewPdfPage ();
_daee ._deab =_accde ;_daee ._eegfb =*_accde ;_eeadeb :=*_accde ;_ggdee ,_agaa :=_eeadeb .Get ("\u0054\u0079\u0070\u0065").(*_bb .PdfObjectName );if !_agaa {return nil ,_ed .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_ggdee !="\u0050\u0061\u0067\u0065"{return nil ,_ed .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _fbbed :=_eeadeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_fbbed !=nil {_daee .Parent =_fbbed ;};if _cddec :=_eeadeb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cddec !=nil {_daff ,_bgaea :=_bb .GetString (_cddec );if !_bgaea {return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_accf ,_cdeaa :=NewPdfDate (_daff .Str ());if _cdeaa !=nil {return nil ,_cdeaa ;};_daee .LastModified =&_accf ;};if _eefef :=_eeadeb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eefef !=nil &&!_bb .IsNullObject (_eefef ){_ddcf ,_dfgbc :=_bb .GetDict (_eefef );
if !_dfgbc {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_eefef );};var _acda error ;_daee .Resources ,_acda =NewPdfPageResourcesFromDict (_ddcf );
if _acda !=nil {return nil ,_acda ;};}else {_afbff ,_beegc :=_daee .getParentResources ();if _beegc !=nil {return nil ,_beegc ;};if _afbff ==nil {_afbff =NewPdfPageResources ();};_daee .Resources =_afbff ;};if _fggcb :=_eeadeb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_fggcb !=nil {_baee ,_bbega :=_bb .GetArray (_fggcb );if !_bbega {return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fadgd error ;
_daee .MediaBox ,_fadgd =NewPdfRectangle (*_baee );if _fadgd !=nil {return nil ,_fadgd ;};};if _gdbfgc :=_eeadeb .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_gdbfgc !=nil {_geebbf ,_acafa :=_bb .GetArray (_gdbfgc );if !_acafa {return nil ,_ed .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _dcce error ;_daee .CropBox ,_dcce =NewPdfRectangle (*_geebbf );if _dcce !=nil {return nil ,_dcce ;};};if _bfaf :=_eeadeb .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_bfaf !=nil {_dcac ,_gfbd :=_bb .GetArray (_bfaf );if !_gfbd {return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _gbefg error ;_daee .BleedBox ,_gbefg =NewPdfRectangle (*_dcac );if _gbefg !=nil {return nil ,_gbefg ;};};if _eeaba :=_eeadeb .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_eeaba !=nil {_fddf ,_fdda :=_bb .GetArray (_eeaba );if !_fdda {return nil ,_ed .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bdbgb error ;_daee .TrimBox ,_bdbgb =NewPdfRectangle (*_fddf );if _bdbgb !=nil {return nil ,_bdbgb ;};};if _bbeb :=_eeadeb .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_bbeb !=nil {_cgeeb ,_fccde :=_bb .GetArray (_bbeb );if !_fccde {return nil ,_ed .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _dbga error ;_daee .ArtBox ,_dbga =NewPdfRectangle (*_cgeeb );if _dbga !=nil {return nil ,_dbga ;};};if _dcecg :=_eeadeb .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_dcecg !=nil {_daee .BoxColorInfo =_dcecg ;};if _eegae :=_eeadeb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_eegae !=nil {_daee .Contents =_eegae ;};if _adfad :=_eeadeb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_adfad !=nil {_bdbgg ,_bfdd :=_bb .GetNumberAsInt64 (_adfad );if _bfdd !=nil {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_daee .Rotate =&_bdbgg ;};if _ccede :=_eeadeb .Get ("\u0047\u0072\u006fu\u0070");_ccede !=nil {_daee .Group =_ccede ;};if _cecfc :=_eeadeb .Get ("\u0054\u0068\u0075m\u0062");_cecfc !=nil {_daee .Thumb =_cecfc ;};if _dbeaf :=_eeadeb .Get ("\u0042");_dbeaf !=nil {_daee .B =_dbeaf ;
};if _cdee :=_eeadeb .Get ("\u0044\u0075\u0072");_cdee !=nil {_daee .Dur =_cdee ;};if _abaa :=_eeadeb .Get ("\u0054\u0072\u0061n\u0073");_abaa !=nil {_daee .Trans =_abaa ;};if _abee :=_eeadeb .Get ("\u0041\u0041");_abee !=nil {_daee .AA =_abee ;};if _bgag :=_eeadeb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_bgag !=nil {_daee .Metadata =_bgag ;};if _dafc :=_eeadeb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dafc !=nil {_daee .PieceInfo =_dafc ;};if _dgae :=_eeadeb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_dgae !=nil {_daee .StructParents =_dgae ;};if _cceaf :=_eeadeb .Get ("\u0049\u0044");_cceaf !=nil {_daee .ID =_cceaf ;};if _gaeb :=_eeadeb .Get ("\u0050\u005a");_gaeb !=nil {_daee .PZ =_gaeb ;};if _dgba :=_eeadeb .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_dgba !=nil {_daee .SeparationInfo =_dgba ;};if _bcbad :=_eeadeb .Get ("\u0054\u0061\u0062\u0073");_bcbad !=nil {_daee .Tabs =_bcbad ;};if _fcac :=_eeadeb .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_fcac !=nil {_daee .TemplateInstantiated =_fcac ;};if _ceade :=_eeadeb .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_ceade !=nil {_daee .PresSteps =_ceade ;};if _ecaec :=_eeadeb .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ecaec !=nil {_daee .UserUnit =_ecaec ;
};if _bdbbdc :=_eeadeb .Get ("\u0056\u0050");_bdbbdc !=nil {_daee .VP =_bdbbdc ;};if _babfe :=_eeadeb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_babfe !=nil {_daee .Annots =_babfe ;};_daee ._cgeab =_gffgea ;return _daee ,nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_bbd :=NewPdfAction ();_adc :=&PdfActionSetOCGState {};_adc .PdfAction =_bbd ;_bbd .SetContext (_adc );return _adc ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bb .PdfObject ;Q _bb .PdfObject ;RC _bb .PdfObject ;DS _bb .PdfObject ;CL _bb .PdfObject ;IT _bb .PdfObject ;BE _bb .PdfObject ;RD _bb .PdfObject ;BS _bb .PdfObject ;LE _bb .PdfObject ;
};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _bb .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_debeb :=NewXObjectImage ();if lazy {_fdgb ,_cdegca :=UpdateXObjectImageFromImage (_debeb ,img ,cs ,encoder );if _cdegca !=nil {return nil ,_cdegca ;
};_fdgb .ToPdfObject ();_cdegca =_fdgb ._eddaa .MakeLazy ();if _cdegca !=nil {return nil ,_cdegca ;};_fdgb .Stream =nil ;return _fdgb ,nil ;};return UpdateXObjectImageFromImage (_debeb ,img ,cs ,encoder );};

// ToPdfObject implements interface PdfModel.
func (_fgbce *PdfAnnotationPopup )ToPdfObject ()_bb .PdfObject {_fgbce .PdfAnnotation .ToPdfObject ();_dabe :=_fgbce ._aaf ;_bagc :=_dabe .PdfObject .(*_bb .PdfObjectDictionary );_bagc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0050\u006f\u0070u\u0070"));
_bagc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fgbce .Parent );_bagc .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fgbce .Open );return _dabe ;};

// C returns the value of the cyan component of the color.
func (_fcfgg *PdfColorDeviceCMYK )C ()float64 {return _fcfgg [0]};func (_eaeda *PdfReader )newPdfFieldSignatureFromDict (_fcegf *_bb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_agcbc :=&PdfFieldSignature {};_fbdc ,_gceg :=_bb .GetIndirect (_fcegf .Get ("\u0056"));
if _gceg {var _ggbf error ;_agcbc .V ,_ggbf =_eaeda .newPdfSignatureFromIndirect (_fbdc );if _ggbf !=nil {return nil ,_ggbf ;};};_agcbc .Lock ,_ =_bb .GetIndirect (_fcegf .Get ("\u004c\u006f\u0063\u006b"));_agcbc .SV ,_ =_bb .GetIndirect (_fcegf .Get ("\u0053\u0056"));
return _agcbc ,nil ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_cgag :=&PdfOutline {_ggcce :_bb .MakeIndirectObject (_bb .MakeDict ())};_cgag ._fegg =_cgag ;return _cgag ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// Val returns the value of the color.
func (_gbgg *PdfColorCalGray )Val ()float64 {return float64 (*_gbgg )};func (_fced *PdfReader )newPdfAnnotationStampFromDict (_dfef *_bb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_fbf :=PdfAnnotationStamp {};_cdg ,_abfc :=_fced .newPdfAnnotationMarkupFromDict (_dfef );
if _abfc !=nil {return nil ,_abfc ;};_fbf .PdfAnnotationMarkup =_cdg ;_fbf .Name =_dfef .Get ("\u004e\u0061\u006d\u0065");return &_fbf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgeb *PdfAnnotationRedact )ToPdfObject ()_bb .PdfObject {_cgeb .PdfAnnotation .ToPdfObject ();_gefe :=_cgeb ._aaf ;_dffc :=_gefe .PdfObject .(*_bb .PdfObjectDictionary );_cgeb .PdfAnnotationMarkup .appendToPdfDictionary (_dffc );_dffc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_dffc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgeb .QuadPoints );_dffc .SetIfNotNil ("\u0049\u0043",_cgeb .IC );_dffc .SetIfNotNil ("\u0052\u004f",_cgeb .RO );_dffc .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_cgeb .OverlayText );
_dffc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_cgeb .Repeat );_dffc .SetIfNotNil ("\u0044\u0041",_cgeb .DA );_dffc .SetIfNotNil ("\u0051",_cgeb .Q );return _gefe ;};func (_gdfca *PdfAcroForm )fill (_cbefd FieldValueProvider ,_deeda FieldAppearanceGenerator )error {if _gdfca ==nil {return nil ;
};_dbgf ,_aeaaeg :=_cbefd .FieldValues ();if _aeaaeg !=nil {return _aeaaeg ;};for _ ,_aecfg :=range _gdfca .AllFields (){_fbad :=_aecfg .PartialName ();_aefa ,_decb :=_dbgf [_fbad ];if !_decb {if _agabc ,_fcgdf :=_aecfg .FullName ();_fcgdf ==nil {_aefa ,_decb =_dbgf [_agabc ];
};};if !_decb {_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_fbad );
continue ;};if _deec :=_dgffa (_aecfg ,_aefa );_deec !=nil {return _deec ;};if _deeda ==nil {continue ;};for _ ,_gbfff :=range _aecfg .Annotations {_acgb ,_egbaga :=_deeda .GenerateAppearanceDict (_gdfca ,_aecfg ,_gbfff );if _egbaga !=nil {return _egbaga ;
};_gbfff .AP =_acgb ;_gbfff .ToPdfObject ();};};return nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bb .PdfObject ;Flags _bb .PdfObject ;};

// WriteToFile writes the Appender output to file specified by path.
func (_efcde *PdfAppender )WriteToFile (outputPath string )error {_dcbdf ,_ccec :=_be .Create (outputPath );if _ccec !=nil {return _ccec ;};defer _dcbdf .Close ();return _efcde .Write (_dcbdf );};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gdgea *PdfWriter )SetNamedDestinations (dests _bb .PdfObject )error {if dests ==nil {return nil ;};_gg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_gdgea ._ebgdb .Set ("\u0044\u0065\u0073t\u0073",dests );return _gdgea .addObjects (dests );};func (_bfgbc *PdfFont )baseFields ()*fontCommon {if _bfgbc ._gbagg ==nil {_gg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _bfgbc ._gbagg .baseFields ();};func (_adgfg *LTV )buildCertChain (_eeeca ,_fbbd []*_cd .Certificate )([]*_cd .Certificate ,map[string ]*_cd .Certificate ,error ){_eccfe :=map[string ]*_cd .Certificate {};for _ ,_dfbed :=range _eeeca {_eccfe [_dfbed .Subject .CommonName ]=_dfbed ;
};_becbd :=_eeeca ;for _ ,_dagbb :=range _fbbd {_addec :=_dagbb .Subject .CommonName ;if _ ,_gabdc :=_eccfe [_addec ];_gabdc {continue ;};_eccfe [_addec ]=_dagbb ;_becbd =append (_becbd ,_dagbb );};if len (_becbd )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _ecdbe error ;for _gbgff :=_becbd [0];_gbgff !=nil &&!_adgfg .CertClient .IsCA (_gbgff );{_bbag ,_egccc :=_eccfe [_gbgff .Issuer .CommonName ];if !_egccc {if _bbag ,_ecdbe =_adgfg .CertClient .GetIssuer (_gbgff );_ecdbe !=nil {_gg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ecdbe );
break ;};_eccfe [_gbgff .Issuer .CommonName ]=_bbag ;_becbd =append (_becbd ,_bbag );};_gbgff =_bbag ;};return _becbd ,_eccfe ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_dgfgd pdfFontSimple )GetCharMetrics (code _ga .CharCode )(_dcg .CharMetrics ,bool ){if _fddd ,_dadde :=_dgfgd ._cbgg [code ];_dadde {return _dcg .CharMetrics {Wx :_fddd },true ;};if _dcg .IsStdFont (_dcg .StdFontName (_dgfgd ._gdaeed )){return _dcg .CharMetrics {Wx :250},true ;
};return _dcg .CharMetrics {},false ;};func (_edaa *PdfReader )newPdfAnnotationProjectionFromDict (_efc *_bb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_faf :=&PdfAnnotationProjection {};_dceg ,_ccde :=_edaa .newPdfAnnotationMarkupFromDict (_efc );
if _ccde !=nil {return nil ,_ccde ;};_faf .PdfAnnotationMarkup =_dceg ;return _faf ,nil ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_bb .PdfParser ;DiffPolicy _eg .DiffPolicy ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_dgfa *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cega :=vals [0];if _cega < 0.0||_cega > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cega );
return nil ,ErrColorOutOfRange ;};_gfcb :=vals [1];if _gfcb < 0.0||_gfcb > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cega );return nil ,ErrColorOutOfRange ;
};_dfaa :=vals [2];if _dfaa < 0.0||_dfaa > 1.0{_gg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cega );return nil ,ErrColorOutOfRange ;};_afgdg :=NewPdfColorDeviceRGB (_cega ,_gfcb ,_dfaa );
return _afgdg ,nil ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_gbdbb .Lock ();defer _gbdbb .Unlock ();_cceabe =keywords };func _bfgdf (_egdda *_bb .PdfObjectDictionary )*VRI {_eabcg ,_ :=_bb .GetString (_egdda .Get ("\u0054\u0055"));_eebgf ,_ :=_bb .GetString (_egdda .Get ("\u0054\u0053"));
return &VRI {Cert :_edaff (_egdda .Get ("\u0043\u0065\u0072\u0074")),OCSP :_edaff (_egdda .Get ("\u004f\u0043\u0053\u0050")),CRL :_edaff (_egdda .Get ("\u0043\u0052\u004c")),TU :_eabcg ,TS :_eebgf };};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bb .PdfObject ;Flags _bb .PdfObject ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eegff ,_dgefb :=_be .Open (filePath );if _dgefb !=nil {_gg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dgefb );
return nil ,_dgefb ;};defer _eegff .Close ();return NewCompositePdfFontFromTTF (_eegff );};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_bbedg *PdfWriter )AddPage (page *PdfPage )error {const _gdgff ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_fccad (page );_fffef :=page .ToPdfObject ();_gg .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_gg .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_fffef );_fgca ,_geefg :=_bb .GetIndirect (_fffef );if !_geefg {return _ed .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_gg .Log .Trace ("\u0025\u0073",_fgca );_gg .Log .Trace ("\u0025\u0073",_fgca .PdfObject );_cbgb ,_geefg :=_bb .GetDict (_fgca .PdfObject );if !_geefg {return _ed .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ggdbc ,_geefg :=_bb .GetName (_cbgb .Get ("\u0054\u0079\u0070\u0065"));if !_geefg {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_cbgb .Get ("\u0054\u0079\u0070\u0065"));
};if _ggdbc .String ()!="\u0050\u0061\u0067\u0065"{return _ed .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_fgabd :=[]_bb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_acee ,_ecac :=_bb .GetIndirect (_cbgb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_gg .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_cbgb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_ecac );
for _ecac {_gg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_acee );_dcgef ,_affcd :=_bb .GetDict (_acee .PdfObject );if !_affcd {return _ed .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_gcece :=range _fgabd {_gg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gcece );if _cbgb .Get (_gcece )!=nil {_gg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _feecc :=_dcgef .Get (_gcece );_feecc !=nil {_gg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gcece );_cbgb .Set (_gcece ,_feecc );};};_acee ,_ecac =_bb .GetIndirect (_dcgef .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_gg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dcgef .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_cbgb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbedg ._faebd );_fgca .PdfObject =_cbgb ;_ffgdg ,_geefg :=_bb .GetDict (_bbedg ._faebd .PdfObject );if !_geefg {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_afbab ,_geefg :=_bb .GetArray (_ffgdg .Get ("\u004b\u0069\u0064\u0073"));if !_geefg {return _ed .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_afbab .Append (_fgca );_bbedg ._eafc [_cbgb ]=struct{}{};_aebga ,_geefg :=_bb .GetInt (_ffgdg .Get ("\u0043\u006f\u0075n\u0074"));if !_geefg {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_aebga =*_aebga +1;if page ._cgeab ==nil {_egeae :=_fac .Track (_bbedg ._gbeaf ,_gdgff );if _egeae !=nil {return _egeae ;};}else {_ceefe :=_fac .Track (page ._cgeab ._egfbb ,_gdgff );if _ceefe !=nil {return _ceefe ;};};_bbedg .addObject (_fgca );_effec :=_bbedg .addObjects (_cbgb );
if _effec !=nil {return _effec ;};return nil ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_ecfb *PdfPage )AddExtGState (name _bb .PdfObjectName ,egs *_bb .PdfObjectDictionary )error {if _ecfb .Resources ==nil {_ecfb .Resources =NewPdfPageResources ();};if _ecfb .Resources .ExtGState ==nil {_ecfb .Resources .ExtGState =_bb .MakeDict ();
};_fdcab ,_cfgb :=_bb .TraceToDirectObject (_ecfb .Resources .ExtGState ).(*_bb .PdfObjectDictionary );if !_cfgb {_gg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bb .TraceToDirectObject (_ecfb .Resources .ExtGState ));
return _ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fdcab .Set (name ,egs );return nil ;};func (_cdcdfd *PdfReader )buildNameNodes (_fgddb *_bb .PdfIndirectObject ,_cegcb map[_bb .PdfObject ]struct{})error {if _fgddb ==nil {return nil ;
};if _ ,_caacd :=_cegcb [_fgddb ];_caacd {_gg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_fgddb .ObjectNumber );
return nil ;};_cegcb [_fgddb ]=struct{}{};_cgggg ,_afeg :=_fgddb .PdfObject .(*_bb .PdfObjectDictionary );if !_afeg {return _ed .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _fccfa ,_cffff :=_bb .GetDict (_cgggg .Get ("\u0044\u0065\u0073t\u0073"));
_cffff {_fcca ,_gcaca :=_bb .GetArray (_fccfa .Get ("\u004b\u0069\u0064\u0073"));if !_gcaca {return _ed .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_gg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_fcca );
for _fefe ,_bgdbg :=range _fcca .Elements (){_caebe ,_addee :=_bb .GetIndirect (_bgdbg );if !_addee {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_caebe );
return _ed .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_fcca .Set (_fefe ,_caebe );_cdddc :=_cdcdfd .buildNameNodes (_caebe ,_cegcb );if _cdddc !=nil {return _cdddc ;
};};};if _daedd ,_eecff :=_bb .GetDict (_cgggg );_eecff {if !_bb .IsNullObject (_daedd .Get ("\u004b\u0069\u0064\u0073")){if _fbgf ,_fdcbc :=_bb .GetArray (_daedd .Get ("\u004b\u0069\u0064\u0073"));_fdcbc {for _fgfad ,_dddeb :=range _fbgf .Elements (){if _cabfc ,_abcce :=_bb .GetIndirect (_dddeb );
_abcce {_fbgf .Set (_fgfad ,_cabfc );_gedbc :=_cdcdfd .buildNameNodes (_cabfc ,_cegcb );if _gedbc !=nil {return _gedbc ;};};};};};};return nil ;};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_bbdb :=&PdfFilespec {};_bbdb ._eggff =_bb .MakeIndirectObject (_bb .MakeDict ());_bbdb .Desc =_bb .MakeString (file .Description );_bbdb .EF =file .ToPdfObject ();_bbdb .F =_bb .MakeString (file .Name );
_bbdb .UF =_bb .MakeEncodedString (file .Name ,true );_ggfdd :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_ggfdd ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_ggfdd ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_ggfdd ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_ggfdd ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_bbdb .AFRelationship =_bb .MakeName (_ggfdd );return _bbdb ;
};

// ToPdfObject implements interface PdfModel.
func (_gbfc *PdfAnnotationFreeText )ToPdfObject ()_bb .PdfObject {_gbfc .PdfAnnotation .ToPdfObject ();_adad :=_gbfc ._aaf ;_ddee :=_adad .PdfObject .(*_bb .PdfObjectDictionary );_gbfc .PdfAnnotationMarkup .appendToPdfDictionary (_ddee );_ddee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_ddee .SetIfNotNil ("\u0044\u0041",_gbfc .DA );_ddee .SetIfNotNil ("\u0051",_gbfc .Q );_ddee .SetIfNotNil ("\u0052\u0043",_gbfc .RC );_ddee .SetIfNotNil ("\u0044\u0053",_gbfc .DS );_ddee .SetIfNotNil ("\u0043\u004c",_gbfc .CL );_ddee .SetIfNotNil ("\u0049\u0054",_gbfc .IT );
_ddee .SetIfNotNil ("\u0042\u0045",_gbfc .BE );_ddee .SetIfNotNil ("\u0052\u0044",_gbfc .RD );_ddee .SetIfNotNil ("\u0042\u0053",_gbfc .BS );_ddee .SetIfNotNil ("\u004c\u0045",_gbfc .LE );return _adad ;};func (_ccdec *pdfCIDFontType2 )baseFields ()*fontCommon {return &_ccdec .fontCommon };


// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_dgaee *PdfPage )ToPdfObject ()_bb .PdfObject {_cfada :=_dgaee ._beaf ;_dgaee .GetPageDict ();return _cfada ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_ecae *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bfcge ,_bdaf :=color .(*PdfColorDeviceGray );if !_bdaf {_gg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_bfcge ),float64 (*_bfcge ),float64 (*_bfcge )),nil ;};type pdfFontType3 struct{fontCommon ;_dcff *_bb .PdfIndirectObject ;


// These fields are specific to Type 3 fonts.
CharProcs _bb .PdfObject ;Encoding _bb .PdfObject ;FontBBox _bb .PdfObject ;FontMatrix _bb .PdfObject ;FirstChar _bb .PdfObject ;LastChar _bb .PdfObject ;Widths _bb .PdfObject ;Resources _bb .PdfObject ;_daed map[_ga .CharCode ]float64 ;_acaf _ga .TextEncoder ;
};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_cfgf DefaultImageHandler )Read (reader _ecb .Reader )(*Image ,error ){_ebfe ,_ ,_bgae :=_b .Decode (reader );if _bgae !=nil {_gg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_bgae );
return nil ,_bgae ;};return _cfgf .NewImageFromGoImage (_ebfe );};func (_fggca *PdfWriter )mapObjectStreams (_acdcc bool )(map[_bb .PdfObject ]bool ,bool ){_feggf :=make (map[_bb .PdfObject ]bool );for _ ,_gagfba :=range _fggca ._cgfff {if _bfced ,_fddbc :=_gagfba .(*_bb .PdfObjectStreams );
_fddbc {_acdcc =true ;for _ ,_fdbca :=range _bfced .Elements (){_feggf [_fdbca ]=true ;if _eddbe ,_bgccf :=_fdbca .(*_bb .PdfIndirectObject );_bgccf {_feggf [_eddbe .PdfObject ]=true ;};};};};return _feggf ,_acdcc ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_abca *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _abca .Alternate ==nil {_gg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _abca .N ==1{_gg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ddgd :=NewPdfColorspaceDeviceGray ();return _ddgd .ColorToRGB (color );}else if _abca .N ==3{_gg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _abca .N ==4{_gg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gafdc :=NewPdfColorspaceDeviceCMYK ();return _gafdc .ColorToRGB (color );}else {return nil ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_abca );
return _abca .Alternate .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_bbdc *PdfActionGoTo )ToPdfObject ()_bb .PdfObject {_bbdc .PdfAction .ToPdfObject ();_dfe :=_bbdc ._dcc ;_gda :=_dfe .PdfObject .(*_bb .PdfObjectDictionary );_gda .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeGoTo )));_gda .SetIfNotNil ("\u0044",_bbdc .D );
return _dfe ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_afbea :_bb .MakeIndirectObject (_bb .MakeDict ())}};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_cggd *PdfFieldButton )SetType (btype ButtonType ){_abae :=uint32 (0);if _cggd .Ff !=nil {_abae =uint32 (*_cggd .Ff );};switch btype {case ButtonTypePush :_abae |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_abae |=FieldFlagRadio .Mask ();
};_cggd .Ff =_bb .MakeInteger (int64 (_abae ));};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bb .PdfObjectInteger ;TilingType *_bb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bb .PdfObjectFloat ;YStep *_bb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bb .PdfObjectArray ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_ffef *PdfPageResources )SetFontByName (keyName _bb .PdfObjectName ,obj _bb .PdfObject )error {if _ffef .Font ==nil {_ffef .Font =_bb .MakeDict ();};_cbabg ,_bffac :=_bb .TraceToDirectObject (_ffef .Font ).(*_bb .PdfObjectDictionary );if !_bffac {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bb .TraceToDirectObject (_ffef .Font ));
return _bb .ErrTypeError ;};_cbabg .Set (keyName ,obj );return nil ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bbda *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bb .StreamEncoder ,error ){_dggga ,_ceaee :=_bbda ._aeff .(*_bb .PdfObjectStream );if !_ceaee {_gg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbda ._aeff );
return nil ,nil ,_bb .ErrTypeError ;};_caga ,_afcba :=_bb .DecodeStream (_dggga );if _afcba !=nil {_gg .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_afcba );
return nil ,nil ,_afcba ;};_cdgbd ,_afcba :=_bb .NewEncoderFromStream (_dggga );if _afcba !=nil {_gg .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_afcba );
return nil ,nil ,_afcba ;};return _caga ,_cdgbd ,nil ;};type pdfFont interface{_dcg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func _gbgef (_egfeb *XObjectForm )(*PdfRectangle ,bool ,error ){if _adeg ,_cdea :=_egfeb .BBox .(*_bb .PdfObjectArray );_cdea {_aaggf ,_cfad :=NewPdfRectangle (*_adeg );
if _cfad !=nil {return nil ,false ,_cfad ;};if _gfad ,_bdga :=_egfeb .Matrix .(*_bb .PdfObjectArray );_bdga {_geaf ,_cdbd :=_gfad .ToFloat64Array ();if _cdbd !=nil {return nil ,false ,_cdbd ;};_bebac :=_gcac .IdentityMatrix ();if len (_geaf )==6{_bebac =_gcac .NewMatrix (_geaf [0],_geaf [1],_geaf [2],_geaf [3],_geaf [4],_geaf [5]);
};_aaggf .Transform (_bebac );return _aaggf ,true ,nil ;};return _aaggf ,false ,nil ;};return nil ,false ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// String returns a string that describes `base`.
func (_ecedad fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_ecedad .coreString ());};func _dbec (_egddg _bb .PdfObject )(*PdfPattern ,error ){_bcfe :=&PdfPattern {};var _gbgeff *_bb .PdfObjectDictionary ;
if _fdeag ,_faaac :=_bb .GetIndirect (_egddg );_faaac {_bcfe ._aeff =_fdeag ;_cfcab ,_decc :=_fdeag .PdfObject .(*_bb .PdfObjectDictionary );if !_decc {_gg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fdeag .PdfObject );
return nil ,_bb .ErrTypeError ;};_gbgeff =_cfcab ;}else if _gcaed ,_dbae :=_bb .GetStream (_egddg );_dbae {_bcfe ._aeff =_gcaed ;_gbgeff =_gcaed .PdfObjectDictionary ;}else {_gg .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_egddg );
return nil ,_bb .ErrTypeError ;};_aade :=_gbgeff .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _aade ==nil {_gg .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dcge ,_ecgd :=_aade .(*_bb .PdfObjectInteger );if !_ecgd {_gg .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aade );
return nil ,_bb .ErrTypeError ;};if *_dcge !=1&&*_dcge !=2{_gg .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_dcge );return nil ,_bb .ErrRangeError ;
};_bcfe .PatternType =int64 (*_dcge );switch *_dcge {case 1:_cbege ,_acgaa :=_fegd (_gbgeff );if _acgaa !=nil {return nil ,_acgaa ;};_cbege .PdfPattern =_bcfe ;_bcfe ._aafef =_cbege ;return _bcfe ,nil ;case 2:_dbdbd ,_gacgb :=_bbfcb (_gbgeff );if _gacgb !=nil {return nil ,_gacgb ;
};_dbdbd .PdfPattern =_bcfe ;_bcfe ._aafef =_dbdbd ;return _bcfe ,nil ;};return nil ,_ed .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_fbdcg *PdfReader )GetCatalogMarkInfo ()(_bb .PdfObject ,bool ){if _fbdcg ._effcg ==nil {return nil ,false ;};_dbefbc :=_fbdcg ._effcg .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _dbefbc ,_dbefbc !=nil ;};

// HasFontByName checks if has font resource by name.
func (_geeed *PdfPage )HasFontByName (name _bb .PdfObjectName )bool {_fdce ,_fadag :=_geeed .Resources .Font .(*_bb .PdfObjectDictionary );if !_fadag {return false ;};if _bgda :=_fdce .Get (name );_bgda !=nil {return true ;};return false ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ddafg :map[_bb .PdfObject ]struct{}{},_geeca :_efdga (),_cfaef :_bb .NewParserFromString (txt )};};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_gbbgc *PdfFont )GetCIDToGIDMapObject ()_bb .PdfObject {_ebbac ,_bcbg :=_gbbgc ._gbagg .(*pdfCIDFontType2 );if _bcbg {return _ebbac .CIDToGIDMap ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcf *PdfActionSubmitForm )ToPdfObject ()_bb .PdfObject {_fcf .PdfAction .ToPdfObject ();_aebb :=_fcf ._dcc ;_dbd :=_aebb .PdfObject .(*_bb .PdfObjectDictionary );_dbd .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeSubmitForm )));if _fcf .F !=nil {_dbd .Set ("\u0046",_fcf .F .ToPdfObject ());
};_dbd .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fcf .Fields );_dbd .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fcf .Flags );return _aebb ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bb .PdfObjectInteger ;BitsPerComponent *_bb .PdfObjectInteger ;BitsPerFlag *_bb .PdfObjectInteger ;Decode *_bb .PdfObjectArray ;Function []PdfFunction ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_cbagb *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_cfff ,_adec :=color .(*PdfColorDeviceCMYK );if !_adec {_gg .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_egedg :=_cfff .C ();_gdce :=_cfff .M ();_gbbc :=_cfff .Y ();_agcd :=_cfff .K ();_egedg =_egedg *(1-_agcd )+_agcd ;_gdce =_gdce *(1-_agcd )+_agcd ;
_gbbc =_gbbc *(1-_agcd )+_agcd ;_efa :=1-_egedg ;_agbc :=1-_gdce ;_aaccd :=1-_gbbc ;return NewPdfColorDeviceRGB (_efa ,_agbc ,_aaccd ),nil ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_cgfe :=&PdfBorderStyle {};return _cgfe };

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_ff PdfModel ;Rect _bb .PdfObject ;Contents _bb .PdfObject ;P _bb .PdfObject ;NM _bb .PdfObject ;M _bb .PdfObject ;F _bb .PdfObject ;AP _bb .PdfObject ;AS _bb .PdfObject ;Border _bb .PdfObject ;C _bb .PdfObject ;StructParent _bb .PdfObject ;
OC _bb .PdfObject ;_aaf *_bb .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ceaa *PdfAnnotationCaret )ToPdfObject ()_bb .PdfObject {_ceaa .PdfAnnotation .ToPdfObject ();_fbc :=_ceaa ._aaf ;_cffc :=_fbc .PdfObject .(*_bb .PdfObjectDictionary );_ceaa .PdfAnnotationMarkup .appendToPdfDictionary (_cffc );_cffc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0043\u0061\u0072e\u0074"));
_cffc .SetIfNotNil ("\u0052\u0044",_ceaa .RD );_cffc .SetIfNotNil ("\u0053\u0079",_ceaa .Sy );return _fbc ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bb .PdfObject ;};

// Add appends an outline item as a child of the current outline item.
func (_cdcdf *OutlineItem )Add (item *OutlineItem ){_cdcdf .Entries =append (_cdcdf .Entries ,item )};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_gbcdg *PdfOutlineTreeNode )ToPdfObject ()_bb .PdfObject {return _gbcdg .GetContext ().ToPdfObject ();};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bb .PdfObject ;MK _bb .PdfObject ;A _bb .PdfObject ;AA _bb .PdfObject ;};

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_dfedf *PdfPageResources )SetXObjectImageByNameLazy (keyName _bb .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_gdaec :=ximg .ToPdfObject ().(*_bb .PdfObjectStream );if lazy {_gdaec .MakeLazy ();};_beac :=_dfedf .SetXObjectByName (keyName ,_gdaec );
return _beac ;};

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_geaba *PdfWriter )SetCatalogMarkInfo (info _bb .PdfObject )error {if info ==nil {_geaba ._ebgdb .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _aefc ,_eegabg :=info .(*_bb .PdfObjectReference );_eegabg {info =_aefc .Resolve ();
if info ==nil {_geaba ._ebgdb .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};_geaba .addObject (info );_geaba ._ebgdb .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );return nil ;};var _ pdfFont =(*pdfFontType3 )(nil );


// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_facae :_bb .MakeIndirectObject (_bb .MakeDict ()),VRI :map[string ]*VRI {}};};func (_bace *PdfAppender )mergeResources (_edga ,_ecgg _bb .PdfObject ,_gfe map[_bb .PdfObjectName ]_bb .PdfObjectName )_bb .PdfObject {if _ecgg ==nil &&_edga ==nil {return nil ;
};if _ecgg ==nil {return _edga ;};_aeaf ,_cfce :=_bb .GetDict (_ecgg );if !_cfce {return _edga ;};if _edga ==nil {_efdde :=_bb .MakeDict ();_efdde .Merge (_aeaf );return _ecgg ;};_bbg ,_cfce :=_bb .GetDict (_edga );if !_cfce {_gg .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_bbg =_bb .MakeDict ();};for _ ,_acge :=range _aeaf .Keys (){if _fadbb ,_bfcg :=_gfe [_acge ];_bfcg {_bbg .Set (_fadbb ,_aeaf .Get (_acge ));}else {_bbg .Set (_acge ,_aeaf .Get (_acge ));};};return _bbg ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_abd :=NewPdfAnnotation ();_fcbe :=&PdfAnnotationText {};_fcbe .PdfAnnotation =_abd ;_fcbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abd .SetContext (_fcbe );return _fcbe ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_ecbc :=NewPdfAnnotation ();_abb :=&PdfAnnotationRedact {};_abb .PdfAnnotation =_ecbc ;_abb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecbc .SetContext (_abb );return _abb ;};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _bb .PdfObject )(*EmbeddedFile ,error ){_efcfd :=_bb .TraceToDirectObject (obj );_bcce ,_aaab :=_efcfd .(*_bb .PdfObjectDictionary );if !_aaab {return nil ,_ed .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_dedc :=_bb .TraceToDirectObject (_bcce .Get ("\u0046"));if _dedc ==nil {return nil ,_ed .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_aafe ,_aaab :=_dedc .(*_bb .PdfObjectStream );
if !_aaab {return nil ,_ed .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_beeag :=_aafe .PdfObjectDictionary ;_aggg :=_beeag .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _aggg ==nil {return nil ,_ed .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_gefeb ,_aaab :=_aggg .(*_bb .PdfObjectDictionary );if !_aaab {return nil ,_ed .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_agca :="";_dcfgg :=_gefeb .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _dcfgg !=nil {_agca =_dcfgg .(*_bb .PdfObjectString ).Str ();};_dfea ,_bedd :=_bb .DecodeStream (_aafe );if _bedd !=nil {return nil ,_bedd ;};_bccc :=&EmbeddedFile {Content :_dfea ,Hash :_agca };return _bccc ,nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_cbedg :=appender .Reader .DSS ;if _cbedg ==nil {_cbedg =NewDSS ();};if _gacfdf :=_cbedg .GenerateHashMaps ();_gacfdf !=nil {return nil ,_gacfdf ;};return &LTV {CertClient :_bag .NewCertClient (),OCSPClient :_bag .NewOCSPClient (),CRLClient :_bag .NewCRLClient (),SkipExisting :true ,_abcbg :appender ,_ebfa :_cbedg },nil ;
};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_edbeb :=&XObjectImage {};_bdfcd :=&_bb .PdfObjectStream {};_bdfcd .PdfObjectDictionary =_bb .MakeDict ();_edbeb ._eddaa =_bdfcd ;return _edbeb ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_gegef *pdfFontSimple )ToPdfObject ()_bb .PdfObject {if _gegef ._edea ==nil {_gegef ._edea =&_bb .PdfIndirectObject {};};_eedab :=_gegef .baseFields ().asPdfObjectDictionary ("");_gegef ._edea .PdfObject =_eedab ;if _gegef .FirstChar !=nil {_eedab .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gegef .FirstChar );
};if _gegef .LastChar !=nil {_eedab .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gegef .LastChar );};if _gegef .Widths !=nil {_eedab .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gegef .Widths );};if _gegef .Encoding !=nil {_eedab .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gegef .Encoding );
}else if _gegef ._fcdce !=nil {_bccd :=_gegef ._fcdce .ToPdfObject ();if _bccd !=nil {_eedab .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bccd );};};return _gegef ._edea ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_bbfc DefaultImageHandler )NewImageFromGoImage (goimg _b .Image )(*Image ,error ){_ecec ,_bgfgb :=_gdf .FromGoImage (goimg );if _bgfgb !=nil {return nil ,_bgfgb ;};_agcaa :=_dffda (_ecec .Base ());return &_agcaa ,nil ;};func (_ceg *PdfReader )newPdfAnnotationTrapNetFromDict (_fcfc *_bb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_dbea :=PdfAnnotationTrapNet {};
return &_dbea ,nil ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func _dffda (_bbege *_gdf .ImageBase )(_ececd Image ){_ececd .Width =int64 (_bbege .Width );_ececd .Height =int64 (_bbege .Height );_ececd .BitsPerComponent =int64 (_bbege .BitsPerComponent );
_ececd .ColorComponents =_bbege .ColorComponents ;_ececd .Data =_bbege .Data ;_ececd ._dafdc =_bbege .Decode ;_ececd ._cebdb =_bbege .Alpha ;return _ececd ;};func (_ege *PdfReader )newPdfActionFromIndirectObject (_bgaa *_bb .PdfIndirectObject )(*PdfAction ,error ){_bdc ,_egf :=_bgaa .PdfObject .(*_bb .PdfObjectDictionary );
if !_egf {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ege ._geeca .GetModelFromPrimitive (_bdc );model !=nil {_dff ,_cfbg :=model .(*PdfAction );if !_cfbg {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _dff ,nil ;};_aefd :=&PdfAction {};_aefd ._dcc =_bgaa ;_ege ._geeca .Register (_bdc ,_aefd );if _aad :=_bdc .Get ("\u0054\u0079\u0070\u0065");_aad !=nil {_egb ,_ce :=_aad .(*_bb .PdfObjectName );if !_ce {_gg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aad );
}else {if *_egb !="\u0041\u0063\u0074\u0069\u006f\u006e"{_gg .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_egb );
};_aefd .Type =_egb ;};};if _fec :=_bdc .Get ("\u004e\u0065\u0078\u0074");_fec !=nil {_aefd .Next =_fec ;};if _cba :=_bdc .Get ("\u0053");_cba !=nil {_aefd .S =_cba ;};_cfc ,_fgag :=_aefd .S .(*_bb .PdfObjectName );if !_fgag {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aefd .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aefd .S );};_aadc :=PdfActionType (_cfc .String ());
switch _aadc {case ActionTypeGoTo :_ggf ,_gec :=_ege .newPdfActionGotoFromDict (_bdc );if _gec !=nil {return nil ,_gec ;};_ggf .PdfAction =_aefd ;_aefd ._afg =_ggf ;return _aefd ,nil ;case ActionTypeGoToR :_ede ,_dfc :=_ege .newPdfActionGotoRFromDict (_bdc );
if _dfc !=nil {return nil ,_dfc ;};_ede .PdfAction =_aefd ;_aefd ._afg =_ede ;return _aefd ,nil ;case ActionTypeGoToE :_dbb ,_dba :=_ege .newPdfActionGotoEFromDict (_bdc );if _dba !=nil {return nil ,_dba ;};_dbb .PdfAction =_aefd ;_aefd ._afg =_dbb ;return _aefd ,nil ;
case ActionTypeLaunch :_adbe ,_cfba :=_ege .newPdfActionLaunchFromDict (_bdc );if _cfba !=nil {return nil ,_cfba ;};_adbe .PdfAction =_aefd ;_aefd ._afg =_adbe ;return _aefd ,nil ;case ActionTypeThread :_ece ,_dfd :=_ege .newPdfActionThreadFromDict (_bdc );
if _dfd !=nil {return nil ,_dfd ;};_ece .PdfAction =_aefd ;_aefd ._afg =_ece ;return _aefd ,nil ;case ActionTypeURI :_eeb ,_cgf :=_ege .newPdfActionURIFromDict (_bdc );if _cgf !=nil {return nil ,_cgf ;};_eeb .PdfAction =_aefd ;_aefd ._afg =_eeb ;return _aefd ,nil ;
case ActionTypeSound :_eac ,_aefde :=_ege .newPdfActionSoundFromDict (_bdc );if _aefde !=nil {return nil ,_aefde ;};_eac .PdfAction =_aefd ;_aefd ._afg =_eac ;return _aefd ,nil ;case ActionTypeMovie :_gag ,_feaf :=_ege .newPdfActionMovieFromDict (_bdc );
if _feaf !=nil {return nil ,_feaf ;};_gag .PdfAction =_aefd ;_aefd ._afg =_gag ;return _aefd ,nil ;case ActionTypeHide :_dag ,_beg :=_ege .newPdfActionHideFromDict (_bdc );if _beg !=nil {return nil ,_beg ;};_dag .PdfAction =_aefd ;_aefd ._afg =_dag ;return _aefd ,nil ;
case ActionTypeNamed :_ecbeg ,_eae :=_ege .newPdfActionNamedFromDict (_bdc );if _eae !=nil {return nil ,_eae ;};_ecbeg .PdfAction =_aefd ;_aefd ._afg =_ecbeg ;return _aefd ,nil ;case ActionTypeSubmitForm :_gge ,_eaf :=_ege .newPdfActionSubmitFormFromDict (_bdc );
if _eaf !=nil {return nil ,_eaf ;};_gge .PdfAction =_aefd ;_aefd ._afg =_gge ;return _aefd ,nil ;case ActionTypeResetForm :_beb ,_cef :=_ege .newPdfActionResetFormFromDict (_bdc );if _cef !=nil {return nil ,_cef ;};_beb .PdfAction =_aefd ;_aefd ._afg =_beb ;
return _aefd ,nil ;case ActionTypeImportData :_gdfa ,_dccf :=_ege .newPdfActionImportDataFromDict (_bdc );if _dccf !=nil {return nil ,_dccf ;};_gdfa .PdfAction =_aefd ;_aefd ._afg =_gdfa ;return _aefd ,nil ;case ActionTypeSetOCGState :_fcd ,_dge :=_ege .newPdfActionSetOCGStateFromDict (_bdc );
if _dge !=nil {return nil ,_dge ;};_fcd .PdfAction =_aefd ;_aefd ._afg =_fcd ;return _aefd ,nil ;case ActionTypeRendition :_dfa ,_feac :=_ege .newPdfActionRenditionFromDict (_bdc );if _feac !=nil {return nil ,_feac ;};_dfa .PdfAction =_aefd ;_aefd ._afg =_dfa ;
return _aefd ,nil ;case ActionTypeTrans :_fce ,_cfg :=_ege .newPdfActionTransFromDict (_bdc );if _cfg !=nil {return nil ,_cfg ;};_fce .PdfAction =_aefd ;_aefd ._afg =_fce ;return _aefd ,nil ;case ActionTypeGoTo3DView :_bee ,_ccd :=_ege .newPdfActionGoTo3DViewFromDict (_bdc );
if _ccd !=nil {return nil ,_ccd ;};_bee .PdfAction =_aefd ;_aefd ._afg =_bee ;return _aefd ,nil ;case ActionTypeJavaScript :_aeg ,_bbe :=_ege .newPdfActionJavaScriptFromDict (_bdc );if _bbe !=nil {return nil ,_bbe ;};_aeg .PdfAction =_aefd ;_aefd ._afg =_aeg ;
return _aefd ,nil ;};_gg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_aadc );return nil ,nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fbege *PdfReader )GetEncryptionMethod ()string {_fadgcb :=_fbege ._cfaef .GetCrypter ();return _fadgcb .String ();};func (_ccac *PdfReader )newPdfAcroFormFromDict (_ffab *_bb .PdfIndirectObject ,_acgfe *_bb .PdfObjectDictionary )(*PdfAcroForm ,error ){_fabbe :=NewPdfAcroForm ();
if _ffab !=nil {_fabbe ._dabfef =_ffab ;_ffab .PdfObject =_bb .MakeDict ();};if _eggc :=_acgfe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_eggc !=nil &&!_bb .IsNullObject (_eggc ){_bbec ,_gccd :=_bb .GetArray (_eggc );if !_gccd {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_eggc );
};var _ggaae []*PdfField ;for _ ,_bcgdg :=range _bbec .Elements (){_fffbg ,_ccfb :=_bb .GetIndirect (_bcgdg );if !_ccfb {if _ ,_ebcf :=_bcgdg .(*_bb .PdfObjectNull );_ebcf {_gg .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_gg .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bcgdg );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ddggb ,_dfcfd :=_ccac .newPdfFieldFromIndirectObject (_fffbg ,nil );
if _dfcfd !=nil {return nil ,_dfcfd ;};_gg .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ddggb );_ggaae =append (_ggaae ,_ddggb );};_fabbe .Fields =&_ggaae ;};if _fgceg :=_acgfe .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_fgceg !=nil {_eabf ,_gbgbb :=_bb .GetBool (_fgceg );if _gbgbb {_fabbe .NeedAppearances =_eabf ;}else {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fgceg );
};};if _eada :=_acgfe .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_eada !=nil {_cdfg ,_aeaccc :=_bb .GetInt (_eada );if _aeaccc {_fabbe .SigFlags =_cdfg ;}else {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eada );
};};if _daaefa :=_acgfe .Get ("\u0043\u004f");_daaefa !=nil {_cgfed ,_fedbg :=_bb .GetArray (_daaefa );if _fedbg {_fabbe .CO =_cgfed ;}else {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_daaefa );
};};if _ggbbd :=_acgfe .Get ("\u0044\u0052");_ggbbd !=nil {if _efcce ,_gefbg :=_bb .GetDict (_ggbbd );_gefbg {_bgbdf ,_cbgeb :=NewPdfPageResourcesFromDict (_efcce );if _cbgeb !=nil {_gg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_cbgeb );
return nil ,_cbgeb ;};_fabbe .DR =_bgbdf ;}else {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ggbbd );};};if _abeaab :=_acgfe .Get ("\u0044\u0041");
_abeaab !=nil {_gdaef ,_cdcda :=_bb .GetString (_abeaab );if _cdcda {_fabbe .DA =_gdaef ;}else {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_abeaab );
};};if _gbefa :=_acgfe .Get ("\u0051");_gbefa !=nil {_aeaaa ,_fgab :=_bb .GetInt (_gbefa );if _fgab {_fabbe .Q =_aeaaa ;}else {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gbefa );
};};if _gcecf :=_acgfe .Get ("\u0058\u0046\u0041");_gcecf !=nil {_fabbe .XFA =_gcecf ;};if _fcfgf :=_acgfe .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_fcfgf !=nil {_fabbe .ADBEEchoSign =_fcfgf ;};_fabbe .ToPdfObject ();
return _fabbe ,nil ;};

// GetVersion gets the document version.
func (_abfcfe *PdfWriter )GetVersion ()_bb .Version {return _abfcfe ._gecfd };func _bede (_fgbeef _bb .PdfObject )*Names {_gegeed :=_bgcc ();_ddea :=_bb .TraceToDirectObject (_fgbeef ).(*_bb .PdfObjectDictionary );if _cdedd :=_ddea .Get ("\u0044\u0065\u0073t\u0073");
_cdedd !=nil {_gegeed .Dests =_bb .TraceToDirectObject (_cdedd ).(*_bb .PdfObjectDictionary );};if _bgfde :=_ddea .Get ("\u0041\u0050");_bgfde !=nil {_gegeed .AP =_bb .TraceToDirectObject (_bgfde ).(*_bb .PdfObjectDictionary );};if _ccdgf :=_ddea .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");
_ccdgf !=nil {_gegeed .JavaScript =_bb .TraceToDirectObject (_ccdgf ).(*_bb .PdfObjectDictionary );};if _ebfda :=_ddea .Get ("\u0050\u0061\u0067e\u0073");_ebfda !=nil {_gegeed .Pages =_bb .TraceToDirectObject (_ebfda ).(*_bb .PdfObjectDictionary );};if _fagee :=_ddea .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");
_fagee !=nil {_gegeed .Templates =_bb .TraceToDirectObject (_fagee ).(*_bb .PdfObjectDictionary );};if _eebgd :=_ddea .Get ("\u0049\u0044\u0053");_eebgd !=nil {_gegeed .IDS =_bb .TraceToDirectObject (_eebgd ).(*_bb .PdfObjectDictionary );};if _fccec :=_ddea .Get ("\u0055\u0052\u004c\u0053");
_fccec !=nil {_gegeed .URLS =_bb .TraceToDirectObject (_fccec ).(*_bb .PdfObjectDictionary );};if _cade :=_ddea .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");_cade !=nil {_gegeed .EmbeddedFiles =_bb .TraceToDirectObject (_cade ).(*_bb .PdfObjectDictionary );
};if _ddcdc :=_ddea .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");_ddcdc !=nil {_gegeed .AlternatePresentations =_bb .TraceToDirectObject (_ddcdc ).(*_bb .PdfObjectDictionary );
};if _cdaa :=_ddea .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_cdaa !=nil {_gegeed .Renditions =_bb .TraceToDirectObject (_cdaa ).(*_bb .PdfObjectDictionary );};return _gegeed ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ggdgg *PdfReader )GetPageLabels ()(_bb .PdfObject ,error ){_ggad :=_bb .ResolveReference (_ggdgg ._effcg .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _ggad ==nil {return nil ,nil ;};if !_ggdgg ._becge {_gdbca :=_ggdgg .traverseObjectData (_ggad );
if _gdbca !=nil {return nil ,_gdbca ;};};return _ggad ,nil ;};type fontCommon struct{_gdaeed string ;_ecdc string ;_ffed string ;_daab _bb .PdfObject ;_beee *_af .CMap ;_eadda *PdfFontDescriptor ;_fffc int64 ;};

// ToPdfObject implements interface PdfModel.
func (_aag *PdfActionNamed )ToPdfObject ()_bb .PdfObject {_aag .PdfAction .ToPdfObject ();_bgf :=_aag ._dcc ;_dcea :=_bgf .PdfObject .(*_bb .PdfObjectDictionary );_dcea .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeNamed )));_dcea .SetIfNotNil ("\u004e",_aag .N );
return _bgf ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_agb :=NewPdfAnnotation ();_eda :=&PdfAnnotationWidget {};_eda .PdfAnnotation =_agb ;_agb .SetContext (_eda );return _eda ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func _fegd (_ebgfb *_bb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_bead :=&PdfTilingPattern {};_dcafa :=_ebgfb .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _dcafa ==nil {_gg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_daggd ,_dgcac :=_dcafa .(*_bb .PdfObjectInteger );if !_dgcac {_gg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dcafa );
return nil ,_bb .ErrTypeError ;};_bead .PaintType =_daggd ;_dcafa =_ebgfb .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dcafa ==nil {_gg .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gbegd ,_dgcac :=_dcafa .(*_bb .PdfObjectInteger );if !_dgcac {_gg .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcafa );
return nil ,_bb .ErrTypeError ;};_bead .TilingType =_gbegd ;_dcafa =_ebgfb .Get ("\u0042\u0042\u006f\u0078");if _dcafa ==nil {_gg .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_dcafa =_bb .TraceToDirectObject (_dcafa );_affdb ,_dgcac :=_dcafa .(*_bb .PdfObjectArray );if !_dgcac {_gg .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcafa );
return nil ,_bb .ErrTypeError ;};_cecad ,_ebcac :=NewPdfRectangle (*_affdb );if _ebcac !=nil {_gg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ebcac );return nil ,_ebcac ;};_bead .BBox =_cecad ;_dcafa =_ebgfb .Get ("\u0058\u0053\u0074e\u0070");
if _dcafa ==nil {_gg .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aegd ,_ebcac :=_bb .GetNumberAsFloat (_dcafa );if _ebcac !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_aegd );
return nil ,_ebcac ;};_bead .XStep =_bb .MakeFloat (_aegd );_dcafa =_ebgfb .Get ("\u0059\u0053\u0074e\u0070");if _dcafa ==nil {_gg .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ccggfa ,_ebcac :=_bb .GetNumberAsFloat (_dcafa );if _ebcac !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ccggfa );
return nil ,_ebcac ;};_bead .YStep =_bb .MakeFloat (_ccggfa );_dcafa =_ebgfb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _dcafa ==nil {_gg .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ebgfb ,_dgcac =_bb .TraceToDirectObject (_dcafa ).(*_bb .PdfObjectDictionary );if !_dgcac {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dcafa );
};_egefe ,_ebcac :=NewPdfPageResourcesFromDict (_ebgfb );if _ebcac !=nil {return nil ,_ebcac ;};_bead .Resources =_egefe ;if _bgbad :=_ebgfb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bgbad !=nil {_bgcad ,_edgfg :=_bgbad .(*_bb .PdfObjectArray );if !_edgfg {_gg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgbad );
return nil ,_bb .ErrTypeError ;};_bead .Matrix =_bgcad ;};return _bead ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gff *PdfActionGoToE )ToPdfObject ()_bb .PdfObject {_gff .PdfAction .ToPdfObject ();_gaf :=_gff ._dcc ;_abe :=_gaf .PdfObject .(*_bb .PdfObjectDictionary );_abe .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeGoToE )));if _gff .F !=nil {_abe .Set ("\u0046",_gff .F .ToPdfObject ());
};_abe .SetIfNotNil ("\u0044",_gff .D );_abe .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gff .NewWindow );_abe .SetIfNotNil ("\u0054",_gff .T );return _gaf ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_addgd *PdfColorspaceLab )DecodeArray ()[]float64 {_dgeff :=[]float64 {0,100};if _addgd .Range !=nil &&len (_addgd .Range )==4{_dgeff =append (_dgeff ,_addgd .Range ...);}else {_dgeff =append (_dgeff ,-100,100,-100,100);};return _dgeff ;};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_aeecc *Names )ToPdfObject ()_bb .PdfObject {_gegeeg :=_aeecc ._gaeg ;_gdfec ,_cadfb :=_gegeeg .PdfObject .(*_bb .PdfObjectDictionary );if !_cadfb {_gg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
return _gegeeg ;};if _aeecc .EmbeddedFiles !=nil {_gdfec .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_bb .MakeIndirectObject (_aeecc .EmbeddedFiles ));};return _gegeeg ;};

// ToInteger convert to an integer format.
func (_gfda *PdfColorLab )ToInteger (bits int )[3]uint32 {_bcge :=_bdd .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bcge *_gfda .L ()),uint32 (_bcge *_gfda .A ()),uint32 (_bcge *_gfda .B ())};};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func _ceca (_eaedc *_bb .PdfObjectDictionary ){_dcfb ,_fcdc :=_bb .GetArray (_eaedc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_cagdg ,_dbed :=_bb .GetIntVal (_eaedc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_afec ,_bgcd :=_bb .GetIntVal (_eaedc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _fcdc &&_dbed &&_bgcd {_adafg :=_dcfb .Len ();if _adafg !=_afec -_cagdg +1{_gg .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_adafg ,_afec );
_bbaab :=_bb .PdfObjectInteger (_cagdg +_adafg -1);_eaedc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_bbaab );};};};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_dfeg *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_aadaab :=_bf .NewReader (img .getBase ());_abbc :=_gdf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._cebdb ,img ._dafdc );
_cbac :=_bf .NewWriter (_abbc );_gfbb :=_bdd .Pow (2,float64 (img .BitsPerComponent ))-1;_aace :=_dfeg .GetNumComponents ();_fedf :=make ([]uint32 ,_aace );_gfagc :=make ([]float64 ,_aace );for {_bbbb :=_aadaab .ReadSamples (_fedf );if _bbbb ==_ecb .EOF {break ;
}else if _bbbb !=nil {return img ,_bbbb ;};for _gbda :=0;_gbda < _aace ;_gbda ++{_cbfc :=float64 (_fedf [_gbda ])/_gfbb ;_gfagc [_gbda ]=_cbfc ;};_degc ,_bbbb :=_dfeg .TintTransform .Evaluate (_gfagc );if _bbbb !=nil {return img ,_bbbb ;};for _ ,_fggc :=range _degc {_fggc =_bdd .Min (_bdd .Max (0,_fggc ),1.0);
if _bbbb =_cbac .WriteSample (uint32 (_fggc *_gfbb ));_bbbb !=nil {return img ,_bbbb ;};};};return _dfeg .AlternateSpace .ImageToRGB (_dffda (&_abbc ));};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ebcb *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcae ,_agegd :=_bb .GetNumbersAsFloat (objects );
if _agegd !=nil {return nil ,_agegd ;};return _ebcb .ColorFromFloats (_gcae );};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_gegdg *PdfAcroForm )GetContainingPdfObject ()_bb .PdfObject {return _gegdg ._dabfef };func (_ccgde *PdfReader )loadDSS ()(*DSS ,error ){if _ccgde ._cfaef .GetCrypter ()!=nil &&!_ccgde ._cfaef .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bebf :=_ccgde ._effcg .Get ("\u0044\u0053\u0053");if _bebf ==nil {return nil ,nil ;};_fcffe ,_ :=_bb .GetIndirect (_bebf );_bebf =_bb .TraceToDirectObject (_bebf );switch _bgab :=_bebf .(type ){case *_bb .PdfObjectNull :return nil ,nil ;case *_bb .PdfObjectDictionary :return _gfdg (_fcffe ,_bgab );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_bebf );};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_gbdbb .Lock ();defer _gbdbb .Unlock ();_adce =author };

// GetNumComponents returns the number of color components (3 for RGB).
func (_gbed *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// Encoder returns the font's text encoder.
func (_cgfeb *pdfFontSimple )Encoder ()_ga .TextEncoder {if _cgfeb ._fcdce !=nil {return _cgfeb ._fcdce ;};if _cgfeb ._gfgb !=nil {return _cgfeb ._gfgb ;};_bbcc ,_ :=_ga .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bbcc ;};func _decd (_ecbgcc _bb .PdfObject ,_aaea bool )(*PdfFont ,error ){_eadd ,_feeae ,_abbb :=_daaef (_ecbgcc );if _eadd !=nil {_ceca (_eadd );};if _abbb !=nil {if _abbb ==ErrType1CFontNotSupported {_agefc ,_aaacf :=_eege (_eadd ,_feeae ,nil );
if _aaacf !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_feeae ,_aaacf );
return nil ,_abbb ;};return &PdfFont {_gbagg :_agefc },_abbb ;};return nil ,_abbb ;};_fcbfg :=&PdfFont {};switch _feeae ._ecdc {case "\u0054\u0079\u0070e\u0030":if !_aaea {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_feeae );
return nil ,_ed .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_abeaa ,_ebeec :=_bdbbd (_eadd ,_feeae );if _ebeec !=nil {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_feeae ,_ebeec );
return nil ,_ebeec ;};_fcbfg ._gbagg =_abeaa ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _gbcff *pdfFontSimple ;_afcc ,_ecdb :=_dcg .NewStdFontByName (_dcg .StdFontName (_feeae ._gdaeed ));
if _ecdb {_dfdd :=_fcgdc (_afcc );_fcbfg ._gbagg =&_dfdd ;_ebebbd :=_bb .TraceToDirectObject (_dfdd .ToPdfObject ());_dfdda ,_bgfcc ,_bcagd :=_daaef (_ebebbd );if _bcagd !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_feeae ,_dfdd );
return nil ,_bcagd ;};for _ ,_fadg :=range _eadd .Keys (){_dfdda .Set (_fadg ,_eadd .Get (_fadg ));};_gbcff ,_bcagd =_eege (_dfdda ,_bgfcc ,_dfdd ._gfgb );if _bcagd !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_feeae ,_dfdd );
return nil ,_bcagd ;};_gbcff ._cbgg =_dfdd ._cbgg ;_gbcff ._cbec =_dfdd ._cbec ;if _gbcff ._dfcc ==nil {_gbcff ._dfcc =_dfdd ._dfcc ;};}else {_gbcff ,_abbb =_eege (_eadd ,_feeae ,nil );if _abbb !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_feeae ,_abbb );
return nil ,_abbb ;};};_abbb =_gbcff .addEncoding ();if _abbb !=nil {return nil ,_abbb ;};if _ecdb {_gbcff .updateStandard14Font ();};if _ecdb &&_gbcff ._fcdce ==nil &&_gbcff ._gfgb ==nil {_gg .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gbcff );
_gg .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_afcc );};if len (_gbcff ._cbgg )==0{_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_gbcff );};_fcbfg ._gbagg =_gbcff ;
case "\u0054\u0079\u0070e\u0033":_ddaa ,_egag :=_ggggab (_eadd ,_feeae );if _egag !=nil {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_egag );
return nil ,_egag ;};_fcbfg ._gbagg =_ddaa ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_fgcd ,_fcgce :=_aaef (_eadd ,_feeae );if _fcgce !=nil {_gg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fcgce );
return nil ,_fcgce ;};_fcbfg ._gbagg =_fgcd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cedc ,_fcafc :=_bdgc (_eadd ,_feeae );if _fcafc !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_feeae ,_fcafc );
return nil ,_fcafc ;};_fcbfg ._gbagg =_cedc ;default:_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_feeae );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_feeae );};return _fcbfg ,nil ;};

// SetBorderWidth sets the style's border width.
func (_dbcf *PdfBorderStyle )SetBorderWidth (width float64 ){_dbcf .W =&width };func (_efabb PdfFont )actualFont ()pdfFont {if _efabb ._gbagg ==nil {_gg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_efabb );
};return _efabb ._gbagg ;};func (_gddab *LTV )getOCSPs (_ddab []*_cd .Certificate ,_gcegd map[string ]*_cd .Certificate )([][]byte ,error ){_gagaf :=make ([][]byte ,0,len (_ddab ));for _ ,_ddae :=range _ddab {for _ ,_cggead :=range _ddae .OCSPServer {if _gddab .CertClient .IsCA (_ddae ){continue ;
};_bffaf ,_bcbga :=_gcegd [_ddae .Issuer .CommonName ];if !_bcbga {_gg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_bbaac ,_eggecb :=_gddab .OCSPClient .MakeRequest (_cggead ,_ddae ,_bffaf );if _eggecb !=nil {_gg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_eggecb );
continue ;};_gagaf =append (_gagaf ,_bbaac );};};return _gagaf ,nil ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_gfdgf *PdfOutline )GetContainingPdfObject ()_bb .PdfObject {return _gfdgf ._ggcce };func _ggfed (_gddae _bb .PdfObject )(string ,error ){_gddae =_bb .TraceToDirectObject (_gddae );switch _aaegb :=_gddae .(type ){case *_bb .PdfObjectString :return _aaegb .Str (),nil ;
case *_bb .PdfObjectStream :_baeg ,_gffgg :=_bb .DecodeStream (_aaegb );if _gffgg !=nil {return "",_gffgg ;};return string (_baeg ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_gddae );
};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gfdbe *PdfRectangle )Normalize (){if _gfdbe .Llx > _gfdbe .Urx {_gfdbe .Llx ,_gfdbe .Urx =_gfdbe .Urx ,_gfdbe .Llx ;};if _gfdbe .Lly > _gfdbe .Ury {_gfdbe .Lly ,_gfdbe .Ury =_gfdbe .Ury ,_gfdbe .Lly ;};};

// Width returns the width of `rect`.
func (_eedcec *PdfRectangle )Width ()float64 {return _bdd .Abs (_eedcec .Urx -_eedcec .Llx )};func (_bcegc *pdfFontSimple )addEncoding ()error {var (_ccdc string ;_gaff map[_ga .CharCode ]_ga .GlyphName ;_egbb _ga .SimpleEncoder ;);if _bcegc .Encoder ()!=nil {_ebbb ,_ccbcbg :=_bcegc .Encoder ().(_ga .SimpleEncoder );
if _ccbcbg &&_ebbb !=nil {_ccdc =_ebbb .BaseName ();};};if _bcegc .Encoding !=nil {_ggfddf ,_eeaf ,_bgfac :=_bcegc .getFontEncoding ();if _bgfac !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcegc ._gdaeed ,_bcegc ._ecdc ,_bcegc .Encoding ,_bcegc .Encoding ,_bgfac );
return _bgfac ;};if _ggfddf !=""{_ccdc =_ggfddf ;};_gaff =_eeaf ;_egbb ,_bgfac =_ga .NewSimpleTextEncoder (_ccdc ,_gaff );if _bgfac !=nil {return _bgfac ;};};if _egbb ==nil {_efdgd :=_bcegc ._eadda ;if _efdgd !=nil {switch _bcegc ._ecdc {case "\u0054\u0079\u0070e\u0031":if _efdgd .fontFile !=nil &&_efdgd .fontFile ._abecc !=nil {_gg .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_egbb =_efdgd .fontFile ._abecc ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _efdgd ._cgbaa !=nil {_gg .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_dfaegd ,_ddgf :=_efdgd ._cgbaa .MakeEncoder ();
if _ddgf ==nil {_egbb =_dfaegd ;};if _bcegc ._beee ==nil {_bcegc ._beee =_efdgd ._cgbaa .MakeToUnicode ();};};};};};if _egbb !=nil {if _gaff !=nil {_gg .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gaff ,_bcegc .baseFields ());
_egbb =_ga .ApplyDifferences (_egbb ,_gaff );};_bcegc .SetEncoder (_egbb );};return nil ;};func (_gfdae *PdfWriter )writeXRefStreams (_bfcee int ,_ddac int64 )error {_baeee :=_bfcee +1;_gfdae ._gaded [_baeee ]=crossReference {Type :1,ObjectNumber :_baeee ,Offset :_ddac };
_bbeae :=_aa .NewBuffer (nil );_egbfg :=_bb .MakeArray ();for _gggf :=0;_gggf <=_bfcee ;{for ;_gggf <=_bfcee ;_gggf ++{_eaeae ,_bddba :=_gfdae ._gaded [_gggf ];if _bddba &&(!_gfdae ._aedgc ||_gfdae ._aedgc &&(_eaeae .Type ==1&&_eaeae .Offset >=_gfdae ._daabg ||_eaeae .Type ==0)){break ;
};};var _fbecf int ;for _fbecf =_gggf +1;_fbecf <=_bfcee ;_fbecf ++{_beacg ,_cabge :=_gfdae ._gaded [_fbecf ];if _cabge &&(!_gfdae ._aedgc ||_gfdae ._aedgc &&(_beacg .Type ==1&&_beacg .Offset > _gfdae ._daabg )){continue ;};break ;};_egbfg .Append (_bb .MakeInteger (int64 (_gggf )),_bb .MakeInteger (int64 (_fbecf -_gggf )));
for _afbgd :=_gggf ;_afbgd < _fbecf ;_afbgd ++{_decdb :=_gfdae ._gaded [_afbgd ];switch _decdb .Type {case 0:_dc .Write (_bbeae ,_dc .BigEndian ,byte (0));_dc .Write (_bbeae ,_dc .BigEndian ,uint32 (0));_dc .Write (_bbeae ,_dc .BigEndian ,uint16 (0xFFFF));
case 1:_dc .Write (_bbeae ,_dc .BigEndian ,byte (1));_dc .Write (_bbeae ,_dc .BigEndian ,uint32 (_decdb .Offset ));_dc .Write (_bbeae ,_dc .BigEndian ,uint16 (_decdb .Generation ));case 2:_dc .Write (_bbeae ,_dc .BigEndian ,byte (2));_dc .Write (_bbeae ,_dc .BigEndian ,uint32 (_decdb .ObjectNumber ));
_dc .Write (_bbeae ,_dc .BigEndian ,uint16 (_decdb .Index ));};};_gggf =_fbecf +1;};_ebfdae ,_adbfd :=_bb .MakeStream (_bbeae .Bytes (),_bb .NewFlateEncoder ());if _adbfd !=nil {return _adbfd ;};_ebfdae .ObjectNumber =int64 (_baeee );_ebfdae .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0058\u0052\u0065\u0066"));
_ebfdae .PdfObjectDictionary .Set ("\u0057",_bb .MakeArray (_bb .MakeInteger (1),_bb .MakeInteger (4),_bb .MakeInteger (2)));_ebfdae .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_egbfg );_ebfdae .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bb .MakeInteger (int64 (_baeee )));
_ebfdae .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_gfdae ._gefda );_ebfdae .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_gfdae ._eecbb );if _gfdae ._aedgc &&_gfdae ._fedgb > 0{_ebfdae .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bb .MakeInteger (_gfdae ._fedgb ));
};if _gfdae ._efgdff !=nil {_ebfdae .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gfdae ._bafbg );};if _gfdae ._fggfg ==nil &&_gfdae ._eacbd !=""&&_gfdae ._dedff !=""{_gfdae ._fggfg =_bb .MakeArray (_bb .MakeHexString (_gfdae ._eacbd ),_bb .MakeHexString (_gfdae ._dedff ));
};if _gfdae ._fggfg !=nil {_gg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gfdae ._fggfg );_ebfdae .Set ("\u0049\u0044",_gfdae ._fggfg );};_gfdae .writeObject (int (_ebfdae .ObjectNumber ),_ebfdae );return nil ;};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _fb .Time ;ModTime _fb .Time ;};func (_accfg *PdfPattern )getDict ()*_bb .PdfObjectDictionary {if _geecf ,_dfbbf :=_accfg ._aeff .(*_bb .PdfIndirectObject );
_dfbbf {_ddadf ,_bcfaf :=_geecf .PdfObject .(*_bb .PdfObjectDictionary );if !_bcfaf {return nil ;};return _ddadf ;}else if _efbf ,_bbfb :=_accfg ._aeff .(*_bb .PdfObjectStream );_bbfb {return _efbf .PdfObjectDictionary ;}else {_gg .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_accfg ._aeff );
return nil ;};};func _cagf (_dbggg _bb .PdfObject )(*PdfColorspaceLab ,error ){_abcg :=NewPdfColorspaceLab ();if _fba ,_bfff :=_dbggg .(*_bb .PdfIndirectObject );_bfff {_abcg ._bcff =_fba ;};_dbggg =_bb .TraceToDirectObject (_dbggg );_afag ,_gedgc :=_dbggg .(*_bb .PdfObjectArray );
if !_gedgc {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _afag .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_dbggg =_bb .TraceToDirectObject (_afag .Get (0));_bbee ,_gedgc :=_dbggg .(*_bb .PdfObjectName );if !_gedgc {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_bbee !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_dbggg =_bb .TraceToDirectObject (_afag .Get (1));_fgc ,_gedgc :=_dbggg .(*_bb .PdfObjectDictionary );
if !_gedgc {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_dbggg =_fgc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_dbggg =_bb .TraceToDirectObject (_dbggg );_bfae ,_gedgc :=_dbggg .(*_bb .PdfObjectArray );if !_gedgc {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _bfae .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fcefd ,_egff :=_bfae .GetAsFloat64Slice ();
if _egff !=nil {return nil ,_egff ;};_abcg .WhitePoint =_fcefd ;_dbggg =_fgc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dbggg !=nil {_dbggg =_bb .TraceToDirectObject (_dbggg );_eage ,_cfegb :=_dbggg .(*_bb .PdfObjectArray );
if !_cfegb {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _eage .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gfag ,_caag :=_eage .GetAsFloat64Slice ();if _caag !=nil {return nil ,_caag ;};_abcg .BlackPoint =_gfag ;};_dbggg =_fgc .Get ("\u0052\u0061\u006eg\u0065");if _dbggg !=nil {_dbggg =_bb .TraceToDirectObject (_dbggg );_adbg ,_degd :=_dbggg .(*_bb .PdfObjectArray );
if !_degd {_gg .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adbg .Len ()!=4{_gg .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ddfea ,_dafb :=_adbg .GetAsFloat64Slice ();if _dafb !=nil {return nil ,_dafb ;};_abcg .Range =_ddfea ;};return _abcg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcb *PdfActionThread )ToPdfObject ()_bb .PdfObject {_fcb .PdfAction .ToPdfObject ();_bdg :=_fcb ._dcc ;_dgg :=_bdg .PdfObject .(*_bb .PdfObjectDictionary );_dgg .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeThread )));if _fcb .F !=nil {_dgg .Set ("\u0046",_fcb .F .ToPdfObject ());
};_dgg .SetIfNotNil ("\u0044",_fcb .D );_dgg .SetIfNotNil ("\u0042",_fcb .B );return _bdg ;};func (_dcegc *PdfWriter )writeNamesDictionary ()error {if _dcegc ._bccad ==nil {return nil ;};_fbbgc :=_dcegc ._bccad .ToPdfObject ();_dcegc ._ebgdb .Set ("\u004e\u0061\u006de\u0073",_fbbgc );
_cbcefa :=_dcegc .addObjects (_fbbgc );if _cbcefa !=nil {return _cbcefa ;};return nil ;};func (_bcag *PdfPage )flattenFieldsWithOpts (_gegf FieldAppearanceGenerator ,_gdagc *FieldFlattenOpts ,_fbace map[*PdfAnnotation ]bool )error {var _fbed []*PdfAnnotation ;
if _gegf !=nil {if _efge :=_gegf .WrapContentStream (_bcag );_efge !=nil {return _efge ;};};_gbcba ,_cceab :=_bcag .GetAnnotations ();if _cceab !=nil {return _cceab ;};for _ ,_ebgf :=range _gbcba {_addgc ,_bafae :=_fbace [_ebgf ];if !_bafae &&_gdagc .AnnotFilterFunc !=nil {if _ ,_bfbc :=_ebgf .GetContext ().(*PdfAnnotationWidget );
!_bfbc {_bafae =_gdagc .AnnotFilterFunc (_ebgf );};};if !_bafae {_fbed =append (_fbed ,_ebgf );continue ;};switch _ebgf .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_gdbg ,_cbce ,_gfaed :=_ecccge (_ebgf );if _gfaed !=nil {if !_addgc {_gg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_gfaed );
continue ;};if _gdbg ==nil {continue ;};_edce :=_bcag .Resources .GenerateXObjectName ();_bcag .Resources .SetXObjectFormByName (_edce ,_gdbg );_edbc ,_bdbb ,_gfaed :=_gbgef (_gdbg );if _gfaed !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_gfaed );
}else {_ceaba :=_gcac .IdentityMatrix ();_ceaba =_ceaba .Translate (-_edbc .Llx ,-_edbc .Lly );if _bdbb {_cfeed :=0.0;if _edbc .Width ()> 0{_cfeed =_cbce .Width ()/_edbc .Width ();};_fggg :=0.0;if _edbc .Height ()> 0{_fggg =_cbce .Height ()/_edbc .Height ();
};_ceaba =_ceaba .Scale (_cfeed ,_fggg );};_cbce .Transform (_ceaba );};_acgc :=_bdd .Min (_cbce .Llx ,_cbce .Urx );_acbg :=_bdd .Min (_cbce .Lly ,_cbce .Ury );var _eceb []string ;_eceb =append (_eceb ,"\u0071");_eceb =append (_eceb ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_acgc ,_acbg ));
_eceb =append (_eceb ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_edce .String ()));_eceb =append (_eceb ,"\u0051");_gegea :=_dce .Join (_eceb ,"\u000a");_gfaed =_bcag .AppendContentStream (_gegea );if _gfaed !=nil {return _gfaed ;};if _gdbg .Resources !=nil {_gceab ,_ccfe :=_bb .GetDict (_gdbg .Resources .Font );
if _ccfe {for _ ,_cffba :=range _gceab .Keys (){if !_bcag .Resources .HasFontByName (_cffba ){_bcag .Resources .SetFontByName (_cffba ,_gceab .Get (_cffba ));};};};};};if len (_fbed )> 0{_bcag ._cfafb =_fbed ;}else {_bcag ._cfafb =[]*PdfAnnotation {};};
return nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_efedg *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ebabe ,_beggc :=_bb .GetDict (_efedg ._ebgdb .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_beggc {_ebabe =_bb .MakeDict ();_efedg ._ebgdb .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ebabe );
};_fabdgf ,_beggc :=_bb .GetDict (_ebabe .Get (_bb .PdfObjectName (extName )));if !_beggc {_fabdgf =_bb .MakeDict ();_ebabe .Set (_bb .PdfObjectName (extName ),_fabdgf );};if _fgdfb ,_ :=_bb .GetNameVal (_fabdgf .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_fgdfb !=baseVersion {_fabdgf .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bb .MakeName (baseVersion ));};if _dfaaf ,_ :=_bb .GetIntVal (_fabdgf .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_dfaaf !=extLevel {_fabdgf .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bb .MakeInteger (int64 (extLevel )));};};var ImageHandling ImageHandler =DefaultImageHandler {};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _bb .PdfObjectName ;};func _bagbg (_ggdad _bb .PdfObject )(*PdfFunctionType2 ,error ){_fgfba :=&PdfFunctionType2 {};var _gcca *_bb .PdfObjectDictionary ;if _ggbc ,_ebgad :=_ggdad .(*_bb .PdfIndirectObject );
_ebgad {_geafa ,_bedc :=_ggbc .PdfObject .(*_bb .PdfObjectDictionary );if !_bedc {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fgfba ._agafc =_ggbc ;_gcca =_geafa ;}else if _geffd ,_eaeac :=_ggdad .(*_bb .PdfObjectDictionary );
_eaeac {_gcca =_geffd ;}else {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gg .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_gcca .String ());_dggg ,_ffdgc :=_bb .TraceToDirectObject (_gcca .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bb .PdfObjectArray );
if !_ffdgc {_gg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _dggg .Len ()< 0||_dggg .Len ()%2!=0{_gg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_fdfdf ,_ccceg :=_dggg .ToFloat64Array ();if _ccceg !=nil {return nil ,_ccceg ;};_fgfba .Domain =_fdfdf ;_dggg ,_ffdgc =_bb .TraceToDirectObject (_gcca .Get ("\u0052\u0061\u006eg\u0065")).(*_bb .PdfObjectArray );if _ffdgc {if _dggg .Len ()< 0||_dggg .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ccacg ,_ddbff :=_dggg .ToFloat64Array ();if _ddbff !=nil {return nil ,_ddbff ;};_fgfba .Range =_ccacg ;};_dggg ,_ffdgc =_bb .TraceToDirectObject (_gcca .Get ("\u0043\u0030")).(*_bb .PdfObjectArray );if _ffdgc {_gfcf ,_ceada :=_dggg .ToFloat64Array ();
if _ceada !=nil {return nil ,_ceada ;};_fgfba .C0 =_gfcf ;};_dggg ,_ffdgc =_bb .TraceToDirectObject (_gcca .Get ("\u0043\u0031")).(*_bb .PdfObjectArray );if _ffdgc {_egfb ,_fdefc :=_dggg .ToFloat64Array ();if _fdefc !=nil {return nil ,_fdefc ;};_fgfba .C1 =_egfb ;
};if len (_fgfba .C0 )!=len (_fgfba .C1 ){_gg .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_bb .ErrRangeError ;};N ,_ccceg :=_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_gcca .Get ("\u004e")));
if _ccceg !=nil {_gg .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_gcca .String ());return nil ,_ccceg ;};_fgfba .N =N ;
return _fgfba ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bed *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bed .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bed ._gbfg =acroForm ;};

// SetContext set the sub annotation (context).
func (_gbfaf *PdfShading )SetContext (ctx PdfModel ){_gbfaf ._gbbdg =ctx };

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ecb .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _bdbge ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dgdcf (rs ,opts ,true ,_bdbge );
};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_cfaef *_bb .PdfParser ;_dfda _bb .PdfObject ;_acgfb *_bb .PdfIndirectObject ;_abcfd *_bb .PdfObjectDictionary ;_dggdb []*_bb .PdfIndirectObject ;PageList []*PdfPage ;_agggd int ;_effcg *_bb .PdfObjectDictionary ;_aagda *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_aebcb *Permissions ;_agbfc map[*PdfReader ]*PdfReader ;_egbda []*PdfReader ;_geeca *modelManager ;_becge bool ;_ddafg map[_bb .PdfObject ]struct{};_bfcab _ecb .ReadSeeker ;_egfbb string ;_fdgad bool ;_gdab *ReaderOpts ;
_fgffe bool ;};func (_facf *PdfAcroForm )fillImageWithAppearance (_dcbbc FieldImageProvider ,_effc FieldAppearanceGenerator )error {if _facf ==nil {return nil ;};_aeab ,_dccca :=_dcbbc .FieldImageValues ();if _dccca !=nil {return _dccca ;};for _ ,_fdgac :=range _facf .AllFields (){_becfb :=_fdgac .PartialName ();
_gbedc ,_abdbe :=_aeab [_becfb ];if !_abdbe {if _dbdgg ,_bccea :=_fdgac .FullName ();_bccea ==nil {_gbedc ,_abdbe =_aeab [_dbdgg ];};};if !_abdbe {_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_becfb );
continue ;};switch _dced :=_fdgac .GetContext ().(type ){case *PdfFieldButton :if _dced .IsPush (){_dced .SetFillImage (_gbedc );};};if _effc ==nil {continue ;};for _ ,_geac :=range _fdgac .Annotations {_degab ,_bfabb :=_effc .GenerateAppearanceDict (_facf ,_fdgac ,_geac );
if _bfabb !=nil {return _bfabb ;};_geac .AP =_degab ;_geac .ToPdfObject ();};};return nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_gdc :=NewPdfAnnotation ();_cabb :=&PdfAnnotation3D {};_cabb .PdfAnnotation =_gdc ;_gdc .SetContext (_cabb );return _cabb ;};func (_ceeb *PdfWriter )writeObjectsInStreams (_cgegc map[_bb .PdfObject ]bool )error {for _ ,_dcacg :=range _ceeb ._cgfff {if _gfdec :=_cgegc [_dcacg ];
_gfdec {continue ;};_bccff :=int64 (0);switch _cccbe :=_dcacg .(type ){case *_bb .PdfIndirectObject :_bccff =_cccbe .ObjectNumber ;case *_bb .PdfObjectStream :_bccff =_cccbe .ObjectNumber ;case *_bb .PdfObjectStreams :_bccff =_cccbe .ObjectNumber ;case *_bb .PdfObjectDictionary ,*_bb .PdfObjectString :default:_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_dcacg ,_cccbe );
return ErrTypeCheck ;};if _ceeb ._efgdff !=nil &&_dcacg !=_ceeb ._bafbg {_effgd :=_ceeb ._efgdff .Encrypt (_dcacg ,_bccff ,0);if _effgd !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_effgd );
return _effgd ;};};_ceeb .writeObject (int (_bccff ),_dcacg );};return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_gbcf *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_fdcec *PdfReader )newPdfSignatureReferenceFromDict (_eedga *_bb .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _facga ,_bcdf :=_fdcec ._geeca .GetModelFromPrimitive (_eedga ).(*PdfSignatureReference );
_bcdf {return _facga ,nil ;};_cbcgc :=&PdfSignatureReference {_fbfcb :_eedga ,Data :_eedga .Get ("\u0044\u0061\u0074\u0061")};var _ddccd bool ;_cbcgc .Type ,_ =_bb .GetName (_eedga .Get ("\u0054\u0079\u0070\u0065"));_cbcgc .TransformMethod ,_ddccd =_bb .GetName (_eedga .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_ddccd {_gg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cbcgc .TransformParams ,_ =_bb .GetDict (_eedga .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_cbcgc .DigestMethod ,_ =_bb .GetName (_eedga .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _cbcgc ,nil ;};func (_gedcd *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gedcd .fontCommon };

// Initialize initializes the PdfSignature.
func (_fggcg *PdfSignature )Initialize ()error {if _fggcg .Handler ==nil {return _ed .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _fggcg .Handler .InitSignature (_fggcg );};

// SetForms sets the Acroform for a PDF file.
func (_eaef *PdfWriter )SetForms (form *PdfAcroForm )error {_eaef ._agdgf =form ;return nil };func (_ggd *PdfReader )newPdfActionNamedFromDict (_eb *_bb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_eb .Get ("\u004e")},nil ;
};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bb .PdfObject ;V _bb .PdfObject ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_aegg *PdfColorLab )GetNumComponents ()int {return 3};func (_ccgd *PdfReader )newPdfAnnotationRedactFromDict (_feff *_bb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_befg :=PdfAnnotationRedact {};_egba ,_eaba :=_ccgd .newPdfAnnotationMarkupFromDict (_feff );
if _eaba !=nil {return nil ,_eaba ;};_befg .PdfAnnotationMarkup =_egba ;_befg .QuadPoints =_feff .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_befg .IC =_feff .Get ("\u0049\u0043");_befg .RO =_feff .Get ("\u0052\u004f");_befg .OverlayText =_feff .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_befg .Repeat =_feff .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_befg .DA =_feff .Get ("\u0044\u0041");_befg .Q =_feff .Get ("\u0051");return &_befg ,nil ;};func (_fegdd *PdfWriter )writeObjects (){_gg .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_fegdd ._cgfff ));
_fegdd ._gaded =make (map[int ]crossReference );_fegdd ._gaded [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _fegdd ._dbgcc .ObjectMap !=nil {for _caff ,_ccbcbf :=range _fegdd ._dbgcc .ObjectMap {if _caff ==0{continue ;};if _ccbcbf .XType ==_bb .XrefTypeObjectStream {_afdbc :=crossReference {Type :2,ObjectNumber :_ccbcbf .OsObjNumber ,Index :_ccbcbf .OsObjIndex };
_fegdd ._gaded [_caff ]=_afdbc ;};if _ccbcbf .XType ==_bb .XrefTypeTableEntry {_bddf :=crossReference {Type :1,ObjectNumber :_ccbcbf .ObjectNumber ,Offset :_ccbcbf .Offset };_fegdd ._gaded [_caff ]=_bddf ;};};};};func (_efagd *PdfWriter )addObject (_fcgge _bb .PdfObject )bool {_ffcfe :=_efagd .hasObject (_fcgge );
if !_ffcfe {_dcdeb :=_bb .ResolveReferencesDeep (_fcgge ,_efagd ._cgcfec );if _dcdeb !=nil {_gg .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_dcdeb );};_efagd ._cgfff =append (_efagd ._cgfff ,_fcgge );
_efagd ._bfdb [_fcgge ]=struct{}{};return true ;};return false ;};

// ToPdfObject implements interface PdfModel.
func (_gacc *PdfAnnotationStamp )ToPdfObject ()_bb .PdfObject {_gacc .PdfAnnotation .ToPdfObject ();_age :=_gacc ._aaf ;_eedca :=_age .PdfObject .(*_bb .PdfObjectDictionary );_gacc .PdfAnnotationMarkup .appendToPdfDictionary (_eedca );_eedca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u0074\u0061m\u0070"));
_eedca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gacc .Name );return _age ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gdaea *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dacge :=[]float64 {0.0};if _gdaea .C0 !=nil {_dacge =_gdaea .C0 ;};_dgadg :=[]float64 {1.0};if _gdaea .C1 !=nil {_dgadg =_gdaea .C1 ;};var _cbccg []float64 ;for _fgdea :=0;_fgdea < len (_dacge );_fgdea ++{_cfbab :=_dacge [_fgdea ]+_bdd .Pow (x [0],_gdaea .N )*(_dgadg [_fgdea ]-_dacge [_fgdea ]);
_cbccg =append (_cbccg ,_cfbab );};return _cbccg ,nil ;};func _faef (_geafc []byte )([]byte ,error ){_afgeg :=_dd .New ();if _ ,_ddeae :=_ecb .Copy (_afgeg ,_aa .NewReader (_geafc ));_ddeae !=nil {return nil ,_ddeae ;};return _afgeg .Sum (nil ),nil ;};


// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_gffcb *PdfOutlineTreeNode )GetContainingPdfObject ()_bb .PdfObject {return _gffcb .GetContext ().GetContainingPdfObject ();};func (_gefgc *PdfWriter )checkCrossReferenceStream ()bool {_bffdc :=_gefgc ._gecfd .Major > 1||(_gefgc ._gecfd .Major ==1&&_gefgc ._gecfd .Minor > 4);
if _gefgc ._aebec !=nil {_bffdc =*_gefgc ._aebec ;};return _bffdc ;};

// ToInteger convert to an integer format.
func (_feeed *PdfColorDeviceGray )ToInteger (bits int )uint32 {_eddb :=_bdd .Pow (2,float64 (bits ))-1;return uint32 (_eddb *_feeed .Val ());};const (_daaea =0x00001;_bbggg =0x00002;_gebb =0x00004;_bdecf =0x00008;_fbag =0x00020;_bfabc =0x00040;_dgeb =0x10000;
_dfca =0x20000;_ebfgc =0x40000;);func _fdcgc (_cgege *[]*PdfField ,_bgcde FieldFilterFunc ,_ddggf bool )[]*PdfField {if _cgege ==nil {return nil ;};_fdgce :=*_cgege ;if len (*_cgege )==0{return nil ;};_cgae :=_fdgce [:0];if _bgcde ==nil {_bgcde =func (*PdfField )bool {return true };
};var _ecbaa []*PdfField ;for _ ,_dggae :=range _fdgce {_bacb :=_bgcde (_dggae );if _bacb {_ecbaa =append (_ecbaa ,_dggae );if len (_dggae .Kids )> 0{_ecbaa =append (_ecbaa ,_fdcgc (&_dggae .Kids ,_bgcde ,_ddggf )...);};};if !_ddggf ||!_bacb ||len (_dggae .Kids )> 0{_cgae =append (_cgae ,_dggae );
};};*_cgege =_cgae ;return _ecbaa ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bb .PdfObjectInteger ;BitsPerComponent *_bb .PdfObjectInteger ;BitsPerFlag *_bb .PdfObjectInteger ;Decode *_bb .PdfObjectArray ;Function []PdfFunction ;};func (_egc *PdfReader )newPdfAnnotationRichMediaFromDict (_aagc *_bb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_cgbd :=&PdfAnnotationRichMedia {};
_cgbd .RichMediaSettings =_aagc .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_cgbd .RichMediaContent =_aagc .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _cgbd ,nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_aaage *PdfPageResources )HasFontByName (keyName _bb .PdfObjectName )bool {_ ,_addca :=_aaage .GetFontByName (keyName );return _addca ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_dbfge *Image )SetSamples (samples []uint32 ){if _dbfge .BitsPerComponent < 8{samples =_dbfge .samplesAddPadding (samples );};_cffd :=_bf .ResampleUint32 (samples ,int (_dbfge .BitsPerComponent ),8);_eeead :=make ([]byte ,len (_cffd ));for _cgaeg ,_acdec :=range _cffd {_eeead [_cgaeg ]=byte (_acdec );
};_dbfge .Data =_eeead ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_fbacbg *PdfPageResources )GetXObjectByName (keyName _bb .PdfObjectName )(*_bb .PdfObjectStream ,XObjectType ){if _fbacbg .XObject ==nil {return nil ,XObjectTypeUndefined ;};_cffdd ,_bbbaea :=_bb .TraceToDirectObject (_fbacbg .XObject ).(*_bb .PdfObjectDictionary );
if !_bbbaea {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bb .TraceToDirectObject (_fbacbg .XObject ));
return nil ,XObjectTypeUndefined ;};if _affdfc :=_cffdd .Get (keyName );_affdfc !=nil {_dgfba ,_aagbb :=_bb .GetStream (_affdfc );if !_aagbb {_gg .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_affdfc );
return nil ,XObjectTypeUndefined ;};_ggcff :=_dgfba .PdfObjectDictionary ;_caed ,_aagbb :=_bb .TraceToDirectObject (_ggcff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bb .PdfObjectName );if !_aagbb {_gg .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_ggcff .String ());
return nil ,XObjectTypeUndefined ;};if *_caed =="\u0049\u006d\u0061g\u0065"{return _dgfba ,XObjectTypeImage ;}else if *_caed =="\u0046\u006f\u0072\u006d"{return _dgfba ,XObjectTypeForm ;}else if *_caed =="\u0050\u0053"{return _dgfba ,XObjectTypePS ;}else {_gg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_caed );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// ToInteger convert to an integer format.
func (_gggbc *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_bggd :=_bdd .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bggd *_gggbc .A ()),uint32 (_bggd *_gggbc .B ()),uint32 (_bggd *_gggbc .C ())};};

// B returns the value of the B component of the color.
func (_daec *PdfColorCalRGB )B ()float64 {return _daec [1]};func (_geee *LTV )getCerts (_cadf []*_cd .Certificate )([][]byte ,error ){_bcgfc :=make ([][]byte ,0,len (_cadf ));for _ ,_bgcbd :=range _cadf {_bcgfc =append (_bcgfc ,_bgcbd .Raw );};return _bcgfc ,nil ;
};func _gfacd (_facd ,_egab string )string {if _dce .Contains (_facd ,"\u002b"){_febg :=_dce .Split (_facd ,"\u002b");if len (_febg )==2{_facd =_febg [1];};};return _egab +"\u002b"+_facd ;};func _aaedc ()string {return _gg .Version };

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_dbbgf :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_dbbgf ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_efgfa *PdfPageResources )HasXObjectByName (keyName _bb .PdfObjectName )bool {_gfgdec ,_ :=_efgfa .GetXObjectByName (keyName );return _gfgdec !=nil ;};func (_edgaa *PdfWriter )writeObject (_eafgg int ,_fcced _bb .PdfObject ){_gg .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_eafgg );
if _abege ,_gfgdcb :=_fcced .(*_bb .PdfIndirectObject );_gfgdcb {_edgaa ._gaded [_eafgg ]=crossReference {Type :1,Offset :_edgaa ._ggaef ,Generation :_abege .GenerationNumber };_gacbe :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_eafgg );
if _bbedgd ,_bfccc :=_abege .PdfObject .(*pdfSignDictionary );_bfccc {_bbedgd ._ggddf =_edgaa ._ggaef +int64 (len (_gacbe ));};if _abege .PdfObject ==nil {_gg .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_abege .PdfObject =_bb .MakeNull ();};_gacbe +=_abege .PdfObject .WriteString ();_gacbe +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_edgaa .writeString (_gacbe );return ;};if _bdcdd ,_acdgd :=_fcced .(*_bb .PdfObjectStream );_acdgd {_edgaa ._gaded [_eafgg ]=crossReference {Type :1,Offset :_edgaa ._ggaef ,Generation :_bdcdd .GenerationNumber };
_cadaa :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_eafgg );_cadaa +=_bdcdd .PdfObjectDictionary .WriteString ();_cadaa +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_edgaa .writeString (_cadaa );if _bdcdd .Lazy {_fece ,_aged :=_be .ReadFile (_bdcdd .TempFile );
if _aged !=nil {_gg .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_bdcdd .TempFile );return ;};_edgaa .writeBytes (_fece );
_be .Remove (_bdcdd .TempFile );}else {_edgaa .writeBytes (_bdcdd .Stream );};_edgaa .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _eedea ,_feeac :=_fcced .(*_bb .PdfObjectStreams );
_feeac {_edgaa ._gaded [_eafgg ]=crossReference {Type :1,Offset :_edgaa ._ggaef ,Generation :_eedea .GenerationNumber };_aefgg :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_eafgg );var _fecgb []string ;var _cffbf string ;var _bcefa int64 ;
for _fabe ,_ccdgd :=range _eedea .Elements (){_ccfce ,_efaec :=_ccdgd .(*_bb .PdfIndirectObject );if !_efaec {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_eafgg ,_ccdgd );
continue ;};_bgfdg :=_ccfce .PdfObject .WriteString ()+"\u0020";_cffbf =_cffbf +_bgfdg ;_fecgb =append (_fecgb ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_ccfce .ObjectNumber ,_bcefa ));_edgaa ._gaded [int (_ccfce .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_eafgg ,Index :_fabe };
_bcefa =_bcefa +int64 (len ([]byte (_bgfdg )));};_fceba :=_dce .Join (_fecgb ,"\u0020")+"\u0020";_eaagaa :=_bb .NewFlateEncoder ();_bfefc :=_eaagaa .MakeStreamDict ();_bfefc .Set (_bb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_gfgcb :=int64 (_eedea .Len ());_bfefc .Set (_bb .PdfObjectName ("\u004e"),_bb .MakeInteger (_gfgcb ));_gcabg :=int64 (len (_fceba ));_bfefc .Set (_bb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bb .MakeInteger (_gcabg ));_fbcba ,_ :=_eaagaa .EncodeBytes ([]byte (_fceba +_cffbf ));
_eeafb :=int64 (len (_fbcba ));_bfefc .Set (_bb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bb .MakeInteger (_eeafb ));_aefgg +=_bfefc .WriteString ();_aefgg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_edgaa .writeString (_aefgg );
_edgaa .writeBytes (_fbcba );_edgaa .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_edgaa .writeString (_fcced .WriteString ());};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_aeea *DSS )ToPdfObject ()_bb .PdfObject {_bddb :=_aeea ._facae .PdfObject .(*_bb .PdfObjectDictionary );_bddb .Clear ();_cccaf :=_bb .MakeDict ();for _bcbce ,_gdcd :=range _aeea .VRI {_cccaf .Set (*_bb .MakeName (_bcbce ),_gdcd .ToPdfObject ());
};_bddb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_baggc (_aeea .Certs ));_bddb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_baggc (_aeea .OCSPs ));_bddb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_baggc (_aeea .CRLs ));_bddb .Set ("\u0056\u0052\u0049",_cccaf );
return _aeea ._facae ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cddff *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_bafbb :=_cddff .GetContentStreamObjs ();wrapContents =wrapContents &&len (_bafbb )> 0;_aacd :=_bb .NewFlateEncoder ();_abefb :=_bb .MakeArray ();if wrapContents {_beab ,_fdcf :=_bb .MakeStream ([]byte ("\u0071\u000a"),_aacd );
if _fdcf !=nil {return _fdcf ;};_abefb .Append (_beab );};_abefb .Append (_bafbb ...);if wrapContents {_bdaag ,_aedgd :=_bb .MakeStream ([]byte ("\u000a\u0051\u000a"),_aacd );if _aedgd !=nil {return _aedgd ;};_abefb .Append (_bdaag );};_eebce ,_dfdcd :=_bb .MakeStream (cs ,_aacd );
if _dfdcd !=nil {return _dfdcd ;};_abefb .Append (_eebce );_cddff .Contents =_abefb ;return nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_affcb *PdfPageResources )GetPatternByName (keyName _bb .PdfObjectName )(*PdfPattern ,bool ){if _affcb .Pattern ==nil {return nil ,false ;};_fead ,_fcgcfc :=_bb .TraceToDirectObject (_affcb .Pattern ).(*_bb .PdfObjectDictionary );if !_fcgcfc {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_affcb .Pattern );
return nil ,false ;};if _eggece :=_fead .Get (keyName );_eggece !=nil {_cbbeb ,_cdgbg :=_dbec (_eggece );if _cdgbg !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_cdgbg );
return nil ,false ;};return _cbbeb ,true ;};return nil ,false ;};var (ErrRequiredAttributeMissing =_ed .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_fabfb =_ed .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ed .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ed .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_ega .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bb .ErrNotSupported );ErrType1CFontNotSupported =_ega .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bb .ErrNotSupported );
ErrType3FontNotSupported =_ega .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bb .ErrNotSupported );
ErrTTCmapNotSupported =_ega .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bb .ErrNotSupported );
ErrSignNotEnoughSpace =_ega .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_ega .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_ggafb *PdfPageResources )HasShadingByName (keyName _bb .PdfObjectName )bool {_ ,_dafbe :=_ggafb .GetShadingByName (keyName );return _dafbe ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bb .PdfObject ;A _bb .PdfObject ;SE _bb .PdfObject ;C _bb .PdfObject ;F _bb .PdfObject ;
_bbcf *_bb .PdfIndirectObject ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_gdba *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_cbaf :=&PdfColorPattern {};_cedee ,_cgfad :=objects [len (objects )-1].(*_bb .PdfObjectName );if !_cgfad {_gg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_cbaf .PatternName =*_cedee ;if len (objects )> 1{_aaddd :=objects [0:len (objects )-1];if _gdba .UnderlyingCS ==nil {_gg .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ed .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_aeaae ,_beca :=_gdba .UnderlyingCS .ColorFromPdfObjects (_aaddd );if _beca !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_beca );
return nil ,_beca ;};_cbaf .Color =_aeaae ;};return _cbaf ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_gfgc *PdfShading )GetContainingPdfObject ()_bb .PdfObject {return _gfgc ._dacad };

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bb .PdfObjectArray ;Domain *_bb .PdfObjectArray ;Function []PdfFunction ;Extend *_bb .PdfObjectArray ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_eaaff *PdfPage )GetAllContentStreams ()(string ,error ){_eacc ,_aebf :=_eaaff .GetContentStreams ();if _aebf !=nil {return "",_aebf ;};return _dce .Join (_eacc ,"\u0020"),nil ;};

// String returns a string representation of what flags are set.
func (_afaa FieldFlag )String ()string {_agga :="";if _afaa ==FieldFlagClear {_agga ="\u0043\u006c\u0065a\u0072";return _agga ;};if _afaa &FieldFlagReadOnly > 0{_agga +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _afaa &FieldFlagRequired > 0{_agga +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _afaa &FieldFlagNoExport > 0{_agga +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _afaa &FieldFlagNoToggleToOff > 0{_agga +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _afaa &FieldFlagRadio > 0{_agga +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _afaa &FieldFlagPushbutton > 0{_agga +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _afaa &FieldFlagRadiosInUnision > 0{_agga +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _afaa &FieldFlagMultiline > 0{_agga +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _afaa &FieldFlagPassword > 0{_agga +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _afaa &FieldFlagFileSelect > 0{_agga +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _afaa &FieldFlagDoNotScroll > 0{_agga +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _afaa &FieldFlagComb > 0{_agga +="\u007c\u0043\u006fm\u0062";};if _afaa &FieldFlagRichText > 0{_agga +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _afaa &FieldFlagDoNotSpellCheck > 0{_agga +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _afaa &FieldFlagCombo > 0{_agga +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _afaa &FieldFlagEdit > 0{_agga +="\u007c\u0045\u0064i\u0074";};if _afaa &FieldFlagSort > 0{_agga +="\u007c\u0053\u006fr\u0074";};if _afaa &FieldFlagMultiSelect > 0{_agga +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _afaa &FieldFlagCommitOnSelChange > 0{_agga +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _dce .Trim (_agga ,"\u007c");};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_bagg *PdfColorspaceLab )GetNumComponents ()int {return 3};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_gbgdb *PdfPageResources )GetColorspaceByName (keyName _bb .PdfObjectName )(PdfColorspace ,bool ){_eeecae ,_efgecc :=_gbgdb .GetColorspaces ();if _efgecc !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_efgecc );
return nil ,false ;};if _eeecae ==nil {return nil ,false ;};_ffdd ,_fdfb :=_eeecae .Colorspaces [string (keyName )];if !_fdfb {return nil ,false ;};return _ffdd ,true ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bb .PdfObject ;Mac _bb .PdfObject ;Unix _bb .PdfObject ;NewWindow _bb .PdfObject ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_bcgb *_bb .PdfIndirectObject ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_cegac *PdfWriter )GetPdfVersion ()string {return _cegac .getPdfVersion ()};

// String returns a string describing the font descriptor.
func (_cdecc *PdfFontDescriptor )String ()string {var _caec []string ;if _cdecc .FontName !=nil {_caec =append (_caec ,_cdecc .FontName .String ());};if _cdecc .FontFamily !=nil {_caec =append (_caec ,_cdecc .FontFamily .String ());};if _cdecc .fontFile !=nil {_caec =append (_caec ,_cdecc .fontFile .String ());
};if _cdecc ._cgbaa !=nil {_caec =append (_caec ,_cdecc ._cgbaa .String ());};_caec =append (_caec ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_cdecc .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_dce .Join (_caec ,"\u002c\u0020"));
};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_fgaeb *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _fgaeb ._aafef .(*PdfTilingPattern );};func (_dfed *PdfReader )newPdfAnnotationMovieFromDict (_bcf *_bb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_bef :=PdfAnnotationMovie {};
_bef .T =_bcf .Get ("\u0054");_bef .Movie =_bcf .Get ("\u004d\u006f\u0076i\u0065");_bef .A =_bcf .Get ("\u0041");return &_bef ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fade *PdfAnnotationLink )ToPdfObject ()_bb .PdfObject {_fade .PdfAnnotation .ToPdfObject ();_ggdc :=_fade ._aaf ;_fefd :=_ggdc .PdfObject .(*_bb .PdfObjectDictionary );_fefd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u004c\u0069\u006e\u006b"));
if _fade ._abc !=nil &&_fade ._abc ._afg !=nil {_fefd .Set ("\u0041",_fade ._abc ._afg .ToPdfObject ());}else if _fade .A !=nil {_fefd .Set ("\u0041",_fade .A );};_fefd .SetIfNotNil ("\u0044\u0065\u0073\u0074",_fade .Dest );_fefd .SetIfNotNil ("\u0048",_fade .H );
_fefd .SetIfNotNil ("\u0050\u0041",_fade .PA );_fefd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fade .QuadPoints );_fefd .SetIfNotNil ("\u0042\u0053",_fade .BS );return _ggdc ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_cbad *PdfPageResources )HasColorspaceByName (keyName _bb .PdfObjectName )bool {_ffeba ,_bbfgf :=_cbad .GetColorspaces ();if _bbfgf !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bbfgf );
return false ;};if _ffeba ==nil {return false ;};_ ,_agdeb :=_ffeba .Colorspaces [string (keyName )];return _agdeb ;};

// StdFontName represents name of a standard font.
type StdFontName =_dcg .StdFontName ;

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_adb :=NewPdfAction ();_bae :=&PdfActionHide {};_bae .PdfAction =_adb ;_adb .SetContext (_bae );return _bae ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bb .StreamEncoder ;Intent _bb .PdfObject ;ImageMask _bb .PdfObject ;Mask _bb .PdfObject ;Matte _bb .PdfObject ;Decode _bb .PdfObject ;Interpolate _bb .PdfObject ;Alternatives _bb .PdfObject ;
SMask _bb .PdfObject ;SMaskInData _bb .PdfObject ;Name _bb .PdfObject ;StructParent _bb .PdfObject ;ID _bb .PdfObject ;OPI _bb .PdfObject ;Metadata _bb .PdfObject ;OC _bb .PdfObject ;Stream []byte ;_eddaa *_bb .PdfObjectStream ;_cfbee bool ;};

// SetAlpha sets the alpha layer for the image.
func (_bbbae *Image )SetAlpha (alpha []byte ){_bbbae ._cebdb =alpha };

// ToPdfObject implements interface PdfModel.
func (_cdgg *PdfAnnotationText )ToPdfObject ()_bb .PdfObject {_cdgg .PdfAnnotation .ToPdfObject ();_gccb :=_cdgg ._aaf ;_dede :=_gccb .PdfObject .(*_bb .PdfObjectDictionary );if _cdgg .PdfAnnotationMarkup !=nil {_cdgg .PdfAnnotationMarkup .appendToPdfDictionary (_dede );
};_dede .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0054\u0065\u0078\u0074"));_dede .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cdgg .Open );_dede .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cdgg .Name );_dede .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cdgg .State );
_dede .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_cdgg .StateModel );return _gccb ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_cbf :=NewPdfAnnotation ();_cde :=&PdfAnnotationMovie {};_cde .PdfAnnotation =_cbf ;_cbf .SetContext (_cde );return _cde ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gbagg pdfFont };

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bb .PdfObject ;Name _bb .PdfObject ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fdc :=&PdfAnnotation {};_fdc ._aaf =_bb .MakeIndirectObject (_bb .MakeDict ());return _fdc ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_adfbb *PdfColorspaceDeviceN )ToPdfObject ()_bb .PdfObject {_efgc :=_bb .MakeArray (_bb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_efgc .Append (_adfbb .ColorantNames );_efgc .Append (_adfbb .AlternateSpace .ToPdfObject ());_efgc .Append (_adfbb .TintTransform .ToPdfObject ());
if _adfbb .Attributes !=nil {_efgc .Append (_adfbb .Attributes .ToPdfObject ());};if _adfbb ._cbgf !=nil {_adfbb ._cbgf .PdfObject =_efgc ;return _adfbb ._cbgf ;};return _efgc ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dcdb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_fdbcc :=NewPdfOutlineItem ();_fdbcc .Title =_bb .MakeEncodedString (_dcdb .Title ,true );_fdbcc .Dest =_dcdb .Dest .ToPdfObject ();var _bdacg []*PdfOutlineItem ;var _gdfgg int64 ;var _gccaa *PdfOutlineItem ;
for _ ,_aadfa :=range _dcdb .Entries {_bdffgg ,_cbab :=_aadfa .ToPdfOutlineItem ();_bdffgg .Parent =&_fdbcc .PdfOutlineTreeNode ;if _gccaa !=nil {_gccaa .Next =&_bdffgg .PdfOutlineTreeNode ;_bdffgg .Prev =&_gccaa .PdfOutlineTreeNode ;};_bdacg =append (_bdacg ,_bdffgg );
_gdfgg +=_cbab ;_gccaa =_bdffgg ;};_dacgc :=len (_bdacg );_gdfgg +=int64 (_dacgc );if _dacgc > 0{_fdbcc .First =&_bdacg [0].PdfOutlineTreeNode ;_fdbcc .Last =&_bdacg [_dacgc -1].PdfOutlineTreeNode ;_fdbcc .Count =&_gdfgg ;};return _fdbcc ,_gdfgg ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func _daeb (_fgeg *_bb .PdfObjectDictionary )(*PdfFieldButton ,error ){_ecbde :=&PdfFieldButton {};_ecbde .PdfField =NewPdfField ();_ecbde .PdfField .SetContext (_ecbde );_ecbde .Opt ,_ =_bb .GetArray (_fgeg .Get ("\u004f\u0070\u0074"));
_dcgff :=NewPdfAnnotationWidget ();_dcgff .A ,_ =_bb .GetDict (_fgeg .Get ("\u0041"));_dcgff .AP ,_ =_bb .GetDict (_fgeg .Get ("\u0041\u0050"));_dcgff .SetContext (_ecbde );_ecbde .PdfField .Annotations =append (_ecbde .PdfField .Annotations ,_dcgff );
return _ecbde ,nil ;};func (_cadfe *PdfWriter )setWriter (_cdcbg _ecb .Writer ){_cadfe ._ggaef =_cadfe ._dacf ;_cadfe ._daeee =_f .NewWriter (_cdcbg );};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bb .PdfObject ;GetContainingPdfObject ()_bb .PdfObject ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_fggf *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_gagfg :=range pages {_gagfg =_gagfg .Duplicate ();_fccad (_gagfg );_fggf ._baef =append (_fggf ._baef ,_gagfg );};};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_bb .PdfObjectArray ;ExtGState _bb .PdfObject ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_efbe *PdfReader )Decrypt (password []byte )(bool ,error ){_cgac ,_ebeg :=_efbe ._cfaef .Decrypt (password );if _ebeg !=nil {return false ,_ebeg ;};if !_cgac {return false ,nil ;};_ebeg =_efbe .loadStructure ();if _ebeg !=nil {_gg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_ebeg );
return false ,_ebeg ;};return true ,nil ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fbeg *PdfColorCalGray )GetNumComponents ()int {return 1};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gfeeb []_bb .PdfObject )([]_bb .PdfObject ,error );};

// IsColored specifies if the pattern is colored.
func (_acggd *PdfTilingPattern )IsColored ()bool {if _acggd .PaintType !=nil &&*_acggd .PaintType ==1{return true ;};return false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_defccf *PdfShadingType2 )ToPdfObject ()_bb .PdfObject {_defccf .PdfShading .ToPdfObject ();_abab ,_ebfc :=_defccf .getShadingDict ();if _ebfc !=nil {_gg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _abab ==nil {_gg .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _defccf .Coords !=nil {_abab .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_defccf .Coords );
};if _defccf .Domain !=nil {_abab .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_defccf .Domain );};if _defccf .Function !=nil {if len (_defccf .Function )==1{_abab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_defccf .Function [0].ToPdfObject ());
}else {_cgefe :=_bb .MakeArray ();for _ ,_aceb :=range _defccf .Function {_cgefe .Append (_aceb .ToPdfObject ());};_abab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgefe );};};if _defccf .Extend !=nil {_abab .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_defccf .Extend );
};return _defccf ._dacad ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_dbfaf :=&PdfColorspaceCalRGB {};_dbfaf .BlackPoint =[]float64 {0.0,0.0,0.0};_dbfaf .Gamma =[]float64 {1.0,1.0,1.0};_dbfaf .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _dbfaf ;};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_fdegc *MultipleFontEncoder )GetRuneMetrics (r rune )(_dcg .CharMetrics ,bool ){_bfefb :=_fdegc .CurrentFont ;_ecfc ,_geded :=_bfefb .GetRuneMetrics (r );for _gegddg :=1;_gegddg < len (_fdegc ._dfgcb )&&_ecfc .Wx ==0;_gegddg ++{_bfefb =_fdegc ._dfgcb [_gegddg ];
_ecfc ,_geded =_bfefb .GetRuneMetrics (r );};return _ecfc ,_geded ;};

// String returns the name of the colorspace (DeviceN).
func (_dcfd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_cecc *Image )ColorAt (x ,y int )(_g .Color ,error ){_ddfcb :=_gdf .BytesPerLine (int (_cecc .Width ),int (_cecc .BitsPerComponent ),_cecc .ColorComponents );switch _cecc .ColorComponents {case 1:return _gdf .ColorAtGrayscale (x ,y ,int (_cecc .BitsPerComponent ),_ddfcb ,_cecc .Data ,_cecc ._dafdc );
case 3:return _gdf .ColorAtNRGBA (x ,y ,int (_cecc .Width ),_ddfcb ,int (_cecc .BitsPerComponent ),_cecc .Data ,_cecc ._cebdb ,_cecc ._dafdc );case 4:return _gdf .ColorAtCMYK (x ,y ,int (_cecc .Width ),_cecc .Data ,_cecc ._dafdc );};_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cecc .ColorComponents ,_cecc .BitsPerComponent );
return nil ,_ed .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eega pdfFontType3 )GetRuneMetrics (r rune )(_dcg .CharMetrics ,bool ){_cafgb :=_eega .Encoder ();if _cafgb ==nil {_gg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_eega );
return _dcg .CharMetrics {},false ;};_aafeg ,_cbcd :=_cafgb .RuneToCharcode (r );if !_cbcd {if r !=' '{_gg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_eega );
};return _dcg .CharMetrics {},false ;};_efgcc ,_fggee :=_eega .GetCharMetrics (_aafeg );return _efgcc ,_fggee ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_aggb *_bb .PdfIndirectObject ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_dfbb :=PdfColorLab {l ,a ,b };return &_dfbb };

// SetAction sets the PDF action for the annotation link.
func (_cea *PdfAnnotationLink )SetAction (action *PdfAction ){_cea ._abc =action ;if action ==nil {_cea .A =nil ;};};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ge :=NewPdfAction ();_cdb :=&PdfActionGoToR {};_cdb .PdfAction =_ge ;_ge .SetContext (_cdb );return _cdb ;};

// String returns a string representation of the field.
func (_gecb *PdfField )String ()string {if _gdac ,_efdb :=_gecb .ToPdfObject ().(*_bb .PdfIndirectObject );_efdb {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gecb ._babcg ,_gdac .PdfObject .String ());};return "";};func (_aede *PdfField )inherit (_aebce func (*PdfField )bool )(bool ,error ){_edbf :=map[*PdfField ]bool {};
_addb :=false ;_acfb :=_aede ;for _acfb !=nil {if _ ,_fbegg :=_edbf [_acfb ];_fbegg {return false ,_ed .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_dbfc :=_aebce (_acfb );if _dbfc {_addb =true ;
break ;};_edbf [_acfb ]=true ;_acfb =_acfb .Parent ;};return _addb ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_aeafe *PdfPattern )GetContainingPdfObject ()_bb .PdfObject {return _aeafe ._aeff };

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// CustomKeys returns all custom info keys as list.
func (_bgbd *PdfInfo )CustomKeys ()[]string {if _bgbd ._bege ==nil {return nil ;};_aeae :=make ([]string ,len (_bgbd ._bege .Keys ()));for _ ,_cbedc :=range _bgbd ._bege .Keys (){_aeae =append (_aeae ,_cbedc .String ());};return _aeae ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cgddg *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cgddg .Alternate ==nil {if _cgddg .N ==1{_bfaa :=NewPdfColorspaceDeviceGray ();return _bfaa .ColorFromFloats (vals );}else if _cgddg .N ==3{_gdfac :=NewPdfColorspaceDeviceRGB ();
return _gdfac .ColorFromFloats (vals );}else if _cgddg .N ==4{_gacca :=NewPdfColorspaceDeviceCMYK ();return _gacca .ColorFromFloats (vals );}else {return nil ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _cgddg .Alternate .ColorFromFloats (vals );};

// Add appends a top level outline item to the outline.
func (_egefc *Outline )Add (item *OutlineItem ){_egefc .Entries =append (_egefc .Entries ,item )};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func _ecccge (_fbfe *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_aeeb ,_dfce :=_bb .GetDict (_fbfe .AP );
if !_dfce {return nil ,nil ,_ed .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _aeeb ==nil {return nil ,nil ,nil ;};_fbaa ,_dfce :=_bb .GetArray (_fbfe .Rect );
if !_dfce ||_fbaa .Len ()!=4{return nil ,nil ,_ed .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gefgg ,_caeag :=NewPdfRectangle (*_fbaa );if _caeag !=nil {return nil ,nil ,_caeag ;};_aecfa :=_bb .TraceToDirectObject (_aeeb .Get ("\u004e"));
switch _degac :=_aecfa .(type ){case *_bb .PdfObjectStream :_eagbe :=_degac ;_cdec ,_egefg :=NewXObjectFormFromStream (_eagbe );return _cdec ,_gefgg ,_egefg ;case *_bb .PdfObjectDictionary :_fgaab :=_degac ;if _fgaab ==nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _ffgc _bb .PdfObject ;_gdbe ,_ggab :=_bb .GetName (_fbfe .AS );if _ggab {_ffgc =_fgaab .Get (*_gdbe );}else {_gedgb :=_fbfe ._aaf .PdfObject .(*_bb .PdfObjectDictionary );if _gedgb ==nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _eaeef :=_gedgb .Get ("\u0056");_eaeef !=nil {_ffgc =_fgaab .Get (_bb .PdfObjectName (_eaeef .String ()));};};if _ffgc ==nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_cfeb ,_ggab :=_bb .GetStream (_ffgc );if !_ggab {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_gdbe );
return nil ,nil ,_ed .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_fdeg ,_adge :=NewXObjectFormFromStream (_cfeb );return _fdeg ,_gefgg ,_adge ;};_gg .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_aecfa );
return nil ,nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_fceb *PdfColorspaceICCBased )ToPdfObject ()_bb .PdfObject {_fbgb :=&_bb .PdfObjectArray {};_fbgb .Append (_bb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ddaga *_bb .PdfObjectStream ;if _fceb ._eabcb !=nil {_ddaga =_fceb ._eabcb ;
}else {_ddaga =&_bb .PdfObjectStream {};};_bgfgcd :=_bb .MakeDict ();_bgfgcd .Set ("\u004e",_bb .MakeInteger (int64 (_fceb .N )));if _fceb .Alternate !=nil {_bgfgcd .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_fceb .Alternate .ToPdfObject ());
};if _fceb .Metadata !=nil {_bgfgcd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fceb .Metadata );};if _fceb .Range !=nil {var _gfgd []_bb .PdfObject ;for _ ,_bdbde :=range _fceb .Range {_gfgd =append (_gfgd ,_bb .MakeFloat (_bdbde ));};_bgfgcd .Set ("\u0052\u0061\u006eg\u0065",_bb .MakeArray (_gfgd ...));
};_bgfgcd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_fceb .Data ))));_ddaga .Stream =_fceb .Data ;_ddaga .PdfObjectDictionary =_bgfgcd ;_fbgb .Append (_ddaga );if _fceb ._ccab !=nil {_fceb ._ccab .PdfObject =_fbgb ;return _fceb ._ccab ;
};return _fbgb ;};var (_gbdbb _c .Mutex ;_adce ="";_gfbee _fb .Time ;_ecgfc ="";_cceabe ="";_fdadc _fb .Time ;_ebcaf ="";_faaaf ="";_gebba ="";);

// ToPdfObject returns the PDF representation of the page resources.
func (_dege *PdfPageResources )ToPdfObject ()_bb .PdfObject {_bdaab :=_dege ._agfg ;_bdaab .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dege .ExtGState );if _dege ._cgaa !=nil {_dege .ColorSpace =_dege ._cgaa .ToPdfObject ();};_bdaab .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dege .ColorSpace );
_bdaab .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_dege .Pattern );_bdaab .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dege .Shading );_bdaab .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_dege .XObject );_bdaab .SetIfNotNil ("\u0046\u006f\u006e\u0074",_dege .Font );
_bdaab .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_dege .ProcSet );_bdaab .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_dege .Properties );return _bdaab ;};

// AddFont adds a font dictionary to the Font resources.
func (_gbebe *PdfPage )AddFont (name _bb .PdfObjectName ,font _bb .PdfObject )error {if _gbebe .Resources ==nil {_gbebe .Resources =NewPdfPageResources ();};if _gbebe .Resources .Font ==nil {_gbebe .Resources .Font =_bb .MakeDict ();};_acceb ,_ddbcd :=_bb .TraceToDirectObject (_gbebe .Resources .Font ).(*_bb .PdfObjectDictionary );
if !_ddbcd {_gg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bb .TraceToDirectObject (_gbebe .Resources .Font ));
return _ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acceb .Set (name ,font );return nil ;};func (_ebbfc *PdfWriter )writeBytes (_acgd []byte ){if _ebbfc ._ggcbb !=nil {return ;};_adcb ,_abece :=_ebbfc ._daeee .Write (_acgd );
_ebbfc ._ggaef +=int64 (_adcb );_ebbfc ._ggcbb =_abece ;};func (_gad *PdfReader )newPdfAnnotationTextFromDict (_adbd *_bb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_acbe :=PdfAnnotationText {};_bdf ,_aac :=_gad .newPdfAnnotationMarkupFromDict (_adbd );
if _aac !=nil {return nil ,_aac ;};_acbe .PdfAnnotationMarkup =_bdf ;_acbe .Open =_adbd .Get ("\u004f\u0070\u0065\u006e");_acbe .Name =_adbd .Get ("\u004e\u0061\u006d\u0065");_acbe .State =_adbd .Get ("\u0053\u0074\u0061t\u0065");_acbe .StateModel =_adbd .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_acbe ,nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_gbdbb .Lock ();defer _gbdbb .Unlock ();_ecgfc =creator };func (_fbd *PdfReader )newPdfAnnotationCircleFromDict (_cac *_bb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_geb :=PdfAnnotationCircle {};_eeec ,_fbe :=_fbd .newPdfAnnotationMarkupFromDict (_cac );
if _fbe !=nil {return nil ,_fbe ;};_geb .PdfAnnotationMarkup =_eeec ;_geb .BS =_cac .Get ("\u0042\u0053");_geb .IC =_cac .Get ("\u0049\u0043");_geb .BE =_cac .Get ("\u0042\u0045");_geb .RD =_cac .Get ("\u0052\u0044");return &_geb ,nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bb .PdfObject ;RichMediaContent _bb .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbdcfd *PdfShadingType5 )ToPdfObject ()_bb .PdfObject {_bbdcfd .PdfShading .ToPdfObject ();_gabba ,_efcabg :=_bbdcfd .getShadingDict ();if _efcabg !=nil {_gg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbdcfd .BitsPerCoordinate !=nil {_gabba .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bbdcfd .BitsPerCoordinate );};if _bbdcfd .BitsPerComponent !=nil {_gabba .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbdcfd .BitsPerComponent );
};if _bbdcfd .VerticesPerRow !=nil {_gabba .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_bbdcfd .VerticesPerRow );};if _bbdcfd .Decode !=nil {_gabba .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bbdcfd .Decode );
};if _bbdcfd .Function !=nil {if len (_bbdcfd .Function )==1{_gabba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbdcfd .Function [0].ToPdfObject ());}else {_ddfcf :=_bb .MakeArray ();for _ ,_faddc :=range _bbdcfd .Function {_ddfcf .Append (_faddc .ToPdfObject ());
};_gabba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddfcf );};};return _bbdcfd ._dacad ;};

// BaseFont returns the font's "BaseFont" field.
func (_ffbe *PdfFont )BaseFont ()string {return _ffbe .baseFields ()._gdaeed };

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_bb .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_bb .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _fb .Time ){_gbdbb .Lock ();defer _gbdbb .Unlock ();_fdadc =modifiedDate ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_ccdag *PdfPageResources )SetShadingByName (keyName _bb .PdfObjectName ,shadingObj _bb .PdfObject )error {if _ccdag .Shading ==nil {_ccdag .Shading =_bb .MakeDict ();};_fbfda ,_afff :=_bb .GetDict (_ccdag .Shading );if !_afff {return _bb .ErrTypeError ;
};_fbfda .Set (keyName ,shadingObj );return nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_ceag :=PdfColorDeviceGray (grayVal );return &_ceag ;};

// ToPdfObject implements interface PdfModel.
func (_eca *PdfActionJavaScript )ToPdfObject ()_bb .PdfObject {_eca .PdfAction .ToPdfObject ();_ecg :=_eca ._dcc ;_fcfe :=_ecg .PdfObject .(*_bb .PdfObjectDictionary );_fcfe .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeJavaScript )));_fcfe .SetIfNotNil ("\u004a\u0053",_eca .JS );
return _ecg ;};

// ToPdfObject implements interface PdfModel.
func (_gebd *PdfAnnotationTrapNet )ToPdfObject ()_bb .PdfObject {_gebd .PdfAnnotation .ToPdfObject ();_ecfe :=_gebd ._aaf ;_gdeg :=_ecfe .PdfObject .(*_bb .PdfObjectDictionary );_gdeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ecfe ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_dgga *PdfFont )ToUnicode ()string {if _dgga .baseFields ()._beee ==nil {return "";};return _dgga .baseFields ()._beee .Name ();};func (_egdf *PdfAppender )addNewObject (_effg _bb .PdfObject ){if _ ,_gggd :=_egdf ._bgbge [_effg ];!_gggd {_egdf ._ffb =append (_egdf ._ffb ,_effg );
_egdf ._bgbge [_effg ]=struct{}{};};};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_dbf :=NewPdfAnnotation ();_fbgd :=&PdfAnnotationLine {};_fbgd .PdfAnnotation =_dbf ;_fbgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbf .SetContext (_fbgd );return _fbgd ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_defbe *LTV )EnableChain (chain []*_cd .Certificate )error {return _defbe .enable (nil ,chain ,"")};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_acdb *PdfField )IsTerminal ()bool {return len (_acdb .Kids )==0};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_efdfbb :=&PdfSignature {Type :_bb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_feaab :=&pdfSignDictionary {PdfObjectDictionary :_bb .MakeDict (),_cefbf :&handler ,_febed :_efdfbb };
_efdfbb ._ggaed =_bb .MakeIndirectObject (_feaab );return _efdfbb ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ebdb *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_ebdb .NumInputs {_gg .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ed .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _ebdb ._debdd ==nil {_debc :=_ebdb .processSamples ();if _debc !=nil {return nil ,_debc ;};};_gggde :=_ebdb .Encode ;if _gggde ==nil {_gggde =[]float64 {};
for _bbgda :=0;_bbgda < len (_ebdb .Size );_bbgda ++{_gggde =append (_gggde ,0);_gggde =append (_gggde ,float64 (_ebdb .Size [_bbgda ]-1));};};_ebca :=_ebdb .Decode ;if _ebca ==nil {_ebca =_ebdb .Range ;};_acbf :=make ([]int ,len (x ));for _fege :=0;_fege < len (x );
_fege ++{_bfdff :=x [_fege ];_bgbfec :=_bdd .Min (_bdd .Max (_bfdff ,_ebdb .Domain [2*_fege ]),_ebdb .Domain [2*_fege +1]);_fgfa :=_gdf .LinearInterpolate (_bgbfec ,_ebdb .Domain [2*_fege ],_ebdb .Domain [2*_fege +1],_gggde [2*_fege ],_gggde [2*_fege +1]);
_afdgg :=_bdd .Min (_bdd .Max (_fgfa ,0),float64 (_ebdb .Size [_fege ]-1));_baebb :=int (_bdd .Floor (_afdgg +0.5));if _baebb < 0{_baebb =0;}else if _baebb > _ebdb .Size [_fege ]{_baebb =_ebdb .Size [_fege ]-1;};_acbf [_fege ]=_baebb ;};_bdfc :=_acbf [0];
for _debcd :=1;_debcd < _ebdb .NumInputs ;_debcd ++{_eegca :=_acbf [_debcd ];for _egfea :=0;_egfea < _debcd ;_egfea ++{_eegca *=_ebdb .Size [_egfea ];};_bdfc +=_eegca ;};_bdfc *=_ebdb .NumOutputs ;var _fffaa []float64 ;for _edgg :=0;_edgg < _ebdb .NumOutputs ;
_edgg ++{_egcgg :=_bdfc +_edgg ;if _egcgg >=len (_ebdb ._debdd ){_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_affge :=_ebdb ._debdd [_egcgg ];_abgag :=_gdf .LinearInterpolate (float64 (_affge ),0,_bdd .Pow (2,float64 (_ebdb .BitsPerSample )),_ebca [2*_edgg ],_ebca [2*_edgg +1]);_daafa :=_bdd .Min (_bdd .Max (_abgag ,_ebdb .Range [2*_edgg ]),_ebdb .Range [2*_edgg +1]);
_fffaa =append (_fffaa ,_daafa );};return _fffaa ,nil ;};

// Encoder returns the font's text encoder.
func (_dfcga pdfCIDFontType2 )Encoder ()_ga .TextEncoder {return _dfcga ._aeggf };

// B returns the value of the blue component of the color.
func (_eedcb *PdfColorDeviceRGB )B ()float64 {return _eedcb [2]};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_efgca *PdfReader )GetOutlines ()(*Outline ,error ){if _efgca ==nil {return nil ,_ed .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_fcfag :=_efgca .GetOutlineTree ();if _fcfag ==nil {return nil ,_ed .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _bbff func (_ddfd *PdfOutlineTreeNode ,_fefcd *[]*OutlineItem );_bbff =func (_gagfgcd *PdfOutlineTreeNode ,_adfgc *[]*OutlineItem ){if _gagfgcd ==nil {return ;};if _gagfgcd ._fegg ==nil {_gg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _cebe *OutlineItem ;if _fggaa ,_efed :=_gagfgcd ._fegg .(*PdfOutlineItem );_efed {_fadde :=_fggaa .Dest ;if (_fadde ==nil ||_bb .IsNullObject (_fadde ))&&_fggaa .A !=nil {if _caaca ,_gabeg :=_bb .GetDict (_fggaa .A );_gabeg {if _ecceg ,_defcc :=_bb .GetArray (_caaca .Get ("\u0044"));
_defcc {_fadde =_ecceg ;}else {_ddcbb ,_dbad :=_bb .GetString (_caaca .Get ("\u0044"));if !_dbad {return ;};_dcdfff ,_dbad :=_efgca ._effcg .Get ("\u004e\u0061\u006de\u0073").(*_bb .PdfObjectReference );if !_dbad {return ;};_degf ,_ebgbc :=_efgca ._cfaef .LookupByReference (*_dcdfff );
if _ebgbc !=nil {_gg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_ebgbc .Error ());
return ;};_bgfba ,_dbad :=_degf .(*_bb .PdfIndirectObject );if !_dbad {return ;};_dcgggg :=map[_bb .PdfObject ]struct{}{};_ebgbc =_efgca .buildNameNodes (_bgfba ,_dcgggg );if _ebgbc !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_ebgbc .Error ());
return ;};for _egcea :=range _dcgggg {_fabfg ,_cdgaa :=_bb .GetDict (_egcea );if !_cdgaa {continue ;};_baec ,_cdgaa :=_bb .GetArray (_fabfg .Get ("\u004e\u0061\u006de\u0073"));if !_cdgaa {continue ;};for _begde ,_bagad :=range _baec .Elements (){switch _bagad .(type ){case *_bb .PdfObjectString :if _bagad .String ()==_ddcbb .String (){if _fdagbd :=_baec .Get (_begde +1);
_fdagbd !=nil {if _dfgf ,_faaed :=_bb .GetDict (_fdagbd );_faaed {_fadde =_dfgf .Get ("\u0044");break ;};};};};};};};};};var _gbbec OutlineDest ;if _fadde !=nil &&!_bb .IsNullObject (_fadde ){if _ggga ,_fgebb :=_dbfe (_fadde ,_efgca );_fgebb ==nil {_gbbec =*_ggga ;
}else {_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_fadde ,_fgebb );
};};_cebe =NewOutlineItem (_fggaa .Title .Decoded (),_gbbec );*_adfgc =append (*_adfgc ,_cebe );if _fggaa .Next !=nil {_bbff (_fggaa .Next ,_adfgc );};};if _gagfgcd .First !=nil {if _cebe !=nil {_adfgc =&_cebe .Entries ;};_bbff (_gagfgcd .First ,_adfgc );
};};_becae :=NewOutline ();_bbff (_fcfag ,&_becae .Entries );return _becae ,nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;};

// GetSubFilter returns SubFilter value or empty string.
func (_eddgc *pdfSignDictionary )GetSubFilter ()string {_dged :=_eddgc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dged ==nil {return "";};if _ccadd ,_cabgd :=_bb .GetNameVal (_dged );_cabgd {return _ccadd ;};return "";};func (_edb *PdfReader )newPdfAnnotationMarkupFromDict (_gege *_bb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_cgeg :=&PdfAnnotationMarkup {};
if _fadb :=_gege .Get ("\u0054");_fadb !=nil {_cgeg .T =_fadb ;};if _cda :=_gege .Get ("\u0050\u006f\u0070u\u0070");_cda !=nil {_cgba ,_fgbe :=_cda .(*_bb .PdfIndirectObject );if !_fgbe {if _ ,_fgad :=_cda .(*_bb .PdfObjectNull );!_fgad {return nil ,_ed .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_gfb ,_aebd :=_edb .newPdfAnnotationFromIndirectObject (_cgba );if _aebd !=nil {return nil ,_aebd ;};if _gfb !=nil {_gcef ,_bgadd :=_gfb ._ff .(*PdfAnnotationPopup );if !_bgadd {return nil ,_ed .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_cgeg .Popup =_gcef ;};};};if _cadg :=_gege .Get ("\u0043\u0041");_cadg !=nil {_cgeg .CA =_cadg ;};if _agc :=_gege .Get ("\u0052\u0043");_agc !=nil {_cgeg .RC =_agc ;};if _ebec :=_gege .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_ebec !=nil {_cgeg .CreationDate =_ebec ;};if _eff :=_gege .Get ("\u0049\u0052\u0054");_eff !=nil {_cgeg .IRT =_eff ;};if _bgca :=_gege .Get ("\u0053\u0075\u0062\u006a");_bgca !=nil {_cgeg .Subj =_bgca ;};if _cdbe :=_gege .Get ("\u0052\u0054");_cdbe !=nil {_cgeg .RT =_cdbe ;
};if _cfde :=_gege .Get ("\u0049\u0054");_cfde !=nil {_cgeg .IT =_cfde ;};if _aed :=_gege .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_aed !=nil {_cgeg .ExData =_aed ;};return _cgeg ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_bge :=NewPdfAnnotation ();_egef :=&PdfAnnotationPopup {};_egef .PdfAnnotation =_bge ;_bge .SetContext (_egef );return _egef ;};

// Encoder iterates through the list of fonts and returns a working encoder
func (_cagdd *MultipleFontEncoder )Encoder (rn rune )(_ga .TextEncoder ,bool ){_aadaf :=_cagdd .CurrentFont ;_deefc :=_aadaf .Encoder ();_ ,_dcfcc :=_deefc .RuneToCharcode (rn );for _gced :=1;_gced < len (_cagdd ._dfgcb )&&!_dcfcc ;_gced ++{_aadaf =_cagdd ._dfgcb [_gced ];
_deefc =_aadaf .Encoder ();_ ,_dcfcc =_deefc .RuneToCharcode (rn );_cagdd .CurrentFont =_aadaf ;};return _deefc ,_dcfcc ;};func (_geggg *PdfAppender )updateObjectsDeep (_cfdb _bb .PdfObject ,_dfcf map[_bb .PdfObject ]struct{}){if _dfcf ==nil {_dfcf =map[_bb .PdfObject ]struct{}{};
};if _ ,_fcgc :=_dfcf [_cfdb ];_fcgc ||_cfdb ==nil {return ;};_dfcf [_cfdb ]=struct{}{};_abcc :=_bb .ResolveReferencesDeep (_cfdb ,_geggg ._eaag );if _abcc !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abcc );};switch _bgbf :=_cfdb .(type ){case *_bb .PdfIndirectObject :switch {case _bgbf .GetParser ()==_geggg ._aadf ._cfaef :return ;
case _bgbf .GetParser ()==_geggg .Reader ._cfaef :_egae ,_ :=_geggg ._aadf .GetIndirectObjectByNumber (int (_bgbf .ObjectNumber ));_bdbd ,_egce :=_egae .(*_bb .PdfIndirectObject );if _egce &&_bdbd !=nil {if _bdbd .PdfObject !=_bgbf .PdfObject &&_bdbd .PdfObject .WriteString ()!=_bgbf .PdfObject .WriteString (){if _dce .Contains (_bgbf .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_dce .Contains (_bgbf .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_geggg .addNewObject (_cfdb );_geggg ._gecf [_cfdb ]=_bgbf .ObjectNumber ;};};default:_geggg .addNewObject (_cfdb );};_geggg .updateObjectsDeep (_bgbf .PdfObject ,_dfcf );case *_bb .PdfObjectArray :for _ ,_abgd :=range _bgbf .Elements (){_geggg .updateObjectsDeep (_abgd ,_dfcf );
};case *_bb .PdfObjectDictionary :for _ ,_dcdf :=range _bgbf .Keys (){_geggg .updateObjectsDeep (_bgbf .Get (_dcdf ),_dfcf );};case *_bb .PdfObjectStreams :if _bgbf .GetParser ()!=_geggg ._aadf ._cfaef {for _ ,_gffg :=range _bgbf .Elements (){_geggg .updateObjectsDeep (_gffg ,_dfcf );
};};case *_bb .PdfObjectStream :switch {case _bgbf .GetParser ()==_geggg ._aadf ._cfaef :return ;case _bgbf .GetParser ()==_geggg .Reader ._cfaef :if _gacce ,_dedef :=_geggg ._aadf ._cfaef .LookupByReference (_bgbf .PdfObjectReference );_dedef ==nil {var _ddga bool ;
if _bfgb ,_fffe :=_bb .GetStream (_gacce );_fffe &&_aa .Equal (_bfgb .Stream ,_bgbf .Stream ){_ddga =true ;};if _fgbf ,_daaa :=_bb .GetDict (_gacce );_ddga &&_daaa {_ddga =_fgbf .WriteString ()==_bgbf .PdfObjectDictionary .WriteString ();};if _ddga {return ;
};};if _bgbf .ObjectNumber !=0{_geggg ._gecf [_cfdb ]=_bgbf .ObjectNumber ;};default:if _ ,_baea :=_geggg ._bgbge [_cfdb ];!_baea {_geggg .addNewObject (_cfdb );};};_geggg .updateObjectsDeep (_bgbf .PdfObjectDictionary ,_dfcf );};};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bb .PdfObject ;};var _bgfa =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_fafa :=&PdfColorspaceLab {};_fafa .BlackPoint =[]float64 {0.0,0.0,0.0};_fafa .Range =[]float64 {-100,100,-100,100};return _fafa ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_ecdad *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _cegeg []float64 ;for _dcdfg :=0;_dcdfg < _ecdad .GetNumComponents ();_dcdfg ++{_cegeg =append (_cegeg ,0.0,1.0);};return _cegeg ;};

// ToInteger convert to an integer format.
func (_cacc *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_fbfb :=_bdd .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fbfb *_cacc .R ()),uint32 (_fbfb *_cacc .G ()),uint32 (_fbfb *_cacc .B ())};};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_gdaee *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gdaee .AlternateSpace ==nil {return nil ,_ed .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _gdaee .AlternateSpace .ColorToRGB (color );};func _bdgc (_fgffc *_bb .PdfObjectDictionary ,_cgcf *fontCommon )(*pdfCIDFontType2 ,error ){if _cgcf ._ecdc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cgcf );
return nil ,_bb .ErrRangeError ;};_gdccb :=_gddgge (_cgcf );_efcg ,_ceef :=_bb .GetDict (_fgffc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ceef {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cgcf );
return nil ,ErrRequiredAttributeMissing ;};_gdccb .CIDSystemInfo =_efcg ;_gdccb .DW =_fgffc .Get ("\u0044\u0057");_gdccb .W =_fgffc .Get ("\u0057");_gdccb .DW2 =_fgffc .Get ("\u0044\u0057\u0032");_gdccb .W2 =_fgffc .Get ("\u0057\u0032");_gdccb .CIDToGIDMap =_fgffc .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gdccb ._ddda =1000.0;if _ddgge ,_dgfb :=_bb .GetNumberAsFloat (_gdccb .DW );_dgfb ==nil {_gdccb ._ddda =_ddgge ;};_fdaa ,_bdefgb :=_fdbc (_gdccb .W );if _bdefgb !=nil {return nil ,_bdefgb ;};if _fdaa ==nil {_fdaa =map[_ga .CharCode ]float64 {};};_gdccb ._fdedf =_fdaa ;
return _gdccb ,nil ;};func (_fdb *PdfReader )newPdfActionHideFromDict (_cee *_bb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_cee .Get ("\u0054"),H :_cee .Get ("\u0048")},nil ;};

// SetVersion sets the PDF version of the output file.
func (_cffcfd *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_cffcfd ._gecfd .Major =majorVersion ;_cffcfd ._gecfd .Minor =minorVersion ;};

// A returns the value of the A component of the color.
func (_gfbec *PdfColorLab )A ()float64 {return _gfbec [1]};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_geecc *PdfPattern )GetContext ()PdfModel {return _geecc ._aafef };

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_bbfab *PdfPageResources )AddExtGState (gsName _bb .PdfObjectName ,gsDict _bb .PdfObject )error {if _bbfab .ExtGState ==nil {_bbfab .ExtGState =_bb .MakeDict ();};_efgaf :=_bbfab .ExtGState ;_ffad ,_acggdd :=_bb .TraceToDirectObject (_efgaf ).(*_bb .PdfObjectDictionary );
if !_acggdd {_gg .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_efgaf ,_bb .TraceToDirectObject (_efgaf ));
return _bb .ErrTypeError ;};_ffad .Set (gsName ,gsDict );return nil ;};func _ceece (_ceagd *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_ceagd }};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bb .PdfObject ;T3DV _bb .PdfObject ;T3DA _bb .PdfObject ;T3DI _bb .PdfObject ;T3DB _bb .PdfObject ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bb .PdfObject ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ecb .ReadSeeker )(*PdfReader ,error ){const _febag ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dgdcf (rs ,&ReaderOpts {},false ,_febag );};

// SetLocation sets the `Location` field of the signature.
func (_eeaa *PdfSignature )SetLocation (location string ){_eeaa .Location =_bb .MakeString (location )};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bb .PdfObject ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_bagd fontCommon )coreString ()string {_faee :="";if _bagd ._eadda !=nil {_faee =_bagd ._eadda .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_bagd ._ecdc ,_bagd ._gdaeed ,_bagd ._ffed ,_bagd ._fffc ,_bagd ._daab !=nil ,_bagd .fontFlags (),_faee );
};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _bb .PdfObject )(*PdfOutputIntent ,error ){_eagf :=&PdfOutputIntent {};if _ecce :=_eagf .ParsePdfObject (object );_ecce !=nil {return nil ,_ecce ;};return _eagf ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func (_ddaae *LTV )generateVRIKey (_bbddf *PdfSignature )(string ,error ){_dagba ,_aacg :=_faef (_bbddf .Contents .Bytes ());if _aacg !=nil {return "",_aacg ;};return _dce .ToUpper (_ccc .EncodeToString (_dagba )),nil ;
};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_eadaca *PdfPageResources )SetXObjectByName (keyName _bb .PdfObjectName ,stream *_bb .PdfObjectStream )error {if _eadaca .XObject ==nil {_eadaca .XObject =_bb .MakeDict ();};_cecea :=_bb .TraceToDirectObject (_eadaca .XObject );_cfdfg ,_abeaf :=_cecea .(*_bb .PdfObjectDictionary );
if !_abeaf {_gg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_eadaca .XObject ,_cecea );return _ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cfdfg .Set (keyName ,stream );return nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_abafe *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_fbcf :=_bf .NewReader (img .getBase ());_abgc :=_gdf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_abafe .AlternateSpace .GetNumComponents (),nil ,img ._cebdb ,nil );
_fccg :=_bf .NewWriter (_abgc );_egeda :=_bdd .Pow (2,float64 (img .BitsPerComponent ))-1;_gg .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_gg .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_abafe .TintTransform );_acegb :=_abafe .AlternateSpace .DecodeArray ();var (_dgbd uint32 ;_edc error ;);for {_dgbd ,_edc =_fbcf .ReadSample ();
if _edc ==_ecb .EOF {break ;};if _edc !=nil {return img ,_edc ;};_gacg :=float64 (_dgbd )/_egeda ;_cdcgb ,_bgbe :=_abafe .TintTransform .Evaluate ([]float64 {_gacg });if _bgbe !=nil {return img ,_bgbe ;};for _cbbc ,_abbe :=range _cdcgb {_eecf :=_gdf .LinearInterpolate (_abbe ,_acegb [_cbbc *2],_acegb [_cbbc *2+1],0,1);
if _bgbe =_fccg .WriteSample (uint32 (_eecf *_egeda ));_bgbe !=nil {return img ,_bgbe ;};};};return _abafe .AlternateSpace .ImageToRGB (_dffda (&_abgc ));};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bcfd *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcgdb ,_befc :=_bb .GetNumbersAsFloat (objects );
if _befc !=nil {return nil ,_befc ;};return _bcfd .ColorFromFloats (_dcgdb );};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_dbba *PdfField )GetContainingPdfObject ()_bb .PdfObject {return _dbba ._afbea };func _dbcfd ()string {_gbdbb .Lock ();defer _gbdbb .Unlock ();return _gebba };

// Duplicate creates a duplicate page based on the current one and returns it.
func (_dcag *PdfPage )Duplicate ()*PdfPage {_aedeb :=*_dcag ;_aedeb ._deab =_bb .MakeDict ();_aedeb ._beaf =_bb .MakeIndirectObject (_aedeb ._deab );_aedeb ._eegfb =*_aedeb ._deab ;return &_aedeb ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _ecb .ReadSeeker )(*CompliancePdfReader ,error ){const _dgca ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_ceeee ,_bdca :=_dgdcf (rs ,&ReaderOpts {ComplianceMode :true },false ,_dgca );
if _bdca !=nil {return nil ,_bdca ;};return &CompliancePdfReader {PdfReader :_ceeee },nil ;};func (_gggc *PdfReader )newPdfActionGotoFromDict (_cbe *_bb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_cbe .Get ("\u0044")},nil ;
};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_gfg :=NewPdfAction ();_acb :=&PdfActionThread {};_acb .PdfAction =_gfg ;_gfg .SetContext (_acb );return _acb ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bb .PdfObject )(*PdfFont ,error ){return _decd (fontObj ,true )};func _cbdaa (_daeaa rune )string {for _cffae ,_cadgbg :=range _bg .Categories {if len (_cffae )==2&&_bg .Is (_cadgbg ,_daeaa ){return _cffae ;};};return "\u0043\u006e";
};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bagbb *PdfShadingPatternType2 )ToPdfObject ()_bb .PdfObject {_bagbb .PdfPattern .ToPdfObject ();_edccd :=_bagbb .getDict ();if _bagbb .Shading !=nil {_edccd .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bagbb .Shading .ToPdfObject ());};if _bagbb .Matrix !=nil {_edccd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bagbb .Matrix );
};if _bagbb .ExtGState !=nil {_edccd .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bagbb .ExtGState );};return _bagbb ._aeff ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_gggcf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _egdfaf []*PdfOutlineTreeNode ;var _bfccd []string ;var _ggdab func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_ggdab =func (_fagg *PdfOutlineTreeNode ,_agdac *[]*PdfOutlineTreeNode ,_cgfea *[]string ,_adfcd int ){if _fagg ==nil {return ;
};if _fagg ._fegg ==nil {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_dbcaf ,_fbfba :=_fagg ._fegg .(*PdfOutlineItem );if _fbfba {*_agdac =append (*_agdac ,&_dbcaf .PdfOutlineTreeNode );
_adcdf :=_dce .Repeat ("\u0020",_adfcd *2)+_dbcaf .Title .Decoded ();*_cgfea =append (*_cgfea ,_adcdf );};if _fagg .First !=nil {_abfgd :=_dce .Repeat ("\u0020",_adfcd *2)+"\u002b";*_cgfea =append (*_cgfea ,_abfgd );_ggdab (_fagg .First ,_agdac ,_cgfea ,_adfcd +1);
};if _fbfba &&_dbcaf .Next !=nil {_ggdab (_dbcaf .Next ,_agdac ,_cgfea ,_adfcd );};};_ggdab (_gggcf ._aagda ,&_egdfaf ,&_bfccd ,0);return _egdfaf ,_bfccd ,nil ;};func _adae ()_fb .Time {_gbdbb .Lock ();defer _gbdbb .Unlock ();return _gfbee };func (_dfag *PdfReader )newPdfAnnotationFreeTextFromDict (_fgga *_bb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_abg :=PdfAnnotationFreeText {};
_edbb ,_fdde :=_dfag .newPdfAnnotationMarkupFromDict (_fgga );if _fdde !=nil {return nil ,_fdde ;};_abg .PdfAnnotationMarkup =_edbb ;_abg .DA =_fgga .Get ("\u0044\u0041");_abg .Q =_fgga .Get ("\u0051");_abg .RC =_fgga .Get ("\u0052\u0043");_abg .DS =_fgga .Get ("\u0044\u0053");
_abg .CL =_fgga .Get ("\u0043\u004c");_abg .IT =_fgga .Get ("\u0049\u0054");_abg .BE =_fgga .Get ("\u0042\u0045");_abg .RD =_fgga .Get ("\u0052\u0044");_abg .BS =_fgga .Get ("\u0042\u0053");_abg .LE =_fgga .Get ("\u004c\u0045");return &_abg ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_aedc :=PdfColorCalGray (grayVal );return &_aedc ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_ggcce *_bb .PdfIndirectObject ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_cebdb []byte ;_dafdc []float64 ;};func (_baf *PdfReader )newPdfActionMovieFromDict (_dbcd *_bb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_dbcd .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_dbcd .Get ("\u0054"),Operation :_dbcd .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_bafg *PdfAnnotationLine )ToPdfObject ()_bb .PdfObject {_bafg .PdfAnnotation .ToPdfObject ();_cgdf :=_bafg ._aaf ;_bdec :=_cgdf .PdfObject .(*_bb .PdfObjectDictionary );_bafg .PdfAnnotationMarkup .appendToPdfDictionary (_bdec );_bdec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u004c\u0069\u006e\u0065"));
_bdec .SetIfNotNil ("\u004c",_bafg .L );_bdec .SetIfNotNil ("\u0042\u0053",_bafg .BS );_bdec .SetIfNotNil ("\u004c\u0045",_bafg .LE );_bdec .SetIfNotNil ("\u0049\u0043",_bafg .IC );_bdec .SetIfNotNil ("\u004c\u004c",_bafg .LL );_bdec .SetIfNotNil ("\u004c\u004c\u0045",_bafg .LLE );
_bdec .SetIfNotNil ("\u0043\u0061\u0070",_bafg .Cap );_bdec .SetIfNotNil ("\u0049\u0054",_bafg .IT );_bdec .SetIfNotNil ("\u004c\u004c\u004f",_bafg .LLO );_bdec .SetIfNotNil ("\u0043\u0050",_bafg .CP );_bdec .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bafg .Measure );
_bdec .SetIfNotNil ("\u0043\u004f",_bafg .CO );return _cgdf ;};

// ToPdfObject implements model.PdfModel interface.
func (_gcefb *PdfOutputIntent )ToPdfObject ()_bb .PdfObject {if _gcefb ._cfede ==nil {_gcefb ._cfede =_bb .MakeDict ();};_eggecc :=_gcefb ._cfede ;if _gcefb .Type !=""{_eggecc .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName (_gcefb .Type ));};_eggecc .Set ("\u0053",_bb .MakeName (_gcefb .S .String ()));
if _gcefb .OutputCondition !=""{_eggecc .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_bb .MakeString (_gcefb .OutputCondition ));};_eggecc .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_bb .MakeString (_gcefb .OutputConditionIdentifier ));
_eggecc .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_bb .MakeString (_gcefb .RegistryName ));if _gcefb .Info !=""{_eggecc .Set ("\u0049\u006e\u0066\u006f",_bb .MakeString (_gcefb .Info ));};if len (_gcefb .DestOutputProfile )!=0{_bcgfg ,_faddg :=_bb .MakeStream (_gcefb .DestOutputProfile ,_bb .NewFlateEncoder ());
if _faddg !=nil {_gg .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_faddg );
};_bcgfg .PdfObjectDictionary .Set ("\u004e",_bb .MakeInteger (int64 (_gcefb .ColorComponents )));_ecccd :=make ([]float64 ,_gcefb .ColorComponents *2);for _edbade :=0;_edbade < _gcefb .ColorComponents *2;_edbade ++{_gbfb :=0.0;if _edbade %2!=0{_gbfb =1.0;
};_ecccd [_edbade ]=_gbfb ;};_bcgfg .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_bb .MakeArrayFromFloats (_ecccd ));_eggecc .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_bcgfg );};
return _eggecc ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bb .PdfObject ;Contents _bb .PdfObject ;
Rotate *int64 ;Group _bb .PdfObject ;Thumb _bb .PdfObject ;B _bb .PdfObject ;Dur _bb .PdfObject ;Trans _bb .PdfObject ;AA _bb .PdfObject ;Metadata _bb .PdfObject ;PieceInfo _bb .PdfObject ;StructParents _bb .PdfObject ;ID _bb .PdfObject ;PZ _bb .PdfObject ;
SeparationInfo _bb .PdfObject ;Tabs _bb .PdfObject ;TemplateInstantiated _bb .PdfObject ;PresSteps _bb .PdfObject ;UserUnit _bb .PdfObject ;VP _bb .PdfObject ;Annots _bb .PdfObject ;_cfafb []*PdfAnnotation ;_deab *_bb .PdfObjectDictionary ;_beaf *_bb .PdfIndirectObject ;
_eegfb _bb .PdfObjectDictionary ;_cgeab *PdfReader ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bb .PdfObject ;BS _bb .PdfObject ;LE _bb .PdfObject ;IC _bb .PdfObject ;LL _bb .PdfObject ;LLE _bb .PdfObject ;Cap _bb .PdfObject ;IT _bb .PdfObject ;LLO _bb .PdfObject ;CP _bb .PdfObject ;
Measure _bb .PdfObject ;CO _bb .PdfObject ;};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_dabfef :_bb .MakeIndirectObject (_bb .MakeDict ())};};func (_aagdf *PdfFunctionType0 )processSamples ()error {_cbcde :=_bf .ResampleBytes (_aagdf ._baac ,_aagdf .BitsPerSample );
_aagdf ._debdd =_cbcde ;return nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_acdda *PdfPageResources )HasPatternByName (keyName _bb .PdfObjectName )bool {_ ,_bfceb :=_acdda .GetPatternByName (keyName );return _bfceb ;};func _dggf (_efgdf _bb .PdfObject )(*PdfColorspaceCalGray ,error ){_cgddc :=NewPdfColorspaceCalGray ();
if _egcbg ,_eggfc :=_efgdf .(*_bb .PdfIndirectObject );_eggfc {_cgddc ._aggb =_egcbg ;};_efgdf =_bb .TraceToDirectObject (_efgdf );_dbefe ,_eecg :=_efgdf .(*_bb .PdfObjectArray );if !_eecg {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _dbefe .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_efgdf =_bb .TraceToDirectObject (_dbefe .Get (0));_cbeg ,_eecg :=_efgdf .(*_bb .PdfObjectName );
if !_eecg {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_cbeg !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_efgdf =_bb .TraceToDirectObject (_dbefe .Get (1));_cebcg ,_eecg :=_efgdf .(*_bb .PdfObjectDictionary );if !_eecg {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_efgdf =_cebcg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_efgdf =_bb .TraceToDirectObject (_efgdf );_dgea ,_eecg :=_efgdf .(*_bb .PdfObjectArray );if !_eecg {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _dgea .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ffgg ,_dadd :=_dgea .GetAsFloat64Slice ();
if _dadd !=nil {return nil ,_dadd ;};_cgddc .WhitePoint =_ffgg ;_efgdf =_cebcg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _efgdf !=nil {_efgdf =_bb .TraceToDirectObject (_efgdf );_aagg ,_gcgcc :=_efgdf .(*_bb .PdfObjectArray );
if !_gcgcc {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _aagg .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_fadc ,_gecec :=_aagg .GetAsFloat64Slice ();if _gecec !=nil {return nil ,_gecec ;};_cgddc .BlackPoint =_fadc ;};_efgdf =_cebcg .Get ("\u0047\u0061\u006dm\u0061");if _efgdf !=nil {_efgdf =_bb .TraceToDirectObject (_efgdf );_ggagb ,_dffd :=_bb .GetNumberAsFloat (_efgdf );
if _dffd !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_cgddc .Gamma =_ggagb ;};return _cgddc ,nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_fgdd *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// Reset sets the multi font encoder to its initial state.
func (_dfde *MultipleFontEncoder )Reset (){_dfde .CurrentFont =_dfde ._dfgcb [0]};

// ToPdfObject implements interface PdfModel.
func (_cbga *PdfAnnotationProjection )ToPdfObject ()_bb .PdfObject {_cbga .PdfAnnotation .ToPdfObject ();_bcba :=_cbga ._aaf ;_fgd :=_bcba .PdfObject .(*_bb .PdfObjectDictionary );_cbga .PdfAnnotationMarkup .appendToPdfDictionary (_fgd );return _bcba ;
};

// IsTiling specifies if the pattern is a tiling pattern.
func (_agbe *PdfPattern )IsTiling ()bool {return _agbe .PatternType ==1};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bb .PdfObject ;IC _bb .PdfObject ;BE _bb .PdfObject ;RD _bb .PdfObject ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bb .PdfObject ;BS _bb .PdfObject ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fcec *PdfPageResources )GetShadingByName (keyName _bb .PdfObjectName )(*PdfShading ,bool ){if _fcec .Shading ==nil {return nil ,false ;};_aggfe ,_edcef :=_bb .TraceToDirectObject (_fcec .Shading ).(*_bb .PdfObjectDictionary );if !_edcef {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcec .Shading );
return nil ,false ;};if _dafga :=_aggfe .Get (keyName );_dafga !=nil {_becbda ,_gead :=_begbc (_dafga );if _gead !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_gead );
return nil ,false ;};return _becbda ,true ;};return nil ,false ;};func (_bdde *Image )getSuitableEncoder ()(_bb .StreamEncoder ,error ){var (_cdeg ,_dcae =int (_bdde .Width ),int (_bdde .Height );_fbdfb =make (map[string ]bool );_fdadf =true ;_abbcc =false ;
_eggec =func ()*_bb .DCTEncoder {return _bb .NewDCTEncoder ()};_eaedf =func ()*_bb .DCTEncoder {_bdbce :=_bb .NewDCTEncoder ();_bdbce .BitsPerComponent =16;return _bdbce };);for _eadcc :=0;_eadcc < _dcae ;_eadcc ++{for _cdae :=0;_cdae < _cdeg ;_cdae ++{_ebcda ,_dedf :=_bdde .ColorAt (_cdae ,_eadcc );
if _dedf !=nil {return nil ,_dedf ;};_gfadg ,_ceac ,_ecdab ,_gdebg :=_ebcda .RGBA ();if _fdadf &&(_gfadg !=_ceac ||_gfadg !=_ecdab ||_ceac !=_ecdab ){_fdadf =false ;};if !_abbcc {switch _ebcda .(type ){case _g .NRGBA :_abbcc =_gdebg > 0;};};_fbdfb [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_gfadg ,_ceac ,_ecdab )]=true ;
if len (_fbdfb )> 2&&_abbcc {return _eaedf (),nil ;};};};if _abbcc ||len (_bdde ._cebdb )> 0{return _bb .NewFlateEncoder (),nil ;};if len (_fbdfb )<=2{_bbgc :=_bdde .ConvertToBinary ();if _bbgc !=nil {return nil ,_bbgc ;};return _bb .NewJBIG2Encoder (),nil ;
};if _fdadf {return _eggec (),nil ;};if _bdde .ColorComponents ==1{if _bdde .BitsPerComponent ==1{return _bb .NewJBIG2Encoder (),nil ;}else if _bdde .BitsPerComponent ==8{_ceba :=_bb .NewDCTEncoder ();_ceba .ColorComponents =1;return _ceba ,nil ;};}else if _bdde .ColorComponents ==3{if _bdde .BitsPerComponent ==8{return _eggec (),nil ;
}else if _bdde .BitsPerComponent ==16{return _eaedf (),nil ;};}else if _bdde .ColorComponents ==4{_egfeae :=_eaedf ();_egfeae .ColorComponents =4;return _egfeae ,nil ;};return _eaedf (),nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_abgda :=&PdfFilespec {};_abgda ._eggff =_bb .MakeIndirectObject (_bb .MakeDict ());return _abgda ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_ceed *PdfReader )GetCatalogMetadata ()(_bb .PdfObject ,bool ){if _ceed ._effcg ==nil {return nil ,false ;};_cbacb :=_ceed ._effcg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _cbacb ,_cbacb !=nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_cddf *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfdcd *PdfShadingType4 )ToPdfObject ()_bb .PdfObject {_gfdcd .PdfShading .ToPdfObject ();_eaddd ,_gbfgd :=_gfdcd .getShadingDict ();if _gbfgd !=nil {_gg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gfdcd .BitsPerCoordinate !=nil {_eaddd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gfdcd .BitsPerCoordinate );};if _gfdcd .BitsPerComponent !=nil {_eaddd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gfdcd .BitsPerComponent );
};if _gfdcd .BitsPerFlag !=nil {_eaddd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gfdcd .BitsPerFlag );};if _gfdcd .Decode !=nil {_eaddd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gfdcd .Decode );};if _gfdcd .Function !=nil {if len (_gfdcd .Function )==1{_eaddd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfdcd .Function [0].ToPdfObject ());
}else {_ggdf :=_bb .MakeArray ();for _ ,_bgeaaa :=range _gfdcd .Function {_ggdf .Append (_bgeaaa .ToPdfObject ());};_eaddd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggdf );};};return _gfdcd ._dacad ;};func _aeecce (_edeag *_bb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_gaaag :=PdfShadingType4 {};
_aegf :=_edeag .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aegf ==nil {_gg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eagfb ,_aaafc :=_aegf .(*_bb .PdfObjectInteger );if !_aaafc {_gg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aegf );
return nil ,_bb .ErrTypeError ;};_gaaag .BitsPerCoordinate =_eagfb ;_aegf =_edeag .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aegf ==nil {_gg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_eagfb ,_aaafc =_aegf .(*_bb .PdfObjectInteger );if !_aaafc {_gg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aegf );
return nil ,_bb .ErrTypeError ;};_gaaag .BitsPerComponent =_eagfb ;_aegf =_edeag .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aegf ==nil {_gg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eagfb ,_aaafc =_aegf .(*_bb .PdfObjectInteger );if !_aaafc {_gg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aegf );
return nil ,_bb .ErrTypeError ;};_gaaag .BitsPerComponent =_eagfb ;_aegf =_edeag .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aegf ==nil {_gg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_efbdf ,_aaafc :=_aegf .(*_bb .PdfObjectArray );if !_aaafc {_gg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aegf );
return nil ,_bb .ErrTypeError ;};_gaaag .Decode =_efbdf ;_aegf =_edeag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _aegf ==nil {_gg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gaaag .Function =[]PdfFunction {};if _fcgdcf ,_fabgc :=_aegf .(*_bb .PdfObjectArray );_fabgc {for _ ,_edccf :=range _fcgdcf .Elements (){_affa ,_ddbfd :=_gbcd (_edccf );if _ddbfd !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddbfd );
return nil ,_ddbfd ;};_gaaag .Function =append (_gaaag .Function ,_affa );};}else {_bfeb ,_ceecg :=_gbcd (_aegf );if _ceecg !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ceecg );
return nil ,_ceecg ;};_gaaag .Function =append (_gaaag .Function ,_bfeb );};return &_gaaag ,nil ;};

// GetStructRoot gets the StructTreeRoot object
func (_fggag *PdfPage )GetStructTreeRoot ()(*_bb .PdfObject ,bool ){_abaee ,_dcedg :=_fggag ._cgeab .GetCatalogStructTreeRoot ();return &_abaee ,_dcedg ;};func (_adca *PdfReader )newPdfAnnotationPrinterMarkFromDict (_afef *_bb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_bbfa :=PdfAnnotationPrinterMark {};
_bbfa .MN =_afef .Get ("\u004d\u004e");return &_bbfa ,nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_bcdcc *PdfReader )GetOCProperties ()(_bb .PdfObject ,error ){_eece :=_bcdcc ._effcg ;_acbfg :=_eece .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_acbfg =_bb .ResolveReference (_acbfg );if !_bcdcc ._becge {_bagdb :=_bcdcc .traverseObjectData (_acbfg );
if _bagdb !=nil {return nil ,_bagdb ;};};return _acbfg ,nil ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_eadbf *OutlineItem )ToPdfObject ()_bb .PdfObject {_gafc ,_ :=_eadbf .ToPdfOutlineItem ();return _gafc .ToPdfObject ();};func _dcgfgd (_cffed *_bb .PdfObjectArray )(float64 ,error ){_afeedf ,_bfgde :=_cffed .ToFloat64Array ();if _bfgde !=nil {_gg .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cffed ,_bfgde );
};switch len (_afeedf ){case 1:return _afeedf [0],nil ;case 3:_bbbg :=PdfColorspaceDeviceRGB {};_cfdace ,_cabbd :=_bbbg .ColorFromFloats (_afeedf );if _cabbd !=nil {return 0.0,_cabbd ;};return _cfdace .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_ffdga :=PdfColorspaceDeviceCMYK {};
_fdaba ,_cfadgf :=_ffdga .ColorFromFloats (_afeedf );if _cfadgf !=nil {return 0.0,_cfadgf ;};_bbcgg ,_cfadgf :=_ffdga .ColorToRGB (_fdaba .(*PdfColorDeviceCMYK ));if _cfadgf !=nil {return 0.0,_cfadgf ;};return _bbcgg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_bfgde =_ed .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_gg .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cffed ,_bfgde );
return 0.0,_bfgde ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_dbcege *LTV )EnableAll (extraCerts []*_cd .Certificate )error {_adbf :=_dbcege ._abcbg ._aadf .AcroForm ;for _ ,_dfcaf :=range _adbf .AllFields (){_dcbeg ,_ :=_dfcaf .GetContext ().(*PdfFieldSignature );if _dcbeg ==nil {continue ;};_dfbf :=_dcbeg .V ;
if _gbfag :=_dbcege .validateSig (_dfbf );_gbfag !=nil {_gg .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gbfag );
};if _efeg :=_dbcege .Enable (_dfbf ,extraCerts );_efeg !=nil {return _efeg ;};};return nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_abdc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_gecfe *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _ccedg []*PdfFieldSignature ;for _ ,_degdb :=range _gecfe .AllFields (){switch _abbde :=_degdb .GetContext ().(type ){case *PdfFieldSignature :_edbe :=_abbde ;
_ccedg =append (_ccedg ,_edbe );};};return _ccedg ;};

// String returns a string that describes `font`.
func (_eceff *PdfFont )String ()string {_cfbc :="";if _eceff ._gbagg .Encoder ()!=nil {_cfbc =_eceff ._gbagg .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_eceff ._gbagg ,_eceff .baseFields ().coreString (),_cfbc );
};

// GetAscent returns the Ascent of the font `descriptor`.
func (_dfcb *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bb .GetNumberAsFloat (_dfcb .Ascent );};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gcdde *OutlineItem )Insert (index uint ,item *OutlineItem ){_aegcc :=uint (len (_gcdde .Entries ));if index > _aegcc {index =_aegcc ;};_gcdde .Entries =append (_gcdde .Entries [:index ],append ([]*OutlineItem {item },_gcdde .Entries [index :]...)...);
};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bb .PdfObjectInteger ;BitsPerComponent *_bb .PdfObjectInteger ;BitsPerFlag *_bb .PdfObjectInteger ;Decode *_bb .PdfObjectArray ;Function []PdfFunction ;};

// B returns the value of the B component of the color.
func (_gcfbd *PdfColorLab )B ()float64 {return _gcfbd [2]};func _bbagg (_gdfdf *_bb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_bdbfd :=PdfShadingType1 {};if _ggagf :=_gdfdf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ggagf !=nil {_ggagf =_bb .TraceToDirectObject (_ggagf );
_badfe ,_faeg :=_ggagf .(*_bb .PdfObjectArray );if !_faeg {_gg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggagf );return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bdbfd .Domain =_badfe ;};if _eedeg :=_gdfdf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eedeg !=nil {_eedeg =_bb .TraceToDirectObject (_eedeg );_aggefc ,_dbcfa :=_eedeg .(*_bb .PdfObjectArray );if !_dbcfa {_gg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eedeg );
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdbfd .Matrix =_aggefc ;};_adfaa :=_gdfdf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _adfaa ==nil {_gg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bdbfd .Function =[]PdfFunction {};if _dcda ,_effa :=_adfaa .(*_bb .PdfObjectArray );_effa {for _ ,_dacae :=range _dcda .Elements (){_caaf ,_faga :=_gbcd (_dacae );if _faga !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_faga );
return nil ,_faga ;};_bdbfd .Function =append (_bdbfd .Function ,_caaf );};}else {_bdcfb ,_afcf :=_gbcd (_adfaa );if _afcf !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_afcf );
return nil ,_afcf ;};_bdbfd .Function =append (_bdbfd .Function ,_bdcfb );};return &_bdbfd ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ececf *PdfOutline )ToPdfObject ()_bb .PdfObject {_bcgeg :=_ececf ._ggcce ;_ecee :=_bcgeg .PdfObject .(*_bb .PdfObjectDictionary );_ecee .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _ececf .First !=nil {_ecee .Set ("\u0046\u0069\u0072s\u0074",_ececf .First .ToPdfObject ());
};if _ececf .Last !=nil {_ecee .Set ("\u004c\u0061\u0073\u0074",_ececf .Last .GetContext ().GetContainingPdfObject ());};if _ececf .Parent !=nil {_ecee .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ececf .Parent .GetContext ().GetContainingPdfObject ());
};if _ececf .Count !=nil {_ecee .Set ("\u0043\u006f\u0075n\u0074",_bb .MakeInteger (*_ececf .Count ));};return _bcgeg ;};

// ToPdfObject implements interface PdfModel.
func (_fae *PdfAnnotationWatermark )ToPdfObject ()_bb .PdfObject {_fae .PdfAnnotation .ToPdfObject ();_gbbbd :=_fae ._aaf ;_gdgd :=_gbbbd .PdfObject .(*_bb .PdfObjectDictionary );_gdgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_gdgd .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fae .FixedPrint );return _gbbbd ;};

// GetContentStream returns the XObject Form's content stream.
func (_geae *XObjectForm )GetContentStream ()([]byte ,error ){_fcdf ,_caecf :=_bb .DecodeStream (_geae ._fbabg );if _caecf !=nil {return nil ,_caecf ;};return _fcdf ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gggga *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gggga .RunesToCharcodeBytes ([]rune (str ));};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_dcgdd *PdfReader )GetCatalogViewerPreferences ()(_bb .PdfObject ,bool ){if _dcgdd ._effcg ==nil {return nil ,false ;};_ecgf :=_dcgdd ._effcg .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _ecgf ,_ecgf !=nil ;};func (_ecf *PdfReader )newPdfAnnotationUnderlineFromDict (_edff *_bb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_acc :=PdfAnnotationUnderline {};_cbc ,_ccg :=_ecf .newPdfAnnotationMarkupFromDict (_edff );if _ccg !=nil {return nil ,_ccg ;
};_acc .PdfAnnotationMarkup =_cbc ;_acc .QuadPoints =_edff .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_acc ,nil ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bb .PdfObjectStream )(*XObjectForm ,error ){_efcda :=&XObjectForm {};_efcda ._fbabg =stream ;_ecaaf :=*(stream .PdfObjectDictionary );_efbfg ,_accef :=_bb .NewEncoderFromStream (stream );if _accef !=nil {return nil ,_accef ;
};_efcda .Filter =_efbfg ;if _efaea :=_ecaaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_efaea !=nil {_beggcc ,_dfgfa :=_efaea .(*_bb .PdfObjectName );if !_dfgfa {return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_beggcc !="\u0046\u006f\u0072\u006d"{_gg .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _ccbgb :=_ecaaf .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_ccbgb !=nil {_efcda .FormType =_ccbgb ;};if _gcecc :=_ecaaf .Get ("\u0042\u0042\u006f\u0078");_gcecc !=nil {_efcda .BBox =_gcecc ;};if _ebaba :=_ecaaf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_ebaba !=nil {_efcda .Matrix =_ebaba ;};if _beabe :=_ecaaf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_beabe !=nil {_beabe =_bb .TraceToDirectObject (_beabe );_dafdd ,_cfdda :=_beabe .(*_bb .PdfObjectDictionary );if !_cfdda {_gg .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bb .ErrTypeError ;};_aeaccd ,_bggad :=NewPdfPageResourcesFromDict (_dafdd );if _bggad !=nil {_gg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_bggad ;};_efcda .Resources =_aeaccd ;_gg .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_efcda .Resources );};_efcda .Group =_ecaaf .Get ("\u0047\u0072\u006fu\u0070");
_efcda .Ref =_ecaaf .Get ("\u0052\u0065\u0066");_efcda .MetaData =_ecaaf .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_efcda .PieceInfo =_ecaaf .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_efcda .LastModified =_ecaaf .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_efcda .StructParent =_ecaaf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_efcda .StructParents =_ecaaf .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_efcda .OPI =_ecaaf .Get ("\u004f\u0050\u0049");
_efcda .OC =_ecaaf .Get ("\u004f\u0043");_efcda .Name =_ecaaf .Get ("\u004e\u0061\u006d\u0065");_efcda .Stream =stream .Stream ;return _efcda ,nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bb .PdfObject ;AN _bb .PdfObject ;OP _bb .PdfObject ;JS _bb .PdfObject ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_bfaea *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _bfaea ._cgaa !=nil {return _bfaea ._cgaa ,nil ;};if _bfaea .ColorSpace ==nil {return nil ,nil ;};_dcba ,_bgbbc :=_eggae (_bfaea .ColorSpace );if _bgbbc !=nil {return nil ,_bgbbc ;
};_bfaea ._cgaa =_dcba ;return _bfaea ._cgaa ,nil ;};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_cfag :=_fe .Detect (content );_bdffb :=_dgc .Sum (content );_gefgb :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_cfag .String (),Hash :_ccc .EncodeToString (_bdffb [:])};
return _gefgb ,nil ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_cdfga *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_cdfga .ToPdfOutline ().PdfOutlineTreeNode ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bb .PdfObject ;Volume _bb .PdfObject ;Synchronous _bb .PdfObject ;Repeat _bb .PdfObject ;Mix _bb .PdfObject ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_da :=NewPdfAction ();_ac :=&PdfActionGoToE {};_ac .PdfAction =_da ;_da .SetContext (_ac );return _ac ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_cae :=NewPdfAnnotation ();_gbbg :=&PdfAnnotationStrikeOut {};_gbbg .PdfAnnotation =_cae ;_gbbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cae .SetContext (_gbbg );return _gbbg ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_acdea *PdfFont )SubsetRegistered ()error {switch _eadc :=_acdea ._gbagg .(type ){case *pdfFontType0 :_caca :=_eadc .subsetRegistered ();if _caca !=nil {_gg .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_caca );
return _caca ;};if _eadc ._adea !=nil {if _eadc ._fbfad !=nil {_eadc ._fbfad .ToPdfObject ();};_eadc .ToPdfObject ();};default:_gg .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_eadc );
};return nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_fabed *XObjectForm )GetContainingPdfObject ()_bb .PdfObject {return _fabed ._fbabg };

// ToPdfObject converts date to a PDF string object.
func (_bcagab *PdfDate )ToPdfObject ()_bb .PdfObject {_bdffbg :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bcagab ._cacfc ,_bcagab ._degfb ,_bcagab ._gfaa ,_bcagab ._gdfge ,_bcagab ._fbfcae ,_bcagab ._ffcg ,_bcagab ._dbcea ,_bcagab ._gcfcd ,_bcagab ._cbgdf );
return _bb .MakeString (_bdffbg );};

// ToPdfObject returns the PDF representation of the pattern.
func (_fbbdb *PdfPattern )ToPdfObject ()_bb .PdfObject {_dafg :=_fbbdb .getDict ();_dafg .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dafg .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (_fbbdb .PatternType ));
return _fbbdb ._aeff ;};

// SetDate sets the `M` field of the signature.
func (_dbbdd *PdfSignature )SetDate (date _fb .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_dbbdd .M =_bb .MakeString (date .Format (format ));
};

// ToPdfObject returns the PDF representation of the function.
func (_begac *PdfFunctionType3 )ToPdfObject ()_bb .PdfObject {_abedb :=_bb .MakeDict ();_abedb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (3));_dggag :=&_bb .PdfObjectArray {};for _ ,_egcc :=range _begac .Domain {_dggag .Append (_bb .MakeFloat (_egcc ));
};_abedb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dggag );if _begac .Range !=nil {_bafad :=&_bb .PdfObjectArray {};for _ ,_feae :=range _begac .Range {_bafad .Append (_bb .MakeFloat (_feae ));};_abedb .Set ("\u0052\u0061\u006eg\u0065",_bafad );};if _begac .Functions !=nil {_fdcd :=&_bb .PdfObjectArray {};
for _ ,_edae :=range _begac .Functions {_fdcd .Append (_edae .ToPdfObject ());};_abedb .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_fdcd );};if _begac .Bounds !=nil {_afcca :=&_bb .PdfObjectArray {};for _ ,_agbd :=range _begac .Bounds {_afcca .Append (_bb .MakeFloat (_agbd ));
};_abedb .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_afcca );};if _begac .Encode !=nil {_cgbdbd :=&_bb .PdfObjectArray {};for _ ,_dcga :=range _begac .Encode {_cgbdbd .Append (_bb .MakeFloat (_dcga ));};_abedb .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_cgbdbd );
};if _begac ._bcgb !=nil {_begac ._bcgb .PdfObject =_abedb ;return _begac ._bcgb ;};return _abedb ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_dcg .CharMetrics ;

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_cegffe *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_dfegd *PdfSignature ,_cadca Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_dafa *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_baecc *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_fecfgg *PdfSignature ,_ccgbc Hasher )error ;};

// AddOutlineTree adds outlines to a PDF file.
func (_gdea *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gdea ._eccedg =outlineTree };

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_abf :=NewPdfAction ();_gga :=&PdfActionMovie {};_gga .PdfAction =_abf ;_abf .SetContext (_gga );return _gga ;};

// SetFillImage attach a model.Image to push button.
func (_feecb *PdfFieldButton )SetFillImage (image *Image ){if _feecb .IsPush (){_feecb ._aegba =image ;};};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_beeaf *VRI )ToPdfObject ()*_bb .PdfObjectDictionary {_aaddg :=_bb .MakeDict ();_aaddg .SetIfNotNil (_bb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_baggc (_beeaf .Cert ));_aaddg .SetIfNotNil (_bb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_baggc (_beeaf .OCSP ));
_aaddg .SetIfNotNil (_bb .PdfObjectName ("\u0043\u0052\u004c"),_baggc (_beeaf .CRL ));_aaddg .SetIfNotNil ("\u0054\u0055",_beeaf .TU );_aaddg .SetIfNotNil ("\u0054\u0053",_beeaf .TS );return _aaddg ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fg :=&PdfAction {};_fg ._dcc =_bb .MakeIndirectObject (_bb .MakeDict ());return _fg ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_be .File ,error ){const _daecd ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_afde ,_gacga :=_be .Open (pdfFile );if _gacga !=nil {return nil ,nil ,_gacga ;};_cdgge ,_gacga :=_dgdcf (_afde ,opts ,true ,_daecd );if _gacga !=nil {_afde .Close ();return nil ,nil ,_gacga ;};return _cdgge ,_afde ,nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_becgeg *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _becgeg ._cfaef .GetRevisionNumber ()==0{return nil ,_ed .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _cabf ,_aeefc :=_becgeg ._agbfc [_becgeg ];_aeefc {return _cabf ,nil ;};_gagfd ,_cbcdf :=_becgeg ._cfaef .GetPreviousRevisionReadSeeker ();if _cbcdf !=nil {return nil ,_cbcdf ;};_acbef ,_cbcdf :=_dgdcf (_gagfd ,_becgeg ._gdab ,_becgeg ._fgffe ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _cbcdf !=nil {return nil ,_cbcdf ;};_becgeg ._egbda [_becgeg ._cfaef .GetRevisionNumber ()-1]=_acbef ;_becgeg ._agbfc [_becgeg ]=_acbef ;_acbef ._agbfc =_becgeg ._agbfc ;return _acbef ,nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// ToPdfObject returns a stream object.
func (_dgbfba *XObjectForm )ToPdfObject ()_bb .PdfObject {_bfacbg :=_dgbfba ._fbabg ;_bcgec :=_bfacbg .PdfObjectDictionary ;if _dgbfba .Filter !=nil {_bcgec =_dgbfba .Filter .MakeStreamDict ();_bfacbg .PdfObjectDictionary =_bcgec ;};_bcgec .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bcgec .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0046\u006f\u0072\u006d"));_bcgec .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_dgbfba .FormType );_bcgec .SetIfNotNil ("\u0042\u0042\u006f\u0078",_dgbfba .BBox );
_bcgec .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_dgbfba .Matrix );if _dgbfba .Resources !=nil {_bcgec .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dgbfba .Resources .ToPdfObject ());};_bcgec .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dgbfba .Group );
_bcgec .SetIfNotNil ("\u0052\u0065\u0066",_dgbfba .Ref );_bcgec .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_dgbfba .MetaData );_bcgec .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dgbfba .PieceInfo );_bcgec .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dgbfba .LastModified );
_bcgec .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dgbfba .StructParent );_bcgec .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dgbfba .StructParents );_bcgec .SetIfNotNil ("\u004f\u0050\u0049",_dgbfba .OPI );
_bcgec .SetIfNotNil ("\u004f\u0043",_dgbfba .OC );_bcgec .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgbfba .Name );_bcgec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_dgbfba .Stream ))));_bfacbg .Stream =_dgbfba .Stream ;return _bfacbg ;
};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_fee :=NewPdfAction ();_fdf :=&PdfActionJavaScript {};_fdf .PdfAction =_fee ;_fee .SetContext (_fdf );return _fdf ;};func (_agfd *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";
};

// GetContentStreams returns the content stream as an array of strings.
func (_efgfb *PdfPage )GetContentStreams ()([]string ,error ){_dfeaa :=_efgfb .GetContentStreamObjs ();var _fcab []string ;for _ ,_deagd :=range _dfeaa {_eefba ,_fdebb :=_ggfed (_deagd );if _fdebb !=nil {return nil ,_fdebb ;};_fcab =append (_fcab ,_eefba );
};return _fcab ,nil ;};func (_eedc *PdfReader )newPdfAnnotationSquareFromDict (_fdba *_bb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_edba :=PdfAnnotationSquare {};_eba ,_eabc :=_eedc .newPdfAnnotationMarkupFromDict (_fdba );if _eabc !=nil {return nil ,_eabc ;
};_edba .PdfAnnotationMarkup =_eba ;_edba .BS =_fdba .Get ("\u0042\u0053");_edba .IC =_fdba .Get ("\u0049\u0043");_edba .BE =_fdba .Get ("\u0042\u0045");_edba .RD =_fdba .Get ("\u0052\u0044");return &_edba ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_gbfd *PdfTilingPattern )SetContentStream (content []byte ,encoder _bb .StreamEncoder )error {_bafc ,_abbge :=_gbfd ._aeff .(*_bb .PdfObjectStream );if !_abbge {_gg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbfd ._aeff );
return _bb .ErrTypeError ;};if encoder ==nil {encoder =_bb .NewRawEncoder ();};_fgfab :=_bafc .PdfObjectDictionary ;_geed :=encoder .MakeStreamDict ();_fgfab .Merge (_geed );_fgcb ,_cfae :=encoder .EncodeBytes (content );if _cfae !=nil {return _cfae ;};
_fgfab .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_fgcb ))));_bafc .Stream =_fgcb ;return nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_eccae *PdfPage )error ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_cgde *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SetCatalogLanguage sets the catalog language.
func (_ecfbe *PdfWriter )SetCatalogLanguage (lang _bb .PdfObject )error {if lang ==nil {_ecfbe ._ebgdb .Remove ("\u004c\u0061\u006e\u0067");return nil ;};_ecfbe .addObject (lang );_ecfbe ._ebgdb .Set ("\u004c\u0061\u006e\u0067",lang );return nil ;};

// AddCRLs adds CRLs to DSS.
func (_daae *DSS )AddCRLs (crls [][]byte )([]*_bb .PdfObjectStream ,error ){return _daae .add (&_daae .CRLs ,_daae ._fdbe ,crls );};func (_aee *PdfReader )newPdfAnnotationCaretFromDict (_egfd *_bb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_cedg :=PdfAnnotationCaret {};
_cdbb ,_eafg :=_aee .newPdfAnnotationMarkupFromDict (_egfd );if _eafg !=nil {return nil ,_eafg ;};_cedg .PdfAnnotationMarkup =_cdbb ;_cedg .RD =_egfd .Get ("\u0052\u0044");_cedg .Sy =_egfd .Get ("\u0053\u0079");return &_cedg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dee *PdfAnnotation3D )ToPdfObject ()_bb .PdfObject {_dee .PdfAnnotation .ToPdfObject ();_egcb :=_dee ._aaf ;_gffd :=_egcb .PdfObject .(*_bb .PdfObjectDictionary );_gffd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0033\u0044"));
_gffd .SetIfNotNil ("\u0033\u0044\u0044",_dee .T3DD );_gffd .SetIfNotNil ("\u0033\u0044\u0056",_dee .T3DV );_gffd .SetIfNotNil ("\u0033\u0044\u0041",_dee .T3DA );_gffd .SetIfNotNil ("\u0033\u0044\u0049",_dee .T3DI );_gffd .SetIfNotNil ("\u0033\u0044\u0042",_dee .T3DB );
return _egcb ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func (_ccced *PdfSignature )extractChainFromPKCS7 ()([]*_cd .Certificate ,error ){_agba ,_gdeba :=_de .Parse (_ccced .Contents .Bytes ());if _gdeba !=nil {return nil ,_gdeba ;};return _agba .Certificates ,nil ;};func (_gfdd *PdfWriter )writeTrailer (_cgcbf int ){_gfdd .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _egdbe :=0;_egdbe <=_cgcbf ;{for ;_egdbe <=_cgcbf ;_egdbe ++{_daffg ,_dfff :=_gfdd ._gaded [_egdbe ];if _dfff &&(!_gfdd ._aedgc ||_gfdd ._aedgc &&(_daffg .Type ==1&&_daffg .Offset >=_gfdd ._daabg ||_daffg .Type ==0)){break ;};};var _fdada int ;for _fdada =_egdbe +1;
_fdada <=_cgcbf ;_fdada ++{_dgfag ,_cgdebf :=_gfdd ._gaded [_fdada ];if _cgdebf &&(!_gfdd ._aedgc ||_gfdd ._aedgc &&(_dgfag .Type ==1&&_dgfag .Offset > _gfdd ._daabg )){continue ;};break ;};_fbae :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_egdbe ,_fdada -_egdbe );
_gfdd .writeString (_fbae );for _cdbdc :=_egdbe ;_cdbdc < _fdada ;_cdbdc ++{_bdffbb :=_gfdd ._gaded [_cdbdc ];switch _bdffbb .Type {case 0:_fbae =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_gfdd .writeString (_fbae );
case 1:_fbae =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bdffbb .Offset ,0);_gfdd .writeString (_fbae );};};_egdbe =_fdada +1;};_dafbg :=_bb .MakeDict ();_dafbg .Set ("\u0049\u006e\u0066\u006f",_gfdd ._gefda );
_dafbg .Set ("\u0052\u006f\u006f\u0074",_gfdd ._eecbb );_dafbg .Set ("\u0053\u0069\u007a\u0065",_bb .MakeInteger (int64 (_cgcbf +1)));if _gfdd ._aedgc &&_gfdd ._fedgb > 0{_dafbg .Set ("\u0050\u0072\u0065\u0076",_bb .MakeInteger (_gfdd ._fedgb ));};if _gfdd ._efgdff !=nil {_dafbg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gfdd ._bafbg );
};if _gfdd ._fggfg ==nil &&_gfdd ._eacbd !=""&&_gfdd ._dedff !=""{_gfdd ._fggfg =_bb .MakeArray (_bb .MakeHexString (_gfdd ._eacbd ),_bb .MakeHexString (_gfdd ._dedff ));};if _gfdd ._fggfg !=nil {_dafbg .Set ("\u0049\u0044",_gfdd ._fggfg );_gg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gfdd ._fggfg );
};_gfdd .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_gfdd .writeString (_dafbg .WriteString ());_gfdd .writeString ("\u000a");};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_bebbf *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcaf ,_cebc :=_bb .GetNumbersAsFloat (objects );
if _cebc !=nil {return nil ,_cebc ;};return _bebbf .ColorFromFloats (_fcaf );};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_cegae *PdfField )FullName ()(string ,error ){var _ggdb _aa .Buffer ;_dgaa :=[]string {};if _cegae .T !=nil {_dgaa =append (_dgaa ,_cegae .T .Decoded ());};_adcae :=map[*PdfField ]bool {};_adcae [_cegae ]=true ;_gdcg :=_cegae .Parent ;for _gdcg !=nil {if _ ,_eggg :=_adcae [_gdcg ];
_eggg {return _ggdb .String (),_ed .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _gdcg .T ==nil {return _ggdb .String (),_ed .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_dgaa =append (_dgaa ,_gdcg .T .Decoded ());_adcae [_gdcg ]=true ;_gdcg =_gdcg .Parent ;};for _ebeb :=len (_dgaa )-1;_ebeb >=0;_ebeb --{_ggdb .WriteString (_dgaa [_ebeb ]);if _ebeb > 0{_ggdb .WriteString ("\u002e");};};return _ggdb .String (),nil ;};


// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_eg .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _fb .Time ;};func _bacgg (_aaaf StdFontName )(pdfFontSimple ,error ){_bafag ,_aege :=_dcg .NewStdFontByName (_aaaf );if !_aege {return pdfFontSimple {},ErrFontNotSupported ;};_debfe :=_fcgdc (_bafag );return _debfe ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_abga *PdfAppender )UpdatePage (page *PdfPage ){_abga .updateObjectsDeep (page .ToPdfObject (),nil )};func _gbfcd ()string {_gbdbb .Lock ();defer _gbdbb .Unlock ();return _cceabe };

// IsValid checks if the given pdf output intent type is valid.
func (_gefgf PdfOutputIntentType )IsValid ()bool {return _gefgf >=PdfOutputIntentTypeA1 &&_gefgf <=PdfOutputIntentTypeX ;};

// M returns the value of the magenta component of the color.
func (_dfedb *PdfColorDeviceCMYK )M ()float64 {return _dfedb [1]};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bb .PdfObjectArray ;ExtGState _bb .PdfObject ;};

// Val returns the color value.
func (_fdad *PdfColorDeviceGray )Val ()float64 {return float64 (*_fdad )};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_gcefe *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_gcefe ._cgaa =colorspace ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_gddc *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func (_egga *DSS )add (_edfa *[]*_bb .PdfObjectStream ,_babec map[string ]*_bb .PdfObjectStream ,_dfcd [][]byte )([]*_bb .PdfObjectStream ,error ){_begg :=make ([]*_bb .PdfObjectStream ,0,len (_dfcd ));for _ ,_abccbb :=range _dfcd {_fdcb ,_gdff :=_faef (_abccbb );
if _gdff !=nil {return nil ,_gdff ;};_cdge ,_afeeg :=_babec [string (_fdcb )];if !_afeeg {_cdge ,_gdff =_bb .MakeStream (_abccbb ,_bb .NewRawEncoder ());if _gdff !=nil {return nil ,_gdff ;};_babec [string (_fdcb )]=_cdge ;*_edfa =append (*_edfa ,_cdge );
};_begg =append (_begg ,_cdge );};return _begg ,nil ;};const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_gcgf :=&PdfColorPattern {};return _gcgf };

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bb .PdfObject ;};func _eegg (_dcfgc _bb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_gg .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dcfgc .String (),_dcfgc );
_gagge :=NewPdfColorspaceSpecialPattern ();if _dbacb ,_addga :=_dcfgc .(*_bb .PdfIndirectObject );_addga {_gagge ._egaaa =_dbacb ;};_dcfgc =_bb .TraceToDirectObject (_dcfgc );if _cfdead ,_fdca :=_dcfgc .(*_bb .PdfObjectName );_fdca {if *_cfdead !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _gagge ,nil ;};_gfee ,_aebgd :=_dcfgc .(*_bb .PdfObjectArray );if !_aebgd {_gg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dcfgc );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _gfee .Len ()!=1&&_gfee .Len ()!=2{_gg .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_gfee );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dcfgc =_gfee .Get (0);if _ddgda ,_dgb :=_dcfgc .(*_bb .PdfObjectName );_dgb {if *_ddgda !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gg .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_ddgda );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _gfee .Len ()> 1{_dcfgc =_gfee .Get (1);_dcfgc =_bb .TraceToDirectObject (_dcfgc );_agda ,_afbd :=NewPdfColorspaceFromPdfObject (_dcfgc );if _afbd !=nil {return nil ,_afbd ;
};_gagge .UnderlyingCS =_agda ;};_gg .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_gagge .UnderlyingCS );
return _gagge ,nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_cafag *PdfPage )SetContentStreams (cStreams []string ,encoder _bb .StreamEncoder )error {if len (cStreams )==0{_cafag .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bb .NewRawEncoder ();};var _ecgbcc []*_bb .PdfObjectStream ;for _ ,_eabfd :=range cStreams {_cfdg :=&_bb .PdfObjectStream {};
_efgbg :=encoder .MakeStreamDict ();_ddfeb ,_badb :=encoder .EncodeBytes ([]byte (_eabfd ));if _badb !=nil {return _badb ;};_efgbg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_ddfeb ))));_cfdg .PdfObjectDictionary =_efgbg ;
_cfdg .Stream =_ddfeb ;_ecgbcc =append (_ecgbcc ,_cfdg );};if len (_ecgbcc )==1{_cafag .Contents =_ecgbcc [0];}else {_eccaf :=_bb .MakeArray ();for _ ,_cggce :=range _ecgbcc {_eccaf .Append (_cggce );};_cafag .Contents =_eccaf ;};return nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bb .PdfObject ;IsMap _bb .PdfObject ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_geba *PdfFieldButton )IsCheckbox ()bool {return _geba .GetType ()==ButtonTypeCheckbox };

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bb .PdfObject ;FS _bb .PdfObject ;F _bb .PdfObject ;UF _bb .PdfObject ;DOS _bb .PdfObject ;Mac _bb .PdfObject ;Unix _bb .PdfObject ;ID _bb .PdfObject ;V _bb .PdfObject ;EF _bb .PdfObject ;RF _bb .PdfObject ;Desc _bb .PdfObject ;
CI _bb .PdfObject ;AFRelationship _bb .PdfObject ;_eggff _bb .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gbce *PdfSignature )GetContainingPdfObject ()_bb .PdfObject {return _gbce ._ggaed };

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gece *PdfAppender )UpdateObject (obj _bb .PdfObject ){_gece .replaceObject (obj ,obj );if _ ,_aedb :=_gece ._bgbge [obj ];!_aedb {_gece ._ffb =append (_gece ._ffb ,obj );_gece ._bgbge [obj ]=struct{}{};};};

// SetDecode sets the decode image float slice.
func (_ffegf *Image )SetDecode (decode []float64 ){_ffegf ._dafdc =decode };

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_aefg *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ed .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_fbea ,_fdaf :=_gdf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cebdb ,img ._dafdc );if _fdaf !=nil {return img ,_fdaf ;};_ebbde ,_fdaf :=_gdf .NRGBAConverter .Convert (_fbea );if _fdaf !=nil {return img ,_fdaf ;
};_egea :=_dffda (_ebbde .Base ());_gg .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_gg .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_gg .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_egea .Data );
_gg .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_egea );return _egea ,nil ;};

// GetCerts returns the signature certificate chain.
func (_gbeab *PdfSignature )GetCerts ()([]*_cd .Certificate ,error ){var _cadcb []func ()([]*_cd .Certificate ,error );switch _abfdb ,_ :=_bb .GetNameVal (_gbeab .SubFilter );_abfdb {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_cadcb =append (_cadcb ,_gbeab .extractChainFromPKCS7 ,_gbeab .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_cadcb =append (_cadcb ,_gbeab .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_cadcb =append (_cadcb ,_gbeab .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_abfdb );};for _ ,_bcfeg :=range _cadcb {_ccga ,_ebaac :=_bcfeg ();if _ebaac !=nil {return nil ,_ebaac ;
};if len (_ccga )> 0{return _ccga ,nil ;};};return nil ,ErrSignNoCertificates ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bb .PdfObject ,error );};func (_dgeab *PdfReader )newPdfSignatureFromIndirect (_feebb *_bb .PdfIndirectObject )(*PdfSignature ,error ){_bacbddc ,_caafa :=_feebb .PdfObject .(*_bb .PdfObjectDictionary );
if !_caafa {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _gdec ,_gcabf :=_dgeab ._geeca .GetModelFromPrimitive (_feebb ).(*PdfSignature );_gcabf {return _gdec ,nil ;};_ecgga :=&PdfSignature {};_ecgga ._ggaed =_feebb ;_ecgga .Type ,_ =_bb .GetName (_bacbddc .Get ("\u0054\u0079\u0070\u0065"));
_ecgga .Filter ,_caafa =_bb .GetName (_bacbddc .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_caafa {_gg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ecgga .SubFilter ,_ =_bb .GetName (_bacbddc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_ecgga .Contents ,_caafa =_bb .GetString (_bacbddc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_caafa {_gg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _bfgg ,_ebfgcd :=_bb .GetArray (_bacbddc .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_ebfgcd {_ecgga .Reference =_bb .MakeArray ();for _ ,_gedca :=range _bfgg .Elements (){_cfea ,_bbcgc :=_bb .GetDict (_gedca );
if !_bbcgc {_gg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_eebb ,_bagga :=_dgeab .newPdfSignatureReferenceFromDict (_cfea );if _bagga !=nil {return nil ,_bagga ;};_ecgga .Reference .Append (_eebb .ToPdfObject ());};};_ecgga .Cert =_bacbddc .Get ("\u0043\u0065\u0072\u0074");_ecgga .ByteRange ,_ =_bb .GetArray (_bacbddc .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_ecgga .Changes ,_ =_bb .GetArray (_bacbddc .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_ecgga .Name ,_ =_bb .GetString (_bacbddc .Get ("\u004e\u0061\u006d\u0065"));_ecgga .M ,_ =_bb .GetString (_bacbddc .Get ("\u004d"));_ecgga .Location ,_ =_bb .GetString (_bacbddc .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_ecgga .Reason ,_ =_bb .GetString (_bacbddc .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_ecgga .ContactInfo ,_ =_bb .GetString (_bacbddc .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_ecgga .R ,_ =_bb .GetInt (_bacbddc .Get ("\u0052"));
_ecgga .V ,_ =_bb .GetInt (_bacbddc .Get ("\u0056"));_ecgga .PropBuild ,_ =_bb .GetDict (_bacbddc .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_ecgga .PropAuthTime ,_ =_bb .GetInt (_bacbddc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_ecgga .PropAuthType ,_ =_bb .GetName (_bacbddc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_dgeab ._geeca .Register (_feebb ,_ecgga );return _ecgga ,nil ;};func (_fdcag *PdfWriter )updateObjectNumbers (){_gebfa :=_fdcag .ObjNumOffset ;
_ecfff :=0;for _ ,_bddca :=range _fdcag ._cgfff {_dbbde :=int64 (_ecfff +1+_gebfa );_edaeb :=true ;if _fdcag ._aedgc {if _adffg ,_gafdf :=_fdcag ._dcggdc [_bddca ];_gafdf {_dbbde =_adffg ;_edaeb =false ;};};switch _cedeec :=_bddca .(type ){case *_bb .PdfIndirectObject :_cedeec .ObjectNumber =_dbbde ;
_cedeec .GenerationNumber =0;case *_bb .PdfObjectStream :_cedeec .ObjectNumber =_dbbde ;_cedeec .GenerationNumber =0;case *_bb .PdfObjectStreams :_cedeec .ObjectNumber =_dbbde ;_cedeec .GenerationNumber =0;case *_bb .PdfObjectReference :_cedeec .ObjectNumber =_dbbde ;
_cedeec .GenerationNumber =0;case *_bb .PdfObjectDictionary ,*_bb .PdfObjectString :default:_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cedeec );
continue ;};if _edaeb {_ecfff ++;};};_ebcdf :=func (_gfbfd _bb .PdfObject )int64 {switch _dabcc :=_gfbfd .(type ){case *_bb .PdfIndirectObject :return _dabcc .ObjectNumber ;case *_bb .PdfObjectStream :return _dabcc .ObjectNumber ;case *_bb .PdfObjectStreams :return _dabcc .ObjectNumber ;
case *_bb .PdfObjectReference :return _dabcc .ObjectNumber ;};return 0;};_cc .SliceStable (_fdcag ._cgfff ,func (_gcfda ,_baggg int )bool {return _ebcdf (_fdcag ._cgfff [_gcfda ])< _ebcdf (_fdcag ._cgfff [_baggg ])});};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";
ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";
ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";
ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";
ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_abccc *PdfWriter )SetPageLabels (pageLabels _bb .PdfObject )error {if pageLabels ==nil {return nil ;};_gg .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_abccc ._ebgdb .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _abccc .addObjects (pageLabels );};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_ggedd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cagd ,_gade :=color .(*PdfColorDeviceRGB );if !_gade {_gg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _cagd ,nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_fegg interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};func _dgadf (_gagfb _bb .PdfObject ){_gg .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_gagfb ,_gagfb .String ());if _egddc ,_eggecd :=_gagfb .(*_bb .PdfObjectStream );
_eggecd {_cggbdg ,_gdbda :=_bb .DecodeStream (_egddc );if _gdbda !=nil {_gg .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_gdbda );return ;};_gg .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_cggbdg );}else if _gadee ,_cgbfb :=_gagfb .(*_bb .PdfIndirectObject );
_cgbfb {_gg .Log .Debug ("\u0025\u0054\u0020%\u0076",_gadee .PdfObject ,_gadee .PdfObject );_gg .Log .Debug ("\u0025\u0073",_gadee .PdfObject .String ());};};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_acaga *PdfPageResources )SetXObjectFormByName (keyName _bb .PdfObjectName ,xform *XObjectForm )error {_cdaag :=xform .ToPdfObject ().(*_bb .PdfObjectStream );_bbegg :=_acaga .SetXObjectByName (keyName ,_cdaag );return _bbegg ;};

// ToPdfObject implements interface PdfModel.
func (_dgf *PdfAction )ToPdfObject ()_bb .PdfObject {_gcd :=_dgf ._dcc ;_ade :=_gcd .PdfObject .(*_bb .PdfObjectDictionary );_ade .Clear ();_ade .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ade .SetIfNotNil ("\u0053",_dgf .S );
_ade .SetIfNotNil ("\u004e\u0065\u0078\u0074",_dgf .Next );return _gcd ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ffebg *PdfPattern )IsShading ()bool {return _ffebg .PatternType ==2};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_bb .PdfObjectArray ;ExtGState _bb .PdfObject ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bb .PdfObjectBool ;SigFlags *_bb .PdfObjectInteger ;CO *_bb .PdfObjectArray ;DR *PdfPageResources ;DA *_bb .PdfObjectString ;Q *_bb .PdfObjectInteger ;XFA _bb .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _bb .PdfObject ;_dabfef *_bb .PdfIndirectObject ;_dgeaa bool ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_daafe :=PdfColorDeviceRGB {r ,g ,b };return &_daafe ;};func (_cdgd *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ToPdfObject implements interface PdfModel.
func (_bdb *PdfActionLaunch )ToPdfObject ()_bb .PdfObject {_bdb .PdfAction .ToPdfObject ();_gac :=_bdb ._dcc ;_ddf :=_gac .PdfObject .(*_bb .PdfObjectDictionary );_ddf .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeLaunch )));if _bdb .F !=nil {_ddf .Set ("\u0046",_bdb .F .ToPdfObject ());
};_ddf .SetIfNotNil ("\u0057\u0069\u006e",_bdb .Win );_ddf .SetIfNotNil ("\u004d\u0061\u0063",_bdb .Mac );_ddf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_bdb .Unix );_ddf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bdb .NewWindow );return _gac ;
};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_cbgac *PdfReader )GetIndirectObjectByNumber (number int )(_bb .PdfObject ,error ){_gafga ,_aegbee :=_cbgac ._cfaef .LookupByNumber (number );return _gafga ,_aegbee ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bb .PdfObject ;Popup *PdfAnnotationPopup ;CA _bb .PdfObject ;RC _bb .PdfObject ;CreationDate _bb .PdfObject ;IRT _bb .PdfObject ;Subj _bb .PdfObject ;RT _bb .PdfObject ;IT _bb .PdfObject ;ExData _bb .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_aaeg *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func (_gaae *PdfPage )setContainer (_ccagf *_bb .PdfIndirectObject ){_ccagf .PdfObject =_gaae ._deab ;_gaae ._beaf =_ccagf ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_bedgf *PdfWriter )SetNameDictionary (names _bb .PdfObject )error {if names ==nil {return nil ;};_bedgf ._bccad =_bede (names );_gg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_bedgf ._ebgdb .Set ("\u004e\u0061\u006de\u0073",names );return _bedgf .addObjects (names );};func (_efegf *PdfWriter )setDocInfo (_ggcebg _bb .PdfObject ){if _efegf .hasObject (_efegf ._gefda ){delete (_efegf ._bfdb ,_efegf ._gefda );delete (_efegf ._cgcfec ,_efegf ._gefda );
for _dfabc ,_dafge :=range _efegf ._cgfff {if _dafge ==_efegf ._gefda {copy (_efegf ._cgfff [_dfabc :],_efegf ._cgfff [_dfabc +1:]);_efegf ._cgfff [len (_efegf ._cgfff )-1]=nil ;_efegf ._cgfff =_efegf ._cgfff [:len (_efegf ._cgfff )-1];break ;};};};_gbdee :=_bb .PdfIndirectObject {};
_gbdee .PdfObject =_ggcebg ;_efegf ._gefda =&_gbdee ;_efegf .addObject (&_gbdee );};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_efdae *PdfPageResources )SetColorspaceByName (keyName _bb .PdfObjectName ,cs PdfColorspace )error {_daeda ,_cbadd :=_efdae .GetColorspaces ();if _cbadd !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cbadd );
return _cbadd ;};if _daeda ==nil {_daeda =NewPdfPageResourcesColorspaces ();_efdae .SetColorSpace (_daeda );};_daeda .Set (keyName ,cs );return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_aabf pdfCIDFontType0 )GetCharMetrics (code _ga .CharCode )(_dcg .CharMetrics ,bool ){_ecgbc :=_aabf ._cbcef ;if _aabfd ,_efcab :=_aabf ._bfeg [code ];_efcab {_ecgbc =_aabfd ;};return _dcg .CharMetrics {Wx :_ecgbc },true ;};

// ToPdfObject implements interface PdfModel.
func (_abff *PdfAnnotationRichMedia )ToPdfObject ()_bb .PdfObject {_abff .PdfAnnotation .ToPdfObject ();_aab :=_abff ._aaf ;_abffe :=_aab .PdfObject .(*_bb .PdfObjectDictionary );_abffe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_abffe .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_abff .RichMediaSettings );_abffe .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_abff .RichMediaContent );
return _aab ;};func (_dadgd *PdfSignature )extractChainFromCert ()([]*_cd .Certificate ,error ){var _gfff *_bb .PdfObjectArray ;switch _eadeg :=_dadgd .Cert .(type ){case *_bb .PdfObjectString :_gfff =_bb .MakeArray (_eadeg );case *_bb .PdfObjectArray :_gfff =_eadeg ;
default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_eadeg );
};var _eegad _aa .Buffer ;for _ ,_gaggf :=range _gfff .Elements (){_dgbg ,_ecbea :=_bb .GetString (_gaggf );if !_ecbea {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_gaggf );
};if _ ,_ggcfb :=_eegad .Write (_dgbg .Bytes ());_ggcfb !=nil {return nil ,_ggcfb ;};};return _cd .ParseCertificates (_eegad .Bytes ());};

// ToGoTime returns the date in time.Time format.
func (_abfdbd PdfDate )ToGoTime ()_fb .Time {_cfadga :=int (_abfdbd ._gcfcd *60*60+_abfdbd ._cbgdf *60);switch _abfdbd ._dbcea {case '-':_cfadga =-_cfadga ;case 'Z':_cfadga =0;};_fgdg :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_abfdbd ._dbcea ,_abfdbd ._gcfcd ,_abfdbd ._cbgdf );
_caeagd :=_fb .FixedZone (_fgdg ,_cfadga );return _fb .Date (int (_abfdbd ._cacfc ),_fb .Month (_abfdbd ._degfb ),int (_abfdbd ._gfaa ),int (_abfdbd ._gdfge ),int (_abfdbd ._fbfcae ),int (_abfdbd ._ffcg ),0,_caeagd );};func _fccad (_bbbaf *PdfPage ){_cbbfd :=_fac .GetLicenseKey ();
if _cbbfd !=nil &&_cbbfd .IsLicensed (){return ;};_aceba :=_bb .PdfObjectName ("\u0055\u0046\u0031");if !_bbbaf .Resources .HasFontByName (_aceba ){_bbbaf .Resources .SetFontByName (_aceba ,DefaultFont ().ToPdfObject ());};var _fccgdd []string ;_fccgdd =append (_fccgdd ,"\u0071");
_fccgdd =append (_fccgdd ,"\u0042\u0054");_fccgdd =append (_fccgdd ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_aceba .String ()));_fccgdd =append (_fccgdd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_fccgdd =append (_fccgdd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_efeba :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_fccgdd =append (_fccgdd ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_efeba ));_fccgdd =append (_fccgdd ,"\u0045\u0054");_fccgdd =append (_fccgdd ,"\u0051");_cdfdba :=_dce .Join (_fccgdd ,"\u000a");_bbbaf .AddContentStreamByString (_cdfdba );
_bbbaf .ToPdfObject ();};func _egbdd (_ageead *_bb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_ecbdee :=PdfShadingType2 {};_beccc :=_ageead .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _beccc ==nil {_gg .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_gabbb ,_ffcfd :=_beccc .(*_bb .PdfObjectArray );if !_ffcfd {_gg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_beccc );
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _gabbb .Len ()!=4{_gg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gabbb .Len ());
return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_ecbdee .Coords =_gabbb ;if _bgcdd :=_ageead .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bgcdd !=nil {_bgcdd =_bb .TraceToDirectObject (_bgcdd );
_aggeae ,_gdebc :=_bgcdd .(*_bb .PdfObjectArray );if !_gdebc {_gg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgcdd );return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ecbdee .Domain =_aggeae ;};_beccc =_ageead .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _beccc ==nil {_gg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ecbdee .Function =[]PdfFunction {};if _dadge ,_fedg :=_beccc .(*_bb .PdfObjectArray );_fedg {for _ ,_bbfbd :=range _dadge .Elements (){_bfgdfg ,_fddag :=_gbcd (_bbfbd );if _fddag !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fddag );
return nil ,_fddag ;};_ecbdee .Function =append (_ecbdee .Function ,_bfgdfg );};}else {_gegeae ,_gada :=_gbcd (_beccc );if _gada !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gada );
return nil ,_gada ;};_ecbdee .Function =append (_ecbdee .Function ,_gegeae );};if _befgcc :=_ageead .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_befgcc !=nil {_befgcc =_bb .TraceToDirectObject (_befgcc );_afbeg ,_cfdae :=_befgcc .(*_bb .PdfObjectArray );
if !_cfdae {_gg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_befgcc );return nil ,_bb .ErrTypeError ;};if _afbeg .Len ()!=2{_gg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_afbeg .Len ());
return nil ,ErrInvalidAttribute ;};_ecbdee .Extend =_afbeg ;};return &_ecbdee ,nil ;};func (_gabbc *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gabbc ._eadda ==nil &&_gabbc .DescendantFont !=nil {return _gabbc .DescendantFont .FontDescriptor ();
};return _gabbc ._eadda ;};func (_beec *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _beec ._cfaef .GetCrypter ()!=nil &&!_beec ._cfaef .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bedg :=_beec ._effcg ;_eeacg :=_bedg .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _eeacg ==nil {return nil ,nil ;};_gg .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_fcedg :=_bb .ResolveReference (_eeacg );
_gg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_fcedg );if _eddd :=_bb .IsNullObject (_fcedg );_eddd {_gg .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_agafb ,_ddfb :=_fcedg .(*_bb .PdfIndirectObject );if !_ddfb {if _ ,_eede :=_bb .GetDict (_fcedg );!_eede {_gg .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_gg .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_agafb =_bb .MakeIndirectObject (_fcedg );};_eabef ,_ddfb :=_agafb .PdfObject .(*_bb .PdfObjectDictionary );if !_ddfb {return nil ,_ed .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_gg .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_eabef );_cdfgae ,_ ,_eaaa :=_beec .buildOutlineTree (_agafb ,nil ,nil ,nil );if _eaaa !=nil {return nil ,_eaaa ;};_gg .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_cdfgae );
return _cdfgae ,nil ;};func (_eeg *PdfReader )loadAction (_face _bb .PdfObject )(*PdfAction ,error ){if _aada ,_dde :=_bb .GetIndirect (_face );_dde {_ead ,_edd :=_eeg .newPdfActionFromIndirectObject (_aada );if _edd !=nil {return nil ,_edd ;};return _ead ,nil ;
}else if !_bb .IsNullObject (_face ){return nil ,_ed .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bb .PdfObject ;LE _bb .PdfObject ;BS _bb .PdfObject ;IC _bb .PdfObject ;BE _bb .PdfObject ;IT _bb .PdfObject ;Measure _bb .PdfObject ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_ddgad *pdfCIDFontType2 )ToPdfObject ()_bb .PdfObject {if _ddgad ._dgffc ==nil {_ddgad ._dgffc =&_bb .PdfIndirectObject {};};_aaagd :=_ddgad .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_ddgad ._dgffc .PdfObject =_aaagd ;if _ddgad .CIDSystemInfo !=nil {_aaagd .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_ddgad .CIDSystemInfo );};if _ddgad .DW !=nil {_aaagd .Set ("\u0044\u0057",_ddgad .DW );};if _ddgad .DW2 !=nil {_aaagd .Set ("\u0044\u0057\u0032",_ddgad .DW2 );
};if _ddgad .W !=nil {_aaagd .Set ("\u0057",_ddgad .W );};if _ddgad .W2 !=nil {_aaagd .Set ("\u0057\u0032",_ddgad .W2 );};if _ddgad .CIDToGIDMap !=nil {_aaagd .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_ddgad .CIDToGIDMap );};
return _ddgad ._dgffc ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_dbgfc _ecb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_gdbc _b .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_efea _b .Image )(*Image ,error );

// Compress an image.
Compress (_ddfaa *Image ,_eaacd int64 )(*Image ,error );};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cgcfe *PdfReader )IsEncrypted ()(bool ,error ){return _cgcfe ._cfaef .IsEncrypted ()};func (_edcf *PdfAcroForm )filteredFields (_deag FieldFilterFunc ,_fabdg bool )[]*PdfField {if _edcf ==nil {return nil ;};return _fdcgc (_edcf .Fields ,_deag ,_fabdg );
};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_cffcf DefaultImageHandler )NewGrayImageFromGoImage (goimg _b .Image )(*Image ,error ){_fccc :=goimg .Bounds ();_dedee :=&Image {Width :int64 (_fccc .Dx ()),Height :int64 (_fccc .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _gbgf :=goimg .(type ){case *_b .Gray :if len (_gbgf .Pix )!=_fccc .Dx ()*_fccc .Dy (){_abfcf ,_babd :=_gdf .GrayConverter .Convert (goimg );
if _babd !=nil {return nil ,_babd ;};_dedee .Data =_abfcf .Pix ();}else {_dedee .Data =_gbgf .Pix ;};case *_b .Gray16 :_dedee .BitsPerComponent =16;if len (_gbgf .Pix )!=_fccc .Dx ()*_fccc .Dy ()*2{_bcbed ,_dadb :=_gdf .Gray16Converter .Convert (goimg );
if _dadb !=nil {return nil ,_dadb ;};_dedee .Data =_bcbed .Pix ();}else {_dedee .Data =_gbgf .Pix ;};case _gdf .Image :_dfcec :=_gbgf .Base ();if _dfcec .ColorComponents ==1{_dedee .BitsPerComponent =int64 (_dfcec .BitsPerComponent );_dedee .Data =_dfcec .Data ;
return _dedee ,nil ;};_bgggc ,_dfbd :=_gdf .GrayConverter .Convert (goimg );if _dfbd !=nil {return nil ,_dfbd ;};_dedee .Data =_bgggc .Pix ();default:_egabd ,_fabge :=_gdf .GrayConverter .Convert (goimg );if _fabge !=nil {return nil ,_fabge ;};_dedee .Data =_egabd .Pix ();
};return _dedee ,nil ;};

// G returns the value of the green component of the color.
func (_gbae *PdfColorDeviceRGB )G ()float64 {return _gbae [1]};func (_cgdd *PdfReader )newPdfActionRenditionFromDict (_fgac *_bb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_fgac .Get ("\u0052"),AN :_fgac .Get ("\u0041\u004e"),OP :_fgac .Get ("\u004f\u0050"),JS :_fgac .Get ("\u004a\u0053")},nil ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bbeg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adfb :=vals [0];_egfa :=[]float64 {_adfb };_cdcf ,_aafg :=_bbeg .TintTransform .Evaluate (_egfa );
if _aafg !=nil {_gg .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_aafg );_gg .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bbeg .TintTransform );
return nil ,_aafg ;};_gg .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_cdcf ,_bbeg .AlternateSpace );
_eaed ,_aafg :=_bbeg .AlternateSpace .ColorFromFloats (_cdcf );if _aafg !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_aafg );
return nil ,_aafg ;};return _eaed ,nil ;};

// SetOCProperties sets the optional content properties.
func (_cabbb *PdfWriter )SetOCProperties (ocProperties _bb .PdfObject )error {_cebfa :=_cabbb ._ebgdb ;if ocProperties !=nil {_gg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_cebfa .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cabbb .addObjects (ocProperties );};return nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_gdbfg *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_bfdffg *PdfReader )loadStructure ()error {if _bfdffg ._cfaef .GetCrypter ()!=nil &&!_bfdffg ._cfaef .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_aacge :=_bfdffg ._cfaef .GetTrailer ();if _aacge ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fgbff ,_fgcdg :=_aacge .Get ("\u0052\u006f\u006f\u0074").(*_bb .PdfObjectReference );if !_fgcdg {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_aacge );
};_fbcd ,_daace :=_bfdffg ._cfaef .LookupByReference (*_fgbff );if _daace !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_daace );
return _daace ;};_dcedgd ,_fgcdg :=_fbcd .(*_bb .PdfIndirectObject );if !_fgcdg {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fbcd ,*_aacge );
return _ed .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dcagf ,_fgcdg :=(*_dcedgd ).PdfObject .(*_bb .PdfObjectDictionary );if !_fgcdg {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_dcedgd .PdfObject );
return _ed .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gg .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dcagf );_aabece ,_fgcdg :=_dcagf .Get ("\u0050\u0061\u0067e\u0073").(*_bb .PdfObjectReference );
if !_fgcdg {return _ed .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_gcde ,_daace :=_bfdffg ._cfaef .LookupByReference (*_aabece );
if _daace !=nil {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _daace ;};_ggedfa ,_fgcdg :=_gcde .(*_bb .PdfIndirectObject );if !_fgcdg {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_gg .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ggedfa );return _ed .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_eefg ,_fgcdg :=_ggedfa .PdfObject .(*_bb .PdfObjectDictionary );if !_fgcdg {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ggedfa );
return _ed .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cecg ,_fgcdg :=_bb .GetInt (_eefg .Get ("\u0043\u006f\u0075n\u0074"));if !_fgcdg {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ed .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_fgcdg =_bb .GetName (_eefg .Get ("\u0054\u0079\u0070\u0065"));!_fgcdg {_gg .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_eefg .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0050\u0061\u0067e\u0073"));};if _bgaga ,_bded :=_bb .GetInt (_eefg .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_bded {_fcae :=int64 (*_bgaga );_bfdffg .Rotate =&_fcae ;};_bfdffg ._dfda =_fgbff ;
_bfdffg ._effcg =_dcagf ;_bfdffg ._abcfd =_eefg ;_bfdffg ._acgfb =_ggedfa ;_bfdffg ._agggd =int (*_cecg );_bfdffg ._dggdb =[]*_bb .PdfIndirectObject {};_eccaea :=map[_bb .PdfObject ]struct{}{};_daace =_bfdffg .buildPageList (_ggedfa ,nil ,_eccaea );if _daace !=nil {return _daace ;
};_gg .Log .Trace ("\u002d\u002d\u002d");_gg .Log .Trace ("\u0054\u004f\u0043");_gg .Log .Trace ("\u0050\u0061\u0067e\u0073");_gg .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bfdffg ._dggdb ),_bfdffg ._dggdb );_bfdffg ._aagda ,_daace =_bfdffg .loadOutlines ();
if _daace !=nil {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_daace );
return _daace ;};_bfdffg .AcroForm ,_daace =_bfdffg .loadForms ();if _daace !=nil {return _daace ;};_bfdffg .DSS ,_daace =_bfdffg .loadDSS ();if _daace !=nil {return _daace ;};_bfdffg ._aebcb ,_daace =_bfdffg .loadPerms ();if _daace !=nil {return _daace ;
};return nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_fccff *PdfPage )AddContentStreamByString (contentStr string )error {_bdba ,_eecge :=_bb .MakeStream ([]byte (contentStr ),_bb .NewFlateEncoder ());if _eecge !=nil {return _eecge ;};if _fccff .Contents ==nil {_fccff .Contents =_bdba ;}else {_aeggb :=_bb .TraceToDirectObject (_fccff .Contents );
_bffaea ,_facff :=_aeggb .(*_bb .PdfObjectArray );if !_facff {_bffaea =_bb .MakeArray (_aeggb );};_bffaea .Append (_bdba );_fccff .Contents =_bffaea ;};return nil ;};var (_gfagf =_fc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_gdaga =_fc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_fdge =_fc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_aeacc ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_fcadf ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_ggedf ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_cccdc *Outline )Insert (index uint ,item *OutlineItem ){_fcbb :=uint (len (_cccdc .Entries ));if index > _fcbb {index =_fcbb ;};_cccdc .Entries =append (_cccdc .Entries [:index ],append ([]*OutlineItem {item },_cccdc .Entries [index :]...)...);};


// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fefg *PdfAcroForm ,_ccba *PdfField ,_bgcgd *PdfAnnotationWidget )(*_bb .PdfObjectDictionary ,error );};func (_febe *PdfReader )newPdfAnnotationWatermarkFromDict (_ccce *_bb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_ddce :=PdfAnnotationWatermark {};
_ddce .FixedPrint =_ccce .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_ddce ,nil ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acfdg *PdfShadingType7 )ToPdfObject ()_bb .PdfObject {_acfdg .PdfShading .ToPdfObject ();_abdgc ,_egggc :=_acfdg .getShadingDict ();if _egggc !=nil {_gg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _acfdg .BitsPerCoordinate !=nil {_abdgc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_acfdg .BitsPerCoordinate );};if _acfdg .BitsPerComponent !=nil {_abdgc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_acfdg .BitsPerComponent );
};if _acfdg .BitsPerFlag !=nil {_abdgc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_acfdg .BitsPerFlag );};if _acfdg .Decode !=nil {_abdgc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_acfdg .Decode );};if _acfdg .Function !=nil {if len (_acfdg .Function )==1{_abdgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acfdg .Function [0].ToPdfObject ());
}else {_ddcde :=_bb .MakeArray ();for _ ,_fdabb :=range _acfdg .Function {_ddcde .Append (_fdabb .ToPdfObject ());};_abdgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddcde );};};return _acfdg ._dacad ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_cb :=NewPdfAction ();_cbg :=&PdfActionImportData {};_cbg .PdfAction =_cb ;_cb .SetContext (_cbg );return _cbg ;};

// SetImage updates XObject Image with new image data.
func (_dccdc *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_dccdc .Filter .UpdateParams (img .GetParamsDict ());_dcaba ,_egfed :=_dccdc .Filter .EncodeBytes (img .Data );if _egfed !=nil {return _egfed ;};_dccdc .Stream =_dcaba ;_gcfag :=img .Width ;
_dccdc .Width =&_gcfag ;_bfabe :=img .Height ;_dccdc .Height =&_bfabe ;_cfbbg :=img .BitsPerComponent ;_dccdc .BitsPerComponent =&_cfbbg ;if cs ==nil {if img .ColorComponents ==1{_dccdc .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_dccdc .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_dccdc .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ed .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dccdc .ColorSpace =cs ;};return nil ;
};func (_aaddbf *PdfReader )traverseObjectData (_gccg _bb .PdfObject )error {return _bb .ResolveReferencesDeep (_gccg ,_aaddbf ._ddafg );};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_bdaa *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _bdaa .UnderlyingCS .GetNumComponents ();};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bb .PdfObjectBool ;_gbbdg PdfModel ;_dacad _bb .PdfObject ;};

// SetContext sets the sub action (context).
func (_ae *PdfAction )SetContext (ctx PdfModel ){_ae ._afg =ctx };

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_abge *pdfFontSimple )SetEncoder (encoder _ga .TextEncoder ){_abge ._fcdce =encoder };

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_cfede *_bb .PdfObjectDictionary ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_cdced *XObjectImage )GetContainingPdfObject ()_bb .PdfObject {return _cdced ._eddaa };func _deaee ()string {_gbdbb .Lock ();defer _gbdbb .Unlock ();_ecgac :=_fac .GetLicenseKey ();if len (_ebcaf )> 0&&(_ecgac .IsLicensed ()||_adbef ){return _ebcaf ;
};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_aaedc (),_ecgac .TypeToString ());};func _cbdcf ()string {_gbdbb .Lock ();
defer _gbdbb .Unlock ();if len (_ecgfc )> 0{return _ecgfc ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_cfede :_bb .MakeDict ()};
};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_gfea *DSS )GenerateHashMaps ()error {_efca ,_gacfd :=_gfea .generateHashMap (_gfea .Certs );if _gacfd !=nil {return _gacfd ;};_bceg ,_gacfd :=_gfea .generateHashMap (_gfea .OCSPs );if _gacfd !=nil {return _gacfd ;};_feca ,_gacfd :=_gfea .generateHashMap (_gfea .CRLs );
if _gacfd !=nil {return _gacfd ;};_gfea ._bfda =_efca ;_gfea ._fccf =_bceg ;_gfea ._fdbe =_feca ;return nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bb .PdfObject ;NewWindow _bb .PdfObject ;};func _gbe (_begf _bb .PdfObject )(*PdfBorderStyle ,error ){_bggge :=&PdfBorderStyle {};_bggge ._bdfg =_begf ;var _dea *_bb .PdfObjectDictionary ;_begf =_bb .TraceToDirectObject (_begf );
_dea ,_dcbb :=_begf .(*_bb .PdfObjectDictionary );if !_dcbb {return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _aabe :=_dea .Get ("\u0054\u0079\u0070\u0065");_aabe !=nil {_efb ,_cdab :=_aabe .(*_bb .PdfObjectName );
if !_cdab {_gg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_aabe );
}else {if *_efb !="\u0042\u006f\u0072\u0064\u0065\u0072"{_gg .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_efb );};};};if _bbfaf :=_dea .Get ("\u0057");
_bbfaf !=nil {_ggc ,_ecbcg :=_bb .GetNumberAsFloat (_bbfaf );if _ecbcg !=nil {_gg .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_ecbcg );return nil ,_ecbcg ;};_bggge .W =&_ggc ;
};if _aagd :=_dea .Get ("\u0053");_aagd !=nil {_bfab ,_bbde :=_aagd .(*_bb .PdfObjectName );if !_bbde {return nil ,_ed .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dcgb BorderStyle ;switch *_bfab {case "\u0053":_dcgb =BorderStyleSolid ;case "\u0044":_dcgb =BorderStyleDashed ;case "\u0042":_dcgb =BorderStyleBeveled ;case "\u0049":_dcgb =BorderStyleInset ;case "\u0055":_dcgb =BorderStyleUnderline ;default:_gg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bfab );
return nil ,_ed .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_bggge .S =&_dcgb ;};if _eggf :=_dea .Get ("\u0044");_eggf !=nil {_ace ,_aabec :=_eggf .(*_bb .PdfObjectArray );
if !_aabec {_gg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_eggf );return nil ,_ed .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_dcfa ,_befb :=_ace .ToIntegerArray ();if _befb !=nil {_gg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_befb );
return nil ,_befb ;};_bggge .D =&_dcfa ;};return _bggge ,nil ;};func (_bbgd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bb .PdfObject ;T _bb .PdfObject ;Operation _bb .PdfObject ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_babcg PdfModel ;_afbea *_bb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bb .PdfObjectName ;T *_bb .PdfObjectString ;TU *_bb .PdfObjectString ;TM *_bb .PdfObjectString ;Ff *_bb .PdfObjectInteger ;
V _bb .PdfObject ;DV _bb .PdfObject ;AA _bb .PdfObject ;VariableText *VariableText ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_bdfg _bb .PdfObject ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_abcfg *PdfPattern )SetContext (ctx PdfModel ){_abcfg ._aafef =ctx };

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_cecgad *PdfWriter )SetDocInfo (info *PdfInfo ){_cecgad .setDocInfo (info .ToPdfObject ())};func (_beea *PdfReader )newPdfActionImportDataFromDict (_cab *_bb .PdfObjectDictionary )(*PdfActionImportData ,error ){_aae ,_cfd :=_fda (_cab .Get ("\u0046"));
if _cfd !=nil {return nil ,_cfd ;};return &PdfActionImportData {F :_aae },nil ;};func (_aacaa *PdfWriter )setHashIDs (_efebc _dg .Hash )error {_afdeb :=_efebc .Sum (nil );if _aacaa ._eacbd ==""{_aacaa ._eacbd =_ccc .EncodeToString (_afdeb [:8]);};_aacaa .setDocumentIDs (_aacaa ._eacbd ,_ccc .EncodeToString (_afdeb [8:]));
return nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_ddbed *pdfFontType3 )ToPdfObject ()_bb .PdfObject {if _ddbed ._dcff ==nil {_ddbed ._dcff =&_bb .PdfIndirectObject {};};_feaff :=_ddbed .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ddbed ._dcff .PdfObject =_feaff ;if _ddbed .FirstChar !=nil {_feaff .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ddbed .FirstChar );
};if _ddbed .LastChar !=nil {_feaff .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ddbed .LastChar );};if _ddbed .Widths !=nil {_feaff .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ddbed .Widths );};if _ddbed .Encoding !=nil {_feaff .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ddbed .Encoding );
}else if _ddbed ._acaf !=nil {_cfecc :=_ddbed ._acaf .ToPdfObject ();if _cfecc !=nil {_feaff .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cfecc );};};if _ddbed .FontBBox !=nil {_feaff .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ddbed .FontBBox );
};if _ddbed .FontMatrix !=nil {_feaff .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ddbed .FontMatrix );};if _ddbed .CharProcs !=nil {_feaff .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ddbed .CharProcs );};if _ddbed .Resources !=nil {_feaff .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ddbed .Resources );
};return _ddbed ._dcff ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);func (_afdcf *PdfPage )getParentResources ()(*PdfPageResources ,error ){_bfbcc :=_afdcf .Parent ;
for _bfbcc !=nil {_gdbd ,_bdafc :=_bb .GetDict (_bfbcc );if !_bdafc {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _bfbbg :=_gdbd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bfbbg !=nil {_gcdff ,_dbdbe :=_bb .GetDict (_bfbbg );if !_dbdbe {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_dffba ,_eddga :=NewPdfPageResourcesFromDict (_gcdff );if _eddga !=nil {return nil ,_eddga ;};return _dffba ,nil ;};_bfbcc =_gdbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_gbaeg *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _gbaeg ._edbcd ==nil {_gbaeg ._edbcd =_gca .NewPSExecutor (_gbaeg .Program );};var _gcce []_gca .PSObject ;for _ ,_gegbf :=range xVec {_gcce =append (_gcce ,_gca .MakeReal (_gegbf ));
};_dbab ,_abfe :=_gbaeg ._edbcd .Execute (_gcce );if _abfe !=nil {return nil ,_abfe ;};_dfaef ,_abfe :=_gca .PSObjectArrayToFloat64Array (_dbab );if _abfe !=nil {return nil ,_abfe ;};return _dfaef ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_fdcgd []byte )(_ccbcfd int ,_cdgac error );};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ColorToRGB converts an Indexed color to an RGB color.
func (_bfcf *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bfcf .Base ==nil {return nil ,_ed .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bfcf .Base .ColorToRGB (color );};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_dcdc *PdfFont )ToPdfObject ()_bb .PdfObject {if _dcdc ._gbagg ==nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bb .MakeNull ();
};return _dcdc ._gbagg .ToPdfObject ();};func (_aea *PdfReader )newPdfActionURIFromDict (_eebd *_bb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_eebd .Get ("\u0055\u0052\u0049"),IsMap :_eebd .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_gggbcd *PdfColorspaceICCBased )GetContainingPdfObject ()_bb .PdfObject {return _gggbcd ._eabcb };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_fcgaa *XObjectImage )ToImage ()(*Image ,error ){_fcfge :=&Image {};if _fcgaa .Height ==nil {return nil ,_ed .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_fcfge .Height =*_fcgaa .Height ;if _fcgaa .Width ==nil {return nil ,_ed .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fcfge .Width =*_fcgaa .Width ;if _fcgaa .BitsPerComponent ==nil {switch _fcgaa .Filter .(type ){case *_bb .CCITTFaxEncoder ,*_bb .JBIG2Encoder :_fcfge .BitsPerComponent =1;
case *_bb .LZWEncoder ,*_bb .RunLengthEncoder :_fcfge .BitsPerComponent =8;default:return nil ,_ed .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_fcfge .BitsPerComponent =*_fcgaa .BitsPerComponent ;};_fcfge .ColorComponents =_fcgaa .ColorSpace .GetNumComponents ();_fcgaa ._eddaa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bb .MakeInteger (int64 (_fcfge .ColorComponents )));
_ebbgdc ,_adged :=_bb .DecodeStream (_fcgaa ._eddaa );if _adged !=nil {return nil ,_adged ;};_fcfge .Data =_ebbgdc ;if _fcgaa .Decode !=nil {_abbgdc ,_gdbaf :=_fcgaa .Decode .(*_bb .PdfObjectArray );if !_gdbaf {_gg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ed .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_aeeeb ,_cecbdf :=_abbgdc .ToFloat64Array ();if _cecbdf !=nil {return nil ,_cecbdf ;};switch _fcgaa .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_fdafb :=_fcgaa .ColorSpace .DecodeArray ();
if _fdafb [0]==_aeeeb [0]&&_fdafb [1]==_aeeeb [1]&&_fdafb [2]==_aeeeb [2]&&_fdafb [3]==_aeeeb [3]{_fcfge ._dafdc =_aeeeb ;};default:_fcfge ._dafdc =_aeeeb ;};};return _fcfge ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_begfg :=&PdfAppender {_eaff :reader ._bfcab ,Reader :reader ,_gdga :reader ._cfaef ,_eaag :reader ._ddafg };_aacc ,_afbgb :=_begfg ._eaff .Seek (0,_ecb .SeekEnd );if _afbgb !=nil {return nil ,_afbgb ;
};_begfg ._dfeb =_aacc ;if _ ,_afbgb =_begfg ._eaff .Seek (0,_ecb .SeekStart );_afbgb !=nil {return nil ,_afbgb ;};_begfg ._aadf ,_afbgb =NewPdfReader (_begfg ._eaff );if _afbgb !=nil {return nil ,_afbgb ;};for _ ,_cegf :=range _begfg .Reader .GetObjectNums (){if _begfg ._gadbe < _cegf {_begfg ._gadbe =_cegf ;
};};_begfg ._aadd =_begfg ._gdga .GetXrefTable ();_begfg ._ccge =_begfg ._gdga .GetXrefOffset ();_begfg ._baef =append (_begfg ._baef ,_begfg ._aadf .PageList ...);_begfg ._bgbge =make (map[_bb .PdfObject ]struct{});_begfg ._gecf =make (map[_bb .PdfObject ]int64 );
_begfg ._cfbbc =make (map[_bb .PdfObject ]struct{});_begfg ._gbfg =_begfg ._aadf .AcroForm ;_begfg ._gdgc =_begfg ._aadf .DSS ;return _begfg ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_dbgca *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _dbgca .MediaBox !=nil {return _dbgca .MediaBox ,nil ;};_edada :=_dbgca .Parent ;for _edada !=nil {_aegge ,_ebbcc :=_bb .GetDict (_edada );if !_ebbcc {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fbffd :=_aegge .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fbffd !=nil {_dgeffe ,_dgbfb :=_bb .GetArray (_fbffd );if !_dgbfb {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_fefge ,_fdcac :=NewPdfRectangle (*_dgeffe );if _fdcac !=nil {return nil ,_fdcac ;};return _fefge ,nil ;};_edada =_aegge .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ed .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bb .PdfObjectString ;Author *_bb .PdfObjectString ;Subject *_bb .PdfObjectString ;Keywords *_bb .PdfObjectString ;Creator *_bb .PdfObjectString ;Producer *_bb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_bb .PdfObjectName ;
_bege *_bb .PdfObjectDictionary ;};func _fcgdc (_afaag _dcg .StdFont )pdfFontSimple {_aeee :=_afaag .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_ecdc :"\u0054\u0079\u0070e\u0031",_gdaeed :_afaag .Name ()},_cbec :_afaag .GetMetricsTable (),_dfcc :&PdfFontDescriptor {FontName :_bb .MakeName (string (_aeee .Name )),FontFamily :_bb .MakeName (_aeee .Family ),FontWeight :_bb .MakeFloat (float64 (_aeee .Weight )),Flags :_bb .MakeInteger (int64 (_aeee .Flags )),FontBBox :_bb .MakeArrayFromFloats (_aeee .BBox [:]),ItalicAngle :_bb .MakeFloat (_aeee .ItalicAngle ),Ascent :_bb .MakeFloat (_aeee .Ascent ),Descent :_bb .MakeFloat (_aeee .Descent ),CapHeight :_bb .MakeFloat (_aeee .CapHeight ),XHeight :_bb .MakeFloat (_aeee .XHeight ),StemV :_bb .MakeFloat (_aeee .StemV ),StemH :_bb .MakeFloat (_aeee .StemH )},_gfgb :_afaag .Encoder ()};
};func (_gafff *PdfReader )buildPageList (_cabae *_bb .PdfIndirectObject ,_dcbcg *_bb .PdfIndirectObject ,_eggea map[_bb .PdfObject ]struct{})error {if _cabae ==nil {return nil ;};if _ ,_fcde :=_eggea [_cabae ];_fcde {_gg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cabae .ObjectNumber );
return nil ;};_eggea [_cabae ]=struct{}{};_cfabb ,_bggfc :=_cabae .PdfObject .(*_bb .PdfObjectDictionary );if !_bggfc {return _ed .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_ffag ,_bggfc :=(*_cfabb ).Get ("\u0054\u0079\u0070\u0065").(*_bb .PdfObjectName );
if !_bggfc {if _cfabb .Get ("\u004b\u0069\u0064\u0073")==nil {return _ed .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_gg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_ffag =_bb .MakeName ("\u0050\u0061\u0067e\u0073");_cfabb .Set ("\u0054\u0079\u0070\u0065",_ffag );};_gg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_ffag ,_cabae );
if *_ffag =="\u0050\u0061\u0067\u0065"{_dafgc ,_adcdfa :=_gafff .newPdfPageFromDict (_cfabb );if _adcdfa !=nil {return _adcdfa ;};_dafgc .setContainer (_cabae );if _dcbcg !=nil {_cfabb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcbcg );};_gafff ._dggdb =append (_gafff ._dggdb ,_cabae );
_gafff .PageList =append (_gafff .PageList ,_dafgc );return nil ;};if *_ffag !="\u0050\u0061\u0067e\u0073"{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_ffag );
return _ed .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _dcbcg !=nil {_cfabb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcbcg );};if !_gafff ._becge {_dbaca :=_gafff .traverseObjectData (_cabae );if _dbaca !=nil {return _dbaca ;};};_gacdf ,_gbacc :=_gafff ._cfaef .Resolve (_cfabb .Get ("\u004b\u0069\u0064\u0073"));
if _gbacc !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _gbacc ;};var _cecfe *_bb .PdfObjectArray ;
_cecfe ,_bggfc =_gacdf .(*_bb .PdfObjectArray );if !_bggfc {_egad ,_egcfd :=_gacdf .(*_bb .PdfIndirectObject );if !_egcfd {return _ed .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cecfe ,_bggfc =_egad .PdfObject .(*_bb .PdfObjectArray );
if !_bggfc {return _ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_gg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_cecfe );
for _edcge ,_ebcba :=range _cecfe .Elements (){_fbgce ,_aacac :=_bb .GetIndirect (_ebcba );if !_aacac {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_fbgce );
return _ed .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cecfe .Set (_edcge ,_fbgce );_gbacc =_gafff .buildPageList (_fbgce ,_cabae ,_eggea );if _gbacc !=nil {return _gbacc ;
};};return nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_eaec PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_bdea []_bb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_adcd []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_fcc :=NewPdfAction ();_ggg :=&PdfActionLaunch {};_ggg .PdfAction =_fcc ;_fcc .SetContext (_ggg );return _ggg ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_debe :=&PdfPageResourcesColorspaces {};_debe .Names =[]string {};_debe .Colorspaces =map[string ]PdfColorspace {};_debe ._baeab =&_bb .PdfIndirectObject {};return _debe ;};

// IsSimple returns true if `font` is a simple font.
func (_abec *PdfFont )IsSimple ()bool {_ ,_faae :=_abec ._gbagg .(*pdfFontSimple );return _faae };func _gddgge (_gfacg *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_gfacg }};

// R returns the value of the red component of the color.
func (_gdfd *PdfColorDeviceRGB )R ()float64 {return _gdfd [0]};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_efbfc *PdfTilingPattern )ToPdfObject ()_bb .PdfObject {_efbfc .PdfPattern .ToPdfObject ();_bdeae :=_efbfc .getDict ();if _efbfc .PaintType !=nil {_bdeae .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_efbfc .PaintType );};if _efbfc .TilingType !=nil {_bdeae .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_efbfc .TilingType );
};if _efbfc .BBox !=nil {_bdeae .Set ("\u0042\u0042\u006f\u0078",_efbfc .BBox .ToPdfObject ());};if _efbfc .XStep !=nil {_bdeae .Set ("\u0058\u0053\u0074e\u0070",_efbfc .XStep );};if _efbfc .YStep !=nil {_bdeae .Set ("\u0059\u0053\u0074e\u0070",_efbfc .YStep );
};if _efbfc .Resources !=nil {_bdeae .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_efbfc .Resources .ToPdfObject ());};if _efbfc .Matrix !=nil {_bdeae .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_efbfc .Matrix );};return _efbfc ._aeff ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_bbdd :=NewPdfAnnotation ();_fcfg :=&PdfAnnotationWatermark {};_fcfg .PdfAnnotation =_bbdd ;_bbdd .SetContext (_fcfg );return _fcfg ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_afbe *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_gg .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_gg .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_gg .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_gg .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_afeb ,_bacc :=_gdf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cebdb ,img ._dafdc );if _bacc !=nil {return Image {},_bacc ;};_bccf ,_bacc :=_gdf .NRGBAConverter .Convert (_afeb );
if _bacc !=nil {return Image {},_bacc ;};return _dffda (_bccf .Base ()),nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_egaaa *_bb .PdfIndirectObject ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bb .PdfObject ;IC _bb .PdfObject ;BE _bb .PdfObject ;RD _bb .PdfObject ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_aafef PdfModel ;_aeff _bb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cccc *PdfActionGoTo3DView )ToPdfObject ()_bb .PdfObject {_cccc .PdfAction .ToPdfObject ();_ddg :=_cccc ._dcc ;_gfd :=_ddg .PdfObject .(*_bb .PdfObjectDictionary );_gfd .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeGoTo3DView )));_gfd .SetIfNotNil ("\u0054\u0041",_cccc .TA );
_gfd .SetIfNotNil ("\u0056",_cccc .V );return _ddg ;};func _edaff (_bbbf _bb .PdfObject )[]*_bb .PdfObjectStream {if _bbbf ==nil {return nil ;};_fega ,_aafge :=_bb .GetArray (_bbbf );if !_aafge ||_fega .Len ()==0{return nil ;};_fgffg :=make ([]*_bb .PdfObjectStream ,0,_fega .Len ());
for _ ,_beaff :=range _fega .Elements (){if _cdbgd ,_aacacg :=_bb .GetStream (_beaff );_aacacg {_fgffg =append (_fgffg ,_cdbgd );};};return _fgffg ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_aeb :=NewPdfAction ();_egg :=&PdfActionGoTo3DView {};_egg .PdfAction =_aeb ;_aeb .SetContext (_egg );return _egg ;};func _bbfcb (_ebcfb *_bb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_acgcb :=&PdfShadingPattern {};
_cgbbfd :=_ebcfb .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _cgbbfd ==nil {_gg .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_affgb ,_fbabf :=_begbc (_cgbbfd );
if _fbabf !=nil {_gg .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_fbabf );return nil ,_fbabf ;};_acgcb .Shading =_affgb ;if _begee :=_ebcfb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_begee !=nil {_aeefe ,_adfgb :=_begee .(*_bb .PdfObjectArray );if !_adfgb {_gg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_begee );
return nil ,_bb .ErrTypeError ;};_acgcb .Matrix =_aeefe ;};if _dcdff :=_ebcfb .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_dcdff !=nil {_acgcb .ExtGState =_dcdff ;};return _acgcb ,nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_ggbeb *Image )GetParamsDict ()*_bb .PdfObjectDictionary {_bacba :=_bb .MakeDict ();_bacba .Set ("\u0057\u0069\u0064t\u0068",_bb .MakeInteger (_ggbeb .Width ));_bacba .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bb .MakeInteger (_ggbeb .Height ));
_bacba .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bb .MakeInteger (int64 (_ggbeb .ColorComponents )));_bacba .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bb .MakeInteger (_ggbeb .BitsPerComponent ));
return _bacba ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _eg .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_bb .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_bb .MakeInteger (int64 (permission )),V :_bb .MakeName ("\u0031\u002e\u0032")};
};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_egebd PdfOutputIntentType )String ()string {switch _egebd {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// GetPdfInfo returns the PDF info dictionary.
func (_addgg *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_gedd ,_edbbd :=_addgg .GetTrailer ();if _edbbd !=nil {return nil ,_edbbd ;};var _ggceb *_bb .PdfObjectDictionary ;_agege :=_gedd .Get ("\u0049\u006e\u0066\u006f");switch _baefg :=_agege .(type ){case *_bb .PdfObjectReference :_fbcfa :=_baefg ;
_agege ,_edbbd =_addgg .GetIndirectObjectByNumber (int (_fbcfa .ObjectNumber ));_agege =_bb .TraceToDirectObject (_agege );if _edbbd !=nil {return nil ,_edbbd ;};_ggceb ,_ =_agege .(*_bb .PdfObjectDictionary );case *_bb .PdfObjectDictionary :_ggceb =_baefg ;
};if _ggceb ==nil {return nil ,_ed .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_bgacf ,_edbbd :=NewPdfInfoFromObject (_ggceb );if _edbbd !=nil {return nil ,_edbbd ;
};return _bgacf ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_degb *modelManager )GetModelFromPrimitive (primitive _bb .PdfObject )PdfModel {model ,_egbac :=_degb ._dffg [primitive ];if !_egbac {return nil ;};return model ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_gbga *PdfWriter )SetRotation (rotate int64 )error {_cgaca ,_badgd :=_bb .GetDict (_gbga ._faebd );if !_badgd {return ErrTypeCheck ;};_cgaca .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bb .MakeInteger (rotate ));return nil ;};func (_gagg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_beba *_bb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_ecbb :=PdfAnnotationFileAttachment {};
_gadb ,_bgeg :=_gagg .newPdfAnnotationMarkupFromDict (_beba );if _bgeg !=nil {return nil ,_bgeg ;};_ecbb .PdfAnnotationMarkup =_gadb ;_ecbb .FS =_beba .Get ("\u0046\u0053");_ecbb .Name =_beba .Get ("\u004e\u0061\u006d\u0065");return &_ecbb ,nil ;};func (_bdcb *PdfReader )newPdfAnnotationLineFromDict (_baff *_bb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_fddb :=PdfAnnotationLine {};
_bcbe ,_eddf :=_bdcb .newPdfAnnotationMarkupFromDict (_baff );if _eddf !=nil {return nil ,_eddf ;};_fddb .PdfAnnotationMarkup =_bcbe ;_fddb .L =_baff .Get ("\u004c");_fddb .BS =_baff .Get ("\u0042\u0053");_fddb .LE =_baff .Get ("\u004c\u0045");_fddb .IC =_baff .Get ("\u0049\u0043");
_fddb .LL =_baff .Get ("\u004c\u004c");_fddb .LLE =_baff .Get ("\u004c\u004c\u0045");_fddb .Cap =_baff .Get ("\u0043\u0061\u0070");_fddb .IT =_baff .Get ("\u0049\u0054");_fddb .LLO =_baff .Get ("\u004c\u004c\u004f");_fddb .CP =_baff .Get ("\u0043\u0050");
_fddb .Measure =_baff .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_fddb .CO =_baff .Get ("\u0043\u004f");return &_fddb ,nil ;};func _fdbc (_fadcf _bb .PdfObject )(map[_ga .CharCode ]float64 ,error ){if _fadcf ==nil {return nil ,nil ;};_bcef ,_baccg :=_bb .GetArray (_fadcf );
if !_baccg {return nil ,nil ;};_egffb :=map[_ga .CharCode ]float64 {};_fgded :=_bcef .Len ();for _aeac :=0;_aeac < _fgded -1;_aeac ++{_egbaf :=_bb .TraceToDirectObject (_bcef .Get (_aeac ));_abecd ,_dfddg :=_bb .GetIntVal (_egbaf );if !_dfddg {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_aeac ,_egbaf );
};_aeac ++;if _aeac > _fgded -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bcef );};_gecee :=_bb .TraceToDirectObject (_bcef .Get (_aeac ));
switch _gecee .(type ){case *_bb .PdfObjectArray :_agaee ,_ :=_bb .GetArray (_gecee );if _cddgd ,_bfcfc :=_agaee .ToFloat64Array ();_bfcfc ==nil {for _edegf :=0;_edegf < len (_cddgd );_edegf ++{_egffb [_ga .CharCode (_abecd +_edegf )]=_cddgd [_edegf ];
};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_aeac ,_gecee );};case *_bb .PdfObjectInteger :_aggea ,_edffa :=_bb .GetIntVal (_gecee );
if !_edffa {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_aeac ,_gecee );};_aeac ++;if _aeac > _fgded -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bcef );
};_gfeac :=_bcef .Get (_aeac );_facef ,_ddggc :=_bb .GetNumberAsFloat (_gfeac );if _ddggc !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_aeac ,_gfeac );
};for _gegee :=_abecd ;_gegee <=_aggea ;_gegee ++{_egffb [_ga .CharCode (_gegee )]=_facef ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_aeac ,_gecee );
};};return _egffb ,nil ;};func _bgcc ()*Names {return &Names {_gaeg :_bb .MakeIndirectObject (_bb .MakeDict ())}};

// ParserMetadata gets the parser  metadata.
func (_ceff *CompliancePdfReader )ParserMetadata ()_bb .ParserMetadata {if _ceff ._cdfe ==(_bb .ParserMetadata {}){_ceff ._cdfe ,_ =_ceff ._cfaef .ParserMetadata ();};return _ceff ._cdfe ;};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_gaeg *_bb .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_bb .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_bb .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_bb .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_bb .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_bb .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_bb .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_bb .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_bb .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_bb .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_bb .PdfObjectDictionary ;};func _gedb (_cceec string )(map[_ga .CharCode ]_ga .GlyphName ,error ){_geece :=_dce .Split (_cceec ,"\u000a");_cedga :=make (map[_ga .CharCode ]_ga .GlyphName );for _ ,_dcbe :=range _geece {_cfafa :=_fdge .FindStringSubmatch (_dcbe );
if _cfafa ==nil {continue ;};_ageaa ,_bbggb :=_cfafa [1],_cfafa [2];_aeada ,_ecgca :=_fd .Atoi (_ageaa );if _ecgca !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_dcbe );
return nil ,_bb .ErrTypeError ;};_cedga [_ga .CharCode (_aeada )]=_ga .GlyphName (_bbggb );};_gg .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_cedga );
return _cedga ,nil ;};func (_fge *PdfReader )newPdfActionLaunchFromDict (_bgg *_bb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_egd ,_fgb :=_fda (_bgg .Get ("\u0046"));if _fgb !=nil {return nil ,_fgb ;};return &PdfActionLaunch {Win :_bgg .Get ("\u0057\u0069\u006e"),Mac :_bgg .Get ("\u004d\u0061\u0063"),Unix :_bgg .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_bgg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_egd },nil ;
};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_eadbe *PdfAcroForm )ToPdfObject ()_bb .PdfObject {_adeeg :=_eadbe ._dabfef ;_ccadg :=_adeeg .PdfObject .(*_bb .PdfObjectDictionary );if _eadbe .Fields !=nil {_dgcg :=_bb .PdfObjectArray {};for _ ,_cedac :=range *_eadbe .Fields {_feacg :=_cedac .GetContext ();
if _feacg !=nil {_dgcg .Append (_feacg .ToPdfObject ());}else {_dgcg .Append (_cedac .ToPdfObject ());};};_ccadg .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_dgcg );};if _eadbe .NeedAppearances !=nil {_ccadg .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_eadbe .NeedAppearances );
}else {if _gbfe :=_ccadg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_gbfe !=nil {_ccadg .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _eadbe .SigFlags !=nil {_ccadg .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_eadbe .SigFlags );
};if _eadbe .CO !=nil {_ccadg .Set ("\u0043\u004f",_eadbe .CO );};if _eadbe .DR !=nil {_ccadg .Set ("\u0044\u0052",_eadbe .DR .ToPdfObject ());};if _eadbe .DA !=nil {_ccadg .Set ("\u0044\u0041",_eadbe .DA );};if _eadbe .Q !=nil {_ccadg .Set ("\u0051",_eadbe .Q );
};if _eadbe .XFA !=nil {_ccadg .Set ("\u0058\u0046\u0041",_eadbe .XFA );};if _eadbe .ADBEEchoSign !=nil {_ccadg .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_eadbe .ADBEEchoSign );};return _adeeg ;};func (_ccbcfc *fontFile )loadFromSegments (_aaga ,_fbab []byte )error {_gg .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_aaga ),len (_fbab ));
_bcgf :=_ccbcfc .parseASCIIPart (_aaga );if _bcgf !=nil {return _bcgf ;};_gg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ccbcfc );if len (_fbab )==0{return nil ;};_gg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ccbcfc );
return nil ;};func (_bdabc *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _bdabc ._eadda };

// ToPdfObject implements interface PdfModel.
func (_ggcd *PdfBorderStyle )ToPdfObject ()_bb .PdfObject {_dfdc :=_bb .MakeDict ();if _ggcd ._bdfg !=nil {if _fde ,_fbbb :=_ggcd ._bdfg .(*_bb .PdfIndirectObject );_fbbb {_fde .PdfObject =_dfdc ;};};_dfdc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _ggcd .W !=nil {_dfdc .Set ("\u0057",_bb .MakeFloat (*_ggcd .W ));};if _ggcd .S !=nil {_dfdc .Set ("\u0053",_bb .MakeName (_ggcd .S .GetPdfName ()));};if _ggcd .D !=nil {_dfdc .Set ("\u0044",_bb .MakeArrayFromIntegers (*_ggcd .D ));};if _ggcd ._bdfg !=nil {return _ggcd ._bdfg ;
};return _dfdc ;};func _aaegg (_ecfag _bb .PdfObject ,_adff *fontCommon )(*_af .CMap ,error ){_geebd ,_ebfga :=_bb .GetStream (_ecfag );if !_ebfga {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ecfag );
return nil ,_bb .ErrTypeError ;};_gebf ,_fcdg :=_bb .DecodeStream (_geebd );if _fcdg !=nil {return nil ,_fcdg ;};_afea ,_fcdg :=_af .LoadCmapFromData (_gebf ,!_adff .isCIDFont ());if _fcdg !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_geebd .ObjectNumber ,_fcdg );
};return _afea ,_fcdg ;};

// ToPdfObject implements interface PdfModel.
func (_gcfc *PdfAnnotationSquare )ToPdfObject ()_bb .PdfObject {_gcfc .PdfAnnotation .ToPdfObject ();_beeb :=_gcfc ._aaf ;_bcec :=_beeb .PdfObject .(*_bb .PdfObjectDictionary );if _gcfc .PdfAnnotationMarkup !=nil {_gcfc .PdfAnnotationMarkup .appendToPdfDictionary (_bcec );
};_bcec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_bcec .SetIfNotNil ("\u0042\u0053",_gcfc .BS );_bcec .SetIfNotNil ("\u0049\u0043",_gcfc .IC );_bcec .SetIfNotNil ("\u0042\u0045",_gcfc .BE );
_bcec .SetIfNotNil ("\u0052\u0044",_gcfc .RD );return _beeb ;};var _ pdfFont =(*pdfFontType0 )(nil );

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_bfadc *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _begbg []*PdfField ;if _bfadc .AcroForm !=nil {_begbg =_bfadc .AcroForm .AllFields ();};_efgg :=make (map[*PdfField ]struct{},len (_begbg ));for _ ,_dfbcd :=range _begbg {_efgg [_dfbcd ]=struct{}{};
};for _ ,_fbcc :=range _bfadc .PageList {_efegb ,_cdceb :=_fbcc .GetAnnotations ();if _cdceb !=nil {return false ,_cdceb ;};for _ ,_eefc :=range _efegb {_bdcee ,_faeda :=_eefc .GetContext ().(*PdfAnnotationWidget );if !_faeda {continue ;};_bdfaa :=_bdcee .Field ();
if _bdfaa ==nil {return true ,nil ;};if _ ,_fcbba :=_efgg [_bdfaa ];!_fcbba {return true ,nil ;};};};return false ,nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ecb .ReadSeeker )(*PdfFont ,error ){_fbagd ,_ffegd :=_gf .ReadAll (r );if _ffegd !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ffegd );
return nil ,_ffegd ;};_ecdbf ,_ffegd :=_dcg .TtfParse (_aa .NewReader (_fbagd ));if _ffegd !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_ffegd );
return nil ,_ffegd ;};_dfee :=&pdfCIDFontType2 {fontCommon :fontCommon {_ecdc :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_ecdbf .Widths )<=0{return nil ,_ed .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_ccfa :=1000.0/float64 (_ecdbf .UnitsPerEm );_edacb :=_ccfa *float64 (_ecdbf .Widths [0]);_bgcfc :=make (map[rune ]int );_cgce :=make (map[_dcg .GID ]int );_badd :=_dcg .GID (len (_ecdbf .Widths ));for _fbfca ,_daca :=range _ecdbf .Chars {if _daca > _badd -1{continue ;
};_aegbd :=int (_ccfa *float64 (_ecdbf .Widths [_daca ]));_bgcfc [_fbfca ]=_aegbd ;_cgce [_daca ]=_aegbd ;};_dfee ._cgee =_bgcfc ;_dfee .DW =_bb .MakeInteger (int64 (_edacb ));_deaae :=_bdfgb (_cgce ,uint16 (_badd ));_dfee .W =_bb .MakeIndirectObject (_deaae );
_aeccf :=_bb .MakeDict ();_aeccf .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_aeccf .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bb .MakeString ("\u0041\u0064\u006fb\u0065"));
_aeccf .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bb .MakeInteger (0));_dfee .CIDSystemInfo =_aeccf ;_efgeg :=&PdfFontDescriptor {FontName :_bb .MakeName (_ecdbf .PostScriptName ),Ascent :_bb .MakeFloat (_ccfa *float64 (_ecdbf .TypoAscender )),Descent :_bb .MakeFloat (_ccfa *float64 (_ecdbf .TypoDescender )),CapHeight :_bb .MakeFloat (_ccfa *float64 (_ecdbf .CapHeight )),FontBBox :_bb .MakeArrayFromFloats ([]float64 {_ccfa *float64 (_ecdbf .Xmin ),_ccfa *float64 (_ecdbf .Ymin ),_ccfa *float64 (_ecdbf .Xmax ),_ccfa *float64 (_ecdbf .Ymax )}),ItalicAngle :_bb .MakeFloat (_ecdbf .ItalicAngle ),MissingWidth :_bb .MakeFloat (_edacb )};
_gbbdd ,_ffegd :=_bb .MakeStream (_fbagd ,_bb .NewFlateEncoder ());if _ffegd !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ffegd );
return nil ,_ffegd ;};_gbbdd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bb .MakeInteger (int64 (len (_fbagd ))));_efgeg .FontFile2 =_gbbdd ;if _ecdbf .Bold {_efgeg .StemV =_bb .MakeInteger (120);}else {_efgeg .StemV =_bb .MakeInteger (70);
};_cfbbfc :=_gebb ;if _ecdbf .IsFixedPitch {_cfbbfc |=_daaea ;};if _ecdbf .ItalicAngle !=0{_cfbbfc |=_bfabc ;};_efgeg .Flags =_bb .MakeInteger (int64 (_cfbbfc ));_dfee ._gdaeed =_ecdbf .PostScriptName ;_dfee ._eadda =_efgeg ;_gdgac :=pdfFontType0 {fontCommon :fontCommon {_ecdc :"\u0054\u0079\u0070e\u0030",_gdaeed :_ecdbf .PostScriptName },DescendantFont :&PdfFont {_gbagg :_dfee },Encoding :_bb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_fbfad :_ecdbf .NewEncoder ()};
if len (_ecdbf .Chars )> 0{_ffcb :=make (map[_af .CharCode ]rune ,len (_ecdbf .Chars ));for _bfef ,_dbbf :=range _ecdbf .Chars {_dgfef :=_af .CharCode (_dbbf );if _bagf ,_cbfeb :=_ffcb [_dgfef ];!_cbfeb ||(_cbfeb &&_bagf > _bfef ){_ffcb [_dgfef ]=_bfef ;
};};_gdgac ._beee =_af .NewToUnicodeCMap (_ffcb );};_cacd :=PdfFont {_gbagg :&_gdgac };return &_cacd ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_bfcce OutlineDest )ToPdfObject ()_bb .PdfObject {if (_bfcce .PageObj ==nil &&_bfcce .Page < 0)||_bfcce .Mode ==""{return _bb .MakeNull ();};_gdef :=_bb .MakeArray ();if _bfcce .PageObj !=nil {_gdef .Append (_bfcce .PageObj );}else {_gdef .Append (_bb .MakeInteger (_bfcce .Page ));
};_gdef .Append (_bb .MakeName (_bfcce .Mode ));switch _bfcce .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_gdef .Append (_bb .MakeFloat (_bfcce .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_gdef .Append (_bb .MakeFloat (_bfcce .X ));
case "\u0058\u0059\u005a":_gdef .Append (_bb .MakeFloat (_bfcce .X ));_gdef .Append (_bb .MakeFloat (_bfcce .Y ));_gdef .Append (_bb .MakeFloat (_bfcce .Zoom ));default:_gdef .Set (1,_bb .MakeName ("\u0046\u0069\u0074"));};return _gdef ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_fgbcc :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_fgbcc .N =N ;return _fgbcc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bffe *PdfAnnotationPrinterMark )ToPdfObject ()_bb .PdfObject {_bffe .PdfAnnotation .ToPdfObject ();_fcef :=_bffe ._aaf ;_ebbd :=_fcef .PdfObject .(*_bb .PdfObjectDictionary );_ebbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_ebbd .SetIfNotNil ("\u004d\u004e",_bffe .MN );return _fcef ;};func (_gfcbe *PdfReader )loadPerms ()(*Permissions ,error ){if _bacbdd :=_gfcbe ._effcg .Get ("\u0050\u0065\u0072m\u0073");_bacbdd !=nil {if _eccd ,_edceg :=_bb .GetDict (_bacbdd );_edceg {_fbebe :=_eccd .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _fbebe ==nil {return nil ,nil ;};if _edgfb ,_egedf :=_bb .GetIndirect (_fbebe );_egedf {_cacga ,_gedccc :=_gfcbe .newPdfSignatureFromIndirect (_edgfb );if _gedccc !=nil {return nil ,_gedccc ;};return NewPermissions (_cacga ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcd *PdfAnnotationFileAttachment )ToPdfObject ()_bb .PdfObject {_bcd .PdfAnnotation .ToPdfObject ();_cdc :=_bcd ._aaf ;_afad :=_cdc .PdfObject .(*_bb .PdfObjectDictionary );_bcd .PdfAnnotationMarkup .appendToPdfDictionary (_afad );_afad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_afad .SetIfNotNil ("\u0046\u0053",_bcd .FS );_afad .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcd .Name );return _cdc ;};func (_bffd *pdfFontType0 )bytesToCharcodes (_ccafc []byte )([]_ga .CharCode ,bool ){if _bffd ._dcfda ==nil {return nil ,false ;};_ebafg ,_fagdf :=_bffd ._dcfda .BytesToCharcodes (_ccafc );
if !_fagdf {return nil ,false ;};_cgff :=make ([]_ga .CharCode ,len (_ebafg ));for _bfec ,_bdggg :=range _ebafg {_cgff [_bfec ]=_ga .CharCode (_bdggg );};return _cgff ,true ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bb .PdfObjectName ;Colorants _bb .PdfObject ;Process _bb .PdfObject ;MixingHints _bb .PdfObject ;_cgfab *_bb .PdfIndirectObject ;};func (_ggbbb *pdfFontSimple )baseFields ()*fontCommon {return &_ggbbb .fontCommon };


// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_acf *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dddbf ,_ccea :=_bb .GetNumbersAsFloat (objects );
if _ccea !=nil {return nil ,_ccea ;};return _acf .ColorFromFloats (_dddbf );};

// Encoder returns the font's text encoder.
func (_affeb pdfCIDFontType0 )Encoder ()_ga .TextEncoder {return _affeb ._gdcfb };

// Items returns all children outline items.
func (_dgcaf *OutlineItem )Items ()[]*OutlineItem {return _dgcaf .Entries };

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_ccgb *PdfField )GetContext ()PdfModel {return _ccgb ._babcg };

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_afgd :=NewPdfAction ();_baa :=&PdfActionURI {};_baa .PdfAction =_afgd ;_afgd .SetContext (_baa );return _baa ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bb .PdfObject ;B _bb .PdfObject ;};

// GetContentStream returns the pattern cell's content stream
func (_aegga *PdfTilingPattern )GetContentStream ()([]byte ,error ){_cebf ,_ ,_aggac :=_aegga .GetContentStreamWithEncoder ();return _cebf ,_aggac ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_bbafa *PdfSignature )GetDocMDPPermission ()(_eg .DocMDPPermission ,bool ){for _ ,_bcbac :=range _bbafa .Reference .Elements (){if _bdee ,_bacad :=_bb .GetDict (_bcbac );_bacad {if _gbbce ,_abfbg :=_bb .GetNameVal (_bdee .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_abfbg &&_gbbce =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _eecef ,_fbdfc :=_bb .GetDict (_bdee .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fbdfc {if P ,_gfbfc :=_bb .GetIntVal (_eecef .Get ("\u0050"));_gfbfc {return _eg .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_abfb DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_eaafb *XObjectForm )SetContentStream (content []byte ,encoder _bb .StreamEncoder )error {_ecbaag :=content ;if encoder ==nil {if _eaafb .Filter !=nil {encoder =_eaafb .Filter ;}else {encoder =_bb .NewRawEncoder ();};};_agafd ,_bggfa :=encoder .EncodeBytes (_ecbaag );
if _bggfa !=nil {return _bggfa ;};_ecbaag =_agafd ;_eaafb .Stream =_ecbaag ;_eaafb .Filter =encoder ;return nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _dgcd error ;encoder ,_dgcd =img .getSuitableEncoder ();if _dgcd !=nil {_gg .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dgcd );
encoder =_bb .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_ddbae ,_gdccd :=encoder .EncodeBytes (img .Data );if _gdccd !=nil {_gg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gdccd );
return nil ,_gdccd ;};_bggaa :=NewXObjectImage ();_eebga :=img .Width ;_ccbgea :=img .Height ;_bggaa .Width =&_eebga ;_bggaa .Height =&_ccbgea ;_egdff :=img .BitsPerComponent ;_bggaa .BitsPerComponent =&_egdff ;_bggaa .Filter =encoder ;_bggaa .Stream =_ddbae ;
if cs ==nil {if img .ColorComponents ==1{_bggaa .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_bb .DCTEncoder :_bggaa .ColorSpace =NewPdfColorspaceDeviceRGB ();_egdff =8;_bggaa .BitsPerComponent =&_egdff ;
};};}else if img .ColorComponents ==3{_bggaa .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_bb .DCTEncoder :_bggaa .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_bggaa .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_ed .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_bggaa .ColorSpace =cs ;};if len (img ._cebdb )!=0{_afdea :=NewXObjectImage ();_afdea .Filter =encoder ;_dcabe ,_aeace :=encoder .EncodeBytes (img ._cebdb );
if _aeace !=nil {_gg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_aeace );return nil ,_aeace ;};_afdea .Stream =_dcabe ;_afdea .BitsPerComponent =_bggaa .BitsPerComponent ;
_afdea .Width =&img .Width ;_afdea .Height =&img .Height ;_afdea .ColorSpace =NewPdfColorspaceDeviceGray ();_bggaa .SMask =_afdea .ToPdfObject ();}else {_bggaa .SMask =xobjIn .SMask ;_bggaa .ImageMask =xobjIn .ImageMask ;if _bggaa .ColorSpace .GetNumComponents ()==1{_aeadf (_bggaa );
};};return _bggaa ,nil ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_cbdg :=&PdfColorPatternType2 {};return _cbdg };func (_cfbb *PdfReader )newPdfAnnotationPopupFromDict (_fgaf *_bb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bbaf :=PdfAnnotationPopup {};_bbaf .Parent =_fgaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_bbaf .Open =_fgaf .Get ("\u004f\u0070\u0065\u006e");return &_bbaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dagb *PdfFilespec )ToPdfObject ()_bb .PdfObject {_gefg :=_dagb .getDict ();_gefg .Clear ();_gefg .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_gefg .SetIfNotNil ("\u0046\u0053",_dagb .FS );
_gefg .SetIfNotNil ("\u0046",_dagb .F );_gefg .SetIfNotNil ("\u0055\u0046",_dagb .UF );_gefg .SetIfNotNil ("\u0044\u004f\u0053",_dagb .DOS );_gefg .SetIfNotNil ("\u004d\u0061\u0063",_dagb .Mac );_gefg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_dagb .Unix );
_gefg .SetIfNotNil ("\u0049\u0044",_dagb .ID );_gefg .SetIfNotNil ("\u0056",_dagb .V );_gefg .SetIfNotNil ("\u0045\u0046",_dagb .EF );_gefg .SetIfNotNil ("\u0052\u0046",_dagb .RF );_gefg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_dagb .Desc );_gefg .SetIfNotNil ("\u0043\u0049",_dagb .CI );
_gefg .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_dagb .AFRelationship );return _dagb ._eggff ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bb .StreamEncoder ;FormType _bb .PdfObject ;BBox _bb .PdfObject ;Matrix _bb .PdfObject ;Resources *PdfPageResources ;Group _bb .PdfObject ;Ref _bb .PdfObject ;MetaData _bb .PdfObject ;PieceInfo _bb .PdfObject ;LastModified _bb .PdfObject ;
StructParent _bb .PdfObject ;StructParents _bb .PdfObject ;OPI _bb .PdfObject ;OC _bb .PdfObject ;Name _bb .PdfObject ;

// Stream data.
Stream []byte ;_fbabg *_bb .PdfObjectStream ;};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_ddcdd :=&PdfShadingType3 {};_ddcdd .PdfShading =&PdfShading {};_ddcdd .PdfShading ._dacad =_bb .MakeIndirectObject (_bb .MakeDict ());_ddcdd .PdfShading ._gbbdg =_ddcdd ;return _ddcdd ;};func _dgffa (_cfab *PdfField ,_caaa _bb .PdfObject )error {switch _cfab .GetContext ().(type ){case *PdfFieldText :switch _egfcg :=_caaa .(type ){case *_bb .PdfObjectName :_cgbdb :=_egfcg ;
_gg .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_cgbdb .String ());
_cfab .V =_bb .MakeEncodedString (_egfcg .String (),true );case *_bb .PdfObjectString :_cfab .V =_bb .MakeEncodedString (_egfcg .String (),true );default:_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_egfcg ,_egfcg );
};case *PdfFieldButton :switch _caaa .(type ){case *_bb .PdfObjectName :if len (_caaa .String ())> 0{_cfab .V =_caaa ;_dgbe (_cfab ,_caaa );};case *_bb .PdfObjectString :if len (_caaa .String ())> 0{_cfab .V =_bb .MakeName (_caaa .String ());_dgbe (_cfab ,_cfab .V );
};default:_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cfab .PartialName (),_caaa );_cfab .V =_caaa ;};case *PdfFieldChoice :switch _caaa .(type ){case *_bb .PdfObjectName :if len (_caaa .String ())> 0{_cfab .V =_bb .MakeString (_caaa .String ());
_dgbe (_cfab ,_caaa );};case *_bb .PdfObjectString :if len (_caaa .String ())> 0{_cfab .V =_caaa ;_dgbe (_cfab ,_bb .MakeName (_caaa .String ()));};default:_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cfab .PartialName (),_caaa );
_cfab .V =_caaa ;};case *PdfFieldSignature :_gg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cfab .PartialName (),_caaa );
};return nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gbabcd *PdfPageResources )SetXObjectImageByName (keyName _bb .PdfObjectName ,ximg *XObjectImage )error {_bcdg :=ximg .ToPdfObject ().(*_bb .PdfObjectStream );_dcdcd :=_gbabcd .SetXObjectByName (keyName ,_bcdg );return _dcdcd ;};

// Height returns the height of `rect`.
func (_cgcba *PdfRectangle )Height ()float64 {return _bdd .Abs (_cgcba .Ury -_cgcba .Lly )};

// ToPdfObject implements interface PdfModel.
func (_badgf *Permissions )ToPdfObject ()_bb .PdfObject {return _badgf ._bfee };

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_fbgga *modelManager )GetPrimitiveFromModel (model PdfModel )_bb .PdfObject {_gcebe ,_bced :=_fbgga ._fdgab [model ];if !_bced {return nil ;};return _gcebe ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_efdc :=NewPdfAnnotation ();_ggda :=&PdfAnnotationSquare {};_ggda .PdfAnnotation =_efdc ;_ggda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efdc .SetContext (_ggda );return _ggda ;};

// Fill populates `form` with values provided by `provider`.
func (_ebgb *PdfAcroForm )Fill (provider FieldValueProvider )error {return _ebgb .fill (provider ,nil )};func (_ccca *PdfReader )newPdfAnnotationScreenFromDict (_afee *_bb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ebed :=PdfAnnotationScreen {};
_ebed .T =_afee .Get ("\u0054");_ebed .MK =_afee .Get ("\u004d\u004b");_ebed .A =_afee .Get ("\u0041");_ebed .AA =_afee .Get ("\u0041\u0041");return &_ebed ,nil ;};func (_egcdce *PdfWriter )checkLicense ()error {_acgaaa :=_fac .GetLicenseKey ();if (_acgaaa ==nil ||!_acgaaa .IsLicensed ())&&!_adbef {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ed .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_edabb *Outline )ToPdfOutline ()*PdfOutline {_fccge :=NewPdfOutline ();var _fcdcc []*PdfOutlineItem ;var _ageff int64 ;var _fged *PdfOutlineItem ;for _ ,_acdd :=range _edabb .Entries {_gecd ,_febd :=_acdd .ToPdfOutlineItem ();_gecd .Parent =&_fccge .PdfOutlineTreeNode ;
if _fged !=nil {_fged .Next =&_gecd .PdfOutlineTreeNode ;_gecd .Prev =&_fged .PdfOutlineTreeNode ;};_fcdcc =append (_fcdcc ,_gecd );_ageff +=_febd ;_fged =_gecd ;};_bgbec :=int64 (len (_fcdcc ));_ageff +=_bgbec ;if _bgbec > 0{_fccge .First =&_fcdcc [0].PdfOutlineTreeNode ;
_fccge .Last =&_fcdcc [_bgbec -1].PdfOutlineTreeNode ;_fccge .Count =&_ageff ;};return _fccge ;};

// ToPdfObject implements interface PdfModel.
func (_gagf *PdfAnnotationMovie )ToPdfObject ()_bb .PdfObject {_gagf .PdfAnnotation .ToPdfObject ();_cefga :=_gagf ._aaf ;_ecbg :=_cefga .PdfObject .(*_bb .PdfObjectDictionary );_ecbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u004d\u006f\u0076i\u0065"));
_ecbg .SetIfNotNil ("\u0054",_gagf .T );_ecbg .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_gagf .Movie );_ecbg .SetIfNotNil ("\u0041",_gagf .A );return _cefga ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gedbf *PdfShadingPatternType3 )ToPdfObject ()_bb .PdfObject {_gedbf .PdfPattern .ToPdfObject ();_adaa :=_gedbf .getDict ();if _gedbf .Shading !=nil {_adaa .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gedbf .Shading .ToPdfObject ());};if _gedbf .Matrix !=nil {_adaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gedbf .Matrix );
};if _gedbf .ExtGState !=nil {_adaa .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gedbf .ExtGState );};return _gedbf ._aeff ;};func _efaeg (_ccfge *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_ccfge }};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_cegc *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_acdc :=Permissions {};_acdc .DocMDP =docMdp ;_dbcff :=_bb .MakeDict ();_dbcff .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_acdc ._bfee =_dbcff ;return &_acdc ;};

// Transform rectangle with the supplied matrix.
func (_dbgb *PdfRectangle )Transform (transformMatrix _gcac .Matrix ){_dbgb .Llx ,_dbgb .Lly =transformMatrix .Transform (_dbgb .Llx ,_dbgb .Lly );_dbgb .Urx ,_dbgb .Ury =transformMatrix .Transform (_dbgb .Urx ,_dbgb .Ury );_dbgb .Normalize ();};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_ceae *Image )AlphaMap (mapFunc AlphaMapFunc ){for _gbgd ,_eeegde :=range _ceae ._cebdb {_ceae ._cebdb [_gbgd ]=mapFunc (_eeegde );};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cfac *PdfColorspaceSpecialSeparation )ToPdfObject ()_bb .PdfObject {_abgaf :=_bb .MakeArray (_bb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_abgaf .Append (_cfac .ColorantName );_abgaf .Append (_cfac .AlternateSpace .ToPdfObject ());
_abgaf .Append (_cfac .TintTransform .ToPdfObject ());if _cfac ._ggcgb !=nil {_cfac ._ggcgb .PdfObject =_abgaf ;return _cfac ._ggcgb ;};return _abgaf ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_gdbb :=&PdfFieldSignature {};_gdbb .PdfField =NewPdfField ();_gdbb .PdfField .SetContext (_gdbb );_gdbb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_gdbb .PdfAnnotationWidget .SetContext (_gdbb );
_gdbb .PdfAnnotationWidget ._aaf =_gdbb .PdfField ._afbea ;_gdbb .T =_bb .MakeString ("");_gdbb .F =_bb .MakeInteger (132);_gdbb .V =signature ;return _gdbb ;};func _edcg (_cbbab *_bb .PdfObjectStream )(*PdfFunctionType4 ,error ){_fefga :=&PdfFunctionType4 {};
_fefga ._fabdb =_cbbab ;_cefb :=_cbbab .PdfObjectDictionary ;_cacda ,_ffgcd :=_bb .TraceToDirectObject (_cefb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bb .PdfObjectArray );if !_ffgcd {_gg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cacda .Len ()%2!=0{_gg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_deca ,_ebff :=_cacda .ToFloat64Array ();if _ebff !=nil {return nil ,_ebff ;};_fefga .Domain =_deca ;_cacda ,_ffgcd =_bb .TraceToDirectObject (_cefb .Get ("\u0052\u0061\u006eg\u0065")).(*_bb .PdfObjectArray );
if _ffgcd {if _cacda .Len ()< 0||_cacda .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dgggb ,_fbee :=_cacda .ToFloat64Array ();if _fbee !=nil {return nil ,_fbee ;};_fefga .Range =_dgggb ;
};_cbbe ,_ebff :=_bb .DecodeStream (_cbbab );if _ebff !=nil {return nil ,_ebff ;};_fefga ._eafbd =_cbbe ;_fgbad :=_gca .NewPSParser (_cbbe );_bfbbb ,_ebff :=_fgbad .Parse ();if _ebff !=nil {return nil ,_ebff ;};_fefga .Program =_bfbbb ;return _fefga ,nil ;
};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_ebcbc *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fffb :=_ebcbc .actualFont ();if _fffb ==nil {_gg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_ebcbc ._gbagg );
return _dcg .CharMetrics {},false ;};if _dfeab ,_ffde :=_fffb .GetRuneMetrics (r );_ffde {return _dfeab ,true ;};if _aeadg ,_gefge :=_ebcbc .GetFontDescriptor ();_gefge ==nil &&_aeadg !=nil {return _dcg .CharMetrics {Wx :_aeadg ._acgcg },true ;};_gg .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ebcbc );
return _dcg .CharMetrics {},false ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bb .PdfObjectInteger ;BitsPerComponent *_bb .PdfObjectInteger ;VerticesPerRow *_bb .PdfObjectInteger ;Decode *_bb .PdfObjectArray ;Function []PdfFunction ;};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_dfgcb :fonts ,CurrentFont :fonts [0]};};func (_cbgag *PdfShading )getShadingDict ()(*_bb .PdfObjectDictionary ,error ){_ceccc :=_cbgag ._dacad ;if _geede ,_bbdcfc :=_ceccc .(*_bb .PdfIndirectObject );
_bbdcfc {_eafgb ,_dafefa :=_geede .PdfObject .(*_bb .PdfObjectDictionary );if !_dafefa {return nil ,_bb .ErrTypeError ;};return _eafgb ,nil ;}else if _gbebc ,_gbfbg :=_ceccc .(*_bb .PdfObjectStream );_gbfbg {return _gbebc .PdfObjectDictionary ,nil ;}else if _gccagf ,_bdfgga :=_ceccc .(*_bb .PdfObjectDictionary );
_bdfgga {return _gccagf ,nil ;}else {_gg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bb .ErrTypeError ;
};};

// ToInteger convert to an integer format.
func (_gfbf *PdfColorCalGray )ToInteger (bits int )uint32 {_afeff :=_bdd .Pow (2,float64 (bits ))-1;return uint32 (_afeff *_gfbf .Val ());};func (_dbdee *PdfWriter )writeAcroFormFields ()error {if _dbdee ._agdgf ==nil {return nil ;};_gg .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_fggba :=_dbdee ._agdgf .ToPdfObject ();_gg .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fggba );_dbdee ._ebgdb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fggba );_adbcf :=_dbdee .addObjects (_fggba );
if _adbcf !=nil {return _adbcf ;};return nil ;};func (_cdfgc Image )getBase ()_gdf .ImageBase {return _gdf .NewImageBase (int (_cdfgc .Width ),int (_cdfgc .Height ),int (_cdfgc .BitsPerComponent ),_cdfgc .ColorComponents ,_cdfgc .Data ,_cdfgc ._cebdb ,_cdfgc ._dafdc );
};func _cgedba (_edbd _bb .PdfObject )(*fontFile ,error ){_gg .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_edbd );
_adgc :=&fontFile {};_edbd =_bb .TraceToDirectObject (_edbd );_edbad ,_aded :=_edbd .(*_bb .PdfObjectStream );if !_aded {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_edbd );
return nil ,_bb .ErrTypeError ;};_cbca :=_edbad .PdfObjectDictionary ;_bfgcb ,_fgecf :=_bb .DecodeStream (_edbad );if _fgecf !=nil {return nil ,_fgecf ;};_bbfge ,_aded :=_bb .GetNameVal (_cbca .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_aded {_adgc ._dcbf =_bbfge ;
if _bbfge =="\u0054\u0079\u0070\u0065\u0031\u0043"{_gg .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_bbgf ,_ :=_bb .GetIntVal (_cbca .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_ffga ,_ :=_bb .GetIntVal (_cbca .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _bbgf > len (_bfgcb ){_bbgf =len (_bfgcb );};
if _bbgf +_ffga > len (_bfgcb ){_ffga =len (_bfgcb )-_bbgf ;};_eabge :=_bfgcb [:_bbgf ];var _dcggg []byte ;if _ffga > 0{_dcggg =_bfgcb [_bbgf :_bbgf +_ffga ];};if _bbgf > 0&&_ffga > 0{_ccdg :=_adgc .loadFromSegments (_eabge ,_dcggg );if _ccdg !=nil {return nil ,_ccdg ;
};};return _adgc ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_fbfd *PdfPage )AppendContentStream (contentStr string )error {_ddgab ,_fgda :=_fbfd .GetContentStreams ();if _fgda !=nil {return _fgda ;};if len (_ddgab )==0{_ddgab =[]string {contentStr };return _fbfd .SetContentStreams (_ddgab ,_bb .NewFlateEncoder ());
};var _bacbd _aa .Buffer ;_bacbd .WriteString (_ddgab [len (_ddgab )-1]);_bacbd .WriteString ("\u000a");_bacbd .WriteString (contentStr );_ddgab [len (_ddgab )-1]=_bacbd .String ();return _fbfd .SetContentStreams (_ddgab ,_bb .NewFlateEncoder ());};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bb .PdfObject ;LE _bb .PdfObject ;BS _bb .PdfObject ;IC _bb .PdfObject ;BE _bb .PdfObject ;IT _bb .PdfObject ;Measure _bb .PdfObject ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_aefac *PdfPage )GetRotate ()(int64 ,error ){if _aefac .Rotate !=nil {return *_aefac .Rotate ,nil ;};_gfeebb :=_aefac .Parent ;for _gfeebb !=nil {_abeea ,_gabf :=_bb .GetDict (_gfeebb );if !_gabf {return 0,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _dcggd :=_abeea .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dcggd !=nil {_abgdg ,_gaee :=_bb .GetInt (_dcggd );if !_gaee {return 0,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _abgdg !=nil {return int64 (*_abgdg ),nil ;
};return 0,_ed .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_gfeebb =_abeea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_ed .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_bbdae int ,_gcgdeb *PdfPage )error ;

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_gbdd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _aeadf (_ggbfb *XObjectImage )error {if _ggbfb .SMask ==nil {return nil ;};_fcdag ,_dfafd :=_ggbfb .SMask .(*_bb .PdfObjectStream );if !_dfafd {_gg .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _bb .ErrTypeError ;};_dcbdc :=_fcdag .PdfObjectDictionary ;_dafbf :=_dcbdc .Get ("\u004d\u0061\u0074t\u0065");if _dafbf ==nil {return nil ;};_gfed ,_cfgbd :=_dcgfgd (_dafbf .(*_bb .PdfObjectArray ));if _cfgbd !=nil {return _cfgbd ;};_efbc :=_bb .MakeArrayFromFloats ([]float64 {_gfed });
_dcbdc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_efbc );return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ebebb *PdfFilespec )GetContainingPdfObject ()_bb .PdfObject {return _ebebb ._eggff };

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_gebg *PdfColorspaceDeviceN )GetNumComponents ()int {return _gebg .ColorantNames .Len ()};

// ToPdfObject returns a stream object.
func (_aaceg *XObjectImage )ToPdfObject ()_bb .PdfObject {_cbdbd :=_aaceg ._eddaa ;if _aaceg ._cfbee {return _cbdbd ;};_babgb :=_cbdbd .PdfObjectDictionary ;if _aaceg .Filter !=nil {_babgb =_aaceg .Filter .MakeStreamDict ();_cbdbd .PdfObjectDictionary =_babgb ;
};_babgb .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_babgb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0049\u006d\u0061g\u0065"));_babgb .Set ("\u0057\u0069\u0064t\u0068",_bb .MakeInteger (*(_aaceg .Width )));
_babgb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bb .MakeInteger (*(_aaceg .Height )));if _aaceg .BitsPerComponent !=nil {_babgb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bb .MakeInteger (*(_aaceg .BitsPerComponent )));
};if _aaceg .ColorSpace !=nil {_babgb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_aaceg .ColorSpace .ToPdfObject ());};_babgb .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_aaceg .Intent );_babgb .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_aaceg .ImageMask );
_babgb .SetIfNotNil ("\u004d\u0061\u0073\u006b",_aaceg .Mask );_dcfdf :=_babgb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _aaceg .Decode ==nil &&_dcfdf {_babgb .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _aaceg .Decode !=nil {_babgb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aaceg .Decode );
};_babgb .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_aaceg .Interpolate );_babgb .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_aaceg .Alternatives );_babgb .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_aaceg .SMask );
_babgb .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_aaceg .SMaskInData );_babgb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_aaceg .Matte );_babgb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aaceg .Name );_babgb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aaceg .StructParent );
_babgb .SetIfNotNil ("\u0049\u0044",_aaceg .ID );_babgb .SetIfNotNil ("\u004f\u0050\u0049",_aaceg .OPI );_babgb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aaceg .Metadata );_babgb .SetIfNotNil ("\u004f\u0043",_aaceg .OC );_babgb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_aaceg .Stream ))));
_cbdbd .Stream =_aaceg .Stream ;_aaceg ._cfbee =true ;return _cbdbd ;};func (_bedce *PdfWriter )writeString (_ebfgf string ){if _bedce ._ggcbb !=nil {return ;};_fbba ,_bfgca :=_bedce ._daeee .WriteString (_ebfgf );_bedce ._ggaef +=int64 (_fbba );_bedce ._ggcbb =_bfgca ;
};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_gecg *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_edad ,_dgfad :=color .(*PdfColorCalRGB );if !_dgfad {_gg .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cfca :=_edad .A ();_dacba :=_edad .B ();_gafa :=_edad .C ();X :=_gecg .Matrix [0]*_bdd .Pow (_cfca ,_gecg .Gamma [0])+_gecg .Matrix [3]*_bdd .Pow (_dacba ,_gecg .Gamma [1])+_gecg .Matrix [6]*_bdd .Pow (_gafa ,_gecg .Gamma [2]);
Y :=_gecg .Matrix [1]*_bdd .Pow (_cfca ,_gecg .Gamma [0])+_gecg .Matrix [4]*_bdd .Pow (_dacba ,_gecg .Gamma [1])+_gecg .Matrix [7]*_bdd .Pow (_gafa ,_gecg .Gamma [2]);Z :=_gecg .Matrix [2]*_bdd .Pow (_cfca ,_gecg .Gamma [0])+_gecg .Matrix [5]*_bdd .Pow (_dacba ,_gecg .Gamma [1])+_gecg .Matrix [8]*_bdd .Pow (_gafa ,_gecg .Gamma [2]);
_gbge :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fcba :=-0.969256*X +1.875992*Y +0.041556*Z ;_bgcg :=0.055648*X +-0.204043*Y +1.057311*Z ;_gbge =_bdd .Min (_bdd .Max (_gbge ,0),1.0);_fcba =_bdd .Min (_bdd .Max (_fcba ,0),1.0);_bgcg =_bdd .Min (_bdd .Max (_bgcg ,0),1.0);
return NewPdfColorDeviceRGB (_gbge ,_fcba ,_bgcg ),nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bcfg int ,_gedcb *PdfPage );

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_eabb :=&PdfShadingPatternType3 {};_eabb .Matrix =_bb .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_eabb .PdfPattern =&PdfPattern {};_eabb .PdfPattern .PatternType =int64 (*_bb .MakeInteger (2));
_eabb .PdfPattern ._aafef =_eabb ;_eabb .PdfPattern ._aeff =_bb .MakeIndirectObject (_bb .MakeDict ());return _eabb ;};

// C returns the value of the C component of the color.
func (_cdce *PdfColorCalRGB )C ()float64 {return _cdce [2]};func (_gfgf *PdfWriter )addObjects (_fbaad _bb .PdfObject )error {_gg .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _eegga ,_aedca :=_fbaad .(*_bb .PdfIndirectObject );
_aedca {_gg .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_gg .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fbaad ,_eegga );_gg .Log .Trace ("\u002d\u0020\u0025\u0073",_eegga .PdfObject );if _gfgf .addObject (_eegga ){_aagae :=_gfgf .addObjects (_eegga .PdfObject );
if _aagae !=nil {return _aagae ;};};return nil ;};if _degef ,_fgcag :=_fbaad .(*_bb .PdfObjectStream );_fgcag {_gg .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_gg .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fbaad ,_fbaad );if _gfgf .addObject (_degef ){_cbfae :=_gfgf .addObjects (_degef .PdfObjectDictionary );
if _cbfae !=nil {return _cbfae ;};};return nil ;};if _aabd ,_afecf :=_fbaad .(*_bb .PdfObjectDictionary );_afecf {_gg .Log .Trace ("\u0044\u0069\u0063\u0074");_gg .Log .Trace ("\u002d\u0020\u0025\u0073",_fbaad );for _ ,_fggae :=range _aabd .Keys (){_aggag :=_aabd .Get (_fggae );
if _agfdca ,_geeec :=_aggag .(*_bb .PdfObjectReference );_geeec {_aggag =_agfdca .Resolve ();_aabd .Set (_fggae ,_aggag );};if _fggae !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _ddeaa :=_gfgf .addObjects (_aggag );_ddeaa !=nil {return _ddeaa ;};}else {if _ ,_ebbca :=_aggag .(*_bb .PdfObjectNull );
_ebbca {continue ;};if _egedb :=_gfgf .hasObject (_aggag );!_egedb {_gg .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_aggag ,_aggag ,_aggag );
_gfgf ._aaccg [_aggag ]=append (_gfgf ._aaccg [_aggag ],_aabd );};};};return nil ;};if _aggce ,_adcdg :=_fbaad .(*_bb .PdfObjectArray );_adcdg {_gg .Log .Trace ("\u0041\u0072\u0072a\u0079");_gg .Log .Trace ("\u002d\u0020\u0025\u0073",_fbaad );if _aggce ==nil {return _ed .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _ffece ,_ggfcd :=range _aggce .Elements (){if _aggbb ,_dedgbb :=_ggfcd .(*_bb .PdfObjectReference );_dedgbb {_ggfcd =_aggbb .Resolve ();_aggce .Set (_ffece ,_ggfcd );};if _faaea :=_gfgf .addObjects (_ggfcd );_faaea !=nil {return _faaea ;};};return nil ;
};if _ ,_dgfec :=_fbaad .(*_bb .PdfObjectReference );_dgfec {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fbaad );
return _ed .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bgfb *PdfAnnotationSquiggly )ToPdfObject ()_bb .PdfObject {_bgfb .PdfAnnotation .ToPdfObject ();_febec :=_bgfb ._aaf ;_dedd :=_febec .PdfObject .(*_bb .PdfObjectDictionary );_bgfb .PdfAnnotationMarkup .appendToPdfDictionary (_dedd );_dedd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_dedd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bgfb .QuadPoints );return _febec ;};func (_fbgad *PdfWriter )setDocumentIDs (_cebgb ,_baddg string ){_fbgad ._fggfg =_bb .MakeArray (_bb .MakeHexString (_cebgb ),_bb .MakeHexString (_baddg ));
};

// GetPerms returns the Permissions dictionary
func (_bcfgc *PdfReader )GetPerms ()*Permissions {return _bcfgc ._aebcb };

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_eecbb *_bb .PdfIndirectObject ;_faebd *_bb .PdfIndirectObject ;_eafc map[_bb .PdfObject ]struct{};_cgfff []_bb .PdfObject ;_bfdb map[_bb .PdfObject ]struct{};_cdafa []*_bb .PdfIndirectObject ;_eccedg *PdfOutlineTreeNode ;_ebgdb *_bb .PdfObjectDictionary ;
_bfbf []_bb .PdfObject ;_gefda *_bb .PdfIndirectObject ;_daeee *_f .Writer ;_ggaef int64 ;_ggcbb error ;_efgdff *_bb .PdfCrypt ;_cfdd *_bb .PdfObjectDictionary ;_bafbg *_bb .PdfIndirectObject ;_fggfg *_bb .PdfObjectArray ;_gecfd _bb .Version ;_aebec *bool ;
_aaccg map[_bb .PdfObject ][]*_bb .PdfObjectDictionary ;_agdgf *PdfAcroForm ;_bccad *Names ;_baafb Optimizer ;_ddfcc StandardApplier ;_gaded map[int ]crossReference ;_dacf int64 ;ObjNumOffset int ;_aedgc bool ;_dbgcc _bb .XrefTable ;_fedgb int64 ;_daabg int64 ;
_dcggdc map[_bb .PdfObject ]int64 ;_cgcfec map[_bb .PdfObject ]struct{};_gbeaf string ;_bebeg []*PdfOutputIntent ;_dddbg bool ;_eacbd ,_dedff string ;};

// ToPdfObject implements interface PdfModel.
func (_bfc *PdfActionImportData )ToPdfObject ()_bb .PdfObject {_bfc .PdfAction .ToPdfObject ();_efg :=_bfc ._dcc ;_afbg :=_efg .PdfObject .(*_bb .PdfObjectDictionary );_afbg .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeImportData )));if _bfc .F !=nil {_afbg .Set ("\u0046",_bfc .F .ToPdfObject ());
};return _efg ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bb .PdfObjectArray ;Domain *_bb .PdfObjectArray ;Function []PdfFunction ;Extend *_bb .PdfObjectArray ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_gdcda *PdfWriter )SetOpenAction (dest _bb .PdfObject )error {if dest ==nil ||_bb .IsNullObject (dest ){return nil ;};_gdcda ._ebgdb .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _gdcda .addObjects (dest );};func (_eeda *PdfReader )newPdfAnnotationFromIndirectObject (_feb *_bb .PdfIndirectObject )(*PdfAnnotation ,error ){_bbc ,_gbfa :=_feb .PdfObject .(*_bb .PdfObjectDictionary );
if !_gbfa {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_eeda ._geeca .GetModelFromPrimitive (_bbc );model !=nil {_dbefa ,_ddde :=model .(*PdfAnnotation );if !_ddde {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _dbefa ,nil ;};_ebg :=&PdfAnnotation {};_ebg ._aaf =_feb ;_eeda ._geeca .Register (_bbc ,_ebg );if _eag :=_bbc .Get ("\u0054\u0079\u0070\u0065");_eag !=nil {_edf ,_afbf :=_eag .(*_bb .PdfObjectName );if !_afbf {_gg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_eag );
}else {if *_edf !="\u0041\u006e\u006eo\u0074"{_gg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_edf );};};};if _fef :=_bbc .Get ("\u0052\u0065\u0063\u0074");
_fef !=nil {_ebg .Rect =_fef ;};if _adf :=_bbc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_adf !=nil {_ebg .Contents =_adf ;};if _bfe :=_bbc .Get ("\u0050");_bfe !=nil {_ebg .P =_bfe ;};if _eab :=_bbc .Get ("\u004e\u004d");_eab !=nil {_ebg .NM =_eab ;
};if _fca :=_bbc .Get ("\u004d");_fca !=nil {_ebg .M =_fca ;};if _bba :=_bbc .Get ("\u0046");_bba !=nil {_ebg .F =_bba ;};if _eef :=_bbc .Get ("\u0041\u0050");_eef !=nil {_ebg .AP =_eef ;};if _aagf :=_bbc .Get ("\u0041\u0053");_aagf !=nil {_ebg .AS =_aagf ;
};if _edeg :=_bbc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_edeg !=nil {_ebg .Border =_edeg ;};if _aba :=_bbc .Get ("\u0043");_aba !=nil {_ebg .C =_aba ;};if _gdae :=_bbc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_gdae !=nil {_ebg .StructParent =_gdae ;};if _bgad :=_bbc .Get ("\u004f\u0043");_bgad !=nil {_ebg .OC =_bgad ;};_faad :=_bbc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _faad ==nil {_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_ebg ._ff =nil ;return _ebg ,nil ;};_fdg ,_dggb :=_faad .(*_bb .PdfObjectName );if !_dggb {_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_faad );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_faad );};switch *_fdg {case "\u0054\u0065\u0078\u0074":_bfa ,_gdd :=_eeda .newPdfAnnotationTextFromDict (_bbc );
if _gdd !=nil {return nil ,_gdd ;};_bfa .PdfAnnotation =_ebg ;_ebg ._ff =_bfa ;return _ebg ,nil ;case "\u004c\u0069\u006e\u006b":_gbbb ,_adg :=_eeda .newPdfAnnotationLinkFromDict (_bbc );if _adg !=nil {return nil ,_adg ;};_gbbb .PdfAnnotation =_ebg ;_ebg ._ff =_gbbb ;
return _ebg ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bafb ,_dbbb :=_eeda .newPdfAnnotationFreeTextFromDict (_bbc );if _dbbb !=nil {return nil ,_dbbb ;};_bafb .PdfAnnotation =_ebg ;_ebg ._ff =_bafb ;return _ebg ,nil ;case "\u004c\u0069\u006e\u0065":_gcge ,_acg :=_eeda .newPdfAnnotationLineFromDict (_bbc );
if _acg !=nil {return nil ,_acg ;};_gcge .PdfAnnotation =_ebg ;_ebg ._ff =_gcge ;_gg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_ebg ,_ebg );
_gg .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_gcge ,_gcge );_gg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_gcge .PdfAnnotationMarkup ,_gcge .PdfAnnotationMarkup );
return _ebg ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bcb ,_eafa :=_eeda .newPdfAnnotationSquareFromDict (_bbc );if _eafa !=nil {return nil ,_eafa ;};_bcb .PdfAnnotation =_ebg ;_ebg ._ff =_bcb ;return _ebg ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_ccfd ,_eee :=_eeda .newPdfAnnotationCircleFromDict (_bbc );
if _eee !=nil {return nil ,_eee ;};_ccfd .PdfAnnotation =_ebg ;_ebg ._ff =_ccfd ;return _ebg ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cge ,_cfbgg :=_eeda .newPdfAnnotationPolygonFromDict (_bbc );if _cfbgg !=nil {return nil ,_cfbgg ;};_cge .PdfAnnotation =_ebg ;
_ebg ._ff =_cge ;return _ebg ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fgbc ,_bec :=_eeda .newPdfAnnotationPolyLineFromDict (_bbc );if _bec !=nil {return nil ,_bec ;};_fgbc .PdfAnnotation =_ebg ;_ebg ._ff =_fgbc ;return _ebg ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_fdae ,_dafd :=_eeda .newPdfAnnotationHighlightFromDict (_bbc );if _dafd !=nil {return nil ,_dafd ;};_fdae .PdfAnnotation =_ebg ;_ebg ._ff =_fdae ;return _ebg ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_bac ,_begb :=_eeda .newPdfAnnotationUnderlineFromDict (_bbc );
if _begb !=nil {return nil ,_begb ;};_bac .PdfAnnotation =_ebg ;_ebg ._ff =_bac ;return _ebg ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bfba ,_cbd :=_eeda .newPdfAnnotationSquigglyFromDict (_bbc );if _cbd !=nil {return nil ,_cbd ;};
_bfba .PdfAnnotation =_ebg ;_ebg ._ff =_bfba ;return _ebg ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bfd ,_cgb :=_eeda .newPdfAnnotationStrikeOut (_bbc );if _cgb !=nil {return nil ,_cgb ;};_bfd .PdfAnnotation =_ebg ;_ebg ._ff =_bfd ;return _ebg ,nil ;
case "\u0043\u0061\u0072e\u0074":_cad ,_fbga :=_eeda .newPdfAnnotationCaretFromDict (_bbc );if _fbga !=nil {return nil ,_fbga ;};_cad .PdfAnnotation =_ebg ;_ebg ._ff =_cad ;return _ebg ,nil ;case "\u0053\u0074\u0061m\u0070":_cbb ,_aca :=_eeda .newPdfAnnotationStampFromDict (_bbc );
if _aca !=nil {return nil ,_aca ;};_cbb .PdfAnnotation =_ebg ;_ebg ._ff =_cbb ;return _ebg ,nil ;case "\u0049\u006e\u006b":_feeb ,_cgg :=_eeda .newPdfAnnotationInkFromDict (_bbc );if _cgg !=nil {return nil ,_cgg ;};_feeb .PdfAnnotation =_ebg ;_ebg ._ff =_feeb ;
return _ebg ,nil ;case "\u0050\u006f\u0070u\u0070":_bggg ,_fag :=_eeda .newPdfAnnotationPopupFromDict (_bbc );if _fag !=nil {return nil ,_fag ;};_bggg .PdfAnnotation =_ebg ;_ebg ._ff =_bggg ;return _ebg ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_dbde ,_bgcf :=_eeda .newPdfAnnotationFileAttachmentFromDict (_bbc );
if _bgcf !=nil {return nil ,_bgcf ;};_dbde .PdfAnnotation =_ebg ;_ebg ._ff =_dbde ;return _ebg ,nil ;case "\u0053\u006f\u0075n\u0064":_cag ,_fgg :=_eeda .newPdfAnnotationSoundFromDict (_bbc );if _fgg !=nil {return nil ,_fgg ;};_cag .PdfAnnotation =_ebg ;
_ebg ._ff =_cag ;return _ebg ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bbdg ,_daa :=_eeda .newPdfAnnotationRichMediaFromDict (_bbc );if _daa !=nil {return nil ,_daa ;};_bbdg .PdfAnnotation =_ebg ;_ebg ._ff =_bbdg ;return _ebg ,nil ;case "\u004d\u006f\u0076i\u0065":_feag ,_bcc :=_eeda .newPdfAnnotationMovieFromDict (_bbc );
if _bcc !=nil {return nil ,_bcc ;};_feag .PdfAnnotation =_ebg ;_ebg ._ff =_feag ;return _ebg ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ddfe ,_dgef :=_eeda .newPdfAnnotationScreenFromDict (_bbc );if _dgef !=nil {return nil ,_dgef ;};_ddfe .PdfAnnotation =_ebg ;
_ebg ._ff =_ddfe ;return _ebg ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_cca ,_gee :=_eeda .newPdfAnnotationWidgetFromDict (_bbc );if _gee !=nil {return nil ,_gee ;};_cca .PdfAnnotation =_ebg ;_ebg ._ff =_cca ;return _ebg ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_cefg ,_ffg :=_eeda .newPdfAnnotationPrinterMarkFromDict (_bbc );
if _ffg !=nil {return nil ,_ffg ;};_cefg .PdfAnnotation =_ebg ;_ebg ._ff =_cefg ;return _ebg ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_bgac ,_afd :=_eeda .newPdfAnnotationTrapNetFromDict (_bbc );if _afd !=nil {return nil ,_afd ;};_bgac .PdfAnnotation =_ebg ;
_ebg ._ff =_bgac ;return _ebg ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ged ,_cga :=_eeda .newPdfAnnotationWatermarkFromDict (_bbc );if _cga !=nil {return nil ,_cga ;};_ged .PdfAnnotation =_ebg ;_ebg ._ff =_ged ;return _ebg ,nil ;case "\u0033\u0044":_febf ,_bda :=_eeda .newPdfAnnotation3DFromDict (_bbc );
if _bda !=nil {return nil ,_bda ;};_febf .PdfAnnotation =_ebg ;_ebg ._ff =_febf ;return _ebg ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_cfa ,_adgf :=_eeda .newPdfAnnotationProjectionFromDict (_bbc );if _adgf !=nil {return nil ,_adgf ;
};_cfa .PdfAnnotation =_ebg ;_ebg ._ff =_cfa ;return _ebg ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_geg ,_bcg :=_eeda .newPdfAnnotationRedactFromDict (_bbc );if _bcg !=nil {return nil ,_bcg ;};_geg .PdfAnnotation =_ebg ;_ebg ._ff =_geg ;return _ebg ,nil ;
};_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_fdg );return nil ,nil ;
};func (_ggba *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_gagbd *LTV )EnableByName (name string ,extraCerts []*_cd .Certificate )error {_abefd :=_gagbd ._abcbg ._aadf .AcroForm ;for _ ,_cefd :=range _abefd .AllFields (){_eadga ,_ :=_cefd .GetContext ().(*PdfFieldSignature );if _eadga ==nil {continue ;};
if _fdgcb :=_eadga .PartialName ();_fdgcb !=name {continue ;};return _gagbd .Enable (_eadga .V ,extraCerts );};return nil ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);var _adbef =false ;
var _ pdfFont =(*pdfFontSimple )(nil );func (_adcdd *PdfReader )resolveReference (_baeae *_bb .PdfObjectReference )(_bb .PdfObject ,bool ,error ){_ccfgd ,_ebae :=_adcdd ._cfaef .ObjCache [int (_baeae .ObjectNumber )];if !_ebae {_gg .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_baeae );
_fdddd ,_bfcbb :=_adcdd ._cfaef .LookupByReference (*_baeae );if _bfcbb !=nil {return nil ,false ,_bfcbb ;};_adcdd ._cfaef .ObjCache [int (_baeae .ObjectNumber )]=_fdddd ;return _fdddd ,false ,nil ;};return _ccfgd ,true ,nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_ddadb *PdfFieldButton )IsPush ()bool {return _ddadb .GetType ()==ButtonTypePush };func _fgggd (_abcfb *_bb .PdfIndirectObject )(*PdfOutline ,error ){_fdfdc ,_ccdge :=_abcfb .PdfObject .(*_bb .PdfObjectDictionary );if !_ccdge {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bbed :=NewPdfOutline ();if _baae :=_fdfdc .Get ("\u0054\u0079\u0070\u0065");_baae !=nil {_cdbg ,_afaf :=_baae .(*_bb .PdfObjectName );if _afaf {if *_cdbg !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_cdbg );
};};};if _eaffae :=_fdfdc .Get ("\u0043\u006f\u0075n\u0074");_eaffae !=nil {_gagaa ,_becbc :=_bb .GetNumberAsInt64 (_eaffae );if _becbc !=nil {return nil ,_becbc ;};_bbed .Count =&_gagaa ;};return _bbed ,nil ;};

// Y returns the value of the yellow component of the color.
func (_eagd *PdfColorDeviceCMYK )Y ()float64 {return _eagd [2]};func (_ecd *PdfReader )newPdfActionGoTo3DViewFromDict (_fad *_bb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_fad .Get ("\u0054\u0041"),V :_fad .Get ("\u0056")},nil ;
};func (_caba *PdfReader )newPdfAnnotationPolyLineFromDict (_babc *_bb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_dbg :=PdfAnnotationPolyLine {};_agcc ,_daaf :=_caba .newPdfAnnotationMarkupFromDict (_babc );if _daaf !=nil {return nil ,_daaf ;
};_dbg .PdfAnnotationMarkup =_agcc ;_dbg .Vertices =_babc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dbg .LE =_babc .Get ("\u004c\u0045");_dbg .BS =_babc .Get ("\u0042\u0053");_dbg .IC =_babc .Get ("\u0049\u0043");_dbg .BE =_babc .Get ("\u0042\u0045");
_dbg .IT =_babc .Get ("\u0049\u0054");_dbg .Measure =_babc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dbg ,nil ;};func (_abafb *PdfWriter )copyObject (_gdebgg _bb .PdfObject ,_ccddc map[_bb .PdfObject ]_bb .PdfObject ,_cecd map[_bb .PdfObject ]struct{},_eacga bool )_bb .PdfObject {_affcfd :=!_abafb ._aedgc &&_cecd !=nil ;
if _eaaca ,_dcbac :=_ccddc [_gdebgg ];_dcbac {if _affcfd &&!_eacga {delete (_cecd ,_gdebgg );};return _eaaca ;};if _gdebgg ==nil {_gdfdb :=_bb .MakeNull ();return _gdfdb ;};_bdgad :=_gdebgg ;switch _affgeb :=_gdebgg .(type ){case *_bb .PdfObjectArray :_egbae :=_bb .MakeArray ();
_bdgad =_egbae ;_ccddc [_gdebgg ]=_bdgad ;for _ ,_dgebd :=range _affgeb .Elements (){_egbae .Append (_abafb .copyObject (_dgebd ,_ccddc ,_cecd ,_eacga ));};case *_bb .PdfObjectStreams :_cbcag :=&_bb .PdfObjectStreams {PdfObjectReference :_affgeb .PdfObjectReference };
_bdgad =_cbcag ;_ccddc [_gdebgg ]=_bdgad ;for _ ,_gafeb :=range _affgeb .Elements (){_cbcag .Append (_abafb .copyObject (_gafeb ,_ccddc ,_cecd ,_eacga ));};case *_bb .PdfObjectStream :_bdabb :=&_bb .PdfObjectStream {Stream :_affgeb .Stream ,PdfObjectReference :_affgeb .PdfObjectReference ,Lazy :_affgeb .Lazy ,TempFile :_affgeb .TempFile };
_bdgad =_bdabb ;_ccddc [_gdebgg ]=_bdgad ;_bdabb .PdfObjectDictionary =_abafb .copyObject (_affgeb .PdfObjectDictionary ,_ccddc ,_cecd ,_eacga ).(*_bb .PdfObjectDictionary );case *_bb .PdfObjectDictionary :var _dedeb bool ;if _affcfd &&!_eacga {if _bgec ,_ :=_bb .GetNameVal (_affgeb .Get ("\u0054\u0079\u0070\u0065"));
_bgec =="\u0050\u0061\u0067\u0065"{_ ,_ddeeac :=_abafb ._eafc [_affgeb ];_eacga =!_ddeeac ;_dedeb =_eacga ;};};_cggcc :=_bb .MakeDict ();_bdgad =_cggcc ;_ccddc [_gdebgg ]=_bdgad ;for _ ,_bbgea :=range _affgeb .Keys (){_cggcc .Set (_bbgea ,_abafb .copyObject (_affgeb .Get (_bbgea ),_ccddc ,_cecd ,_eacga ));
};if _dedeb {_bdgad =_bb .MakeNull ();_eacga =false ;};case *_bb .PdfIndirectObject :_acgab :=&_bb .PdfIndirectObject {PdfObjectReference :_affgeb .PdfObjectReference };_bdgad =_acgab ;_ccddc [_gdebgg ]=_bdgad ;_acgab .PdfObject =_abafb .copyObject (_affgeb .PdfObject ,_ccddc ,_cecd ,_eacga );
case *_bb .PdfObjectString :_cfbba :=*_affgeb ;_bdgad =&_cfbba ;_ccddc [_gdebgg ]=_bdgad ;case *_bb .PdfObjectName :_eagcf :=*_affgeb ;_bdgad =&_eagcf ;_ccddc [_gdebgg ]=_bdgad ;case *_bb .PdfObjectNull :_bdgad =_bb .MakeNull ();_ccddc [_gdebgg ]=_bdgad ;
case *_bb .PdfObjectInteger :_cgedd :=*_affgeb ;_bdgad =&_cgedd ;_ccddc [_gdebgg ]=_bdgad ;case *_bb .PdfObjectReference :_eebgc :=*_affgeb ;_bdgad =&_eebgc ;_ccddc [_gdebgg ]=_bdgad ;case *_bb .PdfObjectFloat :_ggaee :=*_affgeb ;_bdgad =&_ggaee ;_ccddc [_gdebgg ]=_bdgad ;
case *_bb .PdfObjectBool :_daga :=*_affgeb ;_bdgad =&_daga ;_ccddc [_gdebgg ]=_bdgad ;case *pdfSignDictionary :_bgggf :=&pdfSignDictionary {PdfObjectDictionary :_bb .MakeDict (),_cefbf :_affgeb ._cefbf ,_febed :_affgeb ._febed };_bdgad =_bgggf ;_ccddc [_gdebgg ]=_bdgad ;
for _ ,_ecbega :=range _affgeb .Keys (){_bgggf .Set (_ecbega ,_abafb .copyObject (_affgeb .Get (_ecbega ),_ccddc ,_cecd ,_eacga ));};default:_gg .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gdebgg );
};if _affcfd &&_eacga {_cecd [_gdebgg ]=struct{}{};};return _bdgad ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_gbbcc *PdfReader )CheckAccessRights (password []byte )(bool ,_ba .Permissions ,error ){return _gbbcc ._cfaef .CheckAccessRights (password );};

// GetAttachedFiles retrieves all the attached files info and content.
func (_ebfgcf *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_fcfb ,_ageea :=_ebfgcf .GetNameDictionary ();if _ageea !=nil {return nil ,_ageea ;};_fbgda :=_bede (_fcfb );if _fbgda .EmbeddedFiles ==nil {return nil ,nil ;};_baebc :=_fbgda .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");
_gdgbb ,_egfbed :=_baebc .(*_bb .PdfObjectArray );if !_egfbed {return nil ,_ed .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_cadc :=[]*EmbeddedFile {};for _aegdd :=1;_aegdd < len (_gdgbb .Elements ());
_aegdd +=2{if _aegdd %2!=0{_edfd :=_gdgbb .Get (_aegdd );_dbced ,_dcgfd :=NewPdfFilespecFromObj (_edfd );if _dcgfd !=nil {return nil ,_dcgfd ;};_dfcde ,_dcgfd :=NewEmbeddedFileFromObject (_dbced .EF );if _dcgfd !=nil {return nil ,_dcgfd ;};_acfbc ,_ecdcg :=_dbced .F .(*_bb .PdfObjectString );
if _ecdcg {_dfcde .Name =_acfbc .Str ();};_dfcde .Description =_dbced .Desc .WriteString ();switch _dbced .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_dfcde .Relationship =RelationshipSource ;case "\u0044\u0061\u0074\u0061":_dfcde .Relationship =RelationshipData ;
case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_dfcde .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_dfcde .Relationship =RelationshipSupplement ;default:_dfcde .Relationship =RelationshipUnspecified ;
};_cadc =append (_cadc ,_dfcde );};};return _cadc ,nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_efee *PdfReader )GetNamedDestinations ()(_bb .PdfObject ,error ){_bcceg :=_bb .ResolveReference (_efee ._effcg .Get ("\u0044\u0065\u0073t\u0073"));if _bcceg ==nil {return nil ,nil ;};if !_efee ._becge {_agdbe :=_efee .traverseObjectData (_bcceg );
if _agdbe !=nil {return nil ,_agdbe ;};};return _bcceg ,nil ;};

// AddCerts adds certificates to DSS.
func (_bbge *DSS )AddCerts (certs [][]byte )([]*_bb .PdfObjectStream ,error ){return _bbge .add (&_bbge .Certs ,_bbge ._bfda ,certs );};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_daaba *PdfWriter )SetCatalogMetadata (meta _bb .PdfObject )error {if meta ==nil {_daaba ._ebgdb .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_ccdgfc ,_ccacf :=_bb .GetStream (meta );if !_ccacf {return _ed .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_daaba .addObject (_ccdgfc );_daaba ._ebgdb .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ccdgfc );return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_gbef *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggfd :=vals [0];if _ggfd < 0.0||_ggfd > 100.0{_gg .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ggfd );
return nil ,ErrColorOutOfRange ;};_cccg :=vals [1];_cece :=float64 (-100);_fdace :=float64 (100);if len (_gbef .Range )> 1{_cece =_gbef .Range [0];_fdace =_gbef .Range [1];};if _cccg < _cece ||_cccg > _fdace {_gg .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cccg ,_cece ,_fdace );
return nil ,ErrColorOutOfRange ;};_bffec :=vals [2];_efga :=float64 (-100);_fcga :=float64 (100);if len (_gbef .Range )> 3{_efga =_gbef .Range [2];_fcga =_gbef .Range [3];};if _bffec < _efga ||_bffec > _fcga {_gg .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bffec ,_efga ,_fcga );
return nil ,ErrColorOutOfRange ;};_efdg :=NewPdfColorLab (_ggfd ,_cccg ,_bffec );return _efdg ,nil ;};func _eege (_cdaf *_bb .PdfObjectDictionary ,_facag *fontCommon ,_aaee _ga .TextEncoder )(*pdfFontSimple ,error ){_cffgf :=_agec (_facag );_cffgf ._gfgb =_aaee ;
if _aaee ==nil {_eedfc :=_cdaf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _eedfc ==nil {_eedfc =_bb .MakeInteger (0);};_cffgf .FirstChar =_eedfc ;_bcgee ,_beeeg :=_bb .GetIntVal (_eedfc );if !_beeeg {_gg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eedfc );
return nil ,_bb .ErrTypeError ;};_bfbde :=_ga .CharCode (_bcgee );_eedfc =_cdaf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _eedfc ==nil {_eedfc =_bb .MakeInteger (255);};_cffgf .LastChar =_eedfc ;_bcgee ,_beeeg =_bb .GetIntVal (_eedfc );
if !_beeeg {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_eedfc );return nil ,_bb .ErrTypeError ;
};_ggfec :=_ga .CharCode (_bcgee );_cffgf ._cbgg =make (map[_ga .CharCode ]float64 );_eedfc =_cdaf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _eedfc !=nil {_cffgf .Widths =_eedfc ;_cfdbb ,_bbaea :=_bb .GetArray (_eedfc );if !_bbaea {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_eedfc );
return nil ,_bb .ErrTypeError ;};_fbedf ,_bccgc :=_cfdbb .ToFloat64Array ();if _bccgc !=nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bccgc ;};if len (_fbedf )!=int (_ggfec -_bfbde +1){_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ggfec -_bfbde +1,len (_fbedf ));
return nil ,_bb .ErrRangeError ;};for _geggad ,_bfacb :=range _fbedf {_cffgf ._cbgg [_bfbde +_ga .CharCode (_geggad )]=_bfacb ;};};};_cffgf .Encoding =_bb .TraceToDirectObject (_cdaf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cffgf ,nil ;
};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_bc :=NewPdfAction ();_aef :=&PdfActionRendition {};_aef .PdfAction =_bc ;_bc .SetContext (_aef );return _aef ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_gbdbb .Lock ();defer _gbdbb .Unlock ();_faaaf =subject };

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ccecd *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ccecd .AlternateSpace ==nil {return nil ,_ed .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ccecd .AlternateSpace .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_fedbe *EmbeddedFile )ToPdfObject ()_bb .PdfObject {_cddc :=_bb .NewFlateEncoder ();_aega ,_cffa :=_bb .MakeStream (_fedbe .Content ,_cddc );if _cffa !=nil {_gg .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cffa );
return nil ;};_egfg :=_aega .PdfObjectDictionary ;_egfg .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_egfg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_gbbge :=_bb .MakeDict ();_gbbge .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_bb .MakeString (_fedbe .Hash [:]));_gbbge .Set ("\u0053\u0069\u007a\u0065",_bb .MakeInteger (int64 (len (_fedbe .Content ))));_dfgde :=_fedbe .CreationTime ;if _dfgde .IsZero (){_dfgde =_fb .Now ();
};_bdag :=_fedbe .ModTime ;if _bdag .IsZero (){_bdag =_dfgde ;};_cdbbg ,_cffa :=NewPdfDateFromTime (_dfgde );if _cffa !=nil {_gg .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_cffa );
return nil ;};_gggca ,_cffa :=NewPdfDateFromTime (_bdag );if _cffa !=nil {_gg .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_cffa );
return nil ;};_gbbge .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cdbbg .ToPdfObject ());_gbbge .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gggca .ToPdfObject ());_egfg .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_gbbge );
_fecfg :=_bb .MakeDict ();_fecfg .Set (*_bb .MakeName ("\u0046"),_aega );return _fecfg ;};func (_ccbbb *PdfReader )flattenFieldsWithOpts (_bgd bool ,_affd FieldAppearanceGenerator ,_gegdd *FieldFlattenOpts )error {if _gegdd ==nil {_gegdd =&FieldFlattenOpts {};
};var _bffb bool ;_eefe :=map[*PdfAnnotation ]bool {};{var _dcfe []*PdfField ;_daef :=_ccbbb .AcroForm ;if _daef !=nil {if _gegdd .FilterFunc !=nil {_dcfe =_daef .filteredFields (_gegdd .FilterFunc ,true );_bffb =_daef .Fields !=nil &&len (*_daef .Fields )> 0;
}else {_dcfe =_daef .AllFields ();};};for _ ,_ddbcb :=range _dcfe {if len (_ddbcb .Annotations )< 1{_gg .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_ddbcb .PartialName ());
for _edcd ,_feeeb :=range _ddbcb .Kids {for _ ,_acag :=range _feeeb .Annotations {_eefe [_acag .PdfAnnotation ]=_ddbcb .V !=nil ;if _feeeb .V ==nil {_feeeb .V =_ddbcb .V ;};if _feeeb .T ==nil {_feeeb .T =_bb .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_ddbcb .PartialName (),_edcd ));
};if _affd !=nil {_gdfe ,_eeae :=_affd .GenerateAppearanceDict (_daef ,_feeeb ,_acag );if _eeae !=nil {return _eeae ;};_acag .AP =_gdfe ;};};};};for _ ,_agbfe :=range _ddbcb .Annotations {_eefe [_agbfe .PdfAnnotation ]=_ddbcb .V !=nil ;if _affd !=nil {_dbbgff ,_fdafd :=_affd .GenerateAppearanceDict (_daef ,_ddbcb ,_agbfe );
if _fdafd !=nil {return _fdafd ;};_agbfe .AP =_dbbgff ;};};};};if _bgd {for _ ,_gfef :=range _ccbbb .PageList {_gbaf ,_bffa :=_gfef .GetAnnotations ();if _bffa !=nil {return _bffa ;};for _ ,_gbggb :=range _gbaf {_eefe [_gbggb ]=true ;};};};for _ ,_eeegd :=range _ccbbb .PageList {_fgce :=_eeegd .flattenFieldsWithOpts (_affd ,_gegdd ,_eefe );
if _fgce !=nil {return _fgce ;};};if !_bffb {_ccbbb .AcroForm =nil ;};return nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_dcde FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_dcde .Mask ()|fl .Mask ())};func (_fdcaa SignatureValidationResult )String ()string {var _eafge _aa .Buffer ;_eafge .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_fdcaa .Name ));
if _fdcaa .Date ._cacfc > 0{_eafge .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_fdcaa .Date .ToGoTime ().String ()));}else {_eafge .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_fdcaa .Reason )> 0{_eafge .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fdcaa .Reason ));}else {_eafge .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_fdcaa .Location )> 0{_eafge .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fdcaa .Location ));}else {_eafge .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_fdcaa .ContactInfo )> 0{_eafge .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_fdcaa .ContactInfo ));}else {_eafge .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_eafge .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_fdcaa .Fields )));if _fdcaa .IsSigned {_eafge .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_eafge .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _fdcaa .IsVerified {_eafge .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_eafge .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _fdcaa .IsTrusted {_eafge .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_eafge .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_fdcaa .GeneralizedTime .IsZero (){_eafge .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_fdcaa .GeneralizedTime .String ()));
};if _fdcaa .DiffResults !=nil {_eafge .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_fdcaa .DiffResults .IsPermitted ()));if len (_fdcaa .DiffResults .Warnings )> 0{_eafge .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_edaga :=range _fdcaa .DiffResults .Warnings {_eafge .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_edaga ));};};if len (_fdcaa .DiffResults .Errors )> 0{_eafge .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_cccca :=range _fdcaa .DiffResults .Errors {_eafge .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_cccca ));};};};if _fdcaa .IsCrlFound {_eafge .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_eafge .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _fdcaa .IsOcspFound {_eafge .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_eafge .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _eafge .String ();};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cgef pdfFontType0 )GetCharMetrics (code _ga .CharCode )(_dcg .CharMetrics ,bool ){if _cgef .DescendantFont ==nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cgef );
return _dcg .CharMetrics {},false ;};return _cgef .DescendantFont .GetCharMetrics (code );};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_fdedc *Image )ToJBIG2Image ()(*_bb .JBIG2Image ,error ){_agcbd ,_gfged :=_fdedc .ToGoImage ();if _gfged !=nil {return nil ,_gfged ;};return _bb .GoImageToJBIG2 (_agcbd ,_bb .JB2ImageAutoThreshold );};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_cfef *PdfPage )Size ()(float64 ,float64 ,error ){_beed ,_ccage :=_cfef .GetMediaBox ();if _ccage !=nil {return 0,0,_ccage ;};_aecgb ,_gfbfa :=_beed .Width (),_beed .Height ();_bcced ,_ccage :=_cfef .GetRotate ();if _ccage !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_ccage .Error ());
};if _dbca :=_bcced ;_dbca %360!=0&&_dbca %90==0{if _gdfacc :=(360+_dbca %360)%360;_gdfacc ==90||_gdfacc ==270{_aecgb ,_gfbfa =_gfbfa ,_aecgb ;};};return _aecgb ,_gfbfa ,nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_adfa *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ga .CharCode )(_ccbg []rune ,_egdfa ,_egdag int ){_gbfga ,_egdfa ,_egdag :=_adfa .CharcodesToStrings (charcodes ,"");return []rune (_dce .Join (_gbfga ,"")),_egdfa ,_egdag ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bb .PdfObjectArray ;_aegba *Image ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_gdge *BorderStyle )GetPdfName ()string {switch *_gdge {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// ToPdfObject implements interface PdfModel.
func (_bacf *PdfAnnotationPolyLine )ToPdfObject ()_bb .PdfObject {_bacf .PdfAnnotation .ToPdfObject ();_acce :=_bacf ._aaf ;_eged :=_acce .PdfObject .(*_bb .PdfObjectDictionary );_bacf .PdfAnnotationMarkup .appendToPdfDictionary (_eged );_eged .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_eged .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bacf .Vertices );_eged .SetIfNotNil ("\u004c\u0045",_bacf .LE );_eged .SetIfNotNil ("\u0042\u0053",_bacf .BS );_eged .SetIfNotNil ("\u0049\u0043",_bacf .IC );_eged .SetIfNotNil ("\u0042\u0045",_bacf .BE );
_eged .SetIfNotNil ("\u0049\u0054",_bacf .IT );_eged .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bacf .Measure );return _acce ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_gde :=NewPdfAnnotation ();_ded :=&PdfAnnotationFreeText {};_ded .PdfAnnotation =_gde ;_ded .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gde .SetContext (_ded );return _ded ;};

// ToPdfObject returns the PDF representation of the function.
func (_aadad *PdfFunctionType2 )ToPdfObject ()_bb .PdfObject {_dgffcf :=_bb .MakeDict ();_dgffcf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (2));_ffbgd :=&_bb .PdfObjectArray {};for _ ,_egfbc :=range _aadad .Domain {_ffbgd .Append (_bb .MakeFloat (_egfbc ));
};_dgffcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ffbgd );if _aadad .Range !=nil {_fcda :=&_bb .PdfObjectArray {};for _ ,_fbadf :=range _aadad .Range {_fcda .Append (_bb .MakeFloat (_fbadf ));};_dgffcf .Set ("\u0052\u0061\u006eg\u0065",_fcda );};
if _aadad .C0 !=nil {_bdcdeg :=&_bb .PdfObjectArray {};for _ ,_egdgda :=range _aadad .C0 {_bdcdeg .Append (_bb .MakeFloat (_egdgda ));};_dgffcf .Set ("\u0043\u0030",_bdcdeg );};if _aadad .C1 !=nil {_cded :=&_bb .PdfObjectArray {};for _ ,_abfaa :=range _aadad .C1 {_cded .Append (_bb .MakeFloat (_abfaa ));
};_dgffcf .Set ("\u0043\u0031",_cded );};_dgffcf .Set ("\u004e",_bb .MakeFloat (_aadad .N ));if _aadad ._agafc !=nil {_aadad ._agafc .PdfObject =_dgffcf ;return _aadad ._agafc ;};return _dgffcf ;};func (_gfdef *Names )addEmbeddedFile (_aeed *EmbeddedFile )error {if _gfdef .EmbeddedFiles ==nil {_gfdef .EmbeddedFiles =_bb .MakeDict ();
_gfdef .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_bb .MakeArray ());};_gbbfc :=NewPdfFileSpecFromEmbeddedFile (_aeed );_bcab :=_gfdef .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_ebcfa ,_eabe :=_bcab .(*_bb .PdfObjectArray );if !_eabe {return _ed .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_efffg string ;_ceeca *PdfFilespec ;};_acdfg :=[]FileSpecMap {};for _fcff :=0;_fcff < len (_ebcfa .Elements ());_fcff +=2{if _fcff %2==0{_deae :=_ebcfa .Get (_fcff );if _deae !=nil {_bcad :=_deae .(*_bb .PdfObjectString );_dagg :=_ebcfa .Get (_fcff +1);
_dbcgf ,_abaeg :=NewPdfFilespecFromObj (_dagg );if _abaeg !=nil {return _abaeg ;};_acdfg =append (_acdfg ,FileSpecMap {_efffg :_bcad .String (),_ceeca :_dbcgf });};};};_acdfg =append (_acdfg ,FileSpecMap {_efffg :_aeed .Name ,_ceeca :_gbbfc });_cc .Slice (_acdfg ,func (_ffbc ,_cfbda int )bool {return _acdfg [_ffbc ]._efffg < _acdfg [_cfbda ]._efffg });
_ebcfa =_bb .MakeArray ();for _ ,_dedeef :=range _acdfg {_ebcfa .Append (_bb .MakeString (_dedeef ._efffg ));_ebcfa .Append (_dedeef ._ceeca .ToPdfObject ());};_gfdef .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_ebcfa );return nil ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_cafdf *PdfOutputIntent )ParsePdfObject (object _bb .PdfObject )error {_gbace ,_aeacf :=_bb .GetDict (object );if !_aeacf {_gg .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ed .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_cafdf ._cfede =_gbace ;_cafdf .Type ,_ =_gbace .GetString ("\u0054\u0079\u0070\u0065");_cgecd ,_aeacf :=_gbace .GetString ("\u0053");if _aeacf {switch _cgecd {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_cafdf .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_cafdf .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_cafdf .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_cafdf .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_cafdf .S =PdfOutputIntentTypeX ;
};};_cafdf .OutputCondition ,_ =_gbace .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_cafdf .OutputConditionIdentifier ,_ =_gbace .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_cafdf .RegistryName ,_ =_gbace .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_cafdf .Info ,_ =_gbace .GetString ("\u0049\u006e\u0066\u006f");if _cgbaab ,_eaaf :=_bb .GetStream (_gbace .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_eaaf {_cafdf .ColorComponents ,_ =_bb .GetIntVal (_cgbaab .Get ("\u004e"));_cfeca ,_cdaec :=_bb .DecodeStream (_cgbaab );if _cdaec !=nil {return _cdaec ;};_cafdf .DestOutputProfile =_cfeca ;};return nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bb .PdfObject ;Open _bb .PdfObject ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_fedc *PdfPageResources )GetXObjectFormByName (keyName _bb .PdfObjectName )(*XObjectForm ,error ){_bbcgd ,_cfcf :=_fedc .GetXObjectByName (keyName );if _bbcgd ==nil {return nil ,nil ;};if _cfcf !=XObjectTypeForm {return nil ,_ed .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_bgage ,_fefbg :=NewXObjectFormFromStream (_bbcgd );if _fefbg !=nil {return nil ,_fefbg ;};return _bgage ,nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bdefg *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdcg ,_bdac :=color .(*PdfColorCalGray );if !_bdac {_gg .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_cdcg .Val ();X :=_bdefg .WhitePoint [0]*_bdd .Pow (ANorm ,_bdefg .Gamma );Y :=_bdefg .WhitePoint [1]*_bdd .Pow (ANorm ,_bdefg .Gamma );
Z :=_bdefg .WhitePoint [2]*_bdd .Pow (ANorm ,_bdefg .Gamma );_fdec :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ecc :=-0.969256*X +1.875992*Y +0.041556*Z ;_cfee :=0.055648*X +-0.204043*Y +1.057311*Z ;_fdec =_bdd .Min (_bdd .Max (_fdec ,0),1.0);_ecc =_bdd .Min (_bdd .Max (_ecc ,0),1.0);
_cfee =_bdd .Min (_bdd .Max (_cfee ,0),1.0);return NewPdfColorDeviceRGB (_fdec ,_ecc ,_cfee ),nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_baac []byte ;_debdd []uint32 ;_agdc *_bb .PdfObjectStream ;};func _dgdaa (_gacb *_bb .PdfObjectDictionary )bool {for _ ,_caab :=range _gacb .Keys (){if _ ,_dfaeg :=_bgfa [_caab .String ()];
_dfaeg {return true ;};};return false ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_eedcg *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_eedcg .GetNumComponents (){return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbc ,_ddeg :=_eedcg .TintTransform .Evaluate (vals );
if _ddeg !=nil {return nil ,_ddeg ;};_dfdf ,_ddeg :=_eedcg .AlternateSpace .ColorFromFloats (_bcbc );if _ddeg !=nil {return nil ,_ddeg ;};return _dfdf ,nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_dgged *PdfField )SetContext (ctx PdfModel ){_dgged ._babcg =ctx };

// ToPdfObject returns the PDF representation of the function.
func (_befd *PdfFunctionType4 )ToPdfObject ()_bb .PdfObject {_cgcg :=_befd ._fabdb ;if _cgcg ==nil {_befd ._fabdb =&_bb .PdfObjectStream {};_cgcg =_befd ._fabdb ;};_bffae :=_bb .MakeDict ();_bffae .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (4));
_eedad :=&_bb .PdfObjectArray {};for _ ,_aecgf :=range _befd .Domain {_eedad .Append (_bb .MakeFloat (_aecgf ));};_bffae .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eedad );_faac :=&_bb .PdfObjectArray {};for _ ,_fccgd :=range _befd .Range {_faac .Append (_bb .MakeFloat (_fccgd ));
};_bffae .Set ("\u0052\u0061\u006eg\u0065",_faac );if _befd ._eafbd ==nil &&_befd .Program !=nil {_befd ._eafbd =[]byte (_befd .Program .String ());};_bffae .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_befd ._eafbd ))));_cgcg .Stream =_befd ._eafbd ;
_cgcg .PdfObjectDictionary =_bffae ;return _cgcg ;};

// ToPdfObject implements interface PdfModel.
func (_adaf *PdfActionRendition )ToPdfObject ()_bb .PdfObject {_adaf .PdfAction .ToPdfObject ();_bbf :=_adaf ._dcc ;_dgda :=_bbf .PdfObject .(*_bb .PdfObjectDictionary );_dgda .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeRendition )));_dgda .SetIfNotNil ("\u0052",_adaf .R );
_dgda .SetIfNotNil ("\u0041\u004e",_adaf .AN );_dgda .SetIfNotNil ("\u004f\u0050",_adaf .OP );_dgda .SetIfNotNil ("\u004a\u0053",_adaf .JS );return _bbf ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;type modelManager struct{_fdgab map[PdfModel ]_bb .PdfObject ;_dffg map[_bb .PdfObject ]PdfModel ;};func (_bagbe *PdfReader )loadAnnotations (_acbfb _bb .PdfObject )([]*PdfAnnotation ,error ){_effd ,_gfbff :=_bb .GetArray (_acbfb );
if !_gfbff {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _fgggf []*PdfAnnotation ;for _ ,_ecggb :=range _effd .Elements (){_ecggb =_bb .ResolveReference (_ecggb );
if _ ,_fgdbf :=_ecggb .(*_bb .PdfObjectNull );_fgdbf {continue ;};_cgdge ,_ggafa :=_ecggb .(*_bb .PdfObjectDictionary );_aggef ,_gabe :=_ecggb .(*_bb .PdfIndirectObject );if _ggafa {_aggef =&_bb .PdfIndirectObject {};_aggef .PdfObject =_cgdge ;}else {if !_gabe {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_cadga ,_dcegg :=_bagbe .newPdfAnnotationFromIndirectObject (_aggef );if _dcegg !=nil {return nil ,_dcegg ;};switch _geebe :=_cadga .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_eagde :=range _bagbe .AcroForm .AllFields (){if _eagde ._afbea ==_geebe .Parent {_geebe ._dbef =_eagde ;
break ;};};};if _cadga !=nil {_fgggf =append (_fgggf ,_cadga );};};return _fgggf ,nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bb .PdfObject ;Sy _bb .PdfObject ;};type pdfCIDFontType2 struct{fontCommon ;_dgffc *_bb .PdfIndirectObject ;_aeggf _ga .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bb .PdfObject ;W _bb .PdfObject ;DW2 _bb .PdfObject ;W2 _bb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bb .PdfObject ;_fdedf map[_ga .CharCode ]float64 ;_ddda float64 ;_cgee map[rune ]int ;};

// Subtype returns the font's "Subtype" field.
func (_bgfaa *PdfFont )Subtype ()string {_debf :=_bgfaa .baseFields ()._ecdc ;if _debaf ,_cafc :=_bgfaa ._gbagg .(*pdfFontType0 );_cafc {_debf =_debf +"\u003a"+_debaf .DescendantFont .Subtype ();};return _debf ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_gegdb *PdfPage )GetPageAsIndirectObject ()*_bb .PdfIndirectObject {return _gegdb ._beaf };

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_df :=NewPdfAction ();_debb :=&PdfActionResetForm {};_debb .PdfAction =_df ;_df .SetContext (_debb );return _debb ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_fecaf *PdfReader )GetTrailer ()(*_bb .PdfObjectDictionary ,error ){_bgdcd :=_fecaf ._cfaef .GetTrailer ();if _bgdcd ==nil {return nil ,_ed .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _bgdcd ,nil ;
};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};func (_bdfgg fontCommon )fontFlags ()int {if _bdfgg ._eadda ==nil {return 0;};return _bdfgg ._eadda ._ebgfe ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_afe :=NewPdfAnnotation ();_cdba :=&PdfAnnotationTrapNet {};_cdba .PdfAnnotation =_afe ;_afe .SetContext (_cdba );return _cdba ;};func _dbfe (_fdbeg _bb .PdfObject ,_acab *PdfReader )(*OutlineDest ,error ){_gcab ,_cbbabf :=_bb .GetArray (_fdbeg );
if !_cbbabf {return nil ,_ed .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_dbbd :=_gcab .Len ();if _dbbd < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_dbbd );
};_cecbf :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_cdfdb :=_gcab .Get (0);if _dcgac ,_gagd :=_bb .GetIndirect (_cdfdb );_gagd {if _ ,_degbc ,_gefggb :=_acab .PageFromIndirectObject (_dcgac );_gefggb ==nil {_cecbf .Page =int64 (_degbc -1);}else {_gg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_dcgac );
};_cecbf .PageObj =_dcgac ;}else if _fdaad ,_gccag :=_bb .GetIntVal (_cdfdb );_gccag {if _fdaad >=0&&_fdaad < len (_acab .PageList ){_cecbf .PageObj =_acab .PageList [_fdaad ].GetPageAsIndirectObject ();}else {_gg .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_fdaad );
};_cecbf .Page =int64 (_fdaad );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_cdfdb );};_caac ,_cbbabf :=_bb .GetNameVal (_gcab .Get (1));
if !_cbbabf {_gg .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gcab .Get (1));
return _cecbf ,nil ;};switch _caac {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _dbbd > 2{_cecbf .Y ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_gcab .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _dbbd > 2{_cecbf .X ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_gcab .Get (2)));
};case "\u0058\u0059\u005a":if _dbbd > 4{_cecbf .X ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_gcab .Get (2)));_cecbf .Y ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_gcab .Get (3)));_cecbf .Zoom ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_gcab .Get (4)));
};default:_caac ="\u0046\u0069\u0074";};_cecbf .Mode =_caac ;return _cecbf ,nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cfe :=NewPdfAnnotation ();_ebc :=&PdfAnnotationPolygon {};_ebc .PdfAnnotation =_cfe ;_ebc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfe .SetContext (_ebc );return _ebc ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ddeea ,_fbbg :=_dcg .NewStdFontByName (HelveticaName );if !_fbbg {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_gceaf :=_fcgdc (_ddeea );return &PdfFont {_gbagg :&_gceaf };};func (_eeagc *Image )samplesTrimPadding (_ebgg []uint32 )[]uint32 {_cagga :=_eeagc .ColorComponents *int (_eeagc .Width )*int (_eeagc .Height );if len (_ebgg )==_cagga {return _ebgg ;};_bfdg :=make ([]uint32 ,_cagga );
_cbafe :=int (_eeagc .Width )*_eeagc .ColorComponents ;var _gacfe ,_afbfef ,_ffcbf ,_afbbe int ;_ggeae :=_gdf .BytesPerLine (int (_eeagc .Width ),int (_eeagc .BitsPerComponent ),_eeagc .ColorComponents );for _gacfe =0;_gacfe < int (_eeagc .Height );_gacfe ++{_afbfef =_gacfe *int (_eeagc .Width );
_ffcbf =_gacfe *_ggeae ;for _afbbe =0;_afbbe < _cbafe ;_afbbe ++{_bfdg [_afbfef +_afbbe ]=_ebgg [_ffcbf +_afbbe ];};};return _bfdg ;};

// ToPdfObject implements interface PdfModel.
func (_aedce *PdfSignature )ToPdfObject ()_bb .PdfObject {_cbdaef :=_aedce ._ggaed ;var _gacbb *_bb .PdfObjectDictionary ;if _gbadc ,_bcdcf :=_cbdaef .PdfObject .(*pdfSignDictionary );_bcdcf {_gacbb =_gbadc .PdfObjectDictionary ;}else {_gacbb =_cbdaef .PdfObject .(*_bb .PdfObjectDictionary );
};_gacbb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_aedce .Type );_gacbb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_aedce .Filter );_gacbb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_aedce .SubFilter );_gacbb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_aedce .ByteRange );
_gacbb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aedce .Contents );_gacbb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_aedce .Cert );_gacbb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aedce .Name );_gacbb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_aedce .Reason );
_gacbb .SetIfNotNil ("\u004d",_aedce .M );_gacbb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_aedce .Reference );_gacbb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_aedce .Changes );_gacbb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_aedce .ContactInfo );
return _cbdaef ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_bag .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_bag .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_bag .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_abcbg *PdfAppender ;_ebfa *DSS ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_afg PdfModel ;Type _bb .PdfObject ;S _bb .PdfObject ;Next _bb .PdfObject ;_dcc *_bb .PdfIndirectObject ;};func (_gfacgg *LTV )enable (_dcgdg ,_bcca []*_cd .Certificate ,_eefde string )error {_aafb ,_cgaf ,_eagaf :=_gfacgg .buildCertChain (_dcgdg ,_bcca );
if _eagaf !=nil {return _eagaf ;};_afabg ,_eagaf :=_gfacgg .getCerts (_aafb );if _eagaf !=nil {return _eagaf ;};var _agdg ,_ffbd [][]byte ;if _gfacgg .OCSPClient !=nil {_agdg ,_eagaf =_gfacgg .getOCSPs (_aafb ,_cgaf );if _eagaf !=nil {return _eagaf ;};
};if _gfacgg .CRLClient !=nil {_ffbd ,_eagaf =_gfacgg .getCRLs (_aafb );if _eagaf !=nil {return _eagaf ;};};_cggbd :=_gfacgg ._ebfa ;_cdbc ,_eagaf :=_cggbd .AddCerts (_afabg );if _eagaf !=nil {return _eagaf ;};_ceafc ,_eagaf :=_cggbd .AddOCSPs (_agdg );
if _eagaf !=nil {return _eagaf ;};_debfc ,_eagaf :=_cggbd .AddCRLs (_ffbd );if _eagaf !=nil {return _eagaf ;};if _eefde !=""{_cggbd .VRI [_eefde ]=&VRI {Cert :_cdbc ,OCSP :_ceafc ,CRL :_debfc };};_gfacgg ._abcbg .SetDSS (_cggbd );return nil ;};func (_afc *PdfReader )newPdfActionSetOCGStateFromDict (_efd *_bb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_efd .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_efd .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};func _gbccc ()string {_gbdbb .Lock ();defer _gbdbb .Unlock ();return _faaaf };func (_afbfe *pdfFontType3 )baseFields ()*fontCommon {return &_afbfe .fontCommon };

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_agag *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gccf *PdfShadingPattern )ToPdfObject ()_bb .PdfObject {_gccf .PdfPattern .ToPdfObject ();_bdad :=_gccf .getDict ();if _gccf .Shading !=nil {_bdad .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gccf .Shading .ToPdfObject ());};if _gccf .Matrix !=nil {_bdad .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gccf .Matrix );
};if _gccf .ExtGState !=nil {_bdad .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gccf .ExtGState );};return _gccf ._aeff ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_ggfa *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ed .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_eecc :=field .V ;if _eecc ==nil {return _ed .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_ecbd :=pageNum -1;
if _ecbd < 0||_ecbd > len (_ggfa ._baef )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_dbge :=_ggfa .Reader .PageList [_ecbd ];field .P =_dbge .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bb .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_dbge .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _ggfa ._gbfg ==_ggfa ._aadf .AcroForm {_ggfa ._gbfg =_ggfa .Reader .AcroForm ;};_agbf :=_ggfa ._gbfg ;if _agbf ==nil {_agbf =NewPdfAcroForm ();};_agbf .SigFlags =_bb .MakeInteger (3);
if _agbf .NeedAppearances !=nil {_agbf .NeedAppearances =nil ;};_eddg :=append (_agbf .AllFields (),field .PdfField );_agbf .Fields =&_eddg ;_ggfa .ReplaceAcroForm (_agbf );_ggfa .UpdatePage (_dbge );_ggfa ._baef [_ecbd ]=_dbge ;if _ ,_eebg :=field .V .GetDocMDPPermission ();
_eebg {_ggfa ._cecbd =NewPermissions (field .V );};return nil ;};type pdfFontType0 struct{fontCommon ;_adea *_bb .PdfIndirectObject ;_fbfad _ga .TextEncoder ;Encoding _bb .PdfObject ;DescendantFont *PdfFont ;_dcfda *_af .CMap ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bb .PdfObjectString ;Q *_bb .PdfObjectInteger ;DS *_bb .PdfObjectString ;RV _bb .PdfObject ;MaxLen *_bb .PdfObjectInteger ;};func (_afcdc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_abddf :=PdfWriter {};_abddf ._bfdb =map[_bb .PdfObject ]struct{}{};_abddf ._cgfff =[]_bb .PdfObject {};_abddf ._aaccg =map[_bb .PdfObject ][]*_bb .PdfObjectDictionary {};_abddf ._cgcfec =map[_bb .PdfObject ]struct{}{};_abddf ._gecfd .Major =1;
_abddf ._gecfd .Minor =3;_dggeg :=_bb .MakeDict ();_dfcee :=[]struct{_aagbd _bb .PdfObjectName ;_dgacd string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_deaee ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cbdcf ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_cadee ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_gbccc ()},{"\u0054\u0069\u0074l\u0065",_dbcfd ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gbfcd ()}};
for _ ,_aeaed :=range _dfcee {if _aeaed ._dgacd !=""{_dggeg .Set (_aeaed ._aagbd ,_bb .MakeString (_aeaed ._dgacd ));};};if _cagbg :=_adae ();!_cagbg .IsZero (){if _afcg ,_efgcg :=NewPdfDateFromTime (_cagbg );_efgcg ==nil {_dggeg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_afcg .ToPdfObject ());
};};if _feaaf :=_eggde ();!_feaaf .IsZero (){if _cacbg ,_cgega :=NewPdfDateFromTime (_feaaf );_cgega ==nil {_dggeg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_cacbg .ToPdfObject ());};};_aebecd :=_bb .PdfIndirectObject {};_aebecd .PdfObject =_dggeg ;
_abddf ._gefda =&_aebecd ;_abddf .addObject (&_aebecd );_debab :=_bb .PdfIndirectObject {};_aeaff :=_bb .MakeDict ();_aeaff .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_debab .PdfObject =_aeaff ;_abddf ._eecbb =&_debab ;
_abddf .addObject (_abddf ._eecbb );_gggdc ,_ggafc :=_bdeba ("\u0077");if _ggafc !=nil {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggafc );};_abddf ._gbeaf =_gggdc ;_cabddb :=_bb .PdfIndirectObject {};_eagca :=_bb .MakeDict ();_eagca .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0050\u0061\u0067e\u0073"));
_fcccd :=_bb .PdfObjectArray {};_eagca .Set ("\u004b\u0069\u0064\u0073",&_fcccd );_eagca .Set ("\u0043\u006f\u0075n\u0074",_bb .MakeInteger (0));_cabddb .PdfObject =_eagca ;_abddf ._faebd =&_cabddb ;_abddf ._eafc =map[_bb .PdfObject ]struct{}{};_abddf .addObject (_abddf ._faebd );
_aeaff .Set ("\u0050\u0061\u0067e\u0073",&_cabddb );_abddf ._ebgdb =_aeaff ;_gg .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_debab );return _abddf ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ada *PdfAction )GetContainingPdfObject ()_bb .PdfObject {return _ada ._dcc };

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_gaacd *PdfWriter )ApplyStandard (optimizer StandardApplier ){_gaacd ._ddfcc =optimizer };func (_dfab *PdfReader )newPdfAnnotationInkFromDict (_eea *_bb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_cec :=PdfAnnotationInk {};_fcg ,_dfgd :=_dfab .newPdfAnnotationMarkupFromDict (_eea );
if _dfgd !=nil {return nil ,_dfgd ;};_cec .PdfAnnotationMarkup =_fcg ;_cec .InkList =_eea .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_cec .BS =_eea .Get ("\u0042\u0053");return &_cec ,nil ;};func (_ebeda *PdfReader )lookupPageByObject (_fbcdc _bb .PdfObject )(*PdfPage ,error ){return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_eced :=NewPdfAnnotation ();_ebb :=&PdfAnnotationStamp {};_ebb .PdfAnnotation =_eced ;_ebb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eced .SetContext (_ebb );return _ebb ;};func (_bagfa *PdfReader )buildOutlineTree (_abbff _bb .PdfObject ,_caaaa *PdfOutlineTreeNode ,_ggffa *PdfOutlineTreeNode ,_gaaf map[_bb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gaaf ==nil {_gaaf =map[_bb .PdfObject ]struct{}{};
};_gaaf [_abbff ]=struct{}{};_afgdc ,_cecga :=_abbff .(*_bb .PdfIndirectObject );if !_cecga {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_abbff );
};_ccbbe ,_cbdb :=_afgdc .PdfObject .(*_bb .PdfObjectDictionary );if !_cbdb {return nil ,nil ,_ed .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_ccbbe ,_afgdc ,_afgdc );
if _efdfc :=_ccbbe .Get ("\u0054\u0069\u0074l\u0065");_efdfc !=nil {_agbb ,_fcfaf :=_bagfa .newPdfOutlineItemFromIndirectObject (_afgdc );if _fcfaf !=nil {return nil ,nil ,_fcfaf ;};_agbb .Parent =_caaaa ;_agbb .Prev =_ggffa ;_cdga :=_bb .ResolveReference (_ccbbe .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_bdadd :=_gaaf [_cdga ];_cdga !=nil &&_cdga !=_afgdc &&!_bdadd {if !_bb .IsNullObject (_cdga ){_gebdb ,_eaeab ,_acceba :=_bagfa .buildOutlineTree (_cdga ,&_agbb .PdfOutlineTreeNode ,nil ,_gaaf );if _acceba !=nil {_gg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_acceba );
}else {_agbb .First =_gebdb ;_agbb .Last =_eaeab ;};};};_dbaf :=_bb .ResolveReference (_ccbbe .Get ("\u004e\u0065\u0078\u0074"));if _ ,_dbda :=_gaaf [_dbaf ];_dbaf !=nil &&_dbaf !=_afgdc &&!_dbda {if !_bb .IsNullObject (_dbaf ){_gaab ,_eedg ,_geaa :=_bagfa .buildOutlineTree (_dbaf ,_caaaa ,&_agbb .PdfOutlineTreeNode ,_gaaf );
if _geaa !=nil {_gg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_geaa );
}else {_agbb .Next =_gaab ;return &_agbb .PdfOutlineTreeNode ,_eedg ,nil ;};};};return &_agbb .PdfOutlineTreeNode ,&_agbb .PdfOutlineTreeNode ,nil ;};_gffbg ,_cdbde :=_fgggd (_afgdc );if _cdbde !=nil {return nil ,nil ,_cdbde ;};_gffbg .Parent =_caaaa ;
if _edaeg :=_ccbbe .Get ("\u0046\u0069\u0072s\u0074");_edaeg !=nil {_edaeg =_bb .ResolveReference (_edaeg );if _ ,_aebfb :=_gaaf [_edaeg ];_edaeg !=nil &&_edaeg !=_afgdc &&!_aebfb {_dgafd :=_bb .TraceToDirectObject (_edaeg );if _ ,_dcfbc :=_dgafd .(*_bb .PdfObjectNull );
!_dcfbc &&_dgafd !=nil {_deaec ,_gddcg ,_gedae :=_bagfa .buildOutlineTree (_edaeg ,&_gffbg .PdfOutlineTreeNode ,nil ,_gaaf );if _gedae !=nil {_gg .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_gedae );
}else {_gffbg .First =_deaec ;_gffbg .Last =_gddcg ;};};};};return &_gffbg .PdfOutlineTreeNode ,&_gffbg .PdfOutlineTreeNode ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggag *PdfActionSound )ToPdfObject ()_bb .PdfObject {_ggag .PdfAction .ToPdfObject ();_fea :=_ggag ._dcc ;_dgd :=_fea .PdfObject .(*_bb .PdfObjectDictionary );_dgd .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeSound )));_dgd .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ggag .Sound );
_dgd .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ggag .Volume );_dgd .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ggag .Synchronous );_dgd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ggag .Repeat );
_dgd .SetIfNotNil ("\u004d\u0069\u0078",_ggag .Mix );return _fea ;};func _cffad (_agcg *_bb .PdfObjectStream )(*PdfFunctionType0 ,error ){_cafe :=&PdfFunctionType0 {};_cafe ._agdc =_agcg ;_gedaf :=_agcg .PdfObjectDictionary ;_bffef ,_fbgc :=_bb .TraceToDirectObject (_gedaf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bb .PdfObjectArray );
if !_fbgc {_gg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bffef .Len ()< 0||_bffef .Len ()%2!=0{_gg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cafe .NumInputs =_bffef .Len ()/2;_gbea ,_gagc :=_bffef .ToFloat64Array ();if _gagc !=nil {return nil ,_gagc ;};_cafe .Domain =_gbea ;_bffef ,_fbgc =_bb .TraceToDirectObject (_gedaf .Get ("\u0052\u0061\u006eg\u0065")).(*_bb .PdfObjectArray );if !_fbgc {_gg .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bffef .Len ()< 0||_bffef .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cafe .NumOutputs =_bffef .Len ()/2;_dbeab ,_gagc :=_bffef .ToFloat64Array ();if _gagc !=nil {return nil ,_gagc ;};_cafe .Range =_dbeab ;_bffef ,_fbgc =_bb .TraceToDirectObject (_gedaf .Get ("\u0053\u0069\u007a\u0065")).(*_bb .PdfObjectArray );if !_fbgc {_gg .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gcdd ,_gagc :=_bffef .ToIntegerArray ();
if _gagc !=nil {return nil ,_gagc ;};if len (_gcdd )!=_cafe .NumInputs {_gg .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafe .Size =_gcdd ;_adfda ,_fbgc :=_bb .TraceToDirectObject (_gedaf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bb .PdfObjectInteger );
if !_fbgc {_gg .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_adfda !=1&&*_adfda !=2&&*_adfda !=4&&*_adfda !=8&&*_adfda !=12&&*_adfda !=16&&*_adfda !=24&&*_adfda !=32{_gg .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_adfda );
return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafe .BitsPerSample =int (*_adfda );_cafe .Order =1;_fecdf ,_fbgc :=_bb .TraceToDirectObject (_gedaf .Get ("\u004f\u0072\u0064e\u0072")).(*_bb .PdfObjectInteger );
if _fbgc {if *_fecdf !=1&&*_fecdf !=3{_gg .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_fecdf );return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafe .Order =int (*_fecdf );
};_bffef ,_fbgc =_bb .TraceToDirectObject (_gedaf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bb .PdfObjectArray );if _fbgc {_ebfb ,_bbdga :=_bffef .ToFloat64Array ();if _bbdga !=nil {return nil ,_bbdga ;};_cafe .Encode =_ebfb ;};_bffef ,_fbgc =_bb .TraceToDirectObject (_gedaf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bb .PdfObjectArray );
if _fbgc {_fgaba ,_bcgaf :=_bffef .ToFloat64Array ();if _bcgaf !=nil {return nil ,_bcgaf ;};_cafe .Decode =_fgaba ;};_bface ,_gagc :=_bb .DecodeStream (_agcg );if _gagc !=nil {return nil ,_gagc ;};_cafe ._baac =_bface ;return _cafe ,nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_cbcg *PdfFieldButton )GetType ()ButtonType {_aage :=ButtonTypeCheckbox ;if _cbcg .Ff !=nil {if (uint32 (*_cbcg .Ff )&FieldFlagPushbutton .Mask ())> 0{_aage =ButtonTypePush ;}else if (uint32 (*_cbcg .Ff )&FieldFlagRadio .Mask ())> 0{_aage =ButtonTypeRadio ;
};};return _aage ;};

// ToPdfObject implements interface PdfModel.
func (_feee *PdfActionResetForm )ToPdfObject ()_bb .PdfObject {_feee .PdfAction .ToPdfObject ();_gab :=_feee ._dcc ;_abed :=_gab .PdfObject .(*_bb .PdfObjectDictionary );_abed .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeResetForm )));_abed .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_feee .Fields );
_abed .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_feee .Flags );return _gab ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bb .PdfObject ;};func (_cagb *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_bbdgf *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bb .GetNumberAsFloat (_bbdgf .CapHeight );};