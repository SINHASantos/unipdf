//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_a "bufio";_fga "bytes";_dd "crypto/md5";_fg "crypto/rand";_ef "crypto/sha1";_ddc "crypto/x509";_dg "encoding/binary";_cac "encoding/hex";_ed "errors";_e "fmt";_dea "github.com/gabriel-vasile/mimetype";_ec "github.com/unidoc/pkcs7";
_fgb "github.com/unidoc/unipdf/v3/common";_ae "github.com/unidoc/unipdf/v3/core";_ag "github.com/unidoc/unipdf/v3/core/security";_fa "github.com/unidoc/unipdf/v3/core/security/crypt";_fe "github.com/unidoc/unipdf/v3/internal/cmap";_fae "github.com/unidoc/unipdf/v3/internal/imageutil";
_be "github.com/unidoc/unipdf/v3/internal/license";_dag "github.com/unidoc/unipdf/v3/internal/sampling";_ddd "github.com/unidoc/unipdf/v3/internal/textencoding";_bf "github.com/unidoc/unipdf/v3/internal/timeutils";_fc "github.com/unidoc/unipdf/v3/internal/transform";
_de "github.com/unidoc/unipdf/v3/model/internal/docutil";_dde "github.com/unidoc/unipdf/v3/model/internal/fonts";_dga "github.com/unidoc/unipdf/v3/model/mdp";_cec "github.com/unidoc/unipdf/v3/model/sigutil";_fgd "github.com/unidoc/unipdf/v3/ps";_ba "github.com/unidoc/unitype";
_dc "golang.org/x/xerrors";_d "hash";_da "image";_ca "image/color";_ "image/gif";_ "image/png";_fgg "io";_acf "io/ioutil";_ce "math";_ge "math/rand";_b "os";_df "path/filepath";_daf "regexp";_ee "sort";_gd "strconv";_ga "strings";_g "sync";_db "time";_ac "unicode";
_cd "unicode/utf8";);

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _ae .PdfObject ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_bcfc :=&PdfColorspaceSpecialSeparation {};return _bcfc ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_gdddb *pdfCIDFontType2 )ToPdfObject ()_ae .PdfObject {if _gdddb ._effa ==nil {_gdddb ._effa =&_ae .PdfIndirectObject {};};_eceg :=_gdddb .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_gdddb ._effa .PdfObject =_eceg ;if _gdddb .CIDSystemInfo !=nil {_eceg .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_gdddb .CIDSystemInfo );};if _gdddb .DW !=nil {_eceg .Set ("\u0044\u0057",_gdddb .DW );};if _gdddb .DW2 !=nil {_eceg .Set ("\u0044\u0057\u0032",_gdddb .DW2 );
};if _gdddb .W !=nil {_eceg .Set ("\u0057",_gdddb .W );};if _gdddb .W2 !=nil {_eceg .Set ("\u0057\u0032",_gdddb .W2 );};if _gdddb .CIDToGIDMap !=nil {_eceg .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_gdddb .CIDToGIDMap );};return _gdddb ._effa ;
};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_bgafe .Lock ();defer _bgafe .Unlock ();_ebcee =keywords };func _gabee ()*modelManager {_eecg :=modelManager {};_eecg ._abgb =map[PdfModel ]_ae .PdfObject {};_eecg ._bdbb =map[_ae .PdfObject ]PdfModel {};return &_eecg ;
};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_gedc *PdfField )GetContainingPdfObject ()_ae .PdfObject {return _gedc ._fcfc };

// GetContainingPdfObject implements interface PdfModel.
func (_dfedg *Permissions )GetContainingPdfObject ()_ae .PdfObject {return _dfedg ._gegdb };

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_ae .PdfObjectArray ;ExtGState _ae .PdfObject ;};var _ pdfFont =(*pdfFontSimple )(nil );

// Width returns the width of `rect`.
func (_cbbacf *PdfRectangle )Width ()float64 {return _ce .Abs (_cbbacf .Urx -_cbbacf .Llx )};func (_fbb *PdfReader )newPdfActionRenditionFromDict (_fbf *_ae .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_fbf .Get ("\u0052"),AN :_fbf .Get ("\u0041\u004e"),OP :_fbf .Get ("\u004f\u0050"),JS :_fbf .Get ("\u004a\u0053")},nil ;
};

// AddCustomInfo adds a custom info into document info dictionary.
func (_fdbbf *PdfInfo )AddCustomInfo (name string ,value string )error {if _fdbbf ._degd ==nil {_fdbbf ._degd =_ae .MakeDict ();};if _ ,_decfc :=_bafbb [name ];_decfc {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_fdbbf ._degd .SetIfNotNil (*_ae .MakeName (name ),_ae .MakeString (value ));return nil ;};type modelManager struct{_abgb map[PdfModel ]_ae .PdfObject ;_bdbb map[_ae .PdfObject ]PdfModel ;};func (_fafef *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _fafef ._dgadd .GetCrypter ()!=nil &&!_fafef ._dgadd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_egcge :=_fafef ._eedde ;_cfdcf :=_egcge .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _cfdcf ==nil {return nil ,nil ;};_egaaec ,_acfbb :=_ae .GetIndirect (_cfdcf );_cfdcf =_ae .TraceToDirectObject (_cfdcf );if _ae .IsNullObject (_cfdcf ){_fgb .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_bfcc ,_bdada :=_ae .GetDict (_cfdcf );if !_bdada {_fgb .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cfdcf );_fgb .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cfdcf );};_fgb .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_fgb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_fafef ._fedag {_agfe :=_fafef .traverseObjectData (_bfcc );
if _agfe !=nil {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_agfe );
return nil ,_agfe ;};};_egcaa ,_bgbgg :=_fafef .newPdfAcroFormFromDict (_egaaec ,_bfcc );if _bgbgg !=nil {return nil ,_bgbgg ;};_egcaa ._afega =!_acfbb ;return _egcaa ,nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_afb :=PdfColorDeviceRGB {r ,g ,b };return &_afb ;};func (_cag *PdfReader )newPdfActionMovieFromDict (_edd *_ae .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_edd .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_edd .Get ("\u0054"),Operation :_edd .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_debf *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgad ,_fgdf :=_ae .GetNumbersAsFloat (objects );
if _fgdf !=nil {return nil ,_fgdf ;};return _debf .ColorFromFloats (_bgad );};

// ToPdfObject implements interface PdfModel.
func (_dgc *PdfActionNamed )ToPdfObject ()_ae .PdfObject {_dgc .PdfAction .ToPdfObject ();_dbf :=_dgc ._bac ;_gfe :=_dbf .PdfObject .(*_ae .PdfObjectDictionary );_gfe .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeNamed )));_gfe .SetIfNotNil ("\u004e",_dgc .N );
return _dbf ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_gcbgc *PdfWriter )ApplyStandard (optimizer StandardApplier ){_gcbgc ._ddegg =optimizer };func (_dfec *pdfFontType3 )baseFields ()*fontCommon {return &_dfec .fontCommon };

// HasExtGState checks if ExtGState name is available.
func (_gfeeb *PdfPage )HasExtGState (name _ae .PdfObjectName )bool {if _gfeeb .Resources ==nil {return false ;};if _gfeeb .Resources .ExtGState ==nil {return false ;};_dgfca ,_fbdb :=_ae .TraceToDirectObject (_gfeeb .Resources .ExtGState ).(*_ae .PdfObjectDictionary );
if !_fbdb {_fgb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ae .TraceToDirectObject (_gfeeb .Resources .ExtGState ));
return false ;};_acdagc :=_dgfca .Get (name );_bggee :=_acdagc !=nil ;return _bggee ;};

// ToPdfObject implements interface PdfModel.
func (_eedf *PdfAnnotationScreen )ToPdfObject ()_ae .PdfObject {_eedf .PdfAnnotation .ToPdfObject ();_bdaf :=_eedf ._gggg ;_dfge :=_bdaf .PdfObject .(*_ae .PdfObjectDictionary );_dfge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dfge .SetIfNotNil ("\u0054",_eedf .T );_dfge .SetIfNotNil ("\u004d\u004b",_eedf .MK );_dfge .SetIfNotNil ("\u0041",_eedf .A );_dfge .SetIfNotNil ("\u0041\u0041",_eedf .AA );return _bdaf ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dbgc *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _bbega []*PdfField ;_aaee :=map[*_ae .PdfIndirectObject ]struct{}{};for _ ,_ebgde :=range _dbgc .PageList {_faafa ,_dabgg :=_ebgde .GetAnnotations ();if _dabgg !=nil {return _dabgg ;
};for _ ,_cccadf :=range _faafa {var _bbcd *PdfField ;switch _acff :=_cccadf .GetContext ().(type ){case *PdfAnnotationWidget :if _acff ._gaf !=nil {_bbcd =_acff ._gaf ;break ;};if _ffgbag ,_ecddf :=_ae .GetIndirect (_acff .Parent );_ecddf {_bbcd ,_dabgg =_dbgc .newPdfFieldFromIndirectObject (_ffgbag ,nil );
if _dabgg ==nil {break ;};_fgb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ffgbag ,_dabgg );
};if _acff ._gggg !=nil {_bbcd ,_dabgg =_dbgc .newPdfFieldFromIndirectObject (_acff ._gggg ,nil );if _dabgg ==nil {break ;};_fgb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_acff ._gggg ,_dabgg );
};};if _bbcd ==nil {continue ;};if _ ,_cagbf :=_aaee [_bbcd ._fcfc ];_cagbf {continue ;};_aaee [_bbcd ._fcfc ]=struct{}{};_bbega =append (_bbega ,_bbcd );};};if len (_bbega )==0{return nil ;};if _dbgc .AcroForm ==nil {_dbgc .AcroForm =NewPdfAcroForm ();
};_dbgc .AcroForm .Fields =&_bbega ;return nil ;};

// GetCatalogViewerPreferences gets catalog ViewerPreferences object.
func (_ebgcg *PdfReader )GetCatalogViewerPreferences ()(_ae .PdfObject ,bool ){if _ebgcg ._eedde ==nil {return nil ,false ;};_cgcgc :=_ebgcg ._eedde .Get ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");
return _cgcgc ,_cgcgc !=nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_gcbc *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_cgb *PdfReader )newPdfActionURIFromDict (_gbff *_ae .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_gbff .Get ("\u0055\u0052\u0049"),IsMap :_gbff .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _ae .PdfObject ;H _ae .PdfObject ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// ToPdfObject returns the PDF representation of the function.
func (_eacd *PdfFunctionType0 )ToPdfObject ()_ae .PdfObject {if _eacd ._aefcg ==nil {_eacd ._aefcg =&_ae .PdfObjectStream {};};_ggadf :=_ae .MakeDict ();_ggadf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ae .MakeInteger (0));
_ffcff :=&_ae .PdfObjectArray {};for _ ,_abbb :=range _eacd .Domain {_ffcff .Append (_ae .MakeFloat (_abbb ));};_ggadf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ffcff );_edcee :=&_ae .PdfObjectArray {};for _ ,_aafea :=range _eacd .Range {_edcee .Append (_ae .MakeFloat (_aafea ));
};_ggadf .Set ("\u0052\u0061\u006eg\u0065",_edcee );_bgbea :=&_ae .PdfObjectArray {};for _ ,_cade :=range _eacd .Size {_bgbea .Append (_ae .MakeInteger (int64 (_cade )));};_ggadf .Set ("\u0053\u0069\u007a\u0065",_bgbea );_ggadf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_ae .MakeInteger (int64 (_eacd .BitsPerSample )));
if _eacd .Order !=1{_ggadf .Set ("\u004f\u0072\u0064e\u0072",_ae .MakeInteger (int64 (_eacd .Order )));};_ggadf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ae .MakeInteger (int64 (len (_eacd ._eabeb ))));_eacd ._aefcg .Stream =_eacd ._eabeb ;_eacd ._aefcg .PdfObjectDictionary =_ggadf ;
return _eacd ._aefcg ;};func (_eadb *PdfReader )newPdfAnnotationFromIndirectObject (_bfe *_ae .PdfIndirectObject )(*PdfAnnotation ,error ){_ede ,_fcbd :=_bfe .PdfObject .(*_ae .PdfObjectDictionary );if !_fcbd {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_eadb ._cffgf .GetModelFromPrimitive (_ede );model !=nil {_cafe ,_gged :=model .(*PdfAnnotation );if !_gged {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _cafe ,nil ;};_ggec :=&PdfAnnotation {};_ggec ._gggg =_bfe ;_eadb ._cffgf .Register (_ede ,_ggec );if _fabf :=_ede .Get ("\u0054\u0079\u0070\u0065");_fabf !=nil {_bcd ,_fec :=_fabf .(*_ae .PdfObjectName );if !_fec {_fgb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fabf );
}else {if *_bcd !="\u0041\u006e\u006eo\u0074"{_fgb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_bcd );};};};if _eddc :=_ede .Get ("\u0052\u0065\u0063\u0074");
_eddc !=nil {_ggec .Rect =_eddc ;};if _dgga :=_ede .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_dgga !=nil {_ggec .Contents =_dgga ;};if _bfac :=_ede .Get ("\u0050");_bfac !=nil {_ggec .P =_bfac ;};if _cfc :=_ede .Get ("\u004e\u004d");_cfc !=nil {_ggec .NM =_cfc ;
};if _beg :=_ede .Get ("\u004d");_beg !=nil {_ggec .M =_beg ;};if _cbfe :=_ede .Get ("\u0046");_cbfe !=nil {_ggec .F =_cbfe ;};if _fgc :=_ede .Get ("\u0041\u0050");_fgc !=nil {_ggec .AP =_fgc ;};if _dabd :=_ede .Get ("\u0041\u0053");_dabd !=nil {_ggec .AS =_dabd ;
};if _bcaeg :=_ede .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_bcaeg !=nil {_ggec .Border =_bcaeg ;};if _aebe :=_ede .Get ("\u0043");_aebe !=nil {_ggec .C =_aebe ;};if _eegd :=_ede .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_eegd !=nil {_ggec .StructParent =_eegd ;};if _gbg :=_ede .Get ("\u004f\u0043");_gbg !=nil {_ggec .OC =_gbg ;};_aab :=_ede .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _aab ==nil {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_ggec ._edbg =nil ;return _ggec ,nil ;};_eff ,_adad :=_aab .(*_ae .PdfObjectName );if !_adad {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aab );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_aab );};switch *_eff {case "\u0054\u0065\u0078\u0074":_dcec ,_aggg :=_eadb .newPdfAnnotationTextFromDict (_ede );
if _aggg !=nil {return nil ,_aggg ;};_dcec .PdfAnnotation =_ggec ;_ggec ._edbg =_dcec ;return _ggec ,nil ;case "\u004c\u0069\u006e\u006b":_edad ,_bdcd :=_eadb .newPdfAnnotationLinkFromDict (_ede );if _bdcd !=nil {return nil ,_bdcd ;};_edad .PdfAnnotation =_ggec ;
_ggec ._edbg =_edad ;return _ggec ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_efg ,_gea :=_eadb .newPdfAnnotationFreeTextFromDict (_ede );if _gea !=nil {return nil ,_gea ;};_efg .PdfAnnotation =_ggec ;_ggec ._edbg =_efg ;return _ggec ,nil ;
case "\u004c\u0069\u006e\u0065":_ggad ,_edab :=_eadb .newPdfAnnotationLineFromDict (_ede );if _edab !=nil {return nil ,_edab ;};_ggad .PdfAnnotation =_ggec ;_ggec ._edbg =_ggad ;_fgb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_ggec ,_ggec );
_fgb .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_ggad ,_ggad );_fgb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_ggad .PdfAnnotationMarkup ,_ggad .PdfAnnotationMarkup );
return _ggec ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_edgf ,_fafg :=_eadb .newPdfAnnotationSquareFromDict (_ede );if _fafg !=nil {return nil ,_fafg ;};_edgf .PdfAnnotation =_ggec ;_ggec ._edbg =_edgf ;return _ggec ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_dbe ,_caga :=_eadb .newPdfAnnotationCircleFromDict (_ede );
if _caga !=nil {return nil ,_caga ;};_dbe .PdfAnnotation =_ggec ;_ggec ._edbg =_dbe ;return _ggec ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cagg ,_begb :=_eadb .newPdfAnnotationPolygonFromDict (_ede );if _begb !=nil {return nil ,_begb ;};_cagg .PdfAnnotation =_ggec ;
_ggec ._edbg =_cagg ;return _ggec ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_afce ,_dded :=_eadb .newPdfAnnotationPolyLineFromDict (_ede );if _dded !=nil {return nil ,_dded ;};_afce .PdfAnnotation =_ggec ;_ggec ._edbg =_afce ;return _ggec ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_cedg ,_aedf :=_eadb .newPdfAnnotationHighlightFromDict (_ede );if _aedf !=nil {return nil ,_aedf ;};_cedg .PdfAnnotation =_ggec ;_ggec ._edbg =_cedg ;return _ggec ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_bdg ,_bacb :=_eadb .newPdfAnnotationUnderlineFromDict (_ede );
if _bacb !=nil {return nil ,_bacb ;};_bdg .PdfAnnotation =_ggec ;_ggec ._edbg =_bdg ;return _ggec ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bdbf ,_fgdd :=_eadb .newPdfAnnotationSquigglyFromDict (_ede );if _fgdd !=nil {return nil ,_fgdd ;
};_bdbf .PdfAnnotation =_ggec ;_ggec ._edbg =_bdbf ;return _ggec ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_adb ,_gee :=_eadb .newPdfAnnotationStrikeOut (_ede );if _gee !=nil {return nil ,_gee ;};_adb .PdfAnnotation =_ggec ;_ggec ._edbg =_adb ;
return _ggec ,nil ;case "\u0043\u0061\u0072e\u0074":_fcg ,_ffd :=_eadb .newPdfAnnotationCaretFromDict (_ede );if _ffd !=nil {return nil ,_ffd ;};_fcg .PdfAnnotation =_ggec ;_ggec ._edbg =_fcg ;return _ggec ,nil ;case "\u0053\u0074\u0061m\u0070":_fea ,_afdd :=_eadb .newPdfAnnotationStampFromDict (_ede );
if _afdd !=nil {return nil ,_afdd ;};_fea .PdfAnnotation =_ggec ;_ggec ._edbg =_fea ;return _ggec ,nil ;case "\u0049\u006e\u006b":_cba ,_gacg :=_eadb .newPdfAnnotationInkFromDict (_ede );if _gacg !=nil {return nil ,_gacg ;};_cba .PdfAnnotation =_ggec ;
_ggec ._edbg =_cba ;return _ggec ,nil ;case "\u0050\u006f\u0070u\u0070":_cbc ,_ddgb :=_eadb .newPdfAnnotationPopupFromDict (_ede );if _ddgb !=nil {return nil ,_ddgb ;};_cbc .PdfAnnotation =_ggec ;_ggec ._edbg =_cbc ;return _ggec ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_egfg ,_caed :=_eadb .newPdfAnnotationFileAttachmentFromDict (_ede );
if _caed !=nil {return nil ,_caed ;};_egfg .PdfAnnotation =_ggec ;_ggec ._edbg =_egfg ;return _ggec ,nil ;case "\u0053\u006f\u0075n\u0064":_gefg ,_cbd :=_eadb .newPdfAnnotationSoundFromDict (_ede );if _cbd !=nil {return nil ,_cbd ;};_gefg .PdfAnnotation =_ggec ;
_ggec ._edbg =_gefg ;return _ggec ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bfg ,_fbff :=_eadb .newPdfAnnotationRichMediaFromDict (_ede );if _fbff !=nil {return nil ,_fbff ;};_bfg .PdfAnnotation =_ggec ;_ggec ._edbg =_bfg ;return _ggec ,nil ;
case "\u004d\u006f\u0076i\u0065":_ddee ,_cfg :=_eadb .newPdfAnnotationMovieFromDict (_ede );if _cfg !=nil {return nil ,_cfg ;};_ddee .PdfAnnotation =_ggec ;_ggec ._edbg =_ddee ;return _ggec ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_dccg ,_gcca :=_eadb .newPdfAnnotationScreenFromDict (_ede );
if _gcca !=nil {return nil ,_gcca ;};_dccg .PdfAnnotation =_ggec ;_ggec ._edbg =_dccg ;return _ggec ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_bbae ,_ffee :=_eadb .newPdfAnnotationWidgetFromDict (_ede );if _ffee !=nil {return nil ,_ffee ;};_bbae .PdfAnnotation =_ggec ;
_ggec ._edbg =_bbae ;return _ggec ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gded ,_acdd :=_eadb .newPdfAnnotationPrinterMarkFromDict (_ede );if _acdd !=nil {return nil ,_acdd ;};_gded .PdfAnnotation =_ggec ;_ggec ._edbg =_gded ;
return _ggec ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_eec ,_bdf :=_eadb .newPdfAnnotationTrapNetFromDict (_ede );if _bdf !=nil {return nil ,_bdf ;};_eec .PdfAnnotation =_ggec ;_ggec ._edbg =_eec ;return _ggec ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_dbcf ,_bed :=_eadb .newPdfAnnotationWatermarkFromDict (_ede );
if _bed !=nil {return nil ,_bed ;};_dbcf .PdfAnnotation =_ggec ;_ggec ._edbg =_dbcf ;return _ggec ,nil ;case "\u0033\u0044":_bgb ,_ggf :=_eadb .newPdfAnnotation3DFromDict (_ede );if _ggf !=nil {return nil ,_ggf ;};_bgb .PdfAnnotation =_ggec ;_ggec ._edbg =_bgb ;
return _ggec ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_ffaa ,_bdec :=_eadb .newPdfAnnotationProjectionFromDict (_ede );if _bdec !=nil {return nil ,_bdec ;};_ffaa .PdfAnnotation =_ggec ;_ggec ._edbg =_ffaa ;return _ggec ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_bfbag ,_bdad :=_eadb .newPdfAnnotationRedactFromDict (_ede );if _bdad !=nil {return nil ,_bdad ;};_bfbag .PdfAnnotation =_ggec ;_ggec ._edbg =_bfbag ;return _ggec ,nil ;};_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_eff );
return nil ,nil ;};func _ebceg ()*Names {return &Names {_ecdd :_ae .MakeIndirectObject (_ae .MakeDict ())}};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gbfc :=NewPdfAnnotation ();_fdf :=&PdfAnnotationStamp {};_fdf .PdfAnnotation =_gbfc ;_fdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbfc .SetContext (_fdf );return _fdf ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_gfagb *modelManager )GetModelFromPrimitive (primitive _ae .PdfObject )PdfModel {model ,_dbfg :=_gfagb ._bdbb [primitive ];if !_dbfg {return nil ;};return model ;};

// Encoder returns the font's text encoder.
func (_egfb *PdfFont )Encoder ()_ddd .TextEncoder {_ecebg :=_egfb .actualFont ();if _ecebg ==nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_egfb ._efgfa );
return nil ;};return _ecebg .Encoder ();};func (_ecc *PdfReader )newPdfActionHideFromDict (_gbd *_ae .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gbd .Get ("\u0054"),H :_gbd .Get ("\u0048")},nil ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bge :=NewPdfAnnotation ();_ccbb :=&PdfAnnotationSquare {};_ccbb .PdfAnnotation =_bge ;_ccbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bge .SetContext (_ccbb );return _ccbb ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_ccde *PdfAppender )Write (w _fgg .Writer )error {if _ccde ._gggb {return _ed .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_fgdb :=NewPdfWriter ();_eagf ,_dacd :=_ae .GetDict (_fgdb ._bdcg );if !_dacd {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dbdd ,_dacd :=_eagf .Get ("\u004b\u0069\u0064\u0073").(*_ae .PdfObjectArray );if !_dacd {return _ed .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_edfed ,_dacd :=_eagf .Get ("\u0043\u006f\u0075n\u0074").(*_ae .PdfObjectInteger );if !_dacd {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_cgbca :=_ccde ._bdac ._dgadd ;_gdf :=_cgbca .GetTrailer ();if _gdf ==nil {return _ed .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_cadd ,_dacd :=_ae .GetIndirect (_gdf .Get ("\u0052\u006f\u006f\u0074"));
if !_dacd {return _ed .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ecbc ,_dacd :=_ae .GetDict (_cadd );if !_dacd {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cadd ,*_gdf );
return _ed .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bdfd :=false ;for _ ,_afef :=range _ccde ._bdac .AcroForm .signatureFields (){if _afef .Lock !=nil {_bdfd =true ;break ;};};if _bdfd {_fgdb ._acabbb =_cadd ;
};for _ ,_eggb :=range _ecbc .Keys (){if _fgdb ._gefce .Get (_eggb )==nil {_dcbad :=_ecbc .Get (_eggb );_fgdb ._gefce .Set (_eggb ,_dcbad );};};if _ccde ._becf !=nil {if _ccde ._becf ._afega {if _bgfb :=_ae .TraceToDirectObject (_ccde ._becf .ToPdfObject ());
!_ae .IsNullObject (_bgfb ){_fgdb ._gefce .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bgfb );_ccde .updateObjectsDeep (_bgfb ,nil );}else {_fgb .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_fgdb ._gefce .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ccde ._becf .ToPdfObject ());_ccde .updateObjectsDeep (_ccde ._becf .ToPdfObject (),nil );};};if _ccde ._dgbd !=nil {_ccde .updateObjectsDeep (_ccde ._dgbd .ToPdfObject (),nil );
_fgdb ._gefce .Set ("\u0044\u0053\u0053",_ccde ._dgbd .GetContainingPdfObject ());};if _ccde ._egfe !=nil {_fgdb ._gefce .Set ("\u0050\u0065\u0072m\u0073",_ccde ._egfe .ToPdfObject ());_ccde .updateObjectsDeep (_ccde ._egfe .ToPdfObject (),nil );};if _fgdb ._beabf .Major < 2{_fgdb .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_fgdb .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _fegf ,_ccdef :=_ae .GetDict (_gdf .Get ("\u0049\u006e\u0066\u006f"));_ccdef {if _bbcea ,_aeeb :=_ae .GetDict (_fgdb ._efeee );_aeeb {for _ ,_ffcc :=range _fegf .Keys (){if _bbcea .Get (_ffcc )==nil {_bbcea .Set (_ffcc ,_fegf .Get (_ffcc ));
};};};};if _ccde ._agga !=nil {_fgdb ._efeee =_ae .MakeIndirectObject (_ccde ._agga .ToPdfObject ());};_ccde .updateObjectsDeep (_fgdb ._efeee ,nil );_ccde .updateObjectsDeep (_fgdb ._acabbb ,nil );_cbg :=false ;if len (_ccde ._bdac .PageList )!=len (_ccde ._gbgb ){_cbg =true ;
}else {for _gffc :=range _ccde ._bdac .PageList {switch {case _ccde ._gbgb [_gffc ]==_ccde ._bdac .PageList [_gffc ]:case _ccde ._gbgb [_gffc ]==_ccde .Reader .PageList [_gffc ]:default:_cbg =true ;};if _cbg {break ;};};};if _cbg {_ccde .updateObjectsDeep (_fgdb ._bdcg ,nil );
}else {_ccde ._cfac [_fgdb ._bdcg ]=struct{}{};};_fgdb ._bdcg .ObjectNumber =_ccde .Reader ._cada .ObjectNumber ;_ccde ._beeca [_fgdb ._bdcg ]=_ccde .Reader ._cada .ObjectNumber ;_bbcf :=[]_ae .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_ageag :=range _ccde ._gbgb {_adaa :=_ageag .ToPdfObject ();*_edfed =*_edfed +1;if _gadb ,_beddd :=_adaa .(*_ae .PdfIndirectObject );_beddd &&_gadb .GetParser ()==_ccde ._bdac ._dgadd {_dbdd .Append (&_gadb .PdfObjectReference );continue ;};if _adgg ,_fbeb :=_ae .GetDict (_adaa );
_fbeb {_gdbfc ,_fbfga :=_adgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ae .PdfIndirectObject );for _fbfga {_fgb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gdbfc );_afff ,_decfd :=_gdbfc .PdfObject .(*_ae .PdfObjectDictionary );
if !_decfd {return _ed .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_gaef :=range _bbcf {_fgb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gaef );if _ggfd :=_adgg .Get (_gaef );
_ggfd !=nil {_fgb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_ageag ._gdddbf .Keys ())> 0&&!_cbg {_abaa :=_ageag ._gdddbf ;if _cde :=_abaa .Get (_gaef );_cde !=nil {if _ggfd !=_cde {_fgb .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_gaef ,_cde );
_adgg .Set (_gaef ,_cde );};};};continue ;};if _cdbb :=_afff .Get (_gaef );_cdbb !=nil {_fgb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gaef );_adgg .Set (_gaef ,_cdbb );};};
_gdbfc ,_fbfga =_afff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ae .PdfIndirectObject );_fgb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_afff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _cbg {_adgg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fgdb ._bdcg );
};};_ccde .updateObjectsDeep (_adaa ,nil );_dbdd .Append (_adaa );};if _ ,_cccc :=_ccde ._fgbgd .Seek (0,_fgg .SeekStart );_cccc !=nil {return _cccc ;};_aedg :=make (map[SignatureHandler ]_fgg .Writer );_acde :=_ae .MakeArray ();for _ ,_faab :=range _ccde ._eddg {if _gfcdd ,_dbce :=_ae .GetIndirect (_faab );
_dbce {if _eacc ,_deabg :=_gfcdd .PdfObject .(*pdfSignDictionary );_deabg {_fff :=*_eacc ._gfggb ;var _fecb error ;_aedg [_fff ],_fecb =_fff .NewDigest (_eacc ._fcagc );if _fecb !=nil {return _fecb ;};_acde .Append (_ae .MakeInteger (0xfffff),_ae .MakeInteger (0xfffff));
};};};if _acde .Len ()> 0{_acde .Append (_ae .MakeInteger (0xfffff),_ae .MakeInteger (0xfffff));};for _ ,_abce :=range _ccde ._eddg {if _dcbae ,_affc :=_ae .GetIndirect (_abce );_affc {if _gcga ,_cbae :=_dcbae .PdfObject .(*pdfSignDictionary );_cbae {_gcga .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_acde );
};};};_gfdd :=len (_aedg )> 0;var _dcdb _fgg .Reader =_ccde ._fgbgd ;if _gfdd {_bbab :=make ([]_fgg .Writer ,0,len (_aedg ));for _ ,_ecgd :=range _aedg {_bbab =append (_bbab ,_ecgd );};_dcdb =_fgg .TeeReader (_ccde ._fgbgd ,_fgg .MultiWriter (_bbab ...));
};_dgfe ,_gce :=_fgg .Copy (w ,_dcdb );if _gce !=nil {return _gce ;};if len (_ccde ._eddg )==0{return nil ;};_fgdb ._gege =_dgfe ;_fgdb .ObjNumOffset =_ccde ._cfae ;_fgdb ._edcfb =true ;_fgdb ._edge =_ccde ._gdec ;_fgdb ._gcgee =_ccde ._dbee ;_fgdb ._aagd =_ccde ._cbac ;
_fgdb ._beabf =_ccde ._bdac .PdfVersion ();_fgdb ._cddea =_ccde ._beeca ;_fgdb ._acgbb =_ccde ._bfgf .GetCrypter ();_fgdb ._bebbc =_ccde ._bfgf .GetEncryptObj ();_gaec :=_ccde ._bfgf .GetXrefType ();if _gaec !=nil {_efc :=*_gaec ==_ae .XrefTypeObjectStream ;
_fgdb ._fggff =&_efc ;};_fgdb ._dgefc =map[_ae .PdfObject ]struct{}{};_fgdb ._eabcbc =[]_ae .PdfObject {};for _ ,_fge :=range _ccde ._eddg {if _ ,_aggf :=_ccde ._cfac [_fge ];_aggf {continue ;};_fgdb .addObject (_fge );};_fffb :=w ;if _gfdd {_fffb =_fga .NewBuffer (nil );
};if _ccde ._ffeb !=""&&_fgdb ._acgbb ==nil {_fgdb .Encrypt ([]byte (_ccde ._ffeb ),[]byte (_ccde ._ffeb ),_ccde ._gca );};if _abde :=_gdf .Get ("\u0049\u0044");_abde !=nil {if _cefd ,_cdac :=_ae .GetArray (_abde );_cdac {_fgdb ._cfaba =_cefd ;};};if _deaec :=_fgdb .Write (_fffb );
_deaec !=nil {return _deaec ;};if _gfdd {_adf :=_fffb .(*_fga .Buffer ).Bytes ();_fafb :=_ae .MakeArray ();var _cgbb []*pdfSignDictionary ;var _gfda int64 ;for _ ,_cbde :=range _fgdb ._eabcbc {if _cadfg ,_bggf :=_ae .GetIndirect (_cbde );_bggf {if _gffe ,_fgab :=_cadfg .PdfObject .(*pdfSignDictionary );
_fgab {_cgbb =append (_cgbb ,_gffe );_aced :=_gffe ._badfc +int64 (_gffe ._cceab );_fafb .Append (_ae .MakeInteger (_gfda ),_ae .MakeInteger (_aced -_gfda ));_gfda =_gffe ._badfc +int64 (_gffe ._ccced );};};};_fafb .Append (_ae .MakeInteger (_gfda ),_ae .MakeInteger (_dgfe +int64 (len (_adf ))-_gfda ));
_cbdc :=[]byte (_fafb .WriteString ());for _ ,_caag :=range _cgbb {_cbgb :=int (_caag ._badfc -_dgfe );for _dfgg :=_caag ._dbcffd ;_dfgg < _caag ._aeegab ;_dfgg ++{_adf [_cbgb +_dfgg ]=' ';};_eeda :=_adf [_cbgb +_caag ._dbcffd :_cbgb +_caag ._aeegab ];
copy (_eeda ,_cbdc );};var _gade int ;for _ ,_fdc :=range _cgbb {_dae :=int (_fdc ._badfc -_dgfe );_faad :=_adf [_gade :_dae +_fdc ._cceab ];_fegb :=*_fdc ._gfggb ;_aedg [_fegb ].Write (_faad );_gade =_dae +_fdc ._ccced ;};for _ ,_aeeg :=range _cgbb {_ccge :=_adf [_gade :];
_fad :=*_aeeg ._gfggb ;_aedg [_fad ].Write (_ccge );};for _ ,_cfge :=range _cgbb {_faaeb :=int (_cfge ._badfc -_dgfe );_cfdf :=*_cfge ._gfggb ;_gede :=_aedg [_cfdf ];if _ecba :=_cfdf .Sign (_cfge ._fcagc ,_gede );_ecba !=nil {return _ecba ;};_cfge ._fcagc .ByteRange =_fafb ;
_bfeff :=[]byte (_cfge ._fcagc .Contents .WriteString ());for _ggde :=_cfge ._dbcffd ;_ggde < _cfge ._aeegab ;_ggde ++{_adf [_faaeb +_ggde ]=' ';};for _eacca :=_cfge ._cceab ;_eacca < _cfge ._ccced ;_eacca ++{_adf [_faaeb +_eacca ]=' ';};_ddac :=_adf [_faaeb +_cfge ._dbcffd :_faaeb +_cfge ._aeegab ];
copy (_ddac ,_cbdc );_ddac =_adf [_faaeb +_cfge ._cceab :_faaeb +_cfge ._ccced ];copy (_ddac ,_bfeff );};_adag :=_fga .NewBuffer (_adf );_ ,_gce =_fgg .Copy (w ,_adag );if _gce !=nil {return _gce ;};};_ccde ._gggb =true ;return nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dfeab *PdfReader )CheckAccessRights (password []byte )(bool ,_ag .Permissions ,error ){return _dfeab ._dgadd .CheckAccessRights (password );};func (_beb *PdfReader )newPdfAnnotationScreenFromDict (_ebea *_ae .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ggabc :=PdfAnnotationScreen {};
_ggabc .T =_ebea .Get ("\u0054");_ggabc .MK =_ebea .Get ("\u004d\u004b");_ggabc .A =_ebea .Get ("\u0041");_ggabc .AA =_ebea .Get ("\u0041\u0041");return &_ggabc ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_adfgge pdfFontSimple )GetCharMetrics (code _ddd .CharCode )(_dde .CharMetrics ,bool ){if _egge ,_geaba :=_adfgge ._feefe [code ];_geaba {return _dde .CharMetrics {Wx :_egge },true ;};if _dde .IsStdFont (_dde .StdFontName (_adfgge ._bfeb )){return _dde .CharMetrics {Wx :250},true ;
};return _dde .CharMetrics {},false ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cecb :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_cecb .N =N ;return _cecb ,nil ;};

// AddImageResource adds an image to the XObject resources.
func (_cafad *PdfPage )AddImageResource (name _ae .PdfObjectName ,ximg *XObjectImage )error {var _egce *_ae .PdfObjectDictionary ;if _cafad .Resources .XObject ==nil {_egce =_ae .MakeDict ();_cafad .Resources .XObject =_egce ;}else {var _ebcgf bool ;_egce ,_ebcgf =(_cafad .Resources .XObject ).(*_ae .PdfObjectDictionary );
if !_ebcgf {return _ed .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_egce .Set (name ,ximg .ToPdfObject ());return nil ;};func (_efbg *PdfField )inherit (_bdce func (*PdfField )bool )(bool ,error ){_ddce :=map[*PdfField ]bool {};
_deba :=false ;_afcfe :=_efbg ;for _afcfe !=nil {if _ ,_fafe :=_ddce [_afcfe ];_fafe {return false ,_ed .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_bdfb :=_bdce (_afcfe );if _bdfb {_deba =true ;
break ;};_ddce [_afcfe ]=true ;_afcfe =_afcfe .Parent ;};return _deba ,nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_cacbaa *PdfFieldText )ToPdfObject ()_ae .PdfObject {_cacbaa .PdfField .ToPdfObject ();_cecdg :=_cacbaa ._fcfc ;_geec :=_cecdg .PdfObject .(*_ae .PdfObjectDictionary );_geec .Set ("\u0046\u0054",_ae .MakeName ("\u0054\u0078"));if _cacbaa .DA !=nil {_geec .Set ("\u0044\u0041",_cacbaa .DA );
};if _cacbaa .Q !=nil {_geec .Set ("\u0051",_cacbaa .Q );};if _cacbaa .DS !=nil {_geec .Set ("\u0044\u0053",_cacbaa .DS );};if _cacbaa .RV !=nil {_geec .Set ("\u0052\u0056",_cacbaa .RV );};if _cacbaa .MaxLen !=nil {_geec .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_cacbaa .MaxLen );
};return _cecdg ;};func _adbag (_ccbeg _ae .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_aedc :=NewPdfColorspaceSpecialSeparation ();if _cadfb ,_fabc :=_ccbeg .(*_ae .PdfIndirectObject );_fabc {_aedc ._gcba =_cadfb ;};_ccbeg =_ae .TraceToDirectObject (_ccbeg );
_baeedb ,_bbbdd :=_ccbeg .(*_ae .PdfObjectArray );if !_bbbdd {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _baeedb .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_ccbeg =_baeedb .Get (0);_dceg ,_bbbdd :=_ccbeg .(*_ae .PdfObjectName );if !_bbbdd {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_dceg !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_ccbeg =_baeedb .Get (1);_dceg ,_bbbdd =_ccbeg .(*_ae .PdfObjectName );if !_bbbdd {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_aedc .ColorantName =_dceg ;_ccbeg =_baeedb .Get (2);_ggee ,_ebbb :=NewPdfColorspaceFromPdfObject (_ccbeg );if _ebbb !=nil {return nil ,_ebbb ;};_aedc .AlternateSpace =_ggee ;_fcdaf ,_ebbb :=_bcgbg (_baeedb .Get (3));if _ebbb !=nil {return nil ,_ebbb ;
};_aedc .TintTransform =_fcdaf ;return _aedc ,nil ;};func (_ebec *PdfReader )newPdfActionTransFromDict (_aea *_ae .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_aea .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_ffbgf *PdfField )SetContext (ctx PdfModel ){_ffbgf ._cccf =ctx };

// G returns the value of the green component of the color.
func (_cbgc *PdfColorDeviceRGB )G ()float64 {return _cbgc [1]};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _ae .PdfObject ;MK _ae .PdfObject ;A _ae .PdfObject ;AA _ae .PdfObject ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_ddfaf *PdfOutputIntent )GetContainingPdfObject ()_ae .PdfObject {return _ddfaf ._feddg };

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_aee PdfModel ;Type _ae .PdfObject ;S _ae .PdfObject ;Next _ae .PdfObject ;_bac *_ae .PdfIndirectObject ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_cfea *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _cfea .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_ae .PdfObjectString ;Author *_ae .PdfObjectString ;Subject *_ae .PdfObjectString ;Keywords *_ae .PdfObjectString ;Creator *_ae .PdfObjectString ;Producer *_ae .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_ae .PdfObjectName ;
_degd *_ae .PdfObjectDictionary ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ae .PdfObject ;IC _ae .PdfObject ;BE _ae .PdfObject ;RD _ae .PdfObject ;};type pdfCIDFontType0 struct{fontCommon ;_cgfdd *_ae .PdfIndirectObject ;_gfbag _ddd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_ae .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ae .PdfObject ;W _ae .PdfObject ;DW2 _ae .PdfObject ;W2 _ae .PdfObject ;_edgd map[_ddd .CharCode ]float64 ;_fffd float64 ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_bdbda *PdfFieldButton )IsPush ()bool {return _bdbda .GetType ()==ButtonTypePush };

// ToPdfObject implements interface PdfModel.
func (_abg *PdfActionGoTo )ToPdfObject ()_ae .PdfObject {_abg .PdfAction .ToPdfObject ();_fgf :=_abg ._bac ;_ggd :=_fgf .PdfObject .(*_ae .PdfObjectDictionary );_ggd .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeGoTo )));_ggd .SetIfNotNil ("\u0044",_abg .D );
return _fgf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_bagf *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deebc :=vals [0];if _deebc < 0.0||_deebc > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_deebc );
return nil ,ErrColorOutOfRange ;};_egagg :=vals [1];if _egagg < 0.0||_egagg > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_egagg );return nil ,ErrColorOutOfRange ;
};_dgfa :=vals [2];if _dgfa < 0.0||_dgfa > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgfa );return nil ,ErrColorOutOfRange ;};_cgbe :=NewPdfColorCalRGB (_deebc ,_egagg ,_dgfa );
return _cgbe ,nil ;};func _adbfd ()string {_bgafe .Lock ();defer _bgafe .Unlock ();return _gcecg };

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_bbbgd *PdfPattern )GetContainingPdfObject ()_ae .PdfObject {return _bbbgd ._ccdf };

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_ccebd *Image )ConvertToBinary ()error {if _ccebd .ColorComponents ==1&&_ccebd .BitsPerComponent ==1{return nil ;};_cacad ,_fggga :=_ccebd .ToGoImage ();if _fggga !=nil {return _fggga ;};_ffebe ,_fggga :=_fae .MonochromeConverter .Convert (_cacad );
if _fggga !=nil {return _fggga ;};_ccebd .Data =_ffebe .Base ().Data ;_ccebd ._cgde ,_fggga =_fae .ScaleAlphaToMonochrome (_ccebd ._cgde ,int (_ccebd .Width ),int (_ccebd .Height ));if _fggga !=nil {return _fggga ;};_ccebd .BitsPerComponent =1;_ccebd .ColorComponents =1;
_ccebd ._dgegd =nil ;return nil ;};

// GetOptimizer returns current PDF optimizer.
func (_acee *PdfWriter )GetOptimizer ()Optimizer {return _acee ._dacde };

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cbdaf *XObjectForm )SetContentStream (content []byte ,encoder _ae .StreamEncoder )error {_bdfaaf :=content ;if encoder ==nil {if _cbdaf .Filter !=nil {encoder =_cbdaf .Filter ;}else {encoder =_ae .NewRawEncoder ();};};_dcege ,_dcafe :=encoder .EncodeBytes (_bdfaaf );
if _dcafe !=nil {return _dcafe ;};_bdfaaf =_dcege ;_cbdaf .Stream =_bdfaaf ;_cbdaf .Filter =encoder ;return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ebbd *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ebbd .UnderlyingCS ==nil {return nil ,_ed .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _ebbd .UnderlyingCS .ColorFromFloats (vals );};

// GetAscent returns the Ascent of the font `descriptor`.
func (_fbga *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _ae .GetNumberAsFloat (_fbga .Ascent );};

// ToInteger convert to an integer format.
func (_bgec *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_fbef :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fbef *_bgec .A ()),uint32 (_fbef *_bgec .B ()),uint32 (_fbef *_bgec .C ())};};func (_eaf *PdfReader )newPdfAnnotationUnderlineFromDict (_gbe *_ae .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_ggfb :=PdfAnnotationUnderline {};
_bfc ,_ddbg :=_eaf .newPdfAnnotationMarkupFromDict (_gbe );if _ddbg !=nil {return nil ,_ddbg ;};_ggfb .PdfAnnotationMarkup =_bfc ;_ggfb .QuadPoints =_gbe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ggfb ,nil ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_aeac :=&PdfColorPatternType3 {};return _aeac };func (_cbede *PdfReader )newPdfAnnotationPopupFromDict (_bbc *_ae .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_dcba :=PdfAnnotationPopup {};_dcba .Parent =_bbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_dcba .Open =_bbc .Get ("\u004f\u0070\u0065\u006e");return &_dcba ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_ebcdb *pdfFontType3 )ToPdfObject ()_ae .PdfObject {if _ebcdb ._aebdg ==nil {_ebcdb ._aebdg =&_ae .PdfIndirectObject {};};_aefceb :=_ebcdb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ebcdb ._aebdg .PdfObject =_aefceb ;if _ebcdb .FirstChar !=nil {_aefceb .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ebcdb .FirstChar );
};if _ebcdb .LastChar !=nil {_aefceb .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ebcdb .LastChar );};if _ebcdb .Widths !=nil {_aefceb .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ebcdb .Widths );};if _ebcdb .Encoding !=nil {_aefceb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebcdb .Encoding );
}else if _ebcdb ._bbfgd !=nil {_egeeg :=_ebcdb ._bbfgd .ToPdfObject ();if _egeeg !=nil {_aefceb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_egeeg );};};if _ebcdb .FontBBox !=nil {_aefceb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ebcdb .FontBBox );
};if _ebcdb .FontMatrix !=nil {_aefceb .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ebcdb .FontMatrix );};if _ebcdb .CharProcs !=nil {_aefceb .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ebcdb .CharProcs );};if _ebcdb .Resources !=nil {_aefceb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ebcdb .Resources );
};return _ebcdb ._aebdg ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_cccad int ,_bdgbb *PdfPage )error ;

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_acg *PdfColorspaceLab )ToPdfObject ()_ae .PdfObject {_cdcd :=_ae .MakeArray ();_cdcd .Append (_ae .MakeName ("\u004c\u0061\u0062"));_bcdfa :=_ae .MakeDict ();if _acg .WhitePoint !=nil {_dgfcc :=_ae .MakeArray (_ae .MakeFloat (_acg .WhitePoint [0]),_ae .MakeFloat (_acg .WhitePoint [1]),_ae .MakeFloat (_acg .WhitePoint [2]));
_bcdfa .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dgfcc );}else {_fgb .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _acg .BlackPoint !=nil {_aabd :=_ae .MakeArray (_ae .MakeFloat (_acg .BlackPoint [0]),_ae .MakeFloat (_acg .BlackPoint [1]),_ae .MakeFloat (_acg .BlackPoint [2]));_bcdfa .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aabd );
};if _acg .Range !=nil {_cgcc :=_ae .MakeArray (_ae .MakeFloat (_acg .Range [0]),_ae .MakeFloat (_acg .Range [1]),_ae .MakeFloat (_acg .Range [2]),_ae .MakeFloat (_acg .Range [3]));_bcdfa .Set ("\u0052\u0061\u006eg\u0065",_cgcc );};_cdcd .Append (_bcdfa );
if _acg ._cdab !=nil {_acg ._cdab .PdfObject =_cdcd ;return _acg ._cdab ;};return _cdcd ;};

// GetPerms returns the Permissions dictionary
func (_cfegda *PdfReader )GetPerms ()*Permissions {return _cfegda ._dagg };

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_gadd *pdfFontSimple )SetEncoder (encoder _ddd .TextEncoder ){_gadd ._beaea =encoder };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_bdea *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _ae .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _dgcaa *_ae .PdfIndirectObject ;var _eefeg *_ae .PdfObjectName ;var _efa *_ae .PdfObjectArray ;if _gcfbg ,_cabb :=obj .(*_ae .PdfIndirectObject );
_cabb {_dgcaa =_gcfbg ;};obj =_ae .TraceToDirectObject (obj );switch _aebf :=obj .(type ){case *_ae .PdfObjectArray :_efa =_aebf ;case *_ae .PdfObjectName :_eefeg =_aebf ;};if _eefeg !=nil {switch *_eefeg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_fgb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_eefeg );return nil ,_agaa ;};};if _efa !=nil &&_efa .Len ()> 0{var _fgddb _ae .PdfObject =_dgcaa ;
if _dgcaa ==nil {_fgddb =_efa ;};if _dfd ,_bbfg :=_ae .GetName (_efa .Get (0));_bbfg {switch _dfd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _efa .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _efa .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _efa .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _fdce (_fgddb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _bgaf (_fgddb );
case "\u004c\u0061\u0062":return _gcdb (_fgddb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _gbbbf (_fgddb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _cgcgd (_fgddb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _fbfa (_fgddb );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _adbag (_fgddb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _gaae (_fgddb );default:_fgb .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_dfd );
};};};_fgb .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// ToPdfObject implements interface PdfModel.
func (_egb *PdfActionRendition )ToPdfObject ()_ae .PdfObject {_egb .PdfAction .ToPdfObject ();_aag :=_egb ._bac ;_agb :=_aag .PdfObject .(*_ae .PdfObjectDictionary );_agb .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeRendition )));_agb .SetIfNotNil ("\u0052",_egb .R );
_agb .SetIfNotNil ("\u0041\u004e",_egb .AN );_agb .SetIfNotNil ("\u004f\u0050",_egb .OP );_agb .SetIfNotNil ("\u004a\u0053",_egb .JS );return _aag ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_ffb :=NewPdfAnnotation ();_fgba :=&PdfAnnotationMovie {};_fgba .PdfAnnotation =_ffb ;_ffb .SetContext (_fgba );return _fgba ;};func (_eggd *LTV )getCerts (_bbcgf []*_ddc .Certificate )([][]byte ,error ){_beaac :=make ([][]byte ,0,len (_bbcgf ));
for _ ,_cddc :=range _bbcgf {_beaac =append (_beaac ,_cddc .Raw );};return _beaac ,nil ;};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_cgdd ,_afeda :=_b .ReadFile (path );if _afeda !=nil {return nil ,_afeda ;};_ccdbg :=_dea .Detect (_cgdd );_babad :=_dd .Sum (_cgdd );_edeae :=&EmbeddedFile {Name :_df .Base (path ),Content :_cgdd ,FileType :_ccdbg .String (),Hash :_cac .EncodeToString (_babad [:])};
return _edeae ,nil ;};func (_cdc *PdfReader )newPdfAnnotationLinkFromDict (_bfef *_ae .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gbfg :=PdfAnnotationLink {};_gbfg .A =_bfef .Get ("\u0041");_gbfg .Dest =_bfef .Get ("\u0044\u0065\u0073\u0074");_gbfg .H =_bfef .Get ("\u0048");
_gbfg .PA =_bfef .Get ("\u0050\u0041");_gbfg .QuadPoints =_bfef .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gbfg .BS =_bfef .Get ("\u0042\u0053");return &_gbfg ,nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_ccca *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject implements interface PdfModel.
func (_bfb *PdfActionSubmitForm )ToPdfObject ()_ae .PdfObject {_bfb .PdfAction .ToPdfObject ();_dab :=_bfb ._bac ;_caae :=_dab .PdfObject .(*_ae .PdfObjectDictionary );_caae .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeSubmitForm )));if _bfb .F !=nil {_caae .Set ("\u0046",_bfb .F .ToPdfObject ());
};_caae .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bfb .Fields );_caae .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bfb .Flags );return _dab ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_gge :=NewPdfAnnotation ();_agg :=&PdfAnnotationRedact {};_agg .PdfAnnotation =_gge ;_agg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gge .SetContext (_agg );return _agg ;};func (_edf *PdfReader )newPdfActionJavaScriptFromDict (_bbe *_ae .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bbe .Get ("\u004a\u0053")},nil ;
};func (_acabd fontCommon )fontFlags ()int {if _acabd ._cdge ==nil {return 0;};return _acabd ._cdge ._gece ;};func _gdgcd (_fcgba _ae .PdfObject )(*PdfShading ,error ){_adedf :=&PdfShading {};var _gdafb *_ae .PdfObjectDictionary ;if _fbfec ,_agbge :=_ae .GetIndirect (_fcgba );
_agbge {_adedf ._dgbdcg =_fbfec ;_fgag ,_daggc :=_fbfec .PdfObject .(*_ae .PdfObjectDictionary );if !_daggc {_fgb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_ae .ErrTypeError ;};_gdafb =_fgag ;}else if _gedaa ,_afcc :=_ae .GetStream (_fcgba );_afcc {_adedf ._dgbdcg =_gedaa ;_gdafb =_gedaa .PdfObjectDictionary ;}else if _eefa ,_caeeed :=_ae .GetDict (_fcgba );_caeeed {_adedf ._dgbdcg =_eefa ;_gdafb =_eefa ;
}else {_fgb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_fcgba );return nil ,_ae .ErrTypeError ;};if _gdafb ==nil {_fgb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ed .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fcgba =_gdafb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fcgba ==nil {_fgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fcgba =_ae .TraceToDirectObject (_fcgba );_aedee ,_effde :=_fcgba .(*_ae .PdfObjectInteger );if !_effde {_fgb .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fcgba );
return nil ,_ae .ErrTypeError ;};if *_aedee < 1||*_aedee > 7{_fgb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_aedee );
return nil ,_ae .ErrTypeError ;};_adedf .ShadingType =_aedee ;_fcgba =_gdafb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _fcgba ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aceag ,_cgged :=NewPdfColorspaceFromPdfObject (_fcgba );if _cgged !=nil {_fgb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_cgged );
return nil ,_cgged ;};_adedf .ColorSpace =_aceag ;_fcgba =_gdafb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _fcgba !=nil {_fcgba =_ae .TraceToDirectObject (_fcgba );_acfgb ,_gefgc :=_fcgba .(*_ae .PdfObjectArray );if !_gefgc {_fgb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fcgba );
return nil ,_ae .ErrTypeError ;};_adedf .Background =_acfgb ;};_fcgba =_gdafb .Get ("\u0042\u0042\u006f\u0078");if _fcgba !=nil {_fcgba =_ae .TraceToDirectObject (_fcgba );_aebde ,_cfbab :=_fcgba .(*_ae .PdfObjectArray );if !_cfbab {_fgb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fcgba );
return nil ,_ae .ErrTypeError ;};_dfdee ,_fdbbc :=NewPdfRectangle (*_aebde );if _fdbbc !=nil {_fgb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fdbbc );return nil ,_fdbbc ;};_adedf .BBox =_dfdee ;};_fcgba =_gdafb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _fcgba !=nil {_fcgba =_ae .TraceToDirectObject (_fcgba );_gcggf ,_gdfdb :=_fcgba .(*_ae .PdfObjectBool );if !_gdfdb {_fgb .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcgba );
return nil ,_ae .ErrTypeError ;};_adedf .AntiAlias =_gcggf ;};switch *_aedee {case 1:_dbgff ,_cbdef :=_dagde (_gdafb );if _cbdef !=nil {return nil ,_cbdef ;};_dbgff .PdfShading =_adedf ;_adedf ._gcge =_dbgff ;return _adedf ,nil ;case 2:_dfgc ,_bbef :=_bdaac (_gdafb );
if _bbef !=nil {return nil ,_bbef ;};_dfgc .PdfShading =_adedf ;_adedf ._gcge =_dfgc ;return _adedf ,nil ;case 3:_gcccg ,_cgeed :=_fgdfa (_gdafb );if _cgeed !=nil {return nil ,_cgeed ;};_gcccg .PdfShading =_adedf ;_adedf ._gcge =_gcccg ;return _adedf ,nil ;
case 4:_ffec ,_bgfge :=_fegad (_gdafb );if _bgfge !=nil {return nil ,_bgfge ;};_ffec .PdfShading =_adedf ;_adedf ._gcge =_ffec ;return _adedf ,nil ;case 5:_bacgc ,_baedg :=_gfcg (_gdafb );if _baedg !=nil {return nil ,_baedg ;};_bacgc .PdfShading =_adedf ;
_adedf ._gcge =_bacgc ;return _adedf ,nil ;case 6:_ceefae ,_ddfae :=_eceaad (_gdafb );if _ddfae !=nil {return nil ,_ddfae ;};_ceefae .PdfShading =_adedf ;_adedf ._gcge =_ceefae ;return _adedf ,nil ;case 7:_ceebg ,_fdcge :=_bacbe (_gdafb );if _fdcge !=nil {return nil ,_fdcge ;
};_ceebg .PdfShading =_adedf ;_adedf ._gcge =_ceebg ;return _adedf ,nil ;};return nil ,_ed .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_dbga *PdfColorspaceDeviceN )ToPdfObject ()_ae .PdfObject {_fdaa :=_ae .MakeArray (_ae .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_fdaa .Append (_dbga .ColorantNames );_fdaa .Append (_dbga .AlternateSpace .ToPdfObject ());_fdaa .Append (_dbga .TintTransform .ToPdfObject ());
if _dbga .Attributes !=nil {_fdaa .Append (_dbga .Attributes .ToPdfObject ());};if _dbga ._dfda !=nil {_dbga ._dfda .PdfObject =_fdaa ;return _dbga ._dfda ;};return _fdaa ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_dggf *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_afgg :=_dag .NewReader (img .getBase ());_aege :=_fae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gead :=_dag .NewWriter (_aege );
_gbaa :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_bbde :=make ([]uint32 ,3);var (_ccbe error ;_fggdf ,_cead ,_abfge ,_bgbe ,_baba ,_fdbb float64 ;);for {_ccbe =_afgg .ReadSamples (_bbde );if _ccbe ==_fgg .EOF {break ;}else if _ccbe !=nil {return img ,_ccbe ;
};_fggdf =float64 (_bbde [0])/_gbaa ;_cead =float64 (_bbde [1])/_gbaa ;_abfge =float64 (_bbde [2])/_gbaa ;_bgbe =_dggf .Matrix [0]*_ce .Pow (_fggdf ,_dggf .Gamma [0])+_dggf .Matrix [3]*_ce .Pow (_cead ,_dggf .Gamma [1])+_dggf .Matrix [6]*_ce .Pow (_abfge ,_dggf .Gamma [2]);
_baba =_dggf .Matrix [1]*_ce .Pow (_fggdf ,_dggf .Gamma [0])+_dggf .Matrix [4]*_ce .Pow (_cead ,_dggf .Gamma [1])+_dggf .Matrix [7]*_ce .Pow (_abfge ,_dggf .Gamma [2]);_fdbb =_dggf .Matrix [2]*_ce .Pow (_fggdf ,_dggf .Gamma [0])+_dggf .Matrix [5]*_ce .Pow (_cead ,_dggf .Gamma [1])+_dggf .Matrix [8]*_ce .Pow (_abfge ,_dggf .Gamma [2]);
_fggdf =3.240479*_bgbe +-1.537150*_baba +-0.498535*_fdbb ;_cead =-0.969256*_bgbe +1.875992*_baba +0.041556*_fdbb ;_abfge =0.055648*_bgbe +-0.204043*_baba +1.057311*_fdbb ;_fggdf =_ce .Min (_ce .Max (_fggdf ,0),1.0);_cead =_ce .Min (_ce .Max (_cead ,0),1.0);
_abfge =_ce .Min (_ce .Max (_abfge ,0),1.0);_bbde [0]=uint32 (_fggdf *_gbaa );_bbde [1]=uint32 (_cead *_gbaa );_bbde [2]=uint32 (_abfge *_gbaa );if _ccbe =_gead .WriteSamples (_bbde );_ccbe !=nil {return img ,_ccbe ;};};return _acgba (&_aege ),nil ;};func _affbf ()_db .Time {_bgafe .Lock ();
defer _bgafe .Unlock ();return _dddac };

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_gggeg *PdfPageResources )GetContainingPdfObject ()_ae .PdfObject {return _gggeg ._beeegd };

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_agad *PdfFont )CharcodesToStrings (charcodes []_ddd .CharCode ,replacementText string )([]string ,int ,int ){_gdcfa :=_agad .baseFields ();_gbed :=make ([]string ,0,len (charcodes ));_dbedb :=0;_dbeb :=_agad .Encoder ();_deeff :=_gdcfa ._babge !=nil &&_agad .IsSimple ()&&_agad .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_ga .Contains (_gdcfa ._babge .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_deeff &&_dbeb !=nil {switch _cfdfd :=_dbeb .(type ){case _ddd .SimpleEncoder :_gbde :=_cfdfd .BaseName ();if _ ,_eedgd :=_cacdc [_gbde ];_eedgd {for _ ,_bebe :=range charcodes {if _dfcd ,_gdaff :=_dbeb .CharcodeToRune (_bebe );_gdaff {_gbed =append (_gbed ,string (_dfcd ));
}else {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bebe ,charcodes ,_gdcfa .isCIDFont (),_agad ,_dbeb );
_dbedb ++;_gbed =append (_gbed ,_fe .MissingCodeString );};};return _gbed ,len (_gbed ),_dbedb ;};};};for _ ,_dcf :=range charcodes {if _gdcfa ._babge !=nil {if _bcde ,_gdag :=_gdcfa ._babge .CharcodeToUnicode (_fe .CharCode (_dcf ));_gdag {_beee ,_ :=_cd .DecodeLastRuneInString (_bcde );
_gdgc :=_gaffa (_beee );if !(_gdgc =="\u0043\u006f"){_gbed =append (_gbed ,_bcde );continue ;};_fgb .Log .Debug ("E\u0052\u0052\u004fR\u003a\u0020\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0020\u0043\u006d\u0061p\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u0020\u006d\u0061\u0070\u0070\u0069\u006e\u0067.\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020m\u0061\u0070\u0070\u0065\u0064 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0063\u006f\u0064\u0065 \u0070\u006f\u0069\u006e\u0074\u0020\u0025\u0073",_dcf ,_bcde );
};};if _dbeb !=nil {if _ddag ,_gdbbb :=_dbeb .CharcodeToRune (_dcf );_gdbbb {_aeec :=_gaffa (_ddag );if !(_aeec =="\u0043\u006f"){_gbed =append (_gbed ,string (_ddag ));continue ;};_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e \u0063\u006f\u0064\u0065\u003d\u0030x\u0025\u0030\u0034\u0078\u0020\u0069\u0073\u0020\u0064\u0065\u0063\u006f\u0064\u0065d\u0020\u0074o\u0020\u0061\u006e\u0020i\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0075\u006e\u0020\u0025\u0073",_dcf ,string (_ddag ));
};};if replacementText !=""{_gbed =append (_gbed ,replacementText );}else {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dcf ,charcodes ,_gdcfa .isCIDFont (),_agad ,_dbeb );
_dbedb ++;_gbed =append (_gbed ,_fe .MissingCodeString );};};if _dbedb !=0{_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_dbedb ,_agad );
};return _gbed ,len (_gbed ),_dbedb ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_ebdb *PdfInfo )ToPdfObject ()_ae .PdfObject {_adcg :=_ae .MakeDict ();_adcg .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_ebdb .Title );_adcg .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_ebdb .Author );_adcg .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_ebdb .Subject );
_adcg .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ebdb .Keywords );_adcg .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_ebdb .Creator );_adcg .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_ebdb .Producer );
_adcg .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_ebdb .Trapped );if _ebdb .CreationDate !=nil {_adcg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ebdb .CreationDate .ToPdfObject ());};if _ebdb .ModifiedDate !=nil {_adcg .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_ebdb .ModifiedDate .ToPdfObject ());
};for _ ,_dfdb :=range _ebdb ._degd .Keys (){_adcg .SetIfNotNil (_dfdb ,_ebdb ._degd .Get (_dfdb ));};return _adcg ;};

// ParserMetadata gets the parser  metadata.
func (_cfaef *CompliancePdfReader )ParserMetadata ()_ae .ParserMetadata {if _cfaef ._bedg ==(_ae .ParserMetadata {}){_cfaef ._bedg ,_ =_cfaef ._dgadd .ParserMetadata ();};return _cfaef ._bedg ;};

// ToInteger convert to an integer format.
func (_ccbaa *PdfColorDeviceGray )ToInteger (bits int )uint32 {_bada :=_ce .Pow (2,float64 (bits ))-1;return uint32 (_bada *_ccbaa .Val ());};func (_fcf *PdfReader )newPdfAnnotationMovieFromDict (_gafc *_ae .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_dbfb :=PdfAnnotationMovie {};
_dbfb .T =_gafc .Get ("\u0054");_dbfb .Movie =_gafc .Get ("\u004d\u006f\u0076i\u0065");_dbfb .A =_gafc .Get ("\u0041");return &_dbfb ,nil ;};

// Y returns the value of the yellow component of the color.
func (_cgfc *PdfColorDeviceCMYK )Y ()float64 {return _cgfc [2]};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_ae .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _ae .PdfObject ;A _ae .PdfObject ;SE _ae .PdfObject ;C _ae .PdfObject ;F _ae .PdfObject ;
_bgefe *_ae .PdfIndirectObject ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _ae .PdfObject ;MK _ae .PdfObject ;A _ae .PdfObject ;AA _ae .PdfObject ;BS _ae .PdfObject ;Parent _ae .PdfObject ;_gaf *PdfField ;_age bool ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_gggfa :=&PdfOutline {_baaa :_ae .MakeIndirectObject (_ae .MakeDict ())};_gggfa ._gfbb =_gggfa ;return _gggfa ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_cfaea *PdfField )FullName ()(string ,error ){var _baebd _fga .Buffer ;_aegd :=[]string {};if _cfaea .T !=nil {_aegd =append (_aegd ,_cfaea .T .Decoded ());};_febd :=map[*PdfField ]bool {};_febd [_cfaea ]=true ;_faga :=_cfaea .Parent ;for _faga !=nil {if _ ,_abada :=_febd [_faga ];
_abada {return _baebd .String (),_ed .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _faga .T ==nil {return _baebd .String (),_ed .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_aegd =append (_aegd ,_faga .T .Decoded ());_febd [_faga ]=true ;_faga =_faga .Parent ;};for _fbdd :=len (_aegd )-1;_fbdd >=0;_fbdd --{_baebd .WriteString (_aegd [_fbdd ]);if _fbdd > 0{_baebd .WriteString ("\u002e");};};return _baebd .String (),nil ;
};

// ToPdfObject implements interface PdfModel.
func (_dgca *PdfAnnotationStamp )ToPdfObject ()_ae .PdfObject {_dgca .PdfAnnotation .ToPdfObject ();_ccg :=_dgca ._gggg ;_acdb :=_ccg .PdfObject .(*_ae .PdfObjectDictionary );_dgca .PdfAnnotationMarkup .appendToPdfDictionary (_acdb );_acdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0053\u0074\u0061m\u0070"));
_acdb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgca .Name );return _ccg ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };type pdfCIDFontType2 struct{fontCommon ;_effa *_ae .PdfIndirectObject ;_ffceb _ddd .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_ae .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ae .PdfObject ;W _ae .PdfObject ;DW2 _ae .PdfObject ;W2 _ae .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _ae .PdfObject ;_faegb map[_ddd .CharCode ]float64 ;_addgb float64 ;_afced map[rune ]int ;};var ErrColorOutOfRange =_ed .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");func (_decee *pdfFontSimple )addEncoding ()error {var (_afggg string ;
_ecaf map[_ddd .CharCode ]_ddd .GlyphName ;_beged _ddd .SimpleEncoder ;);if _decee .Encoder ()!=nil {_eadbf ,_feae :=_decee .Encoder ().(_ddd .SimpleEncoder );if _feae &&_eadbf !=nil {_afggg =_eadbf .BaseName ();};};if _decee .Encoding !=nil {_dbfc ,_fbdfa ,_cceb :=_decee .getFontEncoding ();
if _cceb !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_decee ._bfeb ,_decee ._aacd ,_decee .Encoding ,_decee .Encoding ,_cceb );
return _cceb ;};if _dbfc !=""{_afggg =_dbfc ;};_ecaf =_fbdfa ;_beged ,_cceb =_ddd .NewSimpleTextEncoder (_afggg ,_ecaf );if _cceb !=nil {return _cceb ;};};if _beged ==nil {_fffc :=_decee ._cdge ;if _fffc !=nil {switch _decee ._aacd {case "\u0054\u0079\u0070e\u0031":if _fffc .fontFile !=nil &&_fffc .fontFile ._ecde !=nil {_fgb .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_beged =_fffc .fontFile ._ecde ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fffc ._cefa !=nil {_fgb .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_gdcga ,_aaafb :=_fffc ._cefa .MakeEncoder ();
if _aaafb ==nil {_beged =_gdcga ;};if _decee ._babge ==nil {_decee ._babge =_fffc ._cefa .MakeToUnicode ();};};};};};if _beged !=nil {if _ecaf !=nil {_fgb .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecaf ,_decee .baseFields ());
_beged =_ddd .ApplyDifferences (_beged ,_ecaf );};_decee .SetEncoder (_beged );};return nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _ae .PdfObject )(*PdfFont ,error ){return _baga (fontObj ,true )};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_dffc *PdfAppender )SetDocInfo (info *PdfInfo ){_dffc ._agga =info };

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_baefe *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_abcbc :=func (_bfbaf float64 )float64 {if _bfbaf >=6.0/29{return _bfbaf *_bfbaf *_bfbaf ;};return 108.0/841*(_bfbaf -4.0/29.0);};_cdfe :=img ._dgegd ;if len (_cdfe )!=6{_fgb .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_cdfe =_baefe .DecodeArray ();};_eaccac :=_dag .NewReader (img .getBase ());_cfbc :=_fae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._cgde ,img ._dgegd );_cfeec :=_dag .NewWriter (_cfbc );_gadg :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;
_ebdab :=make ([]uint32 ,3);var (_agac error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_bead ,_adca ,_dfef float64 ;);for {_agac =_eaccac .ReadSamples (_ebdab );if _agac ==_fgg .EOF {break ;}else if _agac !=nil {return img ,_agac ;};Ls =float64 (_ebdab [0])/_gadg ;
As =float64 (_ebdab [1])/_gadg ;Bs =float64 (_ebdab [2])/_gadg ;Ls =_fae .LinearInterpolate (Ls ,0.0,1.0,_cdfe [0],_cdfe [1]);As =_fae .LinearInterpolate (As ,0.0,1.0,_cdfe [2],_cdfe [3]);Bs =_fae .LinearInterpolate (Bs ,0.0,1.0,_cdfe [4],_cdfe [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_baefe .WhitePoint [0]*_abcbc (L );Y =_baefe .WhitePoint [1]*_abcbc (M );Z =_baefe .WhitePoint [2]*_abcbc (N );_bead =3.240479*X +-1.537150*Y +-0.498535*Z ;_adca =-0.969256*X +1.875992*Y +0.041556*Z ;_dfef =0.055648*X +-0.204043*Y +1.057311*Z ;
_bead =_ce .Min (_ce .Max (_bead ,0),1.0);_adca =_ce .Min (_ce .Max (_adca ,0),1.0);_dfef =_ce .Min (_ce .Max (_dfef ,0),1.0);_ebdab [0]=uint32 (_bead *_gadg );_ebdab [1]=uint32 (_adca *_gadg );_ebdab [2]=uint32 (_dfef *_gadg );if _agac =_cfeec .WriteSamples (_ebdab );
_agac !=nil {return img ,_agac ;};};return _acgba (&_cfbc ),nil ;};func (_febdg *PdfSignature )extractChainFromCert ()([]*_ddc .Certificate ,error ){var _edebg *_ae .PdfObjectArray ;switch _ebdaba :=_febdg .Cert .(type ){case *_ae .PdfObjectString :_edebg =_ae .MakeArray (_ebdaba );
case *_ae .PdfObjectArray :_edebg =_ebdaba ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ebdaba );
};var _cggaa _fga .Buffer ;for _ ,_dgda :=range _edebg .Elements (){_afabf ,_abccfc :=_ae .GetString (_dgda );if !_abccfc {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_dgda );
};if _ ,_ddedbg :=_cggaa .Write (_afabf .Bytes ());_ddedbg !=nil {return nil ,_ddedbg ;};};return _ddc .ParseCertificates (_cggaa .Bytes ());};

// ToPdfObject implements interface PdfModel.
func (_ffc *PdfAnnotationLink )ToPdfObject ()_ae .PdfObject {_ffc .PdfAnnotation .ToPdfObject ();_gfcd :=_ffc ._gggg ;_cfdc :=_gfcd .PdfObject .(*_ae .PdfObjectDictionary );_cfdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u004c\u0069\u006e\u006b"));
if _ffc ._dfc !=nil &&_ffc ._dfc ._aee !=nil {_cfdc .Set ("\u0041",_ffc ._dfc ._aee .ToPdfObject ());}else if _ffc .A !=nil {_cfdc .Set ("\u0041",_ffc .A );};_cfdc .SetIfNotNil ("\u0044\u0065\u0073\u0074",_ffc .Dest );_cfdc .SetIfNotNil ("\u0048",_ffc .H );
_cfdc .SetIfNotNil ("\u0050\u0041",_ffc .PA );_cfdc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ffc .QuadPoints );_cfdc .SetIfNotNil ("\u0042\u0053",_ffc .BS );return _gfcd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cgaf *PdfColorspaceSpecialSeparation )ToPdfObject ()_ae .PdfObject {_cbdca :=_ae .MakeArray (_ae .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_cbdca .Append (_cgaf .ColorantName );_cbdca .Append (_cgaf .AlternateSpace .ToPdfObject ());
_cbdca .Append (_cgaf .TintTransform .ToPdfObject ());if _cgaf ._gcba !=nil {_cgaf ._gcba .PdfObject =_cbdca ;return _cgaf ._gcba ;};return _cbdca ;};

// ToPdfObject implements interface PdfModel.
func (_agc *PdfBorderStyle )ToPdfObject ()_ae .PdfObject {_fegd :=_ae .MakeDict ();if _agc ._gfge !=nil {if _eccbc ,_dfad :=_agc ._gfge .(*_ae .PdfIndirectObject );_dfad {_eccbc .PdfObject =_fegd ;};};_fegd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _agc .W !=nil {_fegd .Set ("\u0057",_ae .MakeFloat (*_agc .W ));};if _agc .S !=nil {_fegd .Set ("\u0053",_ae .MakeName (_agc .S .GetPdfName ()));};if _agc .D !=nil {_fegd .Set ("\u0044",_ae .MakeArrayFromIntegers (*_agc .D ));};if _agc ._gfge !=nil {return _agc ._gfge ;
};return _fegd ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_cbed :=NewPdfAnnotation ();_gaa :=&PdfAnnotationSquiggly {};_gaa .PdfAnnotation =_cbed ;_gaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbed .SetContext (_gaa );return _gaa ;};

// ToPdfObject implements interface PdfModel.
func (_dcbd *PdfAnnotationFileAttachment )ToPdfObject ()_ae .PdfObject {_dcbd .PdfAnnotation .ToPdfObject ();_aead :=_dcbd ._gggg ;_fdfb :=_aead .PdfObject .(*_ae .PdfObjectDictionary );_dcbd .PdfAnnotationMarkup .appendToPdfDictionary (_fdfb );_fdfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_fdfb .SetIfNotNil ("\u0046\u0053",_dcbd .FS );_fdfb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dcbd .Name );return _aead ;};func (_gfc *PdfReader )newPdfActionLaunchFromDict (_ccac *_ae .PdfObjectDictionary )(*PdfActionLaunch ,error ){_ebdc ,_bag :=_eeg (_ccac .Get ("\u0046"));
if _bag !=nil {return nil ,_bag ;};return &PdfActionLaunch {Win :_ccac .Get ("\u0057\u0069\u006e"),Mac :_ccac .Get ("\u004d\u0061\u0063"),Unix :_ccac .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ccac .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ebdc },nil ;
};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_ecdd *_ae .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_ae .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_ae .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_ae .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_ae .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_ae .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_ae .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_ae .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_ae .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_ae .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_ae .PdfObjectDictionary ;};func (_dbgf *PdfReader )newPdfAnnotationSquareFromDict (_fcda *_ae .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_ebee :=PdfAnnotationSquare {};_agee ,_gag :=_dbgf .newPdfAnnotationMarkupFromDict (_fcda );
if _gag !=nil {return nil ,_gag ;};_ebee .PdfAnnotationMarkup =_agee ;_ebee .BS =_fcda .Get ("\u0042\u0053");_ebee .IC =_fcda .Get ("\u0049\u0043");_ebee .BE =_fcda .Get ("\u0042\u0045");_ebee .RD =_fcda .Get ("\u0052\u0044");return &_ebee ,nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_ffcb *PdfOutlineTreeNode )ToPdfObject ()_ae .PdfObject {return _ffcb .GetContext ().ToPdfObject ()};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func (_gcbae *PdfWriter )makeOffSetReference (_cbcfa int64 ){_gdaag :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_cbcfa );_gcbae .writeString (_gdaag );
_gcbae .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};var _bafbb =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_aa :=NewPdfAction ();_cee :=&PdfActionGoTo3DView {};_cee .PdfAction =_aa ;_aa .SetContext (_cee );return _cee ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_abef *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_fgcg ,_gaecc :=color .(*PdfColorPattern );if !_gaecc {_fgb .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _fgcg .Color ==nil {return color ,nil ;};if _abef .UnderlyingCS ==nil {return nil ,_ed .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _abef .UnderlyingCS .ColorToRGB (_fgcg .Color );
};func _defe (_gdaa _ae .PdfObject )(*PdfPageResourcesColorspaces ,error ){_ebcag :=&PdfPageResourcesColorspaces {};if _bgfgd ,_dddb :=_gdaa .(*_ae .PdfIndirectObject );_dddb {_ebcag ._dfafe =_bgfgd ;_gdaa =_bgfgd .PdfObject ;};_fbdcg ,_fgeff :=_ae .GetDict (_gdaa );
if !_fgeff {return nil ,_ed .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ebcag .Names =[]string {};_ebcag .Colorspaces =map[string ]PdfColorspace {};for _ ,_adda :=range _fbdcg .Keys (){_gafeg :=_fbdcg .Get (_adda );
_ebcag .Names =append (_ebcag .Names ,string (_adda ));_cfbb ,_dgdcf :=NewPdfColorspaceFromPdfObject (_gafeg );if _dgdcf !=nil {return nil ,_dgdcf ;};_ebcag .Colorspaces [string (_adda )]=_cfbb ;};return _ebcag ,nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_dafa *PdfPage )HasXObjectByName (name _ae .PdfObjectName )bool {_ebfdd ,_cceba :=_dafa .Resources .XObject .(*_ae .PdfObjectDictionary );if !_cceba {return false ;};if _caafb :=_ebfdd .Get (name );_caafb !=nil {return true ;};return false ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_afca :=&PdfBorderStyle {};return _afca };

// GetContainingPdfObject implements interface PdfModel.
func (_fafa *PdfFilespec )GetContainingPdfObject ()_ae .PdfObject {return _fafa ._acaa };

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_edgg *Image )ToGoImage ()(_da .Image ,error ){_fgb .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_aeea ,_dbfad :=_fae .NewImage (int (_edgg .Width ),int (_edgg .Height ),int (_edgg .BitsPerComponent ),_edgg .ColorComponents ,_edgg .Data ,_edgg ._cgde ,_edgg ._dgegd );
if _dbfad !=nil {return nil ,_dbfad ;};return _aeea ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_daeb *PdfColorspaceCalRGB )ToPdfObject ()_ae .PdfObject {_dbcfg :=&_ae .PdfObjectArray {};_dbcfg .Append (_ae .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_facba :=_ae .MakeDict ();if _daeb .WhitePoint !=nil {_faac :=_ae .MakeArray (_ae .MakeFloat (_daeb .WhitePoint [0]),_ae .MakeFloat (_daeb .WhitePoint [1]),_ae .MakeFloat (_daeb .WhitePoint [2]));
_facba .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_faac );}else {_fgb .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _daeb .BlackPoint !=nil {_gegd :=_ae .MakeArray (_ae .MakeFloat (_daeb .BlackPoint [0]),_ae .MakeFloat (_daeb .BlackPoint [1]),_ae .MakeFloat (_daeb .BlackPoint [2]));_facba .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gegd );
};if _daeb .Gamma !=nil {_fggd :=_ae .MakeArray (_ae .MakeFloat (_daeb .Gamma [0]),_ae .MakeFloat (_daeb .Gamma [1]),_ae .MakeFloat (_daeb .Gamma [2]));_facba .Set ("\u0047\u0061\u006dm\u0061",_fggd );};if _daeb .Matrix !=nil {_ccfd :=_ae .MakeArray (_ae .MakeFloat (_daeb .Matrix [0]),_ae .MakeFloat (_daeb .Matrix [1]),_ae .MakeFloat (_daeb .Matrix [2]),_ae .MakeFloat (_daeb .Matrix [3]),_ae .MakeFloat (_daeb .Matrix [4]),_ae .MakeFloat (_daeb .Matrix [5]),_ae .MakeFloat (_daeb .Matrix [6]),_ae .MakeFloat (_daeb .Matrix [7]),_ae .MakeFloat (_daeb .Matrix [8]));
_facba .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ccfd );};_dbcfg .Append (_facba );if _daeb ._aadg !=nil {_daeb ._aadg .PdfObject =_dbcfg ;return _daeb ._aadg ;};return _dbcfg ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_cecge :=&PdfFilespec {};_cecge ._acaa =_ae .MakeIndirectObject (_ae .MakeDict ());return _cecge ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_agfdfg :=PdfWriter {};_agfdfg ._dgefc =map[_ae .PdfObject ]struct{}{};_agfdfg ._eabcbc =[]_ae .PdfObject {};_agfdfg ._agacb =map[_ae .PdfObject ][]*_ae .PdfObjectDictionary {};_agfdfg ._abbac =map[_ae .PdfObject ]struct{}{};
_agfdfg ._beabf .Major =1;_agfdfg ._beabf .Minor =3;_ebdgd :=_ae .MakeDict ();_fafcag :=[]struct{_ceeag _ae .PdfObjectName ;_ebbce string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bcfa ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cbdgg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_adbfd ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_adceb ()},{"\u0054\u0069\u0074l\u0065",_ggdfe ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fgeag ()}};
for _ ,_gbgaf :=range _fafcag {if _gbgaf ._ebbce !=""{_ebdgd .Set (_gbgaf ._ceeag ,_ae .MakeString (_gbgaf ._ebbce ));};};if _dfgbg :=_affbf ();!_dfgbg .IsZero (){if _ecdc ,_aeebc :=NewPdfDateFromTime (_dfgbg );_aeebc ==nil {_ebdgd .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ecdc .ToPdfObject ());
};};if _gageg :=_agdd ();!_gageg .IsZero (){if _aacfd ,_ffdde :=NewPdfDateFromTime (_gageg );_ffdde ==nil {_ebdgd .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_aacfd .ToPdfObject ());};};_fgad :=_ae .PdfIndirectObject {};_fgad .PdfObject =_ebdgd ;_agfdfg ._efeee =&_fgad ;
_agfdfg .addObject (&_fgad );_eged :=_ae .PdfIndirectObject {};_dbgga :=_ae .MakeDict ();_dbgga .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_eged .PdfObject =_dbgga ;_agfdfg ._acabbb =&_eged ;_agfdfg .addObject (_agfdfg ._acabbb );
_ggfcd ,_ageda :=_feeeag ("\u0077");if _ageda !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ageda );};_agfdfg ._abdcb =_ggfcd ;_dedgc :=_ae .PdfIndirectObject {};_deda :=_ae .MakeDict ();_deda .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0050\u0061\u0067e\u0073"));
_abeda :=_ae .PdfObjectArray {};_deda .Set ("\u004b\u0069\u0064\u0073",&_abeda );_deda .Set ("\u0043\u006f\u0075n\u0074",_ae .MakeInteger (0));_dedgc .PdfObject =_deda ;_agfdfg ._bdcg =&_dedgc ;_agfdfg ._bebb =map[_ae .PdfObject ]struct{}{};_agfdfg .addObject (_agfdfg ._bdcg );
_dbgga .Set ("\u0050\u0061\u0067e\u0073",&_dedgc );_agfdfg ._gefce =_dbgga ;_fgb .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_eged );return _agfdfg ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;
BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_afbcdc *PdfWriter )SetCatalogMetadata (meta _ae .PdfObject )error {if meta ==nil {_afbcdc ._gefce .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_bbdee ,_fecce :=_ae .GetStream (meta );if !_fecce {return _ed .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_afbcdc .addObject (_bbdee );_afbcdc ._gefce .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bbdee );return nil ;};func _gaae (_ccfb _ae .PdfObject )(*PdfColorspaceDeviceN ,error ){_aefca :=NewPdfColorspaceDeviceN ();if _ecea ,_gbec :=_ccfb .(*_ae .PdfIndirectObject );
_gbec {_aefca ._dfda =_ecea ;};_ccfb =_ae .TraceToDirectObject (_ccfb );_ceede ,_ecf :=_ccfb .(*_ae .PdfObjectArray );if !_ecf {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _ceede .Len ()!=4&&_ceede .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ccfb =_ceede .Get (0);
_gggf ,_ecf :=_ccfb .(*_ae .PdfObjectName );if !_ecf {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gggf !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_ccfb =_ceede .Get (1);
_ccfb =_ae .TraceToDirectObject (_ccfb );_eagg ,_ecf :=_ccfb .(*_ae .PdfObjectArray );if !_ecf {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_aefca .ColorantNames =_eagg ;_ccfb =_ceede .Get (2);_gfgc ,_fabd :=NewPdfColorspaceFromPdfObject (_ccfb );if _fabd !=nil {return nil ,_fabd ;};_aefca .AlternateSpace =_gfgc ;_cgcca ,_fabd :=_bcgbg (_ceede .Get (3));if _fabd !=nil {return nil ,_fabd ;
};_aefca .TintTransform =_cgcca ;if _ceede .Len ()==5{_cgea ,_dccfb :=_beafd (_ceede .Get (4));if _dccfb !=nil {return nil ,_dccfb ;};_aefca .Attributes =_cgea ;};return _aefca ,nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ddcdf :=&PdfPageResourcesColorspaces {};_ddcdf .Names =[]string {};_ddcdf .Colorspaces =map[string ]PdfColorspace {};_ddcdf ._dfafe =&_ae .PdfIndirectObject {};return _ddcdf ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_cdbg *PdfFont )GetCharMetrics (code _ddd .CharCode )(CharMetrics ,bool ){var _egdc _dde .CharMetrics ;switch _eegdd :=_cdbg ._efgfa .(type ){case *pdfFontSimple :if _ccade ,_fbdg :=_eegdd .GetCharMetrics (code );_fbdg {return _ccade ,_fbdg ;};case *pdfFontType0 :if _gfca ,_afeea :=_eegdd .GetCharMetrics (code );
_afeea {return _gfca ,_afeea ;};case *pdfCIDFontType0 :if _aefcd ,_dbcc :=_eegdd .GetCharMetrics (code );_dbcc {return _aefcd ,_dbcc ;};case *pdfCIDFontType2 :if _gcace ,_fddd :=_eegdd .GetCharMetrics (code );_fddd {return _gcace ,_fddd ;};case *pdfFontType3 :if _cbdd ,_aaafc :=_eegdd .GetCharMetrics (code );
_aaafc {return _cbdd ,_aaafc ;};default:_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_cdbg ._efgfa );
return _egdc ,false ;};if _ecd ,_bfcd :=_cdbg .GetFontDescriptor ();_bfcd ==nil &&_ecd !=nil {return _dde .CharMetrics {Wx :_ecd ._ecff },true ;};_fgb .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_cdbg );
return _egdc ,false ;};

// BaseFont returns the font's "BaseFont" field.
func (_cebdae *PdfFont )BaseFont ()string {return _cebdae .baseFields ()._bfeb };func (_bad *PdfReader )newPdfAnnotationPrinterMarkFromDict (_faba *_ae .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_faef :=PdfAnnotationPrinterMark {};_faef .MN =_faba .Get ("\u004d\u004e");
return &_faef ,nil ;};func _dede (_baedf *_ae .PdfObjectDictionary )(*PdfFieldChoice ,error ){_aefbf :=&PdfFieldChoice {};_aefbf .Opt ,_ =_ae .GetArray (_baedf .Get ("\u004f\u0070\u0074"));_aefbf .TI ,_ =_ae .GetInt (_baedf .Get ("\u0054\u0049"));_aefbf .I ,_ =_ae .GetArray (_baedf .Get ("\u0049"));
return _aefbf ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func _eceaad (_gdcdd *_ae .PdfObjectDictionary )(*PdfShadingType6 ,error ){_acef :=PdfShadingType6 {};_bfffe :=_gdcdd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bfffe ==nil {_fgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bffce ,_egdgef :=_bfffe .(*_ae .PdfObjectInteger );if !_egdgef {_fgb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bfffe );
return nil ,_ae .ErrTypeError ;};_acef .BitsPerCoordinate =_bffce ;_bfffe =_gdcdd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bfffe ==nil {_fgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bffce ,_egdgef =_bfffe .(*_ae .PdfObjectInteger );if !_egdgef {_fgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bfffe );
return nil ,_ae .ErrTypeError ;};_acef .BitsPerComponent =_bffce ;_bfffe =_gdcdd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bfffe ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bffce ,_egdgef =_bfffe .(*_ae .PdfObjectInteger );if !_egdgef {_fgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bfffe );
return nil ,_ae .ErrTypeError ;};_acef .BitsPerComponent =_bffce ;_bfffe =_gdcdd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bfffe ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgbba ,_egdgef :=_bfffe .(*_ae .PdfObjectArray );if !_egdgef {_fgb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bfffe );
return nil ,_ae .ErrTypeError ;};_acef .Decode =_fgbba ;if _adagb :=_gdcdd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_adagb !=nil {_acef .Function =[]PdfFunction {};if _cecba ,_dfgda :=_adagb .(*_ae .PdfObjectArray );_dfgda {for _ ,_fdfga :=range _cecba .Elements (){_cgbadg ,_bfccc :=_bcgbg (_fdfga );
if _bfccc !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfccc );return nil ,_bfccc ;};_acef .Function =append (_acef .Function ,_cgbadg );
};}else {_geadg ,_gccgd :=_bcgbg (_adagb );if _gccgd !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gccgd );return nil ,_gccgd ;
};_acef .Function =append (_acef .Function ,_geadg );};};return &_acef ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gbbf :=PdfColorDeviceGray (grayVal );return &_gbbf ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bgbcf *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fcfe ,_bdeg :=color .(*PdfColorCalRGB );if !_bdeg {_fgb .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_deaf :=_fcfe .A ();_cfeea :=_fcfe .B ();_gaefg :=_fcfe .C ();X :=_bgbcf .Matrix [0]*_ce .Pow (_deaf ,_bgbcf .Gamma [0])+_bgbcf .Matrix [3]*_ce .Pow (_cfeea ,_bgbcf .Gamma [1])+_bgbcf .Matrix [6]*_ce .Pow (_gaefg ,_bgbcf .Gamma [2]);
Y :=_bgbcf .Matrix [1]*_ce .Pow (_deaf ,_bgbcf .Gamma [0])+_bgbcf .Matrix [4]*_ce .Pow (_cfeea ,_bgbcf .Gamma [1])+_bgbcf .Matrix [7]*_ce .Pow (_gaefg ,_bgbcf .Gamma [2]);Z :=_bgbcf .Matrix [2]*_ce .Pow (_deaf ,_bgbcf .Gamma [0])+_bgbcf .Matrix [5]*_ce .Pow (_cfeea ,_bgbcf .Gamma [1])+_bgbcf .Matrix [8]*_ce .Pow (_gaefg ,_bgbcf .Gamma [2]);
_fefed :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cafd :=-0.969256*X +1.875992*Y +0.041556*Z ;_babg :=0.055648*X +-0.204043*Y +1.057311*Z ;_fefed =_ce .Min (_ce .Max (_fefed ,0),1.0);_cafd =_ce .Min (_ce .Max (_cafd ,0),1.0);_babg =_ce .Min (_ce .Max (_babg ,0),1.0);
return NewPdfColorDeviceRGB (_fefed ,_cafd ,_babg ),nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_abdg :=NewPdfAnnotation ();_abea :=&PdfAnnotationLink {};_abea .PdfAnnotation =_abdg ;_abdg .SetContext (_abea );return _abea ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_affed *PdfPage )Duplicate ()*PdfPage {_dbcff :=*_affed ;_dbcff ._efdff =_ae .MakeDict ();_dbcff ._dfgbfb =_ae .MakeIndirectObject (_dbcff ._efdff );_dbcff ._gdddbf =*_dbcff ._efdff ;return &_dbcff ;};func (_ccfdf SignatureValidationResult )String ()string {var _bfdge _fga .Buffer ;
_bfdge .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_ccfdf .Name ));if _ccfdf .Date ._ebdcc > 0{_bfdge .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_ccfdf .Date .ToGoTime ().String ()));}else {_bfdge .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ccfdf .Reason )> 0{_bfdge .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ccfdf .Reason ));}else {_bfdge .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_ccfdf .Location )> 0{_bfdge .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ccfdf .Location ));}else {_bfdge .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ccfdf .ContactInfo )> 0{_bfdge .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_ccfdf .ContactInfo ));}else {_bfdge .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_bfdge .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_ccfdf .Fields )));if _ccfdf .IsSigned {_bfdge .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_bfdge .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _ccfdf .IsVerified {_bfdge .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_bfdge .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _ccfdf .IsTrusted {_bfdge .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_bfdge .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_ccfdf .GeneralizedTime .IsZero (){_bfdge .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_ccfdf .GeneralizedTime .String ()));
};if _ccfdf .DiffResults !=nil {_bfdge .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_ccfdf .DiffResults .IsPermitted ()));if len (_ccfdf .DiffResults .Warnings )> 0{_bfdge .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_ceea :=range _ccfdf .DiffResults .Warnings {_bfdge .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_ceea ));};};if len (_ccfdf .DiffResults .Errors )> 0{_bfdge .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_fddea :=range _ccfdf .DiffResults .Errors {_bfdge .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_fddea ));};};};if _ccfdf .IsCrlFound {_bfdge .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_bfdge .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _ccfdf .IsOcspFound {_bfdge .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_bfdge .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _bfdge .String ();};func (_fgggb *fontFile )loadFromSegments (_cffc ,_dgbbb []byte )error {_fgb .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cffc ),len (_dgbbb ));
_adgde :=_fgggb .parseASCIIPart (_cffc );if _adgde !=nil {return _adgde ;};_fgb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fgggb );if len (_dgbbb )==0{return nil ;};_fgb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fgggb );
return nil ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _ae .PdfObject ;Flags _ae .PdfObject ;};func (_daa *PdfReader )newPdfAnnotation3DFromDict (_def *_ae .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_eefe :=PdfAnnotation3D {};_eefe .T3DD =_def .Get ("\u0033\u0044\u0044");
_eefe .T3DV =_def .Get ("\u0033\u0044\u0056");_eefe .T3DA =_def .Get ("\u0033\u0044\u0041");_eefe .T3DI =_def .Get ("\u0033\u0044\u0049");_eefe .T3DB =_def .Get ("\u0033\u0044\u0042");return &_eefe ,nil ;};func _baga (_ffbf _ae .PdfObject ,_efef bool )(*PdfFont ,error ){_fgbf ,_adbe ,_bedgc :=_geab (_ffbf );
if _fgbf !=nil {_affb (_fgbf );};if _bedgc !=nil {if _bedgc ==ErrType1CFontNotSupported {_begf ,_fggb :=_beeeg (_fgbf ,_adbe ,nil );if _fggb !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_adbe ,_fggb );
return nil ,_bedgc ;};return &PdfFont {_efgfa :_begf },_bedgc ;};return nil ,_bedgc ;};_afec :=&PdfFont {};switch _adbe ._aacd {case "\u0054\u0079\u0070e\u0030":if !_efef {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_adbe );
return nil ,_ed .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_fgcc ,_deff :=_cacgb (_fgbf ,_adbe );if _deff !=nil {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_adbe ,_deff );
return nil ,_deff ;};_afec ._efgfa =_fgcc ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _bfafd *pdfFontSimple ;_bcaeb ,_ggaae :=_dde .NewStdFontByName (_dde .StdFontName (_adbe ._bfeb ));
if _ggaae {_dccbf :=_gdgca (_bcaeb );_afec ._efgfa =&_dccbf ;_bbea :=_ae .TraceToDirectObject (_dccbf .ToPdfObject ());_eafad ,_bcfe ,_gbgbc :=_geab (_bbea );if _gbgbc !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_adbe ,_dccbf );
return nil ,_gbgbc ;};for _ ,_dcbbf :=range _fgbf .Keys (){_eafad .Set (_dcbbf ,_fgbf .Get (_dcbbf ));};_bfafd ,_gbgbc =_beeeg (_eafad ,_bcfe ,_dccbf ._fbac );if _gbgbc !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_adbe ,_dccbf );
return nil ,_gbgbc ;};_bfafd ._feefe =_dccbf ._feefe ;_bfafd ._ffgba =_dccbf ._ffgba ;if _bfafd ._gfdb ==nil {_bfafd ._gfdb =_dccbf ._gfdb ;};}else {_bfafd ,_bedgc =_beeeg (_fgbf ,_adbe ,nil );if _bedgc !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_adbe ,_bedgc );
return nil ,_bedgc ;};};_bedgc =_bfafd .addEncoding ();if _bedgc !=nil {return nil ,_bedgc ;};if _ggaae {_bfafd .updateStandard14Font ();};if _ggaae &&_bfafd ._beaea ==nil &&_bfafd ._fbac ==nil {_fgb .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bfafd );
_fgb .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_bcaeb );};if len (_bfafd ._feefe )==0{_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_bfafd );};_afec ._efgfa =_bfafd ;
case "\u0054\u0079\u0070e\u0033":_ebaeg ,_gbece :=_afafe (_fgbf ,_adbe );if _gbece !=nil {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gbece );
return nil ,_gbece ;};_afec ._efgfa =_ebaeg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_bffe ,_feeac :=_eedc (_fgbf ,_adbe );if _feeac !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_feeac );
return nil ,_feeac ;};_afec ._efgfa =_bffe ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cgef ,_bgegf :=_fdef (_fgbf ,_adbe );if _bgegf !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_adbe ,_bgegf );
return nil ,_bgegf ;};_afec ._efgfa =_cgef ;default:_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_adbe );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_adbe );};return _afec ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfActionSound )ToPdfObject ()_ae .PdfObject {_bea .PdfAction .ToPdfObject ();_eca :=_bea ._bac ;_bgc :=_eca .PdfObject .(*_ae .PdfObjectDictionary );_bgc .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeSound )));_bgc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bea .Sound );
_bgc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bea .Volume );_bgc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bea .Synchronous );_bgc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bea .Repeat );_bgc .SetIfNotNil ("\u004d\u0069\u0078",_bea .Mix );
return _eca ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_bcgdb *PdfPattern )ToPdfObject ()_ae .PdfObject {_dgbed :=_bcgdb .getDict ();_dgbed .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dgbed .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_ae .MakeInteger (_bcgdb .PatternType ));
return _bcgdb ._ccdf ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_efff *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _ae .PdfObject ;Name _ae .PdfObject ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _ae .PdfObject ;FontFamily _ae .PdfObject ;FontStretch _ae .PdfObject ;FontWeight _ae .PdfObject ;Flags _ae .PdfObject ;FontBBox _ae .PdfObject ;ItalicAngle _ae .PdfObject ;Ascent _ae .PdfObject ;Descent _ae .PdfObject ;
Leading _ae .PdfObject ;CapHeight _ae .PdfObject ;XHeight _ae .PdfObject ;StemV _ae .PdfObject ;StemH _ae .PdfObject ;AvgWidth _ae .PdfObject ;MaxWidth _ae .PdfObject ;MissingWidth _ae .PdfObject ;FontFile _ae .PdfObject ;FontFile2 _ae .PdfObject ;FontFile3 _ae .PdfObject ;
CharSet _ae .PdfObject ;_gece int ;_ecff float64 ;*fontFile ;_cefa *_dde .TtfType ;

// Additional entries for CIDFonts
Style _ae .PdfObject ;Lang _ae .PdfObject ;FD _ae .PdfObject ;CIDSet _ae .PdfObject ;_cdbac *_ae .PdfIndirectObject ;};type pdfFontSimple struct{fontCommon ;_dfaa *_ae .PdfIndirectObject ;_feefe map[_ddd .CharCode ]float64 ;_beaea _ddd .TextEncoder ;_fbac _ddd .TextEncoder ;
_gfdb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _ae .PdfObject ;LastChar _ae .PdfObject ;Widths _ae .PdfObject ;Encoding _ae .PdfObject ;_ffgba *_dde .RuneCharSafeMap ;};

// ToPdfObject implements interface PdfModel.
func (_geg *PdfAnnotationText )ToPdfObject ()_ae .PdfObject {_geg .PdfAnnotation .ToPdfObject ();_ccdg :=_geg ._gggg ;_facc :=_ccdg .PdfObject .(*_ae .PdfObjectDictionary );if _geg .PdfAnnotationMarkup !=nil {_geg .PdfAnnotationMarkup .appendToPdfDictionary (_facc );
};_facc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0054\u0065\u0078\u0074"));_facc .SetIfNotNil ("\u004f\u0070\u0065\u006e",_geg .Open );_facc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_geg .Name );_facc .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_geg .State );
_facc .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_geg .StateModel );return _ccdg ;};

// ToPdfObject implements interface PdfModel.
func (_ece *PdfAnnotationPopup )ToPdfObject ()_ae .PdfObject {_ece .PdfAnnotation .ToPdfObject ();_ggdf :=_ece ._gggg ;_bec :=_ggdf .PdfObject .(*_ae .PdfObjectDictionary );_bec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0050\u006f\u0070u\u0070"));
_bec .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ece .Parent );_bec .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ece .Open );return _ggdf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fgdg *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_fgdg .Base .GetNumComponents ();_geadd :=int (vals [0])*N ;
if _geadd < 0||(_geadd +N -1)>=len (_fgdg ._cagcg ){_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_geadd );return nil ,ErrColorOutOfRange ;};_edba :=_fgdg ._cagcg [_geadd :_geadd +N ];
var _dfbd []float64 ;for _ ,_efcf :=range _edba {_dfbd =append (_dfbd ,float64 (_efcf )/255.0);};_feea ,_afab :=_fgdg .Base .ColorFromFloats (_dfbd );if _afab !=nil {return nil ,_afab ;};return _feea ,nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_efcfe *PdfPageResources )SetPatternByName (keyName _ae .PdfObjectName ,pattern _ae .PdfObject )error {if _efcfe .Pattern ==nil {_efcfe .Pattern =_ae .MakeDict ();};_efcff ,_eacb :=_ae .GetDict (_efcfe .Pattern );if !_eacb {return _ae .ErrTypeError ;
};_efcff .Set (keyName ,pattern );return nil ;};func _bdaac (_dceac *_ae .PdfObjectDictionary )(*PdfShadingType2 ,error ){_ecbag :=PdfShadingType2 {};_cdfg :=_dceac .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cdfg ==nil {_fgb .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_cadce ,_edccf :=_cdfg .(*_ae .PdfObjectArray );if !_edccf {_fgb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdfg );
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _cadce .Len ()!=4{_fgb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cadce .Len ());
return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_ecbag .Coords =_cadce ;if _fggbe :=_dceac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fggbe !=nil {_fggbe =_ae .TraceToDirectObject (_fggbe );
_dcdgc ,_fcgde :=_fggbe .(*_ae .PdfObjectArray );if !_fcgde {_fgb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fggbe );return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ecbag .Domain =_dcdgc ;};_cdfg =_dceac .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cdfg ==nil {_fgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ecbag .Function =[]PdfFunction {};if _gadcbe ,_bfde :=_cdfg .(*_ae .PdfObjectArray );_bfde {for _ ,_eafg :=range _gadcbe .Elements (){_gbgbag ,_ffdgc :=_bcgbg (_eafg );if _ffdgc !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffdgc );
return nil ,_ffdgc ;};_ecbag .Function =append (_ecbag .Function ,_gbgbag );};}else {_bcfgd ,_afcge :=_bcgbg (_cdfg );if _afcge !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_afcge );
return nil ,_afcge ;};_ecbag .Function =append (_ecbag .Function ,_bcfgd );};if _ffddde :=_dceac .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ffddde !=nil {_ffddde =_ae .TraceToDirectObject (_ffddde );_egbef ,_aaggb :=_ffddde .(*_ae .PdfObjectArray );
if !_aaggb {_fgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffddde );return nil ,_ae .ErrTypeError ;};if _egbef .Len ()!=2{_fgb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_egbef .Len ());
return nil ,ErrInvalidAttribute ;};_ecbag .Extend =_egbef ;};return &_ecbag ,nil ;};func (_bdae *PdfReader )newPdfAnnotationSoundFromDict (_abae *_ae .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_gbca :=PdfAnnotationSound {};_aefb ,_agbc :=_bdae .newPdfAnnotationMarkupFromDict (_abae );
if _agbc !=nil {return nil ,_agbc ;};_gbca .PdfAnnotationMarkup =_aefb ;_gbca .Name =_abae .Get ("\u004e\u0061\u006d\u0065");_gbca .Sound =_abae .Get ("\u0053\u006f\u0075n\u0064");return &_gbca ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_egab *PdfPageResources )SetXObjectByName (keyName _ae .PdfObjectName ,stream *_ae .PdfObjectStream )error {if _egab .XObject ==nil {_egab .XObject =_ae .MakeDict ();};_bcgec :=_ae .TraceToDirectObject (_egab .XObject );_gaceb ,_bfaea :=_bcgec .(*_ae .PdfObjectDictionary );
if !_bfaea {_fgb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_egab .XObject ,_bcgec );return _ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gaceb .Set (keyName ,stream );return nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_ffdc *PdfAcroForm ,_gdbc *PdfField ,_gecg *PdfAnnotationWidget )(*_ae .PdfObjectDictionary ,error );};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_gfba *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _gfba .Alternate ==nil {_fgb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gfba .N ==1{_fgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_faea :=NewPdfColorspaceDeviceGray ();return _faea .ImageToRGB (img );}else if _gfba .N ==3{_fgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _gfba .N ==4{_fgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fcffb :=NewPdfColorspaceDeviceCMYK ();return _fcffb .ImageToRGB (img );}else {return img ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fgb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gfba );
_afddf ,_bfcb :=_gfba .Alternate .ImageToRGB (img );_fgb .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_fgb .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_afddf );
return _afddf ,_bfcb ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_fdgd *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _fdgd .UnderlyingCS .GetNumComponents ();};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _ae .PdfObject ;AN _ae .PdfObject ;OP _ae .PdfObject ;JS _ae .PdfObject ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ggegc *PdfOutlineItem )ToPdfObject ()_ae .PdfObject {_bdgg :=_ggegc ._bgefe ;_agecf :=_bdgg .PdfObject .(*_ae .PdfObjectDictionary );_agecf .Set ("\u0054\u0069\u0074l\u0065",_ggegc .Title );if _ggegc .A !=nil {_agecf .Set ("\u0041",_ggegc .A );};
if _fdfc :=_agecf .Get ("\u0053\u0045");_fdfc !=nil {_agecf .Remove ("\u0053\u0045");};if _ggegc .C !=nil {_agecf .Set ("\u0043",_ggegc .C );};if _ggegc .Dest !=nil {_agecf .Set ("\u0044\u0065\u0073\u0074",_ggegc .Dest );};if _ggegc .F !=nil {_agecf .Set ("\u0046",_ggegc .F );
};if _ggegc .Count !=nil {_agecf .Set ("\u0043\u006f\u0075n\u0074",_ae .MakeInteger (*_ggegc .Count ));};if _ggegc .Next !=nil {_agecf .Set ("\u004e\u0065\u0078\u0074",_ggegc .Next .ToPdfObject ());};if _ggegc .First !=nil {_agecf .Set ("\u0046\u0069\u0072s\u0074",_ggegc .First .ToPdfObject ());
};if _ggegc .Prev !=nil {_agecf .Set ("\u0050\u0072\u0065\u0076",_ggegc .Prev .GetContext ().GetContainingPdfObject ());};if _ggegc .Last !=nil {_agecf .Set ("\u004c\u0061\u0073\u0074",_ggegc .Last .GetContext ().GetContainingPdfObject ());};if _ggegc .Parent !=nil {_agecf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ggegc .Parent .GetContext ().GetContainingPdfObject ());
};return _bdgg ;};func (_cadg *LTV )generateVRIKey (_bafdb *PdfSignature )(string ,error ){_gbadf ,_bdaff :=_aaaagg (_bafdb .Contents .Bytes ());if _bdaff !=nil {return "",_bdaff ;};return _ga .ToUpper (_cac .EncodeToString (_gbadf )),nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_bcac *_ae .PdfIndirectObject ;Certs []*_ae .PdfObjectStream ;OCSPs []*_ae .PdfObjectStream ;CRLs []*_ae .PdfObjectStream ;VRI map[string ]*VRI ;_ccceg map[string ]*_ae .PdfObjectStream ;_gefb map[string ]*_ae .PdfObjectStream ;_fdafc map[string ]*_ae .PdfObjectStream ;
};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_afgc *Image )GetParamsDict ()*_ae .PdfObjectDictionary {_cbccb :=_ae .MakeDict ();_cbccb .Set ("\u0057\u0069\u0064t\u0068",_ae .MakeInteger (_afgc .Width ));_cbccb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ae .MakeInteger (_afgc .Height ));_cbccb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ae .MakeInteger (int64 (_afgc .ColorComponents )));
_cbccb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ae .MakeInteger (_afgc .BitsPerComponent ));return _cbccb ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_afc :=NewPdfAnnotation ();_ccd :=&PdfAnnotationText {};_ccd .PdfAnnotation =_afc ;_ccd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afc .SetContext (_ccd );return _ccd ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_ae .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_ae .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecac *PdfShadingType7 )ToPdfObject ()_ae .PdfObject {_ecac .PdfShading .ToPdfObject ();_gbfec ,_cbga :=_ecac .getShadingDict ();if _cbga !=nil {_fgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ecac .BitsPerCoordinate !=nil {_gbfec .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ecac .BitsPerCoordinate );};if _ecac .BitsPerComponent !=nil {_gbfec .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ecac .BitsPerComponent );
};if _ecac .BitsPerFlag !=nil {_gbfec .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ecac .BitsPerFlag );};if _ecac .Decode !=nil {_gbfec .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ecac .Decode );};if _ecac .Function !=nil {if len (_ecac .Function )==1{_gbfec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecac .Function [0].ToPdfObject ());
}else {_egdeg :=_ae .MakeArray ();for _ ,_efcad :=range _ecac .Function {_egdeg .Append (_efcad .ToPdfObject ());};_gbfec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egdeg );};};return _ecac ._dgbdcg ;};func _egba (_dccbd *PdfField )[]*PdfField {_dfafgb :=[]*PdfField {_dccbd };
for _ ,_ccged :=range _dccbd .Kids {_dfafgb =append (_dfafgb ,_egba (_ccged )...);};return _dfafgb ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_bdgc *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_fgb .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_fgb .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_fgb .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_fgb .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_cfce ,_accb :=_fae .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cgde ,img ._dgegd );if _accb !=nil {return Image {},_accb ;};_gdda ,_accb :=_fae .NRGBAConverter .Convert (_cfce );if _accb !=nil {return Image {},_accb ;
};return _acgba (_gdda .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
func (_gace *PdfAnnotationPolyLine )ToPdfObject ()_ae .PdfObject {_gace .PdfAnnotation .ToPdfObject ();_eac :=_gace ._gggg ;_dbbb :=_eac .PdfObject .(*_ae .PdfObjectDictionary );_gace .PdfAnnotationMarkup .appendToPdfDictionary (_dbbb );_dbbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_dbbb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gace .Vertices );_dbbb .SetIfNotNil ("\u004c\u0045",_gace .LE );_dbbb .SetIfNotNil ("\u0042\u0053",_gace .BS );_dbbb .SetIfNotNil ("\u0049\u0043",_gace .IC );_dbbb .SetIfNotNil ("\u0042\u0045",_gace .BE );
_dbbb .SetIfNotNil ("\u0049\u0054",_gace .IT );_dbbb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gace .Measure );return _eac ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_aede *PdfAppender )UpdateObject (obj _ae .PdfObject ){_aede .replaceObject (obj ,obj );if _ ,_edgc :=_aede ._dcdc [obj ];!_edgc {_aede ._eddg =append (_aede ._eddg ,obj );_aede ._dcdc [obj ]=struct{}{};};};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_dbed *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ed .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_gdcg :=field .V ;if _gdcg ==nil {return _ed .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_geeb :=pageNum -1;
if _geeb < 0||_geeb > len (_dbed ._gbgb )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_egga :=_dbed .Reader .PageList [_geeb ];field .P =_egga .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_ae .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_egga .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _dbed ._becf ==_dbed ._bdac .AcroForm {_dbed ._becf =_dbed .Reader .AcroForm ;};_geeg :=_dbed ._becf ;if _geeg ==nil {_geeg =NewPdfAcroForm ();};_geeg .SigFlags =_ae .MakeInteger (3);
if _geeg .NeedAppearances !=nil {_geeg .NeedAppearances =nil ;};_dcab :=append (_geeg .AllFields (),field .PdfField );_geeg .Fields =&_dcab ;_dbed .ReplaceAcroForm (_geeg );_dbed .UpdatePage (_egga );_dbed ._gbgb [_geeb ]=_egga ;if _ ,_gcaa :=field .V .GetDocMDPPermission ();
_gcaa {_dbed ._egfe =NewPermissions (field .V );};return nil ;};func (_bdbdf *PdfPage )flattenFieldsWithOpts (_eedg FieldAppearanceGenerator ,_cdad *FieldFlattenOpts ,_cdee map[*PdfAnnotation ]bool )error {var _dfbb []*PdfAnnotation ;if _eedg !=nil {if _eeaa :=_eedg .WrapContentStream (_bdbdf );
_eeaa !=nil {return _eeaa ;};};_afaf ,_gfaf :=_bdbdf .GetAnnotations ();if _gfaf !=nil {return _gfaf ;};for _ ,_gbbc :=range _afaf {_eedff ,_abab :=_cdee [_gbbc ];if !_abab &&_cdad .AnnotFilterFunc !=nil {if _ ,_fbbg :=_gbbc .GetContext ().(*PdfAnnotationWidget );
!_fbbg {_abab =_cdad .AnnotFilterFunc (_gbbc );};};if !_abab {_dfbb =append (_dfbb ,_gbbc );continue ;};switch _gbbc .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_efgfd ,_edfaf ,_babeg :=_bcagf (_gbbc );if _babeg !=nil {if !_eedff {_fgb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_babeg );
continue ;};if _efgfd ==nil {continue ;};_bdcee :=_bdbdf .Resources .GenerateXObjectName ();_bdbdf .Resources .SetXObjectFormByName (_bdcee ,_efgfd );_gcfd ,_beddc ,_babeg :=_gdbb (_efgfd );if _babeg !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_babeg );
}else {_feaf :=_fc .IdentityMatrix ();_feaf =_feaf .Translate (-_gcfd .Llx ,-_gcfd .Lly );if _beddc {_gbgba :=0.0;if _gcfd .Width ()> 0{_gbgba =_edfaf .Width ()/_gcfd .Width ();};_dbad :=0.0;if _gcfd .Height ()> 0{_dbad =_edfaf .Height ()/_gcfd .Height ();
};_feaf =_feaf .Scale (_gbgba ,_dbad );};_edfaf .Transform (_feaf );};_bbgc :=_ce .Min (_edfaf .Llx ,_edfaf .Urx );_gbeg :=_ce .Min (_edfaf .Lly ,_edfaf .Ury );var _bged []string ;_bged =append (_bged ,"\u0071");_bged =append (_bged ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_bbgc ,_gbeg ));
_bged =append (_bged ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bdcee .String ()));_bged =append (_bged ,"\u0051");_fcdaa :=_ga .Join (_bged ,"\u000a");_babeg =_bdbdf .AppendContentStream (_fcdaa );if _babeg !=nil {return _babeg ;};if _efgfd .Resources !=nil {_gbceb ,_cdfc :=_ae .GetDict (_efgfd .Resources .Font );
if _cdfc {for _ ,_daac :=range _gbceb .Keys (){if !_bdbdf .Resources .HasFontByName (_daac ){_bdbdf .Resources .SetFontByName (_daac ,_gbceb .Get (_daac ));};};};};};if len (_dfbb )> 0{_bdbdf ._gacdb =_dfbb ;}else {_bdbdf ._gacdb =[]*PdfAnnotation {};};
return nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_agfca *PdfPage )SetContentStreams (cStreams []string ,encoder _ae .StreamEncoder )error {if len (cStreams )==0{_agfca .Contents =nil ;return nil ;};if encoder ==nil {encoder =_ae .NewRawEncoder ();};var _bdcaf []*_ae .PdfObjectStream ;for _ ,_fcca :=range cStreams {_cfaa :=&_ae .PdfObjectStream {};
_gbeda :=encoder .MakeStreamDict ();_bbag ,_dgaag :=encoder .EncodeBytes ([]byte (_fcca ));if _dgaag !=nil {return _dgaag ;};_gbeda .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ae .MakeInteger (int64 (len (_bbag ))));_cfaa .PdfObjectDictionary =_gbeda ;
_cfaa .Stream =_bbag ;_bdcaf =append (_bdcaf ,_cfaa );};if len (_bdcaf )==1{_agfca .Contents =_bdcaf [0];}else {_cdcb :=_ae .MakeArray ();for _ ,_fgbed :=range _bdcaf {_cdcb .Append (_fgbed );};_agfca .Contents =_cdcb ;};return nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_dbbge *PdfFont )BytesToCharcodes (data []byte )[]_ddd .CharCode {_fgb .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _bgfg ,_afffdd :=_dbbge ._efgfa .(*pdfFontType0 );_afffdd &&_bgfg ._dbfa !=nil {if _acgb ,_ccccc :=_bgfg .bytesToCharcodes (data );_ccccc {return _acgb ;};};var (_feeae =make ([]_ddd .CharCode ,0,len (data )+len (data )%2);_ebfd =_dbbge .baseFields ();
);if _ebfd ._babge !=nil {if _cgfd ,_gcgcb :=_ebfd ._babge .BytesToCharcodes (data );_gcgcb {for _ ,_cbacc :=range _cgfd {_feeae =append (_feeae ,_ddd .CharCode (_cbacc ));};return _feeae ;};};if _ebfd .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _gacd :=0;_gacd < len (data );_gacd +=2{_cgee :=uint16 (data [_gacd ])<<8|uint16 (data [_gacd +1]);_feeae =append (_feeae ,_ddd .CharCode (_cgee ));};}else {for _ ,_eaee :=range data {_feeae =append (_feeae ,_ddd .CharCode (_eaee ));
};};return _feeae ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_dedf :=PdfColorCalRGB {a ,b ,c };return &_dedf ;};func (_dfff *PdfPage )setContainer (_geda *_ae .PdfIndirectObject ){_geda .PdfObject =_dfff ._efdff ;_dfff ._dfgbfb =_geda ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_afg *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_feag :=vals [0];if _feag < 0.0||_feag > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_feag );
return nil ,ErrColorOutOfRange ;};_defb :=vals [1];if _defb < 0.0||_defb > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_feag );return nil ,ErrColorOutOfRange ;
};_ecab :=vals [2];if _ecab < 0.0||_ecab > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_feag );return nil ,ErrColorOutOfRange ;};_adge :=NewPdfColorDeviceRGB (_feag ,_defb ,_ecab );
return _adge ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gaece OutlineDest )ToPdfObject ()_ae .PdfObject {if (_gaece .PageObj ==nil &&_gaece .Page < 0)||_gaece .Mode ==""{return _ae .MakeNull ();};_adbagd :=_ae .MakeArray ();if _gaece .PageObj !=nil {_adbagd .Append (_gaece .PageObj );}else {_adbagd .Append (_ae .MakeInteger (_gaece .Page ));
};_adbagd .Append (_ae .MakeName (_gaece .Mode ));switch _gaece .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_adbagd .Append (_ae .MakeFloat (_gaece .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_adbagd .Append (_ae .MakeFloat (_gaece .X ));
case "\u0058\u0059\u005a":_adbagd .Append (_ae .MakeFloat (_gaece .X ));_adbagd .Append (_ae .MakeFloat (_gaece .Y ));_adbagd .Append (_ae .MakeFloat (_gaece .Zoom ));default:_adbagd .Set (1,_ae .MakeName ("\u0046\u0069\u0074"));};return _adbagd ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_bgafe .Lock ();defer _bgafe .Unlock ();_aafeg =producer };func _gdbb (_ebafb *XObjectForm )(*PdfRectangle ,bool ,error ){if _facgb ,_ggfdd :=_ebafb .BBox .(*_ae .PdfObjectArray );_ggfdd {_ebdce ,_degdd :=NewPdfRectangle (*_facgb );
if _degdd !=nil {return nil ,false ,_degdd ;};if _dgde ,_ccgga :=_ebafb .Matrix .(*_ae .PdfObjectArray );_ccgga {_adcf ,_acbe :=_dgde .ToFloat64Array ();if _acbe !=nil {return nil ,false ,_acbe ;};_eegf :=_fc .IdentityMatrix ();if len (_adcf )==6{_eegf =_fc .NewMatrix (_adcf [0],_adcf [1],_adcf [2],_adcf [3],_adcf [4],_adcf [5]);
};_ebdce .Transform (_eegf );return _ebdce ,true ,nil ;};return _ebdce ,false ,nil ;};return nil ,false ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// GetPage returns the PdfPage model for the specified page number.
func (_bfcdb *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _bfcdb ._dgadd .GetCrypter ()!=nil &&!_bfcdb ._dgadd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_bfcdb ._cafea )< pageNumber {return nil ,_ed .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_gbcfe :=pageNumber -1;if _gbcfe < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_dddff :=_bfcdb .PageList [_gbcfe ];
return _dddff ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_afbg *Image )ColorAt (x ,y int )(_ca .Color ,error ){_debebc :=_fae .BytesPerLine (int (_afbg .Width ),int (_afbg .BitsPerComponent ),_afbg .ColorComponents );switch _afbg .ColorComponents {case 1:return _fae .ColorAtGrayscale (x ,y ,int (_afbg .BitsPerComponent ),_debebc ,_afbg .Data ,_afbg ._dgegd );
case 3:return _fae .ColorAtNRGBA (x ,y ,int (_afbg .Width ),_debebc ,int (_afbg .BitsPerComponent ),_afbg .Data ,_afbg ._cgde ,_afbg ._dgegd );case 4:return _fae .ColorAtCMYK (x ,y ,int (_afbg .Width ),_afbg .Data ,_afbg ._dgegd );};_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_afbg .ColorComponents ,_afbg .BitsPerComponent );
return nil ,_ed .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// WriteString outputs the object as it is to be written to file.
func (_baffb *pdfSignDictionary )WriteString ()string {_baffb ._cceab =0;_baffb ._ccced =0;_baffb ._dbcffd =0;_baffb ._aeegab =0;_cgaeb :=_fga .NewBuffer (nil );_cgaeb .WriteString ("\u003c\u003c");for _ ,_aggge :=range _baffb .Keys (){_ddffa :=_baffb .Get (_aggge );
switch _aggge {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_cgaeb .WriteString (_aggge .WriteString ());_cgaeb .WriteString ("\u0020");_baffb ._dbcffd =_cgaeb .Len ();_cgaeb .WriteString (_ddffa .WriteString ());_cgaeb .WriteString ("\u0020");_baffb ._aeegab =_cgaeb .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_cgaeb .WriteString (_aggge .WriteString ());_cgaeb .WriteString ("\u0020");_baffb ._cceab =_cgaeb .Len ();_cgaeb .WriteString (_ddffa .WriteString ());_cgaeb .WriteString ("\u0020");_baffb ._ccced =_cgaeb .Len ()-1;
default:_cgaeb .WriteString (_aggge .WriteString ());_cgaeb .WriteString ("\u0020");_cgaeb .WriteString (_ddffa .WriteString ());};};_cgaeb .WriteString ("\u003e\u003e");return _cgaeb .String ();};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_bafd *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_cecc :=_dag .NewReader (img .getBase ());_dcecd :=_fae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_bafd .AlternateSpace .GetNumComponents (),nil ,img ._cgde ,nil );
_feb :=_dag .NewWriter (_dcecd );_eceb :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_fgb .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_fgb .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_bafd .TintTransform );_bfgfd :=_bafd .AlternateSpace .DecodeArray ();var (_bdafg uint32 ;_eeaf error ;);for {_bdafg ,_eeaf =_cecc .ReadSample ();
if _eeaf ==_fgg .EOF {break ;};if _eeaf !=nil {return img ,_eeaf ;};_acdee :=float64 (_bdafg )/_eceb ;_degg ,_efgfg :=_bafd .TintTransform .Evaluate ([]float64 {_acdee });if _efgfg !=nil {return img ,_efgfg ;};for _ffccc ,_fged :=range _degg {_eggg :=_fae .LinearInterpolate (_fged ,_bfgfd [_ffccc *2],_bfgfd [_ffccc *2+1],0,1);
if _efgfg =_feb .WriteSample (uint32 (_eggg *_eceb ));_efgfg !=nil {return img ,_efgfg ;};};};return _bafd .AlternateSpace .ImageToRGB (_acgba (&_dcecd ));};func (_bbec *PdfWriter )AttachFile (file *EmbeddedFile )error {_adeab :=_bbec ._ddceg ;if _adeab ==nil {_adeab =_ebceg ();
};_abbc :=_adeab .addEmbeddedFile (file );if _abbc !=nil {return _abbc ;};_bbec ._ddceg =_adeab ;return nil ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _fgg .ReadSeeker )(*CompliancePdfReader ,error ){const _cdbdf ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_cfeg ,_bbcb :=_fcdda (rs ,&ReaderOpts {ComplianceMode :true },false ,_cdbdf );
if _bbcb !=nil {return nil ,_bbcb ;};return &CompliancePdfReader {PdfReader :_cfeg },nil ;};func (_cagb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_cagb .fontCommon };

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_egf :=NewPdfAction ();_caf :=&PdfActionSubmitForm {};_caf .PdfAction =_egf ;_egf .SetContext (_caf );return _caf ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_ddgbg *PdfPage )AddContentStreamByString (contentStr string )error {_gage ,_dgfgg :=_ae .MakeStream ([]byte (contentStr ),_ae .NewFlateEncoder ());if _dgfgg !=nil {return _dgfgg ;};if _ddgbg .Contents ==nil {_ddgbg .Contents =_gage ;}else {_gfdbg :=_ae .TraceToDirectObject (_ddgbg .Contents );
_cbec ,_abgag :=_gfdbg .(*_ae .PdfObjectArray );if !_abgag {_cbec =_ae .MakeArray (_gfdbg );};_cbec .Append (_gage );_ddgbg .Contents =_cbec ;};return nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_eaeea *_ae .PdfIndirectObject ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_ae .PdfObjectStream ;Data []byte ;_aedgc *_ae .PdfIndirectObject ;_acac *_ae .PdfObjectStream ;};func (_cccebd *LTV )getCRLs (_aggad []*_ddc .Certificate )([][]byte ,error ){_afdb :=make ([][]byte ,0,len (_aggad ));for _ ,_gbfce :=range _aggad {for _ ,_fcdb :=range _gbfce .CRLDistributionPoints {if _cccebd .CertClient .IsCA (_gbfce ){continue ;
};_gacge ,_edgge :=_cccebd .CRLClient .MakeRequest (_fcdb ,_gbfce );if _edgge !=nil {_fgb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_edgge );
continue ;};_afdb =append (_afdb ,_gacge );};};return _afdb ,nil ;};func _edbac (_bccdg *PdfPage ){_fecdf :=_be .GetLicenseKey ();if _fecdf !=nil &&_fecdf .IsLicensed (){return ;};_cdcaf :=_ae .PdfObjectName ("\u0055\u0046\u0031");if !_bccdg .Resources .HasFontByName (_cdcaf ){_bccdg .Resources .SetFontByName (_cdcaf ,DefaultFont ().ToPdfObject ());
};var _bcefde []string ;_bcefde =append (_bcefde ,"\u0071");_bcefde =append (_bcefde ,"\u0042\u0054");_bcefde =append (_bcefde ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_cdcaf .String ()));_bcefde =append (_bcefde ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_bcefde =append (_bcefde ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_gbbfb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_bcefde =append (_bcefde ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_gbbfb ));_bcefde =append (_bcefde ,"\u0045\u0054");_bcefde =append (_bcefde ,"\u0051");_bbebb :=_ga .Join (_bcefde ,"\u000a");_bccdg .AddContentStreamByString (_bbebb );_bccdg .ToPdfObject ();
};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_fefa :=&PdfAppender {_fgbgd :reader ._abcc ,Reader :reader ,_bfgf :reader ._dgadd ,_agcd :reader ._ccfad };_beeb ,_cagc :=_fefa ._fgbgd .Seek (0,_fgg .SeekEnd );
if _cagc !=nil {return nil ,_cagc ;};_fefa ._cbac =_beeb ;if _ ,_cagc =_fefa ._fgbgd .Seek (0,_fgg .SeekStart );_cagc !=nil {return nil ,_cagc ;};_fefa ._bdac ,_cagc =NewPdfReaderWithOpts (_fefa ._fgbgd ,opts );if _cagc !=nil {return nil ,_cagc ;};for _ ,_fgae :=range _fefa .Reader .GetObjectNums (){if _fefa ._cfae < _fgae {_fefa ._cfae =_fgae ;
};};_fefa ._gdec =_fefa ._bfgf .GetXrefTable ();_fefa ._dbee =_fefa ._bfgf .GetXrefOffset ();_fefa ._gbgb =append (_fefa ._gbgb ,_fefa ._bdac .PageList ...);_fefa ._dcdc =make (map[_ae .PdfObject ]struct{});_fefa ._beeca =make (map[_ae .PdfObject ]int64 );
_fefa ._cfac =make (map[_ae .PdfObject ]struct{});_fefa ._becf =_fefa ._bdac .AcroForm ;_fefa ._dgbd =_fefa ._bdac .DSS ;if opts !=nil {_fefa ._ffeb =opts .Password ;};if encryptOptions !=nil {_fefa ._gca =encryptOptions ;};return _fefa ,nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_ddff *PdfAnnotation )ToPdfObject ()_ae .PdfObject {_ggc :=_ddff ._gggg ;_gbab :=_ggc .PdfObject .(*_ae .PdfObjectDictionary );_gbab .Clear ();_gbab .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0041\u006e\u006eo\u0074"));_gbab .SetIfNotNil ("\u0052\u0065\u0063\u0074",_ddff .Rect );
_gbab .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ddff .Contents );_gbab .SetIfNotNil ("\u0050",_ddff .P );_gbab .SetIfNotNil ("\u004e\u004d",_ddff .NM );_gbab .SetIfNotNil ("\u004d",_ddff .M );_gbab .SetIfNotNil ("\u0046",_ddff .F );
_gbab .SetIfNotNil ("\u0041\u0050",_ddff .AP );_gbab .SetIfNotNil ("\u0041\u0053",_ddff .AS );_gbab .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_ddff .Border );_gbab .SetIfNotNil ("\u0043",_ddff .C );_gbab .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ddff .StructParent );
_gbab .SetIfNotNil ("\u004f\u0043",_ddff .OC );return _ggc ;};func _baddc (_ggafad _ae .PdfObject )(*PdfPattern ,error ){_ebbcg :=&PdfPattern {};var _ecbbf *_ae .PdfObjectDictionary ;if _cecac ,_gbafe :=_ae .GetIndirect (_ggafad );_gbafe {_ebbcg ._ccdf =_cecac ;
_fggdc ,_afagf :=_cecac .PdfObject .(*_ae .PdfObjectDictionary );if !_afagf {_fgb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_cecac .PdfObject );
return nil ,_ae .ErrTypeError ;};_ecbbf =_fggdc ;}else if _aggec ,_fgfcg :=_ae .GetStream (_ggafad );_fgfcg {_ebbcg ._ccdf =_aggec ;_ecbbf =_aggec .PdfObjectDictionary ;}else {_fgb .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ggafad );
return nil ,_ae .ErrTypeError ;};_cgfea :=_ecbbf .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cgfea ==nil {_fgb .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fddc ,_adgfd :=_cgfea .(*_ae .PdfObjectInteger );if !_adgfd {_fgb .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cgfea );
return nil ,_ae .ErrTypeError ;};if *_fddc !=1&&*_fddc !=2{_fgb .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fddc );return nil ,_ae .ErrRangeError ;
};_ebbcg .PatternType =int64 (*_fddc );switch *_fddc {case 1:_ccgea ,_cgbac :=_eabcb (_ecbbf );if _cgbac !=nil {return nil ,_cgbac ;};_ccgea .PdfPattern =_ebbcg ;_ebbcg ._adgf =_ccgea ;return _ebbcg ,nil ;case 2:_ffgga ,_edcf :=_affea (_ecbbf );if _edcf !=nil {return nil ,_edcf ;
};_ffgga .PdfPattern =_ebbcg ;_ebbcg ._adgf =_ffgga ;return _ebbcg ,nil ;};return nil ,_ed .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_edga *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _edga .Range };var _ pdfFont =(*pdfCIDFontType0 )(nil );

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _db .Time ;ModTime _db .Time ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_fce *PdfColorspaceCalGray )ToPdfObject ()_ae .PdfObject {_bfaf :=&_ae .PdfObjectArray {};_bfaf .Append (_ae .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_cdbdc :=_ae .MakeDict ();if _fce .WhitePoint !=nil {_cdbdc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ae .MakeArray (_ae .MakeFloat (_fce .WhitePoint [0]),_ae .MakeFloat (_fce .WhitePoint [1]),_ae .MakeFloat (_fce .WhitePoint [2])));
}else {_fgb .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _fce .BlackPoint !=nil {_cdbdc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ae .MakeArray (_ae .MakeFloat (_fce .BlackPoint [0]),_ae .MakeFloat (_fce .BlackPoint [1]),_ae .MakeFloat (_fce .BlackPoint [2])));
};_cdbdc .Set ("\u0047\u0061\u006dm\u0061",_ae .MakeFloat (_fce .Gamma ));_bfaf .Append (_cdbdc );if _fce ._fgcfc !=nil {_fce ._fgcfc .PdfObject =_bfaf ;return _fce ._fgcfc ;};return _bfaf ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_bgafe .Lock ();defer _bgafe .Unlock ();_gcecg =author };

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_caaea *PdfReader )PageFromIndirectObject (ind *_ae .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_caaea .PageList )!=len (_caaea ._cafea ){return nil ,0,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _bdccf ,_afecf :=range _caaea ._cafea {if _afecf ==ind {return _caaea .PageList [_bdccf ],_bdccf +1,nil ;};};return nil ,0,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_geaeg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_edfa *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_eggbf :=_dag .NewReader (img .getBase ());_dbggg :=_fae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fdabc :=_dag .NewWriter (_dbggg );
_bgfda :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_aggac :=make ([]uint32 ,3);var (_fecg uint32 ;ANorm ,X ,Y ,Z ,_fcgc ,_ccfg ,_aaaa float64 ;_aded error ;);for {_fecg ,_aded =_eggbf .ReadSample ();if _aded ==_fgg .EOF {break ;}else if _aded !=nil {return img ,_aded ;
};ANorm =float64 (_fecg )/_bgfda ;X =_edfa .WhitePoint [0]*_ce .Pow (ANorm ,_edfa .Gamma );Y =_edfa .WhitePoint [1]*_ce .Pow (ANorm ,_edfa .Gamma );Z =_edfa .WhitePoint [2]*_ce .Pow (ANorm ,_edfa .Gamma );_fcgc =3.240479*X +-1.537150*Y +-0.498535*Z ;_ccfg =-0.969256*X +1.875992*Y +0.041556*Z ;
_aaaa =0.055648*X +-0.204043*Y +1.057311*Z ;_fcgc =_ce .Min (_ce .Max (_fcgc ,0),1.0);_ccfg =_ce .Min (_ce .Max (_ccfg ,0),1.0);_aaaa =_ce .Min (_ce .Max (_aaaa ,0),1.0);_aggac [0]=uint32 (_fcgc *_bgfda );_aggac [1]=uint32 (_ccfg *_bgfda );_aggac [2]=uint32 (_aaaa *_bgfda );
if _aded =_fdabc .WriteSamples (_aggac );_aded !=nil {return img ,_aded ;};};return _acgba (&_dbggg ),nil ;};func _agbb (_cgbce *PdfField ,_cbcg _ae .PdfObject ){for _ ,_agafd :=range _cgbce .Annotations {_agafd .AS =_cbcg ;_agafd .ToPdfObject ();};};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_edfe :=NewPdfAnnotation ();_gfgb :=&PdfAnnotationInk {};_gfgb .PdfAnnotation =_edfe ;_gfgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edfe .SetContext (_gfgb );return _gfgb ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_abed *PdfPageResources )HasExtGState (keyName _ae .PdfObjectName )bool {_ ,_ecdgbc :=_abed .GetFontByName (keyName );return _ecdgbc ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_ggeg :=&PdfColorPatternType2 {};return _ggeg };

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_ffddg *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ffddg .AlternateSpace ==nil {return nil ,_ed .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _ffddg .AlternateSpace .ColorToRGB (color );};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fbbge *PdfPageResources )HasXObjectByName (keyName _ae .PdfObjectName )bool {_eabce ,_ :=_fbbge .GetXObjectByName (keyName );return _eabce !=nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_ebdcc int64 ;_cbebe int64 ;_dfdf int64 ;_adeac int64 ;_faeeb int64 ;_accdd int64 ;_begc byte ;_agfdd int64 ;_adbce int64 ;};

// ToPdfObject implements interface PdfModel.
func (_gbag *PdfAnnotationStrikeOut )ToPdfObject ()_ae .PdfObject {_gbag .PdfAnnotation .ToPdfObject ();_bfab :=_gbag ._gggg ;_eebf :=_bfab .PdfObject .(*_ae .PdfObjectDictionary );_gbag .PdfAnnotationMarkup .appendToPdfDictionary (_eebf );_eebf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_eebf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gbag .QuadPoints );return _bfab ;};

// ToPdfObject converts date to a PDF string object.
func (_gfece *PdfDate )ToPdfObject ()_ae .PdfObject {_dadac :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_gfece ._ebdcc ,_gfece ._cbebe ,_gfece ._dfdf ,_gfece ._adeac ,_gfece ._faeeb ,_gfece ._accdd ,_gfece ._begc ,_gfece ._agfdd ,_gfece ._adbce );
return _ae .MakeString (_dadac );};

// ToPdfObject implements interface PdfModel.
func (_daff *PdfFilespec )ToPdfObject ()_ae .PdfObject {_fdga :=_daff .getDict ();_fdga .Clear ();_fdga .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_fdga .SetIfNotNil ("\u0046\u0053",_daff .FS );
_fdga .SetIfNotNil ("\u0046",_daff .F );_fdga .SetIfNotNil ("\u0055\u0046",_daff .UF );_fdga .SetIfNotNil ("\u0044\u004f\u0053",_daff .DOS );_fdga .SetIfNotNil ("\u004d\u0061\u0063",_daff .Mac );_fdga .SetIfNotNil ("\u0055\u006e\u0069\u0078",_daff .Unix );
_fdga .SetIfNotNil ("\u0049\u0044",_daff .ID );_fdga .SetIfNotNil ("\u0056",_daff .V );_fdga .SetIfNotNil ("\u0045\u0046",_daff .EF );_fdga .SetIfNotNil ("\u0052\u0046",_daff .RF );_fdga .SetIfNotNil ("\u0044\u0065\u0073\u0063",_daff .Desc );_fdga .SetIfNotNil ("\u0043\u0049",_daff .CI );
_fdga .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_daff .AFRelationship );return _daff ._acaa ;};var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbbdg *PdfShadingType4 )ToPdfObject ()_ae .PdfObject {_gbbdg .PdfShading .ToPdfObject ();_fbdab ,_gcaeg :=_gbbdg .getShadingDict ();if _gcaeg !=nil {_fgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gbbdg .BitsPerCoordinate !=nil {_fbdab .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gbbdg .BitsPerCoordinate );};if _gbbdg .BitsPerComponent !=nil {_fbdab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gbbdg .BitsPerComponent );
};if _gbbdg .BitsPerFlag !=nil {_fbdab .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gbbdg .BitsPerFlag );};if _gbbdg .Decode !=nil {_fbdab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gbbdg .Decode );};if _gbbdg .Function !=nil {if len (_gbbdg .Function )==1{_fbdab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbbdg .Function [0].ToPdfObject ());
}else {_fbbb :=_ae .MakeArray ();for _ ,_befcg :=range _gbbdg .Function {_fbbb .Append (_befcg .ToPdfObject ());};_fbdab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbbb );};};return _gbbdg ._dgbdcg ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_egcb *PdfFieldSignature )ToPdfObject ()_ae .PdfObject {if _egcb .PdfAnnotationWidget !=nil {_egcb .PdfAnnotationWidget .ToPdfObject ();};_egcb .PdfField .ToPdfObject ();_caff :=_egcb ._fcfc ;_faefg :=_caff .PdfObject .(*_ae .PdfObjectDictionary );
_faefg .SetIfNotNil ("\u0046\u0054",_ae .MakeName ("\u0053\u0069\u0067"));_faefg .SetIfNotNil ("\u004c\u006f\u0063\u006b",_egcb .Lock );_faefg .SetIfNotNil ("\u0053\u0056",_egcb .SV );if _egcb .V !=nil {_faefg .SetIfNotNil ("\u0056",_egcb .V .ToPdfObject ());
};return _caff ;};

// SetContext sets the sub annotation (context).
func (_ggab *PdfAnnotation )SetContext (ctx PdfModel ){_ggab ._edbg =ctx };

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_dcgac *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func _feage (_cgcfg _ae .PdfObject )(map[_ddd .CharCode ]float64 ,error ){if _cgcfg ==nil {return nil ,nil ;};_ddbgc ,_cgcfa :=_ae .GetArray (_cgcfg );if !_cgcfa {return nil ,nil ;
};_agfg :=map[_ddd .CharCode ]float64 {};_fcdc :=_ddbgc .Len ();for _ggda :=0;_ggda < _fcdc -1;_ggda ++{_cbdf :=_ae .TraceToDirectObject (_ddbgc .Get (_ggda ));_ebfae ,_aeefb :=_ae .GetIntVal (_cbdf );if !_aeefb {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ggda ,_cbdf );
};_ggda ++;if _ggda > _fcdc -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ddbgc );};_dgfb :=_ae .TraceToDirectObject (_ddbgc .Get (_ggda ));
switch _dgfb .(type ){case *_ae .PdfObjectArray :_aebd ,_ :=_ae .GetArray (_dgfb );if _gabfe ,_beecac :=_aebd .ToFloat64Array ();_beecac ==nil {for _deefe :=0;_deefe < len (_gabfe );_deefe ++{_agfg [_ddd .CharCode (_ebfae +_deefe )]=_gabfe [_deefe ];};
}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ggda ,_dgfb );};case *_ae .PdfObjectInteger :_adgad ,_cabee :=_ae .GetIntVal (_dgfb );
if !_cabee {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ggda ,_dgfb );};_ggda ++;if _ggda > _fcdc -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ddbgc );
};_beafda :=_ddbgc .Get (_ggda );_bgccb ,_gcgd :=_ae .GetNumberAsFloat (_beafda );if _gcgd !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ggda ,_beafda );
};for _gafgd :=_ebfae ;_gafgd <=_adgad ;_gafgd ++{_agfg [_ddd .CharCode (_gafgd )]=_bgccb ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ggda ,_dgfb );
};};return _agfg ,nil ;};func _affb (_gdbbf *_ae .PdfObjectDictionary ){_caaed ,_bcefd :=_ae .GetArray (_gdbbf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_caabf ,_cadc :=_ae .GetIntVal (_gdbbf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_bdecg ,_debfc :=_ae .GetIntVal (_gdbbf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _bcefd &&_cadc &&_debfc {_bcca :=_caaed .Len ();if _bcca !=_bdecg -_caabf +1{_fgb .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_bcca ,_bdecg );
_cebg :=_ae .PdfObjectInteger (_caabf +_bcca -1);_gdbbf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_cebg );};};};func (_eedb *PdfReader )newPdfAnnotationStrikeOut (_eefg *_ae .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_afa :=PdfAnnotationStrikeOut {};
_fcacc ,_dgbf :=_eedb .newPdfAnnotationMarkupFromDict (_eefg );if _dgbf !=nil {return nil ,_dgbf ;};_afa .PdfAnnotationMarkup =_fcacc ;_afa .QuadPoints =_eefg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_afa ,nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_aaa :=NewPdfAnnotation ();_bcae :=&PdfAnnotation3D {};_bcae .PdfAnnotation =_aaa ;_aaa .SetContext (_bcae );return _bcae ;};

// B returns the value of the blue component of the color.
func (_fgfc *PdfColorDeviceRGB )B ()float64 {return _fgfc [2]};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_afd :=&PdfAnnotation {};_afd ._gggg =_ae .MakeIndirectObject (_ae .MakeDict ());return _afd ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_acddac []_ae .PdfObject )([]_ae .PdfObject ,error );};

// ToPdfObject implements interface PdfModel.
func (_faf *PdfActionLaunch )ToPdfObject ()_ae .PdfObject {_faf .PdfAction .ToPdfObject ();_cgc :=_faf ._bac ;_dfb :=_cgc .PdfObject .(*_ae .PdfObjectDictionary );_dfb .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeLaunch )));if _faf .F !=nil {_dfb .Set ("\u0046",_faf .F .ToPdfObject ());
};_dfb .SetIfNotNil ("\u0057\u0069\u006e",_faf .Win );_dfb .SetIfNotNil ("\u004d\u0061\u0063",_faf .Mac );_dfb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_faf .Unix );_dfb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_faf .NewWindow );return _cgc ;
};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_aade *DSS )ToPdfObject ()_ae .PdfObject {_cffe :=_aade ._bcac .PdfObject .(*_ae .PdfObjectDictionary );_cffe .Clear ();_dcbdf :=_ae .MakeDict ();for _acfaa ,_daaa :=range _aade .VRI {_dcbdf .Set (*_ae .MakeName (_acfaa ),_daaa .ToPdfObject ());};
_cffe .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_fgaaa (_aade .Certs ));_cffe .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_fgaaa (_aade .OCSPs ));_cffe .SetIfNotNil ("\u0043\u0052\u004c\u0073",_fgaaa (_aade .CRLs ));_cffe .Set ("\u0056\u0052\u0049",_dcbdf );
return _aade ._bcac ;};func _feed (_fagc _ae .PdfObject ,_daad *fontCommon )(*_fe .CMap ,error ){_fabgf ,_dbcg :=_ae .GetStream (_fagc );if !_dbcg {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_fagc );
return nil ,_ae .ErrTypeError ;};_fggc ,_eeab :=_ae .DecodeStream (_fabgf );if _eeab !=nil {return nil ,_eeab ;};_efgaa ,_eeab :=_fe .LoadCmapFromData (_fggc ,!_daad .isCIDFont ());if _eeab !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_fabgf .ObjectNumber ,_eeab );
};return _efgaa ,_eeab ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_agfa *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _agfa .AlternateSpace ==nil {return nil ,_ed .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _agfa .AlternateSpace .ColorToRGB (color );};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_dgad *PdfAcroForm )ToPdfObject ()_ae .PdfObject {_ddcg :=_dgad ._egefe ;_bbcbf :=_ddcg .PdfObject .(*_ae .PdfObjectDictionary );if _dgad .Fields !=nil {_bgdga :=_ae .PdfObjectArray {};for _ ,_bgfc :=range *_dgad .Fields {_ffdcb :=_bgfc .GetContext ();
if _ffdcb !=nil {_bgdga .Append (_ffdcb .ToPdfObject ());}else {_bgdga .Append (_bgfc .ToPdfObject ());};};_bbcbf .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_bgdga );};if _dgad .NeedAppearances !=nil {_bbcbf .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_dgad .NeedAppearances );
}else {if _ebgc :=_bbcbf .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_ebgc !=nil {_bbcbf .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _dgad .SigFlags !=nil {_bbcbf .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_dgad .SigFlags );
};if _dgad .CO !=nil {_bbcbf .Set ("\u0043\u004f",_dgad .CO );};if _dgad .DR !=nil {_bbcbf .Set ("\u0044\u0052",_dgad .DR .ToPdfObject ());};if _dgad .DA !=nil {_bbcbf .Set ("\u0044\u0041",_dgad .DA );};if _dgad .Q !=nil {_bbcbf .Set ("\u0051",_dgad .Q );
};if _dgad .XFA !=nil {_bbcbf .Set ("\u0058\u0046\u0041",_dgad .XFA );};if _dgad .ADBEEchoSign !=nil {_bbcbf .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_dgad .ADBEEchoSign );};return _ddcg ;};var ImageHandling ImageHandler =DefaultImageHandler {};


// WriteToFile writes the output PDF to file.
func (_fgaec *PdfWriter )WriteToFile (outputFilePath string )error {_gdgad ,_dafeg :=_b .Create (outputFilePath );if _dafeg !=nil {return _dafeg ;};defer _gdgad .Close ();return _fgaec .Write (_gdgad );};

// IsValid checks if the given pdf output intent type is valid.
func (_eecb PdfOutputIntentType )IsValid ()bool {return _eecb >=PdfOutputIntentTypeA1 &&_eecb <=PdfOutputIntentTypeX ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_efgfa pdfFont };func _gcbd (_dgbbe _ae .PdfObject ){_fgb .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_dgbbe ,_dgbbe .String ());if _ddfcd ,_afbcf :=_dgbbe .(*_ae .PdfObjectStream );_afbcf {_gddad ,_afaeg :=_ae .DecodeStream (_ddfcd );
if _afaeg !=nil {_fgb .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_afaeg );return ;};_fgb .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_gddad );}else if _gfef ,_aefbe :=_dgbbe .(*_ae .PdfIndirectObject );
_aefbe {_fgb .Log .Debug ("\u0025\u0054\u0020%\u0076",_gfef .PdfObject ,_gfef .PdfObject );_fgb .Log .Debug ("\u0025\u0073",_gfef .PdfObject .String ());};};func _beab (_aebab []byte )bool {if len (_aebab )< 4{return true ;};for _agbeg :=range _aebab [:4]{_eede :=rune (_agbeg );
if !_ac .Is (_ac .ASCII_Hex_Digit ,_eede )&&!_ac .IsSpace (_eede ){return true ;};};return false ;};

// ToPdfObject implements interface PdfModel.
func (_abfg *PdfActionGoToR )ToPdfObject ()_ae .PdfObject {_abfg .PdfAction .ToPdfObject ();_gdd :=_abfg ._bac ;_cae :=_gdd .PdfObject .(*_ae .PdfObjectDictionary );_cae .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeGoToR )));if _abfg .F !=nil {_cae .Set ("\u0046",_abfg .F .ToPdfObject ());
};_cae .SetIfNotNil ("\u0044",_abfg .D );_cae .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_abfg .NewWindow );return _gdd ;};

// GetCatalogLanguage gets catalog Language object.
func (_aadba *PdfReader )GetCatalogLanguage ()(_ae .PdfObject ,bool ){if _aadba ._eedde ==nil {return nil ,false ;};_adeag :=_aadba ._eedde .Get ("\u004c\u0061\u006e\u0067");return _adeag ,_adeag !=nil ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ae .PdfObject ;};func (_fac *PdfReader )newPdfAnnotationPolyLineFromDict (_aad *_ae .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_bbd :=PdfAnnotationPolyLine {};
_bddg ,_edcd :=_fac .newPdfAnnotationMarkupFromDict (_aad );if _edcd !=nil {return nil ,_edcd ;};_bbd .PdfAnnotationMarkup =_bddg ;_bbd .Vertices =_aad .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bbd .LE =_aad .Get ("\u004c\u0045");_bbd .BS =_aad .Get ("\u0042\u0053");
_bbd .IC =_aad .Get ("\u0049\u0043");_bbd .BE =_aad .Get ("\u0042\u0045");_bbd .IT =_aad .Get ("\u0049\u0054");_bbd .Measure =_aad .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bbd ,nil ;};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_cbcea *MultipleFontEncoder )GetRuneMetrics (r rune )(_dde .CharMetrics ,bool ){_dafed :=_cbcea .CurrentFont ;_ebgcb ,_edgab :=_dafed .GetRuneMetrics (r );for _fbfgc :=1;_fbfgc < len (_cbcea ._aged )&&_ebgcb .Wx ==0;_fbfgc ++{_dafed =_cbcea ._aged [_fbfgc ];
_ebgcb ,_edgab =_dafed .GetRuneMetrics (r );};return _ebgcb ,_edgab ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_afegd *PdfWriter )GetPdfVersion ()string {return _afegd .getPdfVersion ()};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_gadfe *VRI )ToPdfObject ()*_ae .PdfObjectDictionary {_cfbfgd :=_ae .MakeDict ();_cfbfgd .SetIfNotNil (_ae .PdfObjectName ("\u0043\u0065\u0072\u0074"),_fgaaa (_gadfe .Cert ));_cfbfgd .SetIfNotNil (_ae .PdfObjectName ("\u004f\u0043\u0053\u0050"),_fgaaa (_gadfe .OCSP ));
_cfbfgd .SetIfNotNil (_ae .PdfObjectName ("\u0043\u0052\u004c"),_fgaaa (_gadfe .CRL ));_cfbfgd .SetIfNotNil ("\u0054\u0055",_gadfe .TU );_cfbfgd .SetIfNotNil ("\u0054\u0053",_gadfe .TS );return _cfbfgd ;};func (_cdff *PdfFilespec )getDict ()*_ae .PdfObjectDictionary {if _fead ,_gfeb :=_cdff ._acaa .(*_ae .PdfIndirectObject );
_gfeb {_gfcf ,_badag :=_fead .PdfObject .(*_ae .PdfObjectDictionary );if !_badag {return nil ;};return _gfcf ;}else if _ffebd ,_ecgb :=_cdff ._acaa .(*_ae .PdfObjectDictionary );_ecgb {return _ffebd ;}else {_fgb .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_cdff ._acaa );
return nil ;};};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _ae .PdfObject )(_ae .PdfObjectName ,error ){var _gadf *_ae .PdfObjectName ;var _cfcc *_ae .PdfObjectArray ;if _eabc ,_gec :=obj .(*_ae .PdfIndirectObject );_gec {if _efec ,_afae :=_eabc .PdfObject .(*_ae .PdfObjectArray );
_afae {_cfcc =_efec ;}else if _defg ,_efab :=_eabc .PdfObject .(*_ae .PdfObjectName );_efab {_gadf =_defg ;};}else if _gadbc ,_bgef :=obj .(*_ae .PdfObjectArray );_bgef {_cfcc =_gadbc ;}else if _befc ,_gdgg :=obj .(*_ae .PdfObjectName );_gdgg {_gadf =_befc ;
};if _gadf !=nil {switch *_gadf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gadf ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gadf ,nil ;
};};if _cfcc !=nil &&_cfcc .Len ()> 0{if _dad ,_befga :=_cfcc .Get (0).(*_ae .PdfObjectName );_befga {switch *_dad {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cfcc .Len ()==1{return *_dad ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_dad ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_dad ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_dad ,nil ;};};};return "",nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_dace *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _dace .Alternate ==nil {if _dace .N ==1{_gabf :=NewPdfColorspaceDeviceGray ();return _gabf .ColorFromFloats (vals );}else if _dace .N ==3{_acec :=NewPdfColorspaceDeviceRGB ();
return _acec .ColorFromFloats (vals );}else if _dace .N ==4{_gfad :=NewPdfColorspaceDeviceCMYK ();return _gfad .ColorFromFloats (vals );}else {return nil ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _dace .Alternate .ColorFromFloats (vals );};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_ae .PdfObject ;GetContainingPdfObject ()_ae .PdfObject ;};

// GetXObjectByName gets XObject by name.
func (_gggaff *PdfPage )GetXObjectByName (name _ae .PdfObjectName )(_ae .PdfObject ,bool ){_adbcd ,_ggdd :=_gggaff .Resources .XObject .(*_ae .PdfObjectDictionary );if !_ggdd {return nil ,false ;};if _adcbc :=_adbcd .Get (name );_adcbc !=nil {return _adcbc ,true ;
};return nil ,false ;};

// SetCatalogMarkInfo sets the catalog MarkInfo dictionary.
func (_feagec *PdfWriter )SetCatalogMarkInfo (info _ae .PdfObject )error {if info ==nil {_feagec ._gefce .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};if _baea ,_dabfg :=info .(*_ae .PdfObjectReference );_dabfg {info =_baea .Resolve ();
if info ==nil {_feagec ._gefce .Remove ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return nil ;};};_feagec .addObject (info );_feagec ._gefce .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",info );return nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_agcee *PdfOutline )ToPdfObject ()_ae .PdfObject {_ggeed :=_agcee ._baaa ;_gaed :=_ggeed .PdfObject .(*_ae .PdfObjectDictionary );_gaed .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _agcee .First !=nil {_gaed .Set ("\u0046\u0069\u0072s\u0074",_agcee .First .ToPdfObject ());
};if _agcee .Last !=nil {_gaed .Set ("\u004c\u0061\u0073\u0074",_agcee .Last .GetContext ().GetContainingPdfObject ());};if _agcee .Parent !=nil {_gaed .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agcee .Parent .GetContext ().GetContainingPdfObject ());
};if _agcee .Count !=nil {_gaed .Set ("\u0043\u006f\u0075n\u0074",_ae .MakeInteger (*_agcee .Count ));};return _ggeed ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gfae *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_cdaa *PdfFieldButton )IsCheckbox ()bool {return _cdaa .GetType ()==ButtonTypeCheckbox };

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fbafe _fgg .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_ecdeb _da .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_ecbd _da .Image )(*Image ,error );

// Compress an image.
Compress (_adbee *Image ,_dcff int64 )(*Image ,error );};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _ae .PdfObject ;};var _ pdfFont =(*pdfFontType3 )(nil );func (_cgbc *PdfReader )newPdfActionResetFormFromDict (_dbbc *_ae .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dbbc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dbbc .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_dgadd *_ae .PdfParser ;_aefg _ae .PdfObject ;_cada *_ae .PdfIndirectObject ;_gefcg *_ae .PdfObjectDictionary ;_cafea []*_ae .PdfIndirectObject ;PageList []*PdfPage ;_bbbdc int ;_eedde *_ae .PdfObjectDictionary ;_beeag *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_dagg *Permissions ;_gefcd map[*PdfReader ]*PdfReader ;_cacfb []*PdfReader ;_cffgf *modelManager ;_fedag bool ;_ccfad map[_ae .PdfObject ]struct{};_abcc _fgg .ReadSeeker ;_gecc string ;_eabbg bool ;_gccde string ;
_cdaae *ReaderOpts ;_abefc bool ;};func (_bbad *PdfReader )newPdfActionNamedFromDict (_eed *_ae .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_eed .Get ("\u004e")},nil ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_fgddd *PdfPageResources )SetFontByName (keyName _ae .PdfObjectName ,obj _ae .PdfObject )error {if _fgddd .Font ==nil {_fgddd .Font =_ae .MakeDict ();};_cdbaf ,_gcedb :=_ae .TraceToDirectObject (_fgddd .Font ).(*_ae .PdfObjectDictionary );if !_gcedb {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ae .TraceToDirectObject (_fgddd .Font ));
return _ae .ErrTypeError ;};_cdbaf .Set (keyName ,obj );return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cccd *PdfColorspaceDeviceRGB )ToPdfObject ()_ae .PdfObject {return _ae .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_cgcfab *PdfReader )buildPageList (_abeb *_ae .PdfIndirectObject ,_cffa *_ae .PdfIndirectObject ,_gddg map[_ae .PdfObject ]struct{})error {if _abeb ==nil {return nil ;
};if _ ,_cgdea :=_gddg [_abeb ];_cgdea {_fgb .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_abeb .ObjectNumber );
return nil ;};_gddg [_abeb ]=struct{}{};_cceaf ,_afggfd :=_abeb .PdfObject .(*_ae .PdfObjectDictionary );if !_afggfd {return _ed .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_dceaf ,_afggfd :=(*_cceaf ).Get ("\u0054\u0079\u0070\u0065").(*_ae .PdfObjectName );
if !_afggfd {if _cceaf .Get ("\u004b\u0069\u0064\u0073")==nil {return _ed .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_fgb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_dceaf =_ae .MakeName ("\u0050\u0061\u0067e\u0073");_cceaf .Set ("\u0054\u0079\u0070\u0065",_dceaf );};_fgb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_dceaf ,_abeb );
if *_dceaf =="\u0050\u0061\u0067\u0065"{_gbfa ,_ggdc :=_cgcfab .newPdfPageFromDict (_cceaf );if _ggdc !=nil {return _ggdc ;};_gbfa .setContainer (_abeb );if _cffa !=nil {_cceaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cffa );};_cgcfab ._cafea =append (_cgcfab ._cafea ,_abeb );
_cgcfab .PageList =append (_cgcfab .PageList ,_gbfa );return nil ;};if *_dceaf !="\u0050\u0061\u0067e\u0073"{_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_dceaf );
return _ed .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _cffa !=nil {_cceaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cffa );};if !_cgcfab ._fedag {_eegdb :=_cgcfab .traverseObjectData (_abeb );if _eegdb !=nil {return _eegdb ;};};_aaace ,_bacbgd :=_cgcfab ._dgadd .Resolve (_cceaf .Get ("\u004b\u0069\u0064\u0073"));
if _bacbgd !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _bacbgd ;};var _bcbad *_ae .PdfObjectArray ;
_bcbad ,_afggfd =_aaace .(*_ae .PdfObjectArray );if !_afggfd {_dbec ,_ddfef :=_aaace .(*_ae .PdfIndirectObject );if !_ddfef {return _ed .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_bcbad ,_afggfd =_dbec .PdfObject .(*_ae .PdfObjectArray );if !_afggfd {return _ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_fgb .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_bcbad );
for _bedc ,_feggb :=range _bcbad .Elements (){_abebb ,_fbee :=_ae .GetIndirect (_feggb );if !_fbee {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_abebb );
return _ed .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bcbad .Set (_bedc ,_abebb );_bacbgd =_cgcfab .buildPageList (_abebb ,_abeb ,_gddg );if _bacbgd !=nil {return _bacbgd ;
};};return nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_abf :=NewPdfAction ();_ecg :=&PdfActionSound {};_ecg .PdfAction =_abf ;_abf .SetContext (_ecg );return _ecg ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_ggaabe *modelManager )GetPrimitiveFromModel (model PdfModel )_ae .PdfObject {_facbg ,_dfgbf :=_ggaabe ._abgb [model ];if !_dfgbf {return nil ;};return _facbg ;};func (_aefc *PdfAppender )updateObjectsDeep (_babe _ae .PdfObject ,_dcag map[_ae .PdfObject ]struct{}){if _dcag ==nil {_dcag =map[_ae .PdfObject ]struct{}{};
};if _ ,_edfd :=_dcag [_babe ];_edfd ||_babe ==nil {return ;};_dcag [_babe ]=struct{}{};_cbeg :=_ae .ResolveReferencesDeep (_babe ,_aefc ._agcd );if _cbeg !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbeg );};switch _eefb :=_babe .(type ){case *_ae .PdfIndirectObject :switch {case _eefb .GetParser ()==_aefc ._bdac ._dgadd :return ;
case _eefb .GetParser ()==_aefc .Reader ._dgadd :_acc ,_ :=_aefc ._bdac .GetIndirectObjectByNumber (int (_eefb .ObjectNumber ));_efd ,_cfaf :=_acc .(*_ae .PdfIndirectObject );if _cfaf &&_efd !=nil {if _efd .PdfObject !=_eefb .PdfObject &&_efd .PdfObject .WriteString ()!=_eefb .PdfObject .WriteString (){if _ga .Contains (_eefb .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_ga .Contains (_eefb .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_aefc .addNewObject (_babe );_aefc ._beeca [_babe ]=_eefb .ObjectNumber ;};};default:_aefc .addNewObject (_babe );};_aefc .updateObjectsDeep (_eefb .PdfObject ,_dcag );case *_ae .PdfObjectArray :for _ ,_dff :=range _eefb .Elements (){_aefc .updateObjectsDeep (_dff ,_dcag );
};case *_ae .PdfObjectDictionary :for _ ,_ffdd :=range _eefb .Keys (){_aefc .updateObjectsDeep (_eefb .Get (_ffdd ),_dcag );};case *_ae .PdfObjectStreams :if _eefb .GetParser ()!=_aefc ._bdac ._dgadd {for _ ,_bfbc :=range _eefb .Elements (){_aefc .updateObjectsDeep (_bfbc ,_dcag );
};};case *_ae .PdfObjectStream :switch {case _eefb .GetParser ()==_aefc ._bdac ._dgadd :return ;case _eefb .GetParser ()==_aefc .Reader ._dgadd :if _fdda ,_ceed :=_aefc ._bdac ._dgadd .LookupByReference (_eefb .PdfObjectReference );_ceed ==nil {var _bcbd bool ;
if _bbeb ,_afeg :=_ae .GetStream (_fdda );_afeg &&_fga .Equal (_bbeb .Stream ,_eefb .Stream ){_bcbd =true ;};if _beae ,_befg :=_ae .GetDict (_fdda );_bcbd &&_befg {_bcbd =_beae .WriteString ()==_eefb .PdfObjectDictionary .WriteString ();};if _bcbd {return ;
};};if _eefb .ObjectNumber !=0{_aefc ._beeca [_babe ]=_eefb .ObjectNumber ;};default:if _ ,_gada :=_aefc ._dcdc [_babe ];!_gada {_aefc .addNewObject (_babe );};};_aefc .updateObjectsDeep (_eefb .PdfObjectDictionary ,_dcag );};};func (_bcdf *PdfAppender )addNewObject (_abfcb _ae .PdfObject ){if _ ,_dcda :=_bcdf ._dcdc [_abfcb ];
!_dcda {_bcdf ._eddg =append (_bcdf ._eddg ,_abfcb );_bcdf ._dcdc [_abfcb ]=struct{}{};};};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func (_cfca *Image )samplesAddPadding (_cccbg []uint32 )[]uint32 {_gaga :=_fae .BytesPerLine (int (_cfca .Width ),int (_cfca .BitsPerComponent ),_cfca .ColorComponents )*(8/int (_cfca .BitsPerComponent ));_ggdgg :=_gaga *int (_cfca .Height );
if len (_cccbg )==_ggdgg {return _cccbg ;};_bcggc :=make ([]uint32 ,_ggdgg );_addgg :=int (_cfca .Width )*_cfca .ColorComponents ;for _bbgda :=0;_bbgda < int (_cfca .Height );_bbgda ++{_fbed :=_bbgda *int (_cfca .Width );_ecgc :=_bbgda *_gaga ;for _baecb :=0;
_baecb < _addgg ;_baecb ++{_bcggc [_ecgc +_baecb ]=_cccbg [_fbed +_baecb ];};};return _bcggc ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// IsColored specifies if the pattern is colored.
func (_gccef *PdfTilingPattern )IsColored ()bool {if _gccef .PaintType !=nil &&*_gccef .PaintType ==1{return true ;};return false ;};

// Encoder returns the font's text encoder.
func (_aagc pdfCIDFontType0 )Encoder ()_ddd .TextEncoder {return _aagc ._gfbag };

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_abfgb *PdfOutline )GetContainingPdfObject ()_ae .PdfObject {return _abfgb ._baaa };func (_fdgfa *PdfWriter )writeBytes (_gdaga []byte ){if _fdgfa ._begbb !=nil {return ;};_adfggc ,_fbebac :=_fdgfa ._abcf .Write (_gdaga );_fdgfa ._caddb +=int64 (_adfggc );
_fdgfa ._begbb =_fbebac ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ccga *PdfColorspaceLab )GetNumComponents ()int {return 3};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_ae .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_dfda *_ae .PdfIndirectObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dgfeg pdfFontType3 )GetCharMetrics (code _ddd .CharCode )(_dde .CharMetrics ,bool ){if _bgeb ,_eggba :=_dgfeg ._cbdec [code ];_eggba {return _dde .CharMetrics {Wx :_bgeb },true ;};if _dde .IsStdFont (_dde .StdFontName (_dgfeg ._bfeb )){return _dde .CharMetrics {Wx :250},true ;
};return _dde .CharMetrics {},false ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func (_bfage *PdfWriter )writeObjects (){_fgb .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_bfage ._eabcbc ));
_bfage ._eddaf =make (map[int ]crossReference );_bfage ._eddaf [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _bfage ._edge .ObjectMap !=nil {for _gdfa ,_ageff :=range _bfage ._edge .ObjectMap {if _gdfa ==0{continue ;};if _ageff .XType ==_ae .XrefTypeObjectStream {_fdbda :=crossReference {Type :2,ObjectNumber :_ageff .OsObjNumber ,Index :_ageff .OsObjIndex };
_bfage ._eddaf [_gdfa ]=_fdbda ;};if _ageff .XType ==_ae .XrefTypeTableEntry {_eafae :=crossReference {Type :1,ObjectNumber :_ageff .ObjectNumber ,Offset :_ageff .Offset };_bfage ._eddaf [_gdfa ]=_eafae ;};};};};

// L returns the value of the L component of the color.
func (_fdde *PdfColorLab )L ()float64 {return _fdde [0]};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_abdf *PdfFieldButton )GetType ()ButtonType {_gfcdf :=ButtonTypeCheckbox ;if _abdf .Ff !=nil {if (uint32 (*_abdf .Ff )&FieldFlagPushbutton .Mask ())> 0{_gfcdf =ButtonTypePush ;}else if (uint32 (*_abdf .Ff )&FieldFlagRadio .Mask ())> 0{_gfcdf =ButtonTypeRadio ;
};};return _gfcdf ;};func (_bcbdg *PdfWriter )optimize ()error {if _bcbdg ._dacde ==nil {return nil ;};var _dafde error ;_bcbdg ._eabcbc ,_dafde =_bcbdg ._dacde .Optimize (_bcbdg ._eabcbc );if _dafde !=nil {return _dafde ;};_dcdbc :=make (map[_ae .PdfObject ]struct{},len (_bcbdg ._eabcbc ));
for _ ,_aagcd :=range _bcbdg ._eabcbc {_dcdbc [_aagcd ]=struct{}{};};_bcbdg ._dgefc =_dcdbc ;return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_dbae *PdfFunctionType2 )ToPdfObject ()_ae .PdfObject {_ddcf :=_ae .MakeDict ();_ddcf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ae .MakeInteger (2));_dgbca :=&_ae .PdfObjectArray {};for _ ,_bceg :=range _dbae .Domain {_dgbca .Append (_ae .MakeFloat (_bceg ));
};_ddcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dgbca );if _dbae .Range !=nil {_ccbc :=&_ae .PdfObjectArray {};for _ ,_ebbbe :=range _dbae .Range {_ccbc .Append (_ae .MakeFloat (_ebbbe ));};_ddcf .Set ("\u0052\u0061\u006eg\u0065",_ccbc );};if _dbae .C0 !=nil {_ddebb :=&_ae .PdfObjectArray {};
for _ ,_fcgdb :=range _dbae .C0 {_ddebb .Append (_ae .MakeFloat (_fcgdb ));};_ddcf .Set ("\u0043\u0030",_ddebb );};if _dbae .C1 !=nil {_afgbc :=&_ae .PdfObjectArray {};for _ ,_acbdd :=range _dbae .C1 {_afgbc .Append (_ae .MakeFloat (_acbdd ));};_ddcf .Set ("\u0043\u0031",_afgbc );
};_ddcf .Set ("\u004e",_ae .MakeFloat (_dbae .N ));if _dbae ._cbff !=nil {_dbae ._cbff .PdfObject =_ddcf ;return _dbae ._cbff ;};return _ddcf ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_abfdf *PdfPage )GetPageDict ()*_ae .PdfObjectDictionary {_bdgec :=_abfdf ._efdff ;_bdgec .Clear ();_bdgec .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0050\u0061\u0067\u0065"));_bdgec .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_abfdf .Parent );
if _abfdf .LastModified !=nil {_bdgec .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_abfdf .LastModified .ToPdfObject ());};if _abfdf .Resources !=nil {_bdgec .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_abfdf .Resources .ToPdfObject ());
};if _abfdf .CropBox !=nil {_bdgec .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_abfdf .CropBox .ToPdfObject ());};if _abfdf .MediaBox !=nil {_bdgec .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_abfdf .MediaBox .ToPdfObject ());};if _abfdf .BleedBox !=nil {_bdgec .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_abfdf .BleedBox .ToPdfObject ());
};if _abfdf .TrimBox !=nil {_bdgec .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_abfdf .TrimBox .ToPdfObject ());};if _abfdf .ArtBox !=nil {_bdgec .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_abfdf .ArtBox .ToPdfObject ());};_bdgec .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_abfdf .BoxColorInfo );
_bdgec .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_abfdf .Contents );if _abfdf .Rotate !=nil {_bdgec .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ae .MakeInteger (*_abfdf .Rotate ));};_bdgec .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_abfdf .Group );
_bdgec .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_abfdf .Thumb );_bdgec .SetIfNotNil ("\u0042",_abfdf .B );_bdgec .SetIfNotNil ("\u0044\u0075\u0072",_abfdf .Dur );_bdgec .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_abfdf .Trans );_bdgec .SetIfNotNil ("\u0041\u0041",_abfdf .AA );
_bdgec .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_abfdf .Metadata );_bdgec .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_abfdf .PieceInfo );_bdgec .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_abfdf .StructParents );
_bdgec .SetIfNotNil ("\u0049\u0044",_abfdf .ID );_bdgec .SetIfNotNil ("\u0050\u005a",_abfdf .PZ );_bdgec .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_abfdf .SeparationInfo );_bdgec .SetIfNotNil ("\u0054\u0061\u0062\u0073",_abfdf .Tabs );
_bdgec .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_abfdf .TemplateInstantiated );_bdgec .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_abfdf .PresSteps );_bdgec .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_abfdf .UserUnit );
_bdgec .SetIfNotNil ("\u0056\u0050",_abfdf .VP );if _abfdf ._gacdb !=nil {_agbec :=_ae .MakeArray ();for _ ,_bfeba :=range _abfdf ._gacdb {if _cgcdc :=_bfeba .GetContext ();_cgcdc !=nil {_agbec .Append (_cgcdc .ToPdfObject ());}else {_agbec .Append (_bfeba .ToPdfObject ());
};};if _agbec .Len ()> 0{_bdgec .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_agbec );};}else if _abfdf .Annots !=nil {_bdgec .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_abfdf .Annots );};return _bdgec ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_dgdc *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if _dgdc .Alternate ==nil {if _dgdc .N ==1{_ecce :=NewPdfColorspaceDeviceGray ();return _ecce .ColorFromPdfObjects (objects );}else if _dgdc .N ==3{_beff :=NewPdfColorspaceDeviceRGB ();
return _beff .ColorFromPdfObjects (objects );}else if _dgdc .N ==4{_fccf :=NewPdfColorspaceDeviceCMYK ();return _fccf .ColorFromPdfObjects (objects );}else {return nil ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _dgdc .Alternate .ColorFromPdfObjects (objects );};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_afbdf *PdfWriter )SetPageLabels (pageLabels _ae .PdfObject )error {if pageLabels ==nil {return nil ;};_fgb .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_afbdf ._gefce .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _afbdf .addObjects (pageLabels );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ddfgc *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ddfbd *PdfPageResourcesColorspaces )ToPdfObject ()_ae .PdfObject {_agggae :=_ae .MakeDict ();for _ ,_dgaga :=range _ddfbd .Names {_agggae .Set (_ae .PdfObjectName (_dgaga ),_ddfbd .Colorspaces [_dgaga ].ToPdfObject ());};if _ddfbd ._dfafe !=nil {_ddfbd ._dfafe .PdfObject =_agggae ;
return _ddfbd ._dfafe ;};return _agggae ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_fgbgd _fgg .ReadSeeker ;_bfgf *_ae .PdfParser ;_bdac *PdfReader ;Reader *PdfReader ;_gbgb []*PdfPage ;_becf *PdfAcroForm ;_dgbd *DSS ;_egfe *Permissions ;_gdec _ae .XrefTable ;_dbee int64 ;_cfae int ;_eddg []_ae .PdfObject ;_dcdc map[_ae .PdfObject ]struct{};
_beeca map[_ae .PdfObject ]int64 ;_cfac map[_ae .PdfObject ]struct{};_agcd map[_ae .PdfObject ]struct{};_cbac int64 ;_gggb bool ;_ffeb string ;_gca *EncryptOptions ;_agga *PdfInfo ;};

// GetNumComponents returns the number of color components.
func (_dgba *PdfColorspaceICCBased )GetNumComponents ()int {return _dgba .N };

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _fgg .ReadSeeker )(*PdfFont ,error ){const _cgacf =_ddd .CharCode (32);const _ffca =_ddd .CharCode (255);_fddf ,_afecg :=_acf .ReadAll (r );if _afecg !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_afecg );
return nil ,_afecg ;};_efee ,_afecg :=_dde .TtfParse (_fga .NewReader (_fddf ));if _afecg !=nil {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_afecg );
return nil ,_afecg ;};_beaa :=&pdfFontSimple {_feefe :make (map[_ddd .CharCode ]float64 ),fontCommon :fontCommon {_aacd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_beaa ._beaea =_ddd .NewWinAnsiEncoder ();_beaa ._bfeb =_efee .PostScriptName ;
_beaa .FirstChar =_ae .MakeInteger (int64 (_cgacf ));_beaa .LastChar =_ae .MakeInteger (int64 (_ffca ));_gfcag :=1000.0/float64 (_efee .UnitsPerEm );if len (_efee .Widths )<=0{return nil ,_ed .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gfaeg :=_gfcag *float64 (_efee .Widths [0]);_eegded :=make ([]float64 ,0,_ffca -_cgacf +1);for _cfcec :=_cgacf ;_cfcec <=_ffca ;_cfcec ++{_cbacd ,_ddegd :=_beaa .Encoder ().CharcodeToRune (_cfcec );if !_ddegd {_fgb .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_cfcec );
_eegded =append (_eegded ,_gfaeg );continue ;};_gbgf ,_bgae :=_efee .Chars [_cbacd ];if !_bgae {_fgb .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_eegded =append (_eegded ,_gfaeg );
continue ;};_dfdeg :=_gfcag *float64 (_efee .Widths [_gbgf ]);_eegded =append (_eegded ,_dfdeg );};_beaa .Widths =_ae .MakeIndirectObject (_ae .MakeArrayFromFloats (_eegded ));if len (_eegded )< int (_ffca -_cgacf +1){_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_eegded ),255-32+1);
return nil ,_ae .ErrRangeError ;};for _ffdgg :=_cgacf ;_ffdgg <=_ffca ;_ffdgg ++{_beaa ._feefe [_ffdgg ]=_eegded [_ffdgg -_cgacf ];};_beaa .Encoding =_ae .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_dgag :=&PdfFontDescriptor {};
_dgag .FontName =_ae .MakeName (_efee .PostScriptName );_dgag .Ascent =_ae .MakeFloat (_gfcag *float64 (_efee .TypoAscender ));_dgag .Descent =_ae .MakeFloat (_gfcag *float64 (_efee .TypoDescender ));_dgag .CapHeight =_ae .MakeFloat (_gfcag *float64 (_efee .CapHeight ));
_dgag .FontBBox =_ae .MakeArrayFromFloats ([]float64 {_gfcag *float64 (_efee .Xmin ),_gfcag *float64 (_efee .Ymin ),_gfcag *float64 (_efee .Xmax ),_gfcag *float64 (_efee .Ymax )});_dgag .ItalicAngle =_ae .MakeFloat (_efee .ItalicAngle );_dgag .MissingWidth =_ae .MakeFloat (_gfcag *float64 (_efee .Widths [0]));
_adbef ,_afecg :=_ae .MakeStream (_fddf ,_ae .NewFlateEncoder ());if _afecg !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_afecg );
return nil ,_afecg ;};_adbef .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ae .MakeInteger (int64 (len (_fddf ))));_dgag .FontFile2 =_adbef ;if _efee .Bold {_dgag .StemV =_ae .MakeInteger (120);}else {_dgag .StemV =_ae .MakeInteger (70);
};_dbea :=_cbaed ;if _efee .IsFixedPitch {_dbea |=_cegg ;};if _efee .ItalicAngle !=0{_dbea |=_cege ;};_dgag .Flags =_ae .MakeInteger (int64 (_dbea ));_beaa ._cdge =_dgag ;_fdge :=&PdfFont {_efgfa :_beaa };return _fdge ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbc *PdfActionGoTo3DView )ToPdfObject ()_ae .PdfObject {_fbc .PdfAction .ToPdfObject ();_eea :=_fbc ._bac ;_fcb :=_eea .PdfObject .(*_ae .PdfObjectDictionary );_fcb .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeGoTo3DView )));_fcb .SetIfNotNil ("\u0054\u0041",_fbc .TA );
_fcb .SetIfNotNil ("\u0056",_fbc .V );return _eea ;};func (_efdab *PdfWriter )writeDocumentVersion (){if _efdab ._edcfb {_efdab .writeString ("\u000a");}else {_efdab .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_efdab ._beabf .Major ,_efdab ._beabf .Minor ));
_efdab .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};func (_ageg *PdfReader )buildOutlineTree (_dafcg _ae .PdfObject ,_fcag *PdfOutlineTreeNode ,_gbfe *PdfOutlineTreeNode ,_gebed map[_ae .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gebed ==nil {_gebed =map[_ae .PdfObject ]struct{}{};
};_gebed [_dafcg ]=struct{}{};_fabfe ,_fcgcb :=_dafcg .(*_ae .PdfIndirectObject );if !_fcgcb {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dafcg );
};_cbaca ,_bcgc :=_fabfe .PdfObject .(*_ae .PdfObjectDictionary );if !_bcgc {return nil ,nil ,_ed .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fgb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_cbaca ,_fabfe ,_fabfe );
if _cdbee :=_cbaca .Get ("\u0054\u0069\u0074l\u0065");_cdbee !=nil {_ebcda ,_aggeb :=_ageg .newPdfOutlineItemFromIndirectObject (_fabfe );if _aggeb !=nil {return nil ,nil ,_aggeb ;};_ebcda .Parent =_fcag ;_ebcda .Prev =_gbfe ;_daaaaa :=_ae .ResolveReference (_cbaca .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_cdgdb :=_gebed [_daaaaa ];_daaaaa !=nil &&_daaaaa !=_fabfe &&!_cdgdb {if !_ae .IsNullObject (_daaaaa ){_bbcfc ,_befeb ,_faaea :=_ageg .buildOutlineTree (_daaaaa ,&_ebcda .PdfOutlineTreeNode ,nil ,_gebed );if _faaea !=nil {_fgb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_faaea );
}else {_ebcda .First =_bbcfc ;_ebcda .Last =_befeb ;};};};_egcbe :=_ae .ResolveReference (_cbaca .Get ("\u004e\u0065\u0078\u0074"));if _ ,_bfcbcf :=_gebed [_egcbe ];_egcbe !=nil &&_egcbe !=_fabfe &&!_bfcbcf {if !_ae .IsNullObject (_egcbe ){_acfdb ,_ebbcb ,_cacaf :=_ageg .buildOutlineTree (_egcbe ,_fcag ,&_ebcda .PdfOutlineTreeNode ,_gebed );
if _cacaf !=nil {_fgb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_cacaf );
}else {_ebcda .Next =_acfdb ;return &_ebcda .PdfOutlineTreeNode ,_ebbcb ,nil ;};};};return &_ebcda .PdfOutlineTreeNode ,&_ebcda .PdfOutlineTreeNode ,nil ;};_cdbeed ,_ceccd :=_dgeb (_fabfe );if _ceccd !=nil {return nil ,nil ,_ceccd ;};_cdbeed .Parent =_fcag ;
if _cdecd :=_cbaca .Get ("\u0046\u0069\u0072s\u0074");_cdecd !=nil {_cdecd =_ae .ResolveReference (_cdecd );if _ ,_cfegg :=_gebed [_cdecd ];_cdecd !=nil &&_cdecd !=_fabfe &&!_cfegg {_egecf :=_ae .TraceToDirectObject (_cdecd );if _ ,_bbge :=_egecf .(*_ae .PdfObjectNull );
!_bbge &&_egecf !=nil {_baccg ,_bddae ,_ccbd :=_ageg .buildOutlineTree (_cdecd ,&_cdbeed .PdfOutlineTreeNode ,nil ,_gebed );if _ccbd !=nil {_fgb .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_ccbd );
}else {_cdbeed .First =_baccg ;_cdbeed .Last =_bddae ;};};};};return &_cdbeed .PdfOutlineTreeNode ,&_cdbeed .PdfOutlineTreeNode ,nil ;};

// Encoder iterates through the list of fonts and returns a working encoder
func (_aafg *MultipleFontEncoder )Encoder (rn rune )(_ddd .TextEncoder ,bool ){_aaac :=_aafg .CurrentFont ;_bfabd :=_aaac .Encoder ();_ ,_cddcg :=_bfabd .RuneToCharcode (rn );for _gcacd :=1;_gcacd < len (_aafg ._aged )&&!_cddcg ;_gcacd ++{_aaac =_aafg ._aged [_gcacd ];
_bfabd =_aaac .Encoder ();_ ,_cddcg =_bfabd .RuneToCharcode (rn );_aafg .CurrentFont =_aaac ;};return _bfabd ,_cddcg ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_bbaege *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_adfgg :=_bbaege .actualFont ();if _adfgg ==nil {_fgb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bbaege ._efgfa );
return _dde .CharMetrics {},false ;};if _bdgf ,_egfd :=_adfgg .GetRuneMetrics (r );_egfd {return _bdgf ,true ;};if _bgdf ,_aac :=_bbaege .GetFontDescriptor ();_aac ==nil &&_bgdf !=nil {return _dde .CharMetrics {Wx :_bgdf ._ecff },true ;};_fgb .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbaege );
return _dde .CharMetrics {},false ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_fcffc FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_fcffc .Mask ()|fl .Mask ())};

// B returns the value of the B component of the color.
func (_faadb *PdfColorLab )B ()float64 {return _faadb [2]};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dbbfe *PdfColorspaceDeviceGray )ToPdfObject ()_ae .PdfObject {return _ae .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func _ffbbee (_abafe _ae .PdfObject )*Names {_bacf :=_ebceg ();_beag :=_ae .TraceToDirectObject (_abafe ).(*_ae .PdfObjectDictionary );
if _bbgce :=_beag .Get ("\u0044\u0065\u0073t\u0073");_bbgce !=nil {_bacf .Dests =_ae .TraceToDirectObject (_bbgce ).(*_ae .PdfObjectDictionary );};if _dddge :=_beag .Get ("\u0041\u0050");_dddge !=nil {_bacf .AP =_ae .TraceToDirectObject (_dddge ).(*_ae .PdfObjectDictionary );
};if _bgbee :=_beag .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_bgbee !=nil {_bacf .JavaScript =_ae .TraceToDirectObject (_bgbee ).(*_ae .PdfObjectDictionary );};if _deede :=_beag .Get ("\u0050\u0061\u0067e\u0073");_deede !=nil {_bacf .Pages =_ae .TraceToDirectObject (_deede ).(*_ae .PdfObjectDictionary );
};if _bddgf :=_beag .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_bddgf !=nil {_bacf .Templates =_ae .TraceToDirectObject (_bddgf ).(*_ae .PdfObjectDictionary );};if _eecgd :=_beag .Get ("\u0049\u0044\u0053");_eecgd !=nil {_bacf .IDS =_ae .TraceToDirectObject (_eecgd ).(*_ae .PdfObjectDictionary );
};if _befad :=_beag .Get ("\u0055\u0052\u004c\u0053");_befad !=nil {_bacf .URLS =_ae .TraceToDirectObject (_befad ).(*_ae .PdfObjectDictionary );};if _eaeb :=_beag .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");
_eaeb !=nil {_bacf .EmbeddedFiles =_ae .TraceToDirectObject (_eaeb ).(*_ae .PdfObjectDictionary );};if _cbfac :=_beag .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");_cbfac !=nil {_bacf .AlternatePresentations =_ae .TraceToDirectObject (_cbfac ).(*_ae .PdfObjectDictionary );
};if _bcge :=_beag .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_bcge !=nil {_bacf .Renditions =_ae .TraceToDirectObject (_bcge ).(*_ae .PdfObjectDictionary );};return _bacf ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _ae .PdfObject ;BS _ae .PdfObject ;LE _ae .PdfObject ;IC _ae .PdfObject ;LL _ae .PdfObject ;LLE _ae .PdfObject ;Cap _ae .PdfObject ;IT _ae .PdfObject ;LLO _ae .PdfObject ;CP _ae .PdfObject ;
Measure _ae .PdfObject ;CO _ae .PdfObject ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_fffe *PdfFieldButton )SetType (btype ButtonType ){_dgea :=uint32 (0);if _fffe .Ff !=nil {_dgea =uint32 (*_fffe .Ff );};switch btype {case ButtonTypePush :_dgea |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_dgea |=FieldFlagRadio .Mask ();
};_fffe .Ff =_ae .MakeInteger (int64 (_dgea ));};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cfba *PdfColorspaceSpecialPattern )ToPdfObject ()_ae .PdfObject {if _cfba .UnderlyingCS ==nil {return _ae .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_cfde :=_ae .MakeArray (_ae .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cfde .Append (_cfba .UnderlyingCS .ToPdfObject ());
if _cfba ._eddb !=nil {_cfba ._eddb .PdfObject =_cfde ;return _cfba ._eddb ;};return _cfde ;};

// Items returns all children outline items.
func (_begd *Outline )Items ()[]*OutlineItem {return _begd .Entries };func _beafd (_bbgd _ae .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_acda :=&PdfColorspaceDeviceNAttributes {};var _abag *_ae .PdfObjectDictionary ;switch _fadg :=_bbgd .(type ){case *_ae .PdfIndirectObject :_acda ._cabe =_fadg ;
var _gfgg bool ;_abag ,_gfgg =_fadg .PdfObject .(*_ae .PdfObjectDictionary );if !_gfgg {_fgb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_ae .PdfObjectDictionary :_abag =_fadg ;case *_ae .PdfObjectReference :_gccf :=_fadg .Resolve ();return _beafd (_gccf );default:_fgb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cacg :=_abag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cacg !=nil {_ecfg ,_befgae :=_ae .TraceToDirectObject (_cacg ).(*_ae .PdfObjectName );if !_befgae {_fgb .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_acda .Subtype =_ecfg ;};if _ccbbg :=_abag .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_ccbbg !=nil {_acda .Colorants =_ccbbg ;};if _eaggg :=_abag .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_eaggg !=nil {_acda .Process =_eaggg ;};if _aegf :=_abag .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_aegf !=nil {_acda .MixingHints =_aegf ;};return _acda ,nil ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bg :=NewPdfAction ();_acfe :=&PdfActionJavaScript {};_acfe .PdfAction =_bg ;_bg .SetContext (_acfe );return _acfe ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _ae .PdfObjectName ;};func (_bggac *LTV )enable (_fcbb ,_ggebe []*_ddc .Certificate ,_ecabc string )error {_dfdedc ,_ffcac ,_bdff :=_bggac .buildCertChain (_fcbb ,_ggebe );if _bdff !=nil {return _bdff ;
};_bcaec ,_bdff :=_bggac .getCerts (_dfdedc );if _bdff !=nil {return _bdff ;};var _eaed ,_bgece [][]byte ;if _bggac .OCSPClient !=nil {_eaed ,_bdff =_bggac .getOCSPs (_dfdedc ,_ffcac );if _bdff !=nil {return _bdff ;};};if _bggac .CRLClient !=nil {_bgece ,_bdff =_bggac .getCRLs (_dfdedc );
if _bdff !=nil {return _bdff ;};};_eaded :=_bggac ._febag ;_gaee ,_bdff :=_eaded .AddCerts (_bcaec );if _bdff !=nil {return _bdff ;};_ggb ,_bdff :=_eaded .AddOCSPs (_eaed );if _bdff !=nil {return _bdff ;};_bfgcd ,_bdff :=_eaded .AddCRLs (_bgece );if _bdff !=nil {return _bdff ;
};if _ecabc !=""{_eaded .VRI [_ecabc ]=&VRI {Cert :_gaee ,OCSP :_ggb ,CRL :_bfgcd };};_bggac ._gbbfd .SetDSS (_eaded );return nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_caddge *LTV )EnableByName (name string ,extraCerts []*_ddc .Certificate )error {_ccceba :=_caddge ._gbbfd ._bdac .AcroForm ;for _ ,_fafdd :=range _ccceba .AllFields (){_cabd ,_ :=_fafdd .GetContext ().(*PdfFieldSignature );if _cabd ==nil {continue ;
};if _gbafg :=_cabd .PartialName ();_gbafg !=name {continue ;};return _caddge .Enable (_cabd .V ,extraCerts );};return nil ;};

// SetAction sets the PDF action for the annotation link.
func (_eba *PdfAnnotationLink )SetAction (action *PdfAction ){_eba ._dfc =action ;if action ==nil {_eba .A =nil ;};};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_gffb *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_eccg :=_dag .NewReader (img .getBase ());_fcee :=_fae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._cgde ,img ._dgegd );
_abga :=_dag .NewWriter (_fcee );_gfed :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_gfgbb :=_gffb .GetNumComponents ();_gaea :=make ([]uint32 ,_gfgbb );_egcf :=make ([]float64 ,_gfgbb );for {_faeg :=_eccg .ReadSamples (_gaea );if _faeg ==_fgg .EOF {break ;
}else if _faeg !=nil {return img ,_faeg ;};for _cacba :=0;_cacba < _gfgbb ;_cacba ++{_bdag :=float64 (_gaea [_cacba ])/_gfed ;_egcf [_cacba ]=_bdag ;};_ageb ,_faeg :=_gffb .TintTransform .Evaluate (_egcf );if _faeg !=nil {return img ,_faeg ;};for _ ,_aecd :=range _ageb {_aecd =_ce .Min (_ce .Max (0,_aecd ),1.0);
if _faeg =_abga .WriteSample (uint32 (_aecd *_gfed ));_faeg !=nil {return img ,_faeg ;};};};return _gffb .AlternateSpace .ImageToRGB (_acgba (&_fcee ));};func _bgbd (_bfbg []byte )[]byte {const _edcg =52845;const _efdf =22719;_bfbb :=55665;for _ ,_adbc :=range _bfbg [:4]{_bfbb =(int (_adbc )+_bfbb )*_edcg +_efdf ;
};_eeffe :=make ([]byte ,len (_bfbg )-4);for _ggfccc ,_dfbgdc :=range _bfbg [4:]{_eeffe [_ggfccc ]=byte (int (_dfbgdc )^_bfbb >>8);_bfbb =(int (_dfbgdc )+_bfbb )*_edcg +_efdf ;};return _eeffe ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ae .PdfObject ;LE _ae .PdfObject ;BS _ae .PdfObject ;IC _ae .PdfObject ;BE _ae .PdfObject ;IT _ae .PdfObject ;Measure _ae .PdfObject ;};func (_cgcg *PdfReader )newPdfActionThreadFromDict (_ddfc *_ae .PdfObjectDictionary )(*PdfActionThread ,error ){_cbb ,_bba :=_eeg (_ddfc .Get ("\u0046"));
if _bba !=nil {return nil ,_bba ;};return &PdfActionThread {D :_ddfc .Get ("\u0044"),B :_ddfc .Get ("\u0042"),F :_cbb },nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_aaacg *PdfSignatureReference )GetContainingPdfObject ()_ae .PdfObject {return _aaacg ._cadeg };type fontFile struct{_edgbf string ;_cdbbb string ;_ecde _ddd .SimpleEncoder ;};

// ToPdfObject implements interface PdfModel.
func (_bcg *PdfAnnotationCaret )ToPdfObject ()_ae .PdfObject {_bcg .PdfAnnotation .ToPdfObject ();_ebae :=_bcg ._gggg ;_cbef :=_ebae .PdfObject .(*_ae .PdfObjectDictionary );_bcg .PdfAnnotationMarkup .appendToPdfDictionary (_cbef );_cbef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0043\u0061\u0072e\u0074"));
_cbef .SetIfNotNil ("\u0052\u0044",_bcg .RD );_cbef .SetIfNotNil ("\u0053\u0079",_bcg .Sy );return _ebae ;};func (_fbcf *PdfWriter )writeObjectsInStreams (_ddeeaf map[_ae .PdfObject ]bool )error {for _ ,_baag :=range _fbcf ._eabcbc {if _abfeafb :=_ddeeaf [_baag ];
_abfeafb {continue ;};_egabg :=int64 (0);switch _dfac :=_baag .(type ){case *_ae .PdfIndirectObject :_egabg =_dfac .ObjectNumber ;case *_ae .PdfObjectStream :_egabg =_dfac .ObjectNumber ;case *_ae .PdfObjectStreams :_egabg =_dfac .ObjectNumber ;case *_ae .PdfObjectDictionary ,*_ae .PdfObjectString :default:_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0073\u0075p\u0070\u006f\u0072t\u0065\u0064 \u0074\u0079\u0070\u0065\u0020\u0069n\u0020wr\u0069\u0074\u0065\u0072\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054\u0020\u0028\u0074\u0079\u0070\u0065\u0020\u0025\u0054\u0029",_baag ,_dfac );
return ErrTypeCheck ;};if _fbcf ._acgbb !=nil &&_baag !=_fbcf ._bebbc {_ebgfe :=_fbcf ._acgbb .Encrypt (_baag ,_egabg ,0);if _ebgfe !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_ebgfe );
return _ebgfe ;};};_fbcf .writeObject (int (_egabg ),_baag );};return nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_fcde :=NewPdfAnnotation ();_cad :=&PdfAnnotationPolygon {};_cad .PdfAnnotation =_fcde ;_cad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcde .SetContext (_cad );return _cad ;};func _cdeea (_efcbe _ae .PdfObject )(*PdfFontDescriptor ,error ){_gfcce :=&PdfFontDescriptor {};
_efcbe =_ae .ResolveReference (_efcbe );if _bafbe ,_cgfbf :=_efcbe .(*_ae .PdfIndirectObject );_cgfbf {_gfcce ._cdbac =_bafbe ;_efcbe =_bafbe .PdfObject ;};_cgeg ,_acbg :=_ae .GetDict (_efcbe );if !_acbg {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_efcbe );
return nil ,_ae .ErrTypeError ;};if _cdbdcf :=_cgeg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_cdbdcf !=nil {_gfcce .FontName =_cdbdcf ;}else {_fgb .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_aedd ,_ :=_ae .GetName (_gfcce .FontName );if _bdgcd :=_cgeg .Get ("\u0054\u0079\u0070\u0065");_bdgcd !=nil {_dffcb ,_fedg :=_bdgcd .(*_ae .PdfObjectName );if !_fedg ||string (*_dffcb )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_fgb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bdgcd ,_aedd ,_gfcce .FontName );
};}else {_fgb .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_aedd ,_gfcce .FontName );
};_gfcce .FontFamily =_cgeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_gfcce .FontStretch =_cgeg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_gfcce .FontWeight =_cgeg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_gfcce .Flags =_cgeg .Get ("\u0046\u006c\u0061g\u0073");_gfcce .FontBBox =_cgeg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_gfcce .ItalicAngle =_cgeg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_gfcce .Ascent =_cgeg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_gfcce .Descent =_cgeg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_gfcce .Leading =_cgeg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_gfcce .CapHeight =_cgeg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_gfcce .XHeight =_cgeg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_gfcce .StemV =_cgeg .Get ("\u0053\u0074\u0065m\u0056");_gfcce .StemH =_cgeg .Get ("\u0053\u0074\u0065m\u0048");_gfcce .AvgWidth =_cgeg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_gfcce .MaxWidth =_cgeg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_gfcce .MissingWidth =_cgeg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_gfcce .FontFile =_cgeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_gfcce .FontFile2 =_cgeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_gfcce .FontFile3 =_cgeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_gfcce .CharSet =_cgeg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_gfcce .Style =_cgeg .Get ("\u0053\u0074\u0079l\u0065");_gfcce .Lang =_cgeg .Get ("\u004c\u0061\u006e\u0067");
_gfcce .FD =_cgeg .Get ("\u0046\u0044");_gfcce .CIDSet =_cgeg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _gfcce .Flags !=nil {if _eece ,_aegc :=_ae .GetIntVal (_gfcce .Flags );_aegc {_gfcce ._gece =_eece ;};};if _gfcce .MissingWidth !=nil {if _bebc ,_gffd :=_ae .GetNumberAsFloat (_gfcce .MissingWidth );
_gffd ==nil {_gfcce ._ecff =_bebc ;};};if _gfcce .FontFile !=nil {_gaeb ,_dcdaa :=_dfbgd (_gfcce .FontFile );if _dcdaa !=nil {return _gfcce ,_dcdaa ;};_fgb .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_gaeb );_gfcce .fontFile =_gaeb ;
};if _gfcce .FontFile2 !=nil {_cfceb ,_bgbec :=_dde .NewFontFile2FromPdfObject (_gfcce .FontFile2 );if _bgbec !=nil {return _gfcce ,_bgbec ;};_fgb .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_cfceb .String ());_gfcce ._cefa =&_cfceb ;
};return _gfcce ,nil ;};func _gfebf (_caeaf []byte )(_fafca ,_dafda string ,_eedcc error ){_fgb .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_caeaf ));_bgcf :=_decda .FindIndex (_caeaf );
if _bgcf ==nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_ae .ErrTypeError ;
};_cgdfe :=_bgcf [1];_cbcac :=_ga .Index (string (_caeaf [_cgdfe :]),_bffgb );if _cbcac < 0{_fafca =string (_caeaf [_cgdfe :]);return _fafca ,"",nil ;};_babc :=_cgdfe +_cbcac ;_fafca =string (_caeaf [_cgdfe :_babc ]);_fdebb :=_babc ;_cbcac =_ga .Index (string (_caeaf [_fdebb :]),_fcgaf );
if _cbcac < 0{_fgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eedcc );return "","",_ae .ErrTypeError ;};_gadc :=_fdebb +_cbcac ;
_dafda =string (_caeaf [_fdebb :_gadc ]);return _fafca ,_dafda ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_fcgd ,_gagcd :=NewStandard14Font (basefont );if _gagcd !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _fcgd ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_dagdc *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_gcde :=&PdfColorPattern {};_dfgf ,_abfea :=objects [len (objects )-1].(*_ae .PdfObjectName );if !_abfea {_fgb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_gcde .PatternName =*_dfgf ;if len (objects )> 1{_feeb :=objects [0:len (objects )-1];if _dagdc .UnderlyingCS ==nil {_fgb .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ed .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_cgga ,_cddf :=_dagdc .UnderlyingCS .ColorFromPdfObjects (_feeb );if _cddf !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_cddf );
return nil ,_cddf ;};_gcde .Color =_cgga ;};return _gcde ,nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_gcgfa *PdfReader )GetEncryptionMethod ()string {_bgcdf :=_gcgfa ._dgadd .GetCrypter ();return _bgcdf .String ();};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _ae .PdfObject ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bcfbdd int ,_ffefe *PdfPage );func (_faccg *DSS )add (_egbc *[]*_ae .PdfObjectStream ,_bgca map[string ]*_ae .PdfObjectStream ,_bcffb [][]byte )([]*_ae .PdfObjectStream ,error ){_fbea :=make ([]*_ae .PdfObjectStream ,0,len (_bcffb ));
for _ ,_egeef :=range _bcffb {_ccfa ,_faegg :=_aaaagg (_egeef );if _faegg !=nil {return nil ,_faegg ;};_daec ,_cddb :=_bgca [string (_ccfa )];if !_cddb {_daec ,_faegg =_ae .MakeStream (_egeef ,_ae .NewRawEncoder ());if _faegg !=nil {return nil ,_faegg ;
};_bgca [string (_ccfa )]=_daec ;*_egbc =append (*_egbc ,_daec );};_fbea =append (_fbea ,_daec );};return _fbea ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_bgfa *PdfFieldButton )ToPdfObject ()_ae .PdfObject {_bgfa .PdfField .ToPdfObject ();_gffcf :=_bgfa ._fcfc ;_abcda :=_gffcf .PdfObject .(*_ae .PdfObjectDictionary );_abcda .Set ("\u0046\u0054",_ae .MakeName ("\u0042\u0074\u006e"));if _bgfa .Opt !=nil {_abcda .Set ("\u004f\u0070\u0074",_bgfa .Opt );
};return _gffcf ;};

// String returns a string representation of what flags are set.
func (_ccag FieldFlag )String ()string {_bcbde :="";if _ccag ==FieldFlagClear {_bcbde ="\u0043\u006c\u0065a\u0072";return _bcbde ;};if _ccag &FieldFlagReadOnly > 0{_bcbde +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _ccag &FieldFlagRequired > 0{_bcbde +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _ccag &FieldFlagNoExport > 0{_bcbde +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _ccag &FieldFlagNoToggleToOff > 0{_bcbde +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _ccag &FieldFlagRadio > 0{_bcbde +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _ccag &FieldFlagPushbutton > 0{_bcbde +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _ccag &FieldFlagRadiosInUnision > 0{_bcbde +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _ccag &FieldFlagMultiline > 0{_bcbde +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _ccag &FieldFlagPassword > 0{_bcbde +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _ccag &FieldFlagFileSelect > 0{_bcbde +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _ccag &FieldFlagDoNotScroll > 0{_bcbde +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _ccag &FieldFlagComb > 0{_bcbde +="\u007c\u0043\u006fm\u0062";};if _ccag &FieldFlagRichText > 0{_bcbde +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _ccag &FieldFlagDoNotSpellCheck > 0{_bcbde +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _ccag &FieldFlagCombo > 0{_bcbde +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _ccag &FieldFlagEdit > 0{_bcbde +="\u007c\u0045\u0064i\u0074";};if _ccag &FieldFlagSort > 0{_bcbde +="\u007c\u0053\u006fr\u0074";};if _ccag &FieldFlagMultiSelect > 0{_bcbde +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _ccag &FieldFlagCommitOnSelChange > 0{_bcbde +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ga .Trim (_bcbde ,"\u007c");};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gdeca *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gdeca .baseFields ()._cdge !=nil {return _gdeca .baseFields ()._cdge ;};if _ddfd :=_gdeca ._efgfa .getFontDescriptor ();_ddfd !=nil {return _ddfd ;};_fgb .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gdeca );
return nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_abgc :=NewPdfAnnotation ();_dbg :=&PdfAnnotationCaret {};_dbg .PdfAnnotation =_abgc ;_dbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abgc .SetContext (_dbg );return _dbg ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ae .PdfObject ;LE _ae .PdfObject ;BS _ae .PdfObject ;IC _ae .PdfObject ;BE _ae .PdfObject ;IT _ae .PdfObject ;Measure _ae .PdfObject ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_fgd .PSProgram ;_ebbgc *_fgd .PSExecutor ;_ccacd []byte ;_fbaeb *_ae .PdfObjectStream ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _ae .PdfObject ;Popup *PdfAnnotationPopup ;CA _ae .PdfObject ;RC _ae .PdfObject ;CreationDate _ae .PdfObject ;IRT _ae .PdfObject ;Subj _ae .PdfObject ;RT _ae .PdfObject ;IT _ae .PdfObject ;ExData _ae .PdfObject ;};func (_fefb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _fefb ._cdge ==nil &&_fefb .DescendantFont !=nil {return _fefb .DescendantFont .FontDescriptor ();
};return _fefb ._cdge ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gbcaa :=&PdfColorspaceCalRGB {};_gbcaa .BlackPoint =[]float64 {0.0,0.0,0.0};_gbcaa .Gamma =[]float64 {1.0,1.0,1.0};_gbcaa .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gbcaa ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_ffga :=map[rune ]int {};for _ ,_efbef :=range text {_ffga [_efbef ]++;};return _ffga ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_adgf PdfModel ;_ccdf _ae .PdfObject ;};

// Reset sets the multi font encoder to its initial state.
func (_gafe *MultipleFontEncoder )Reset (){_gafe .CurrentFont =_gafe ._aged [0]};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dddad *PdfAppender )GetDSS ()(_cda *DSS ){return _dddad ._dgbd };func _cbdgg ()string {_bgafe .Lock ();defer _bgafe .Unlock ();if len (_gdgcc )> 0{return _gdgcc ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bfcae *PdfFieldButton )IsRadio ()bool {return _bfcae .GetType ()==ButtonTypeRadio };

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _ae .PdfObject ;T _ae .PdfObject ;Operation _ae .PdfObject ;};func _eabcb (_dcbce *_ae .PdfObjectDictionary )(*PdfTilingPattern ,error ){_fddaf :=&PdfTilingPattern {};_cdbf :=_dcbce .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _cdbf ==nil {_fgb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ccbf ,_abdda :=_cdbf .(*_ae .PdfObjectInteger );if !_abdda {_fgb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cdbf );
return nil ,_ae .ErrTypeError ;};_fddaf .PaintType =_ccbf ;_cdbf =_dcbce .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cdbf ==nil {_fgb .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_afcfeg ,_abdda :=_cdbf .(*_ae .PdfObjectInteger );if !_abdda {_fgb .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdbf );
return nil ,_ae .ErrTypeError ;};_fddaf .TilingType =_afcfeg ;_cdbf =_dcbce .Get ("\u0042\u0042\u006f\u0078");if _cdbf ==nil {_fgb .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_cdbf =_ae .TraceToDirectObject (_cdbf );_bfda ,_abdda :=_cdbf .(*_ae .PdfObjectArray );if !_abdda {_fgb .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdbf );
return nil ,_ae .ErrTypeError ;};_agbbc ,_caad :=NewPdfRectangle (*_bfda );if _caad !=nil {_fgb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_caad );return nil ,_caad ;};_fddaf .BBox =_agbbc ;_cdbf =_dcbce .Get ("\u0058\u0053\u0074e\u0070");
if _cdbf ==nil {_fgb .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bcafd ,_caad :=_ae .GetNumberAsFloat (_cdbf );if _caad !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bcafd );
return nil ,_caad ;};_fddaf .XStep =_ae .MakeFloat (_bcafd );_cdbf =_dcbce .Get ("\u0059\u0053\u0074e\u0070");if _cdbf ==nil {_fgb .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_cfgg ,_caad :=_ae .GetNumberAsFloat (_cdbf );if _caad !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cfgg );
return nil ,_caad ;};_fddaf .YStep =_ae .MakeFloat (_cfgg );_cdbf =_dcbce .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cdbf ==nil {_fgb .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dcbce ,_abdda =_ae .TraceToDirectObject (_cdbf ).(*_ae .PdfObjectDictionary );if !_abdda {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cdbf );
};_bgegd ,_caad :=NewPdfPageResourcesFromDict (_dcbce );if _caad !=nil {return nil ,_caad ;};_fddaf .Resources =_bgegd ;if _bdga :=_dcbce .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bdga !=nil {_gdfde ,_bace :=_bdga .(*_ae .PdfObjectArray );if !_bace {_fgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdga );
return nil ,_ae .ErrTypeError ;};_fddaf .Matrix =_gdfde ;};return _fddaf ,nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _db .Time ){_bgafe .Lock ();defer _bgafe .Unlock ();_dddac =creationDate ;};func (_daeca *PdfWriter )writeObject (_cabbe int ,_aeafd _ae .PdfObject ){_fgb .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_cabbe );
if _ageeb ,_ccda :=_aeafd .(*_ae .PdfIndirectObject );_ccda {_daeca ._eddaf [_cabbe ]=crossReference {Type :1,Offset :_daeca ._caddb ,Generation :_ageeb .GenerationNumber };_abcbcc :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cabbe );
if _gaabga ,_acadg :=_ageeb .PdfObject .(*pdfSignDictionary );_acadg {_gaabga ._badfc =_daeca ._caddb +int64 (len (_abcbcc ));};if _ageeb .PdfObject ==nil {_fgb .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_ageeb .PdfObject =_ae .MakeNull ();};_abcbcc +=_ageeb .PdfObject .WriteString ();_abcbcc +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_daeca .writeString (_abcbcc );return ;};if _bcece ,_eagbe :=_aeafd .(*_ae .PdfObjectStream );_eagbe {_daeca ._eddaf [_cabbe ]=crossReference {Type :1,Offset :_daeca ._caddb ,Generation :_bcece .GenerationNumber };
_ccaae :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cabbe );_ccaae +=_bcece .PdfObjectDictionary .WriteString ();_ccaae +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_daeca .writeString (_ccaae );if _bcece .Lazy {_baebg ,_fdcggf :=_b .ReadFile (_bcece .TempFile );
if _fdcggf !=nil {_fgb .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_bcece .TempFile );return ;};_daeca .writeBytes (_baebg );
_b .Remove (_bcece .TempFile );}else {_daeca .writeBytes (_bcece .Stream );};_daeca .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _adff ,_ffgbg :=_aeafd .(*_ae .PdfObjectStreams );
_ffgbg {_daeca ._eddaf [_cabbe ]=crossReference {Type :1,Offset :_daeca ._caddb ,Generation :_adff .GenerationNumber };_cefc :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cabbe );var _gcfgab []string ;var _fbfdf string ;var _badg int64 ;
for _aaab ,_cccdd :=range _adff .Elements (){_gagdd ,_gfgab :=_cccdd .(*_ae .PdfIndirectObject );if !_gfgab {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_cabbe ,_cccdd );
continue ;};_cgcdg :=_gagdd .PdfObject .WriteString ()+"\u0020";_fbfdf =_fbfdf +_cgcdg ;_gcfgab =append (_gcfgab ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_gagdd .ObjectNumber ,_badg ));_daeca ._eddaf [int (_gagdd .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_cabbe ,Index :_aaab };
_badg =_badg +int64 (len ([]byte (_cgcdg )));};_cfbg :=_ga .Join (_gcfgab ,"\u0020")+"\u0020";_cedbb :=_ae .NewFlateEncoder ();_cebcf :=_cedbb .MakeStreamDict ();_cebcf .Set (_ae .PdfObjectName ("\u0054\u0079\u0070\u0065"),_ae .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_fdfdd :=int64 (_adff .Len ());_cebcf .Set (_ae .PdfObjectName ("\u004e"),_ae .MakeInteger (_fdfdd ));_bfccg :=int64 (len (_cfbg ));_cebcf .Set (_ae .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_ae .MakeInteger (_bfccg ));_bcabf ,_ :=_cedbb .EncodeBytes ([]byte (_cfbg +_fbfdf ));
_abbcg :=int64 (len (_bcabf ));_cebcf .Set (_ae .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_ae .MakeInteger (_abbcg ));_cefc +=_cebcf .WriteString ();_cefc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_daeca .writeString (_cefc );_daeca .writeBytes (_bcabf );
_daeca .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_daeca .writeString (_aeafd .WriteString ());};func (_gdfd *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// String returns a string that describes `base`.
func (_gccd fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_gccd .coreString ());};func (_abgdg *PdfWriter )checkLicense ()error {_abefb :=_be .GetLicenseKey ();if (_abefb ==nil ||!_abefb .IsLicensed ())&&!_dfbeb {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ed .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_ccdgg *PdfFont )CharcodesToUnicode (charcodes []_ddd .CharCode )[]rune {_gbdb ,_ ,_ :=_ccdgg .CharcodesToUnicodeWithStats (charcodes );return _gbdb ;};

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_aged []*PdfFont ;CurrentFont *PdfFont ;};func (_gbc *PdfReader )newPdfAnnotationTextFromDict (_bdeb *_ae .PdfObjectDictionary )(*PdfAnnotationText ,error ){_aba :=PdfAnnotationText {};_cbfc ,_ceef :=_gbc .newPdfAnnotationMarkupFromDict (_bdeb );
if _ceef !=nil {return nil ,_ceef ;};_aba .PdfAnnotationMarkup =_cbfc ;_aba .Open =_bdeb .Get ("\u004f\u0070\u0065\u006e");_aba .Name =_bdeb .Get ("\u004e\u0061\u006d\u0065");_aba .State =_bdeb .Get ("\u0053\u0074\u0061t\u0065");_aba .StateModel =_bdeb .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_aba ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_dcd :=NewPdfAnnotation ();_gcb :=&PdfAnnotationPopup {};_gcb .PdfAnnotation =_dcd ;_dcd .SetContext (_gcb );return _gcb ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_cfgef *PdfOutlineTreeNode )GetContainingPdfObject ()_ae .PdfObject {return _cfgef .GetContext ().GetContainingPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_bde *PdfActionSetOCGState )ToPdfObject ()_ae .PdfObject {_bde .PdfAction .ToPdfObject ();_dgb :=_bde ._bac ;_gad :=_dgb .PdfObject .(*_ae .PdfObjectDictionary );_gad .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeSetOCGState )));_gad .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bde .State );
_gad .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bde .PreserveRB );return _dgb ;};

// GetOutlineTree returns the outline tree.
func (_deege *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _deege ._beeag };func (_ebe *PdfReader )newPdfActionGotoEFromDict (_dgg *_ae .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gbbb ,_cbfa :=_eeg (_dgg .Get ("\u0046"));if _cbfa !=nil {return nil ,_cbfa ;
};return &PdfActionGoToE {D :_dgg .Get ("\u0044"),NewWindow :_dgg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_dgg .Get ("\u0054"),F :_gbbb },nil ;};

// HasFontByName checks if has font resource by name.
func (_fffcb *PdfPage )HasFontByName (name _ae .PdfObjectName )bool {_egdge ,_bbdgcf :=_fffcb .Resources .Font .(*_ae .PdfObjectDictionary );if !_bbdgcf {return false ;};if _gefe :=_egdge .Get (name );_gefe !=nil {return true ;};return false ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_bcage DefaultImageHandler )Read (reader _fgg .Reader )(*Image ,error ){_edef ,_ ,_eabcc :=_da .Decode (reader );if _eabcc !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_eabcc );
return nil ,_eabcc ;};return _bcage .NewImageFromGoImage (_edef );};func _ffaab (_acgac *PdfField ,_ebdbf _ae .PdfObject )error {switch _acgac .GetContext ().(type ){case *PdfFieldText :switch _fdgg :=_ebdbf .(type ){case *_ae .PdfObjectName :_fgfg :=_fdgg ;
_fgb .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_fgfg .String ());
_acgac .V =_ae .MakeEncodedString (_fdgg .String (),true );case *_ae .PdfObjectString :_acgac .V =_ae .MakeEncodedString (_fdgg .String (),true );default:_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_fdgg ,_fdgg );
};case *PdfFieldButton :switch _ebdbf .(type ){case *_ae .PdfObjectName :if len (_ebdbf .String ())> 0{_acgac .V =_ebdbf ;_agbb (_acgac ,_ebdbf );};case *_ae .PdfObjectString :if len (_ebdbf .String ())> 0{_acgac .V =_ae .MakeName (_ebdbf .String ());_agbb (_acgac ,_acgac .V );
};default:_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_acgac .PartialName (),_ebdbf );_acgac .V =_ebdbf ;};case *PdfFieldChoice :switch _ebdbf .(type ){case *_ae .PdfObjectName :if len (_ebdbf .String ())> 0{_acgac .V =_ae .MakeString (_ebdbf .String ());
_agbb (_acgac ,_ebdbf );};case *_ae .PdfObjectString :if len (_ebdbf .String ())> 0{_acgac .V =_ebdbf ;_agbb (_acgac ,_ae .MakeName (_ebdbf .String ()));};default:_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_acgac .PartialName (),_ebdbf );
_acgac .V =_ebdbf ;};case *PdfFieldSignature :_fgb .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_acgac .PartialName (),_ebdbf );
};return nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_fgda *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_fdcdd ,_eege :=_ae .GetDict (_fgda ._gefce .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_eege {_fdcdd =_ae .MakeDict ();_fgda ._gefce .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_fdcdd );
};_baffac ,_eege :=_ae .GetDict (_fdcdd .Get (_ae .PdfObjectName (extName )));if !_eege {_baffac =_ae .MakeDict ();_fdcdd .Set (_ae .PdfObjectName (extName ),_baffac );};if _fbdbg ,_ :=_ae .GetNameVal (_baffac .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_fbdbg !=baseVersion {_baffac .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_ae .MakeName (baseVersion ));};if _cbbgg ,_ :=_ae .GetIntVal (_baffac .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_cbbgg !=extLevel {_baffac .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_ae .MakeInteger (int64 (extLevel )));};};func (_bcfgb *PdfWriter )setWriter (_ddadg _fgg .Writer ){_bcfgb ._caddb =_bcfgb ._gege ;_bcfgb ._abcf =_a .NewWriter (_ddadg );
};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ebeb *PdfPageResourcesColorspaces )Set (key _ae .PdfObjectName ,val PdfColorspace ){if _ ,_aacdf :=_ebeb .Colorspaces [string (key )];!_aacdf {_ebeb .Names =append (_ebeb .Names ,string (key ));};_ebeb .Colorspaces [string (key )]=val ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bdggb *PdfPageResources )GetShadingByName (keyName _ae .PdfObjectName )(*PdfShading ,bool ){if _bdggb .Shading ==nil {return nil ,false ;};_dbaac ,_bdddg :=_ae .TraceToDirectObject (_bdggb .Shading ).(*_ae .PdfObjectDictionary );if !_bdddg {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdggb .Shading );
return nil ,false ;};if _ccebc :=_dbaac .Get (keyName );_ccebc !=nil {_cccab ,_ffgda :=_gdgcd (_ccebc );if _ffgda !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_ffgda );
return nil ,false ;};return _cccab ,true ;};return nil ,false ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_faffa *PdfFont )SubsetRegistered ()error {switch _facbe :=_faffa ._efgfa .(type ){case *pdfFontType0 :_dgbe :=_facbe .subsetRegistered ();if _dgbe !=nil {_fgb .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dgbe );
return _dgbe ;};if _facbe ._daecc !=nil {if _facbe ._abgde !=nil {_facbe ._abgde .ToPdfObject ();};_facbe .ToPdfObject ();};default:_fgb .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_facbe );
};return nil ;};func _fdce (_gfccg _ae .PdfObject )(*PdfColorspaceCalGray ,error ){_afea :=NewPdfColorspaceCalGray ();if _dbff ,_fbd :=_gfccg .(*_ae .PdfIndirectObject );_fbd {_afea ._fgcfc =_dbff ;};_gfccg =_ae .TraceToDirectObject (_gfccg );_adee ,_caaad :=_gfccg .(*_ae .PdfObjectArray );
if !_caaad {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adee .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_gfccg =_ae .TraceToDirectObject (_adee .Get (0));_eggc ,_caaad :=_gfccg .(*_ae .PdfObjectName );if !_caaad {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_eggc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gfccg =_ae .TraceToDirectObject (_adee .Get (1));
_affe ,_caaad :=_gfccg .(*_ae .PdfObjectDictionary );if !_caaad {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_gfccg =_affe .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gfccg =_ae .TraceToDirectObject (_gfccg );_efaf ,_caaad :=_gfccg .(*_ae .PdfObjectArray );if !_caaad {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _efaf .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fage ,_bgbg :=_efaf .GetAsFloat64Slice ();
if _bgbg !=nil {return nil ,_bgbg ;};_afea .WhitePoint =_fage ;_gfccg =_affe .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gfccg !=nil {_gfccg =_ae .TraceToDirectObject (_gfccg );_bafb ,_aegg :=_gfccg .(*_ae .PdfObjectArray );
if !_aegg {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _bafb .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_fdcg ,_gcgc :=_bafb .GetAsFloat64Slice ();if _gcgc !=nil {return nil ,_gcgc ;};_afea .BlackPoint =_fdcg ;};_gfccg =_affe .Get ("\u0047\u0061\u006dm\u0061");if _gfccg !=nil {_gfccg =_ae .TraceToDirectObject (_gfccg );_cfbff ,_cfeb :=_ae .GetNumberAsFloat (_gfccg );
if _cfeb !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_afea .Gamma =_cfbff ;};return _afea ,nil ;};func _fcdda (_deffdd _fgg .ReadSeeker ,_bffgf *ReaderOpts ,_fgdbg bool ,_gbfd string )(*PdfReader ,error ){if _bffgf ==nil {_bffgf =NewReaderOpts ();
};_cegc :="";if _gbbde ,_cgbdg :=_deffdd .(*_b .File );_cgbdg {_cegc =_gbbde .Name ();};_cbcgf :=*_bffgf ;_gggea :=&PdfReader {_abcc :_deffdd ,_ccfad :map[_ae .PdfObject ]struct{}{},_cffgf :_gabee (),_fedag :_bffgf .LazyLoad ,_eabbg :_bffgf .ComplianceMode ,_abefc :_fgdbg ,_cdaae :&_cbcgf ,_gccde :_cegc };
_acbbb ,_ddde :=_feeeag ("\u0072");if _ddde !=nil {return nil ,_ddde ;};_ddde =_be .Track (_acbbb ,_gbfd ,_gggea ._gccde );if _ddde !=nil {return nil ,_ddde ;};_gggea ._gecc =_acbbb ;var _adaab *_ae .PdfParser ;if !_gggea ._eabbg {_adaab ,_ddde =_ae .NewParser (_deffdd );
}else {_adaab ,_ddde =_ae .NewCompliancePdfParser (_deffdd );};if _ddde !=nil {return nil ,_ddde ;};_gggea ._dgadd =_adaab ;_bdgfb ,_ddde :=_gggea .IsEncrypted ();if _ddde !=nil {return nil ,_ddde ;};if !_bdgfb {_ddde =_gggea .loadStructure ();if _ddde !=nil {return nil ,_ddde ;
};}else if _fgdbg {_dagcb ,_bffbg :=_gggea .Decrypt ([]byte (_bffgf .Password ));if _bffbg !=nil {return nil ,_bffbg ;};if !_dagcb {return nil ,_ed .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_gggea ._gefcd =make (map[*PdfReader ]*PdfReader );_gggea ._cacfb =make ([]*PdfReader ,_adaab .GetRevisionNumber ());return _gggea ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bdfag pdfFontType3 )GetRuneMetrics (r rune )(_dde .CharMetrics ,bool ){_cedb :=_bdfag .Encoder ();if _cedb ==nil {_fgb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bdfag );
return _dde .CharMetrics {},false ;};_fgfba ,_cgcda :=_cedb .RuneToCharcode (r );if !_cgcda {if r !=' '{_fgb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bdfag );
};return _dde .CharMetrics {},false ;};_ecfd ,_bgdcc :=_bdfag .GetCharMetrics (_fgfba );return _ecfd ,_bgdcc ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _ae .PdfObjectArray )(*PdfRectangle ,error ){_afbdg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _ggeff error ;_afbdg .Llx ,_ggeff =_ae .GetNumberAsFloat (arr .Get (0));if _ggeff !=nil {return nil ,_ggeff ;};_afbdg .Lly ,_ggeff =_ae .GetNumberAsFloat (arr .Get (1));if _ggeff !=nil {return nil ,_ggeff ;};_afbdg .Urx ,_ggeff =_ae .GetNumberAsFloat (arr .Get (2));
if _ggeff !=nil {return nil ,_ggeff ;};_afbdg .Ury ,_ggeff =_ae .GetNumberAsFloat (arr .Get (3));if _ggeff !=nil {return nil ,_ggeff ;};return &_afbdg ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _fgg .ReadSeeker )(*PdfReader ,error ){const _gadgb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _fcdda (rs ,&ReaderOpts {LazyLoad :true },false ,_gadgb );
};

// ToPdfObject implements interface PdfModel.
func (_cfgf *PdfAnnotationUnderline )ToPdfObject ()_ae .PdfObject {_cfgf .PdfAnnotation .ToPdfObject ();_acag :=_cfgf ._gggg ;_ebcf :=_acag .PdfObject .(*_ae .PdfObjectDictionary );_cfgf .PdfAnnotationMarkup .appendToPdfDictionary (_ebcf );_ebcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ebcf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cfgf .QuadPoints );return _acag ;};func _daeaf ()string {_ffbc :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _cggf _fga .Buffer ;for _fecgg :=0;_fecgg < 6;_fecgg ++{_cggf .WriteRune (rune (_ffbc [_ge .Intn (len (_ffbc ))]));};return _cggf .String ();};func _dfbgd (_aafac _ae .PdfObject )(*fontFile ,error ){_fgb .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_aafac );
_bdge :=&fontFile {};_aafac =_ae .TraceToDirectObject (_aafac );_ecbaf ,_gaagc :=_aafac .(*_ae .PdfObjectStream );if !_gaagc {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_aafac );
return nil ,_ae .ErrTypeError ;};_ddae :=_ecbaf .PdfObjectDictionary ;_abcedd ,_ffab :=_ae .DecodeStream (_ecbaf );if _ffab !=nil {return nil ,_ffab ;};_bdef ,_gaagc :=_ae .GetNameVal (_ddae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gaagc {_bdge ._cdbbb =_bdef ;
if _bdef =="\u0054\u0079\u0070\u0065\u0031\u0043"{_fgb .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_agec ,_ :=_ae .GetIntVal (_ddae .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_eccca ,_ :=_ae .GetIntVal (_ddae .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _agec > len (_abcedd ){_agec =len (_abcedd );
};if _agec +_eccca > len (_abcedd ){_eccca =len (_abcedd )-_agec ;};_fdca :=_abcedd [:_agec ];var _ecda []byte ;if _eccca > 0{_ecda =_abcedd [_agec :_agec +_eccca ];};if _agec > 0&&_eccca > 0{_eeca :=_bdge .loadFromSegments (_fdca ,_ecda );if _eeca !=nil {return nil ,_eeca ;
};};return _bdge ,nil ;};

// Write writes out the PDF.
func (_eaagc *PdfWriter )Write (writer _fgg .Writer )error {_fgb .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");if _acgbbc ,_fgga :=writer .(*_b .File );_fgga {_eaagc .SetFileName (_acgbbc .Name ());};_bbgaf :=_eaagc .checkLicense ();if _bbgaf !=nil {return _bbgaf ;
};if _bbgaf =_eaagc .writeOutlines ();_bbgaf !=nil {return _bbgaf ;};if _bbgaf =_eaagc .writeAcroFormFields ();_bbgaf !=nil {return _bbgaf ;};if _bbgaf =_eaagc .writeNamesDictionary ();_bbgaf !=nil {return _bbgaf ;};_eaagc .checkPendingObjects ();if _bbgaf =_eaagc .writeOutputIntents ();
_bbgaf !=nil {return _bbgaf ;};_eaagc .setCatalogVersion ();_eaagc .copyObjects ();if _bbgaf =_eaagc .optimize ();_bbgaf !=nil {return _bbgaf ;};if _bbgaf =_eaagc .optimizeDocument ();_bbgaf !=nil {return _bbgaf ;};var _fgfaf _d .Hash ;if _eaagc ._eaggcb {_fgfaf =_dd .New ();
writer =_fgg .MultiWriter (_fgfaf ,writer );};_eaagc .setWriter (writer );_cfed :=_eaagc .checkCrossReferenceStream ();_bacbd ,_cfed :=_eaagc .mapObjectStreams (_cfed );_eaagc .adjustXRefAffectedVersion (_cfed );_eaagc .writeDocumentVersion ();_eaagc .updateObjectNumbers ();
_eaagc .writeObjects ();if _bbgaf =_eaagc .writeObjectsInStreams (_bacbd );_bbgaf !=nil {return _bbgaf ;};_aaeed :=_eaagc ._caddb ;var _adbgd int ;for _ceefd :=range _eaagc ._eddaf {if _ceefd > _adbgd {_adbgd =_ceefd ;};};if _eaagc ._eaggcb {if _bbgaf =_eaagc .setHashIDs (_fgfaf );
_bbgaf !=nil {return _bbgaf ;};};if _cfed {if _bbgaf =_eaagc .writeXRefStreams (_adbgd ,_aaeed );_bbgaf !=nil {return _bbgaf ;};}else {_eaagc .writeTrailer (_adbgd );};_eaagc .makeOffSetReference (_aaeed );if _bbgaf =_eaagc .flushWriter ();_bbgaf !=nil {return _bbgaf ;
};return nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_dde .CharMetrics ;func (_dafdb *PdfWriter )writeOutlines ()error {if _dafdb ._bdggf ==nil {return nil ;};_fgb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_dafdb ._bdggf );_cgbacc :=_dafdb ._bdggf .ToPdfObject ();
_fgb .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_cgbacc ,_cgbacc ,_cgbacc );_dafdb ._gefce .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_cgbacc );
_dfgff :=_dafdb .addObjects (_cgbacc );if _dfgff !=nil {return _dfgff ;};return nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func _cgcgd (_ebfc _ae .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_fgb .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_ebfc .String (),_ebfc );
_ffcd :=NewPdfColorspaceSpecialPattern ();if _fgcb ,_edgcg :=_ebfc .(*_ae .PdfIndirectObject );_edgcg {_ffcd ._eddb =_fgcb ;};_ebfc =_ae .TraceToDirectObject (_ebfc );if _caba ,_eeffg :=_ebfc .(*_ae .PdfObjectName );_eeffg {if *_caba !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _ffcd ,nil ;};_dgbdc ,_eeac :=_ebfc .(*_ae .PdfObjectArray );if !_eeac {_fgb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_ebfc );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _dgbdc .Len ()!=1&&_dgbdc .Len ()!=2{_fgb .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_dgbdc );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_ebfc =_dgbdc .Get (0);if _gdfe ,_ddfe :=_ebfc .(*_ae .PdfObjectName );_ddfe {if *_gdfe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fgb .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_gdfe );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _dgbdc .Len ()> 1{_ebfc =_dgbdc .Get (1);_ebfc =_ae .TraceToDirectObject (_ebfc );_bgeg ,_gbge :=NewPdfColorspaceFromPdfObject (_ebfc );if _gbge !=nil {return nil ,_gbge ;
};_ffcd .UnderlyingCS =_bgeg ;};_fgb .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_ffcd .UnderlyingCS );
return _ffcd ,nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_dddd :=NewPdfAction ();_aed :=&PdfActionHide {};_aed .PdfAction =_dddd ;_dddd .SetContext (_aed );return _aed ;};

// Encoder returns the font's text encoder.
func (_egbd *pdfFontSimple )Encoder ()_ddd .TextEncoder {if _egbd ._beaea !=nil {return _egbd ._beaea ;};if _egbd ._fbac !=nil {return _egbd ._fbac ;};_aafeb ,_ :=_ddd .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _aafeb ;};func (_gcbg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _cafda :=_gcbg ._cdge ;_cafda !=nil {return _cafda ;};return _gcbg ._gfdb ;};func _bgaf (_fee _ae .PdfObject )(*PdfColorspaceCalRGB ,error ){_efb :=NewPdfColorspaceCalRGB ();
if _bdfdd ,_cfgfc :=_fee .(*_ae .PdfIndirectObject );_cfgfc {_efb ._aadg =_bdfdd ;};_fee =_ae .TraceToDirectObject (_fee );_bbg ,_caef :=_fee .(*_ae .PdfObjectArray );if !_caef {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _bbg .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fee =_ae .TraceToDirectObject (_bbg .Get (0));_fcaf ,_caef :=_fee .(*_ae .PdfObjectName );
if !_caef {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_fcaf !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_fee =_ae .TraceToDirectObject (_bbg .Get (1));_dggg ,_caef :=_fee .(*_ae .PdfObjectDictionary );if !_caef {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_fee =_dggg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fee =_ae .TraceToDirectObject (_fee );_cdag ,_caef :=_fee .(*_ae .PdfObjectArray );if !_caef {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _cdag .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gbce ,_ggge :=_cdag .GetAsFloat64Slice ();
if _ggge !=nil {return nil ,_ggge ;};_efb .WhitePoint =_gbce ;_fee =_dggg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fee !=nil {_fee =_ae .TraceToDirectObject (_fee );_egee ,_adbd :=_fee .(*_ae .PdfObjectArray );if !_adbd {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _egee .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cfee ,_afegc :=_egee .GetAsFloat64Slice ();
if _afegc !=nil {return nil ,_afegc ;};_efb .BlackPoint =_cfee ;};_fee =_dggg .Get ("\u0047\u0061\u006dm\u0061");if _fee !=nil {_fee =_ae .TraceToDirectObject (_fee );_dgd ,_cebd :=_fee .(*_ae .PdfObjectArray );if !_cebd {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _dgd .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_afdc ,_dffg :=_dgd .GetAsFloat64Slice ();if _dffg !=nil {return nil ,_dffg ;
};_efb .Gamma =_afdc ;};_fee =_dggg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fee !=nil {_fee =_ae .TraceToDirectObject (_fee );_fbae ,_gcgcf :=_fee .(*_ae .PdfObjectArray );if !_gcgcf {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _fbae .Len ()!=9{_fgb .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_fbae .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_bfbd ,_accc :=_fbae .GetAsFloat64Slice ();if _accc !=nil {return nil ,_accc ;};_efb .Matrix =_bfbd ;};return _efb ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_gaecb *PdfShading )GetContainingPdfObject ()_ae .PdfObject {return _gaecb ._dgbdcg };

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _ae .PdfObject )(*PdfInfo ,error ){var _ddfca PdfInfo ;_aefcac ,_bcbgc :=obj .(*_ae .PdfObjectDictionary );if !_bcbgc {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_egdg :=range _aefcac .Keys (){switch _egdg {case "\u0054\u0069\u0074l\u0065":_ddfca .Title ,_ =_ae .GetString (_aefcac .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_ddfca .Author ,_ =_ae .GetString (_aefcac .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_ddfca .Subject ,_ =_ae .GetString (_aefcac .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_ddfca .Keywords ,_ =_ae .GetString (_aefcac .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_ddfca .Creator ,_ =_ae .GetString (_aefcac .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_ddfca .Producer ,_ =_ae .GetString (_aefcac .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_ddfca .Trapped ,_ =_ae .GetName (_aefcac .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _bbeg ,_gbcg :=_ae .GetString (_aefcac .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_gbcg &&_bbeg .String ()!=""{_gbdda ,_dagfa :=NewPdfDate (_bbeg .String ());if _dagfa !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_dagfa );
};_ddfca .CreationDate =&_gbdda ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _acce ,_bbcc :=_ae .GetString (_aefcac .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_bbcc &&_acce .String ()!=""{_ccec ,_gcff :=NewPdfDate (_acce .String ());if _gcff !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_gcff );
};_ddfca .ModifiedDate =&_ccec ;};default:_agce ,_ :=_ae .GetString (_aefcac .Get (_egdg ));if _ddfca ._degd ==nil {_ddfca ._degd =_ae .MakeDict ();};_ddfca ._degd .Set (_egdg ,_agce );};};return &_ddfca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gf *PdfActionMovie )ToPdfObject ()_ae .PdfObject {_gf .PdfAction .ToPdfObject ();_eabd :=_gf ._bac ;_ddg :=_eabd .PdfObject .(*_ae .PdfObjectDictionary );_ddg .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeMovie )));_ddg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gf .Annotation );
_ddg .SetIfNotNil ("\u0054",_gf .T );_ddg .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gf .Operation );return _eabd ;};

// ReplacePage replaces the original page to a new page.
func (_geae *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_ddaf :=pageNum -1;for _aff :=range _geae ._gbgb {if _aff ==_ddaf {_dfba :=page .Duplicate ();_edbac (_dfba );_geae ._gbgb [_aff ]=_dfba ;};};};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_daeae *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_deedd :=_daeae ._dgadd .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _deedd {return nil ,_ed .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_deedd {return _daeae ,nil ;};if _daeae ._cacfb [revisionNumber ]!=nil {return _daeae ._cacfb [revisionNumber ],nil ;};_agbae :=_daeae ;for _dbgac :=_deedd -1;_dbgac >=revisionNumber ;_dbgac --{_fdafd ,_fdcbc :=_agbae .GetPreviousRevision ();
if _fdcbc !=nil {return nil ,_fdcbc ;};_daeae ._cacfb [_dbgac ]=_fdafd ;_agbae =_fdafd ;};return _agbae ,nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_dgeec *PdfWriter )SetRotation (rotate int64 )error {_gcbf ,_cadaf :=_ae .GetDict (_dgeec ._bdcg );if !_cadaf {return ErrTypeCheck ;};_gcbf .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ae .MakeInteger (rotate ));return nil ;};func _dgeb (_aaacb *_ae .PdfIndirectObject )(*PdfOutline ,error ){_eabgg ,_dage :=_aaacb .PdfObject .(*_ae .PdfObjectDictionary );
if !_dage {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_caefe :=NewPdfOutline ();if _bgecc :=_eabgg .Get ("\u0054\u0079\u0070\u0065");
_bgecc !=nil {_bfea ,_beffc :=_bgecc .(*_ae .PdfObjectName );if _beffc {if *_bfea !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_bfea );
};};};if _egcbfg :=_eabgg .Get ("\u0043\u006f\u0075n\u0074");_egcbfg !=nil {_fafea ,_ababf :=_ae .GetNumberAsInt64 (_egcbfg );if _ababf !=nil {return nil ,_ababf ;};_caefe .Count =&_fafea ;};return _caefe ,nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_ceec *PdfWriter )SetDocInfo (info *PdfInfo ){_ceec .setDocInfo (info .ToPdfObject ())};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_fdbce *LTV )Enable (sig *PdfSignature ,extraCerts []*_ddc .Certificate )error {if _bbfce :=_fdbce .validateSig (sig );_bbfce !=nil {return _bbfce ;};_ccgeb ,_debbb :=_fdbce .generateVRIKey (sig );if _debbb !=nil {return _debbb ;};if _ ,_acbea :=_fdbce ._febag .VRI [_ccgeb ];
_acbea &&_fdbce .SkipExisting {return nil ;};_edceb ,_debbb :=sig .GetCerts ();if _debbb !=nil {return _debbb ;};return _fdbce .enable (_edceb ,extraCerts ,_ccgeb );};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_aged :fonts ,CurrentFont :fonts [0]};};func _efgb (_dccga _ae .PdfObject )(string ,error ){_dccga =_ae .TraceToDirectObject (_dccga );switch _ebfb :=_dccga .(type ){case *_ae .PdfObjectString :return _ebfb .Str (),nil ;
case *_ae .PdfObjectStream :_bfad ,_fabac :=_ae .DecodeStream (_ebfb );if _fabac !=nil {return "",_fabac ;};return string (_bfad ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_dccga );
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cgae *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egfee :=vals [0];if _egfee < 0.0||_egfee > 1.0{_fgb .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _egfee < 0.0{_egfee =0.0;}else if _egfee > 1.0{_egfee =1.0;};return NewPdfColorDeviceGray (_egfee ),nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_gcd :=NewPdfAnnotation ();_acd :=&PdfAnnotationRichMedia {};_acd .PdfAnnotation =_gcd ;_gcd .SetContext (_acd );return _acd ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _ae .PdfObject ;PreserveRB _ae .PdfObject ;};

// Add appends an outline item as a child of the current outline item.
func (_ffgbd *OutlineItem )Add (item *OutlineItem ){_ffgbd .Entries =append (_ffgbd .Entries ,item )};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_fgcce *PdfAcroForm )GetContainingPdfObject ()_ae .PdfObject {return _fgcce ._egefe };func (_ddb *PdfReader )newPdfAnnotationMarkupFromDict (_fbcb *_ae .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_dfg :=&PdfAnnotationMarkup {};if _fcga :=_fbcb .Get ("\u0054");
_fcga !=nil {_dfg .T =_fcga ;};if _dccf :=_fbcb .Get ("\u0050\u006f\u0070u\u0070");_dccf !=nil {_ebdcg ,_cfbd :=_dccf .(*_ae .PdfIndirectObject );if !_cfbd {if _ ,_fggg :=_dccf .(*_ae .PdfObjectNull );!_fggg {return nil ,_ed .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_afe ,_ggaf :=_ddb .newPdfAnnotationFromIndirectObject (_ebdcg );if _ggaf !=nil {return nil ,_ggaf ;};if _afe !=nil {_egc ,_cdgd :=_afe ._edbg .(*PdfAnnotationPopup );if !_cdgd {return nil ,_ed .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_dfg .Popup =_egc ;};};};if _bbf :=_fbcb .Get ("\u0043\u0041");_bbf !=nil {_dfg .CA =_bbf ;};if _baf :=_fbcb .Get ("\u0052\u0043");_baf !=nil {_dfg .RC =_baf ;};if _ffg :=_fbcb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_ffg !=nil {_dfg .CreationDate =_ffg ;};if _fde :=_fbcb .Get ("\u0049\u0052\u0054");_fde !=nil {_dfg .IRT =_fde ;};if _fdaf :=_fbcb .Get ("\u0053\u0075\u0062\u006a");_fdaf !=nil {_dfg .Subj =_fdaf ;};if _fgcf :=_fbcb .Get ("\u0052\u0054");_fgcf !=nil {_dfg .RT =_fgcf ;
};if _cfcf :=_fbcb .Get ("\u0049\u0054");_cfcf !=nil {_dfg .IT =_cfcf ;};if _baee :=_fbcb .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_baee !=nil {_dfg .ExData =_baee ;};return _dfg ,nil ;};func (_bdbfg *PdfReader )newPdfAnnotationStampFromDict (_gacb *_ae .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_ggdg :=PdfAnnotationStamp {};
_adbb ,_fcgaa :=_bdbfg .newPdfAnnotationMarkupFromDict (_gacb );if _fcgaa !=nil {return nil ,_fcgaa ;};_ggdg .PdfAnnotationMarkup =_adbb ;_ggdg .Name =_gacb .Get ("\u004e\u0061\u006d\u0065");return &_ggdg ,nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_dfafe *_ae .PdfIndirectObject ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_edabd :=Permissions {};_edabd .DocMDP =docMdp ;_bdbg :=_ae .MakeDict ();_bdbg .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_edabd ._gegdb =_bdbg ;return &_edabd ;};func (_eead *PdfAnnotation )String ()string {_feda :="";
_bcb ,_dfa :=_eead .ToPdfObject ().(*_ae .PdfIndirectObject );if _dfa {_feda =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eead ._edbg ,_bcb .PdfObject .String ());};return _feda ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _ae .PdfObject ;BS _ae .PdfObject ;};

// PartialName returns the partial name of the field.
func (_fggfe *PdfField )PartialName ()string {_gaaed :="";if _fggfe .T !=nil {_gaaed =_fggfe .T .Decoded ();}else {_fgb .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _gaaed ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_fbbaf *BorderStyle )GetPdfName ()string {switch *_fbbaf {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fcabe *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdegc :=vals [0];_deed :=[]float64 {_bdegc };_fcgac ,_ffag :=_fcabe .TintTransform .Evaluate (_deed );
if _ffag !=nil {_fgb .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_ffag );_fgb .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fcabe .TintTransform );
return nil ,_ffag ;};_fgb .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_fcgac ,_fcabe .AlternateSpace );
_bfff ,_ffag :=_fcabe .AlternateSpace .ColorFromFloats (_fcgac );if _ffag !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_ffag );
return nil ,_ffag ;};return _bfff ,nil ;};func _dagde (_bdgab *_ae .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ddfgcf :=PdfShadingType1 {};if _gaffg :=_bdgab .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gaffg !=nil {_gaffg =_ae .TraceToDirectObject (_gaffg );
_cbadg ,_cbbac :=_gaffg .(*_ae .PdfObjectArray );if !_cbbac {_fgb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gaffg );return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ddfgcf .Domain =_cbadg ;};if _abeg :=_bdgab .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_abeg !=nil {_abeg =_ae .TraceToDirectObject (_abeg );_fbafd ,_aefcc :=_abeg .(*_ae .PdfObjectArray );if !_aefcc {_fgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abeg );
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ddfgcf .Matrix =_fbafd ;};_ebcea :=_bdgab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ebcea ==nil {_fgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ddfgcf .Function =[]PdfFunction {};if _beaeb ,_febad :=_ebcea .(*_ae .PdfObjectArray );_febad {for _ ,_bcecc :=range _beaeb .Elements (){_bccg ,_acfgf :=_bcgbg (_bcecc );if _acfgf !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acfgf );
return nil ,_acfgf ;};_ddfgcf .Function =append (_ddfgcf .Function ,_bccg );};}else {_beaeg ,_ebgce :=_bcgbg (_ebcea );if _ebgce !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebgce );
return nil ,_ebgce ;};_ddfgcf .Function =append (_ddfgcf .Function ,_beaeg );};return &_ddfgcf ,nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func (_cbfb *PdfFont )baseFields ()*fontCommon {if _cbfb ._efgfa ==nil {_fgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _cbfb ._efgfa .baseFields ();};func (_ffbgg *PdfAnnotationMarkup )appendToPdfDictionary (_eccb *_ae .PdfObjectDictionary ){_eccb .SetIfNotNil ("\u0054",_ffbgg .T );if _ffbgg .Popup !=nil {_eccb .Set ("\u0050\u006f\u0070u\u0070",_ffbgg .Popup .ToPdfObject ());
};_eccb .SetIfNotNil ("\u0043\u0041",_ffbgg .CA );_eccb .SetIfNotNil ("\u0052\u0043",_ffbgg .RC );_eccb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ffbgg .CreationDate );_eccb .SetIfNotNil ("\u0049\u0052\u0054",_ffbgg .IRT );
_eccb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ffbgg .Subj );_eccb .SetIfNotNil ("\u0052\u0054",_ffbgg .RT );_eccb .SetIfNotNil ("\u0049\u0054",_ffbgg .IT );_eccb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ffbgg .ExData );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_geeca pdfCIDFontType2 )GetRuneMetrics (r rune )(_dde .CharMetrics ,bool ){_gdea ,_egaeg :=_geeca ._afced [r ];if !_egaeg {_ggcf ,_ffdb :=_ae .GetInt (_geeca .DW );if !_ffdb {return _dde .CharMetrics {},false ;};_gdea =int (*_ggcf );};return _dde .CharMetrics {Wx :float64 (_gdea )},true ;
};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _ae .StreamEncoder )(*XObjectImage ,error ){_edaff :=NewXObjectImage ();return UpdateXObjectImageFromImage (_edaff ,img ,cs ,encoder );};

// GetCustomInfo returns a custom info value for the specified name.
func (_egdf *PdfInfo )GetCustomInfo (name string )*_ae .PdfObjectString {var _dedg *_ae .PdfObjectString ;if _egdf ._degd ==nil {return _dedg ;};if _fggf ,_agfc :=_egdf ._degd .Get (*_ae .MakeName (name )).(*_ae .PdfObjectString );_agfc {_dedg =_fggf ;
};return _dedg ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eaff *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_eaff .NumInputs {_fgb .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ed .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _eaff ._fafff ==nil {_gecgd :=_eaff .processSamples ();if _gecgd !=nil {return nil ,_gecgd ;};};_gebd :=_eaff .Encode ;if _gebd ==nil {_gebd =[]float64 {};
for _ecdf :=0;_ecdf < len (_eaff .Size );_ecdf ++{_gebd =append (_gebd ,0);_gebd =append (_gebd ,float64 (_eaff .Size [_ecdf ]-1));};};_gegc :=_eaff .Decode ;if _gegc ==nil {_gegc =_eaff .Range ;};_geedb :=make ([]int ,len (x ));for _dagdde :=0;_dagdde < len (x );
_dagdde ++{_cafg :=x [_dagdde ];_becg :=_ce .Min (_ce .Max (_cafg ,_eaff .Domain [2*_dagdde ]),_eaff .Domain [2*_dagdde +1]);_fcef :=_fae .LinearInterpolate (_becg ,_eaff .Domain [2*_dagdde ],_eaff .Domain [2*_dagdde +1],_gebd [2*_dagdde ],_gebd [2*_dagdde +1]);
_abdgc :=_ce .Min (_ce .Max (_fcef ,0),float64 (_eaff .Size [_dagdde ]-1));_dafbc :=int (_ce .Floor (_abdgc +0.5));if _dafbc < 0{_dafbc =0;}else if _dafbc > _eaff .Size [_dagdde ]{_dafbc =_eaff .Size [_dagdde ]-1;};_geedb [_dagdde ]=_dafbc ;};_feaae :=_geedb [0];
for _fedb :=1;_fedb < _eaff .NumInputs ;_fedb ++{_efgd :=_geedb [_fedb ];for _fcaba :=0;_fcaba < _fedb ;_fcaba ++{_efgd *=_eaff .Size [_fcaba ];};_feaae +=_efgd ;};_feaae *=_eaff .NumOutputs ;var _aebac []float64 ;for _gfage :=0;_gfage < _eaff .NumOutputs ;
_gfage ++{_fbfd :=_feaae +_gfage ;if _fbfd >=len (_eaff ._fafff ){_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_efcag :=_eaff ._fafff [_fbfd ];_abfa :=_fae .LinearInterpolate (float64 (_efcag ),0,_ce .Pow (2,float64 (_eaff .BitsPerSample )),_gegc [2*_gfage ],_gegc [2*_gfage +1]);_agbdc :=_ce .Min (_ce .Max (_abfa ,_eaff .Range [2*_gfage ]),_eaff .Range [2*_gfage +1]);
_aebac =append (_aebac ,_agbdc );};return _aebac ,nil ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_bedg _ae .ParserMetadata ;};

// WriteString outputs the object as it is to be written to file.
func (_bebfd *PdfTransformParamsDocMDP )WriteString ()string {return _bebfd .ToPdfObject ().WriteString ();};func _aeca (_abdc string )(map[_ddd .CharCode ]_ddd .GlyphName ,error ){_fgebb :=_ga .Split (_abdc ,"\u000a");_bgdec :=make (map[_ddd .CharCode ]_ddd .GlyphName );
for _ ,_caabc :=range _fgebb {_ebbg :=_dgbae .FindStringSubmatch (_caabc );if _ebbg ==nil {continue ;};_edcdf ,_caaag :=_ebbg [1],_ebbg [2];_fagcd ,_efdbc :=_gd .Atoi (_edcdf );if _efdbc !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_caabc );
return nil ,_ae .ErrTypeError ;};_bgdec [_ddd .CharCode (_fagcd )]=_ddd .GlyphName (_caaag );};_fgb .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_bgdec );
return _bgdec ,nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_cfcge *PdfPageResources )GetColorspaceByName (keyName _ae .PdfObjectName )(PdfColorspace ,bool ){_agggcg ,_ddeea :=_cfcge .GetColorspaces ();if _ddeea !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ddeea );
return nil ,false ;};if _agggcg ==nil {return nil ,false ;};_fcad ,_gcdfb :=_agggcg .Colorspaces [string (keyName )];if !_gcdfb {return nil ,false ;};return _fcad ,true ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_ae .PdfObjectArray ;TI *_ae .PdfObjectInteger ;I *_ae .PdfObjectArray ;};

// GetContentStream returns the XObject Form's content stream.
func (_afeca *XObjectForm )GetContentStream ()([]byte ,error ){_afeefa ,_fecee :=_ae .DecodeStream (_afeca ._ffcgb );if _fecee !=nil {return nil ,_fecee ;};return _afeefa ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_ae .PdfObjectArray ;Domain *_ae .PdfObjectArray ;Function []PdfFunction ;Extend *_ae .PdfObjectArray ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_dga .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _db .Time ;};func _bfbe (_dfaab *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_dfaab }};

// Subtype returns the font's "Subtype" field.
func (_ggae *PdfFont )Subtype ()string {_cgcd :=_ggae .baseFields ()._aacd ;if _fdcb ,_gbcf :=_ggae ._efgfa .(*pdfFontType0 );_gbcf {_cgcd =_cgcd +"\u003a"+_fdcb .DescendantFont .Subtype ();};return _cgcd ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_fcfbef :=&PdfShadingType2 {};_fcfbef .PdfShading =&PdfShading {};_fcfbef .PdfShading ._dgbdcg =_ae .MakeIndirectObject (_ae .MakeDict ());_fcfbef .PdfShading ._gcge =_fcfbef ;return _fcfbef ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_feddg :_ae .MakeDict (),ColorComponents :colorComponents };
};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_gbcc *PdfColorspaceLab )DecodeArray ()[]float64 {_aaeg :=[]float64 {0,100};if _gbcc .Range !=nil &&len (_gbcc .Range )==4{_aaeg =append (_aaeg ,_gbcc .Range ...);}else {_aaeg =append (_aaeg ,-100,100,-100,100);};return _aaeg ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_gbcfc *PdfOutlineItem )GetContainingPdfObject ()_ae .PdfObject {return _gbcfc ._bgefe };

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _ae .PdfObject ;Dest _ae .PdfObject ;H _ae .PdfObject ;PA _ae .PdfObject ;QuadPoints _ae .PdfObject ;BS _ae .PdfObject ;_dfc *PdfAction ;_cfd *PdfReader ;};

// Encoder returns the font's text encoder.
func (_dddag pdfCIDFontType2 )Encoder ()_ddd .TextEncoder {return _dddag ._ffceb };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_gbbd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cdca *Outline )ToPdfOutline ()*PdfOutline {_badcg :=NewPdfOutline ();var _ecbg []*PdfOutlineItem ;var _dbedg int64 ;var _geedd *PdfOutlineItem ;for _ ,_eafb :=range _cdca .Entries {_gaaea ,_bbfbg :=_eafb .ToPdfOutlineItem ();_gaaea .Parent =&_badcg .PdfOutlineTreeNode ;
if _geedd !=nil {_geedd .Next =&_gaaea .PdfOutlineTreeNode ;_gaaea .Prev =&_geedd .PdfOutlineTreeNode ;};_ecbg =append (_ecbg ,_gaaea );_dbedg +=_bbfbg ;_geedd =_gaaea ;};_cfbdd :=int64 (len (_ecbg ));_dbedg +=_cfbdd ;if _cfbdd > 0{_badcg .First =&_ecbg [0].PdfOutlineTreeNode ;
_badcg .Last =&_ecbg [_cfbdd -1].PdfOutlineTreeNode ;_badcg .Count =&_dbedg ;};return _badcg ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_cede *PdfField )ToPdfObject ()_ae .PdfObject {_gcef :=_cede ._fcfc ;_faaebe :=_gcef .PdfObject .(*_ae .PdfObjectDictionary );_agfd :=_ae .MakeArray ();for _ ,_eefdg :=range _cede .Kids {_agfd .Append (_eefdg .ToPdfObject ());};for _ ,_bgge :=range _cede .Annotations {if _bgge ._gggg !=_cede ._fcfc {_agfd .Append (_bgge .GetContext ().ToPdfObject ());
};};if _cede .Parent !=nil {_faaebe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cede .Parent .GetContainingPdfObject ());};if _agfd .Len ()> 0{_faaebe .Set ("\u004b\u0069\u0064\u0073",_agfd );};_faaebe .SetIfNotNil ("\u0046\u0054",_cede .FT );
_faaebe .SetIfNotNil ("\u0054",_cede .T );_faaebe .SetIfNotNil ("\u0054\u0055",_cede .TU );_faaebe .SetIfNotNil ("\u0054\u004d",_cede .TM );_faaebe .SetIfNotNil ("\u0046\u0066",_cede .Ff );_faaebe .SetIfNotNil ("\u0056",_cede .V );_faaebe .SetIfNotNil ("\u0044\u0056",_cede .DV );
_faaebe .SetIfNotNil ("\u0041\u0041",_cede .AA );if _cede .VariableText !=nil {_faaebe .SetIfNotNil ("\u0044\u0041",_cede .VariableText .DA );_faaebe .SetIfNotNil ("\u0051",_cede .VariableText .Q );_faaebe .SetIfNotNil ("\u0044\u0053",_cede .VariableText .DS );
_faaebe .SetIfNotNil ("\u0052\u0056",_cede .VariableText .RV );};return _gcef ;};func (_dba *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_aaed *PdfWriter )SetNameDictionary (names _ae .PdfObject )error {if names ==nil {return nil ;};_aaed ._ddceg =_ffbbee (names );_fgb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_aaed ._gefce .Set ("\u004e\u0061\u006de\u0073",names );return _aaed .addObjects (names );};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_agde :=&PdfAppender {_fgbgd :reader ._abcc ,Reader :reader ,_bfgf :reader ._dgadd ,_agcd :reader ._ccfad };_bedd ,_bef :=_agde ._fgbgd .Seek (0,_fgg .SeekEnd );if _bef !=nil {return nil ,_bef ;
};_agde ._cbac =_bedd ;if _ ,_bef =_agde ._fgbgd .Seek (0,_fgg .SeekStart );_bef !=nil {return nil ,_bef ;};_agde ._bdac ,_bef =NewPdfReader (_agde ._fgbgd );if _bef !=nil {return nil ,_bef ;};for _ ,_egfa :=range _agde .Reader .GetObjectNums (){if _agde ._cfae < _egfa {_agde ._cfae =_egfa ;
};};_agde ._gdec =_agde ._bfgf .GetXrefTable ();_agde ._dbee =_agde ._bfgf .GetXrefOffset ();_agde ._gbgb =append (_agde ._gbgb ,_agde ._bdac .PageList ...);_agde ._dcdc =make (map[_ae .PdfObject ]struct{});_agde ._beeca =make (map[_ae .PdfObject ]int64 );
_agde ._cfac =make (map[_ae .PdfObject ]struct{});_agde ._becf =_agde ._bdac .AcroForm ;_agde ._dgbd =_agde ._bdac .DSS ;return _agde ,nil ;};func (_afeb *PdfReader )newPdfAnnotationLineFromDict (_ceefe *_ae .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_ffbb :=PdfAnnotationLine {};
_bgf ,_dcg :=_afeb .newPdfAnnotationMarkupFromDict (_ceefe );if _dcg !=nil {return nil ,_dcg ;};_ffbb .PdfAnnotationMarkup =_bgf ;_ffbb .L =_ceefe .Get ("\u004c");_ffbb .BS =_ceefe .Get ("\u0042\u0053");_ffbb .LE =_ceefe .Get ("\u004c\u0045");_ffbb .IC =_ceefe .Get ("\u0049\u0043");
_ffbb .LL =_ceefe .Get ("\u004c\u004c");_ffbb .LLE =_ceefe .Get ("\u004c\u004c\u0045");_ffbb .Cap =_ceefe .Get ("\u0043\u0061\u0070");_ffbb .IT =_ceefe .Get ("\u0049\u0054");_ffbb .LLO =_ceefe .Get ("\u004c\u004c\u004f");_ffbb .CP =_ceefe .Get ("\u0043\u0050");
_ffbb .Measure =_ceefe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_ffbb .CO =_ceefe .Get ("\u0043\u004f");return &_ffbb ,nil ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_dacdc *PdfReader )GetRevisionNumber ()int {return _dacdc ._dgadd .GetRevisionNumber ()};var (ErrRequiredAttributeMissing =_ed .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_agaa =_ed .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ed .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ed .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_dc .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_ae .ErrNotSupported );ErrType1CFontNotSupported =_dc .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ae .ErrNotSupported );
ErrType3FontNotSupported =_dc .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_ae .ErrNotSupported );
ErrTTCmapNotSupported =_dc .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_ae .ErrNotSupported );
ErrSignNotEnoughSpace =_dc .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_dc .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_gadaa ,_aagb :=_dde .NewStdFontByName (HelveticaName );if !_aagb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_badf :=_gdgca (_gadaa );return &PdfFont {_efgfa :&_badf };};

// Encoder returns the font's text encoder.
func (_cfcb pdfFontType0 )Encoder ()_ddd .TextEncoder {return _cfcb ._abgde };

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_cbaa *PdfColorspaceDeviceNAttributes )ToPdfObject ()_ae .PdfObject {_dcca :=_ae .MakeDict ();if _cbaa .Subtype !=nil {_dcca .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cbaa .Subtype );};_dcca .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_cbaa .Colorants );
_dcca .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_cbaa .Process );_dcca .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_cbaa .MixingHints );if _cbaa ._cabe !=nil {_cbaa ._cabe .PdfObject =_dcca ;return _cbaa ._cabe ;
};return _dcca ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_edfea *DSS )GenerateHashMaps ()error {_cface ,_bcaed :=_edfea .generateHashMap (_edfea .Certs );if _bcaed !=nil {return _bcaed ;};_dcgd ,_bcaed :=_edfea .generateHashMap (_edfea .OCSPs );if _bcaed !=nil {return _bcaed ;};_aeegd ,_bcaed :=_edfea .generateHashMap (_edfea .CRLs );
if _bcaed !=nil {return _bcaed ;};_edfea ._ccceg =_cface ;_edfea ._gefb =_dcgd ;_edfea ._fdafc =_aeegd ;return nil ;};func (_dgcdd *PdfWriter )writeNamesDictionary ()error {if _dgcdd ._ddceg ==nil {return nil ;};_edcfbg :=_dgcdd ._ddceg .ToPdfObject ();
_dgcdd ._gefce .Set ("\u004e\u0061\u006de\u0073",_edcfbg );_dfebge :=_dgcdd .addObjects (_edcfbg );if _dfebge !=nil {return _dfebge ;};return nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bcce pdfFontType0 )GetRuneMetrics (r rune )(_dde .CharMetrics ,bool ){if _bcce .DescendantFont ==nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bcce );
return _dde .CharMetrics {},false ;};return _bcce .DescendantFont .GetRuneMetrics (r );};

// GetNumPages returns the number of pages in the document.
func (_gdga *PdfReader )GetNumPages ()(int ,error ){if _gdga ._dgadd .GetCrypter ()!=nil &&!_gdga ._dgadd .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_gdga ._cafea ),nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bebf *PdfPage )error ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_feeec pdfCIDFontType2 )GetCharMetrics (code _ddd .CharCode )(_dde .CharMetrics ,bool ){if _ebed ,_eddbc :=_feeec ._faegb [code ];_eddbc {return _dde .CharMetrics {Wx :_ebed },true ;};_dagdg :=rune (code );_fbebg ,_adgd :=_feeec ._afced [_dagdg ];
if !_adgd {_fbebg =int (_feeec ._addgb );};return _dde .CharMetrics {Wx :float64 (_fbebg )},true ;};

// GetStandardApplier gets currently used StandardApplier..
func (_gagfg *PdfWriter )GetStandardApplier ()StandardApplier {return _gagfg ._ddegg };func _bgfdg (_bcbfde *_ae .PdfObjectArray )(float64 ,error ){_gfaca ,_ggggg :=_bcbfde .ToFloat64Array ();if _ggggg !=nil {_fgb .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcbfde ,_ggggg );
};switch len (_gfaca ){case 1:return _gfaca [0],nil ;case 3:_cacdd :=PdfColorspaceDeviceRGB {};_fbafea ,_dcgae :=_cacdd .ColorFromFloats (_gfaca );if _dcgae !=nil {return 0.0,_dcgae ;};return _fbafea .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_eegeg :=PdfColorspaceDeviceCMYK {};
_dbdb ,_ddbf :=_eegeg .ColorFromFloats (_gfaca );if _ddbf !=nil {return 0.0,_ddbf ;};_gdada ,_ddbf :=_eegeg .ColorToRGB (_dbdb .(*PdfColorDeviceCMYK ));if _ddbf !=nil {return 0.0,_ddbf ;};return _gdada .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_ggggg =_ed .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_fgb .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcbfde ,_ggggg );return 0.0,_ggggg ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_egg :=NewPdfAnnotation ();_dbfd :=&PdfAnnotationWidget {};_dbfd .PdfAnnotation =_egg ;_egg .SetContext (_dbfd );return _dbfd ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;SkipMarkInfo bool ;SkipViewerPreferences bool ;
SkipLanguage bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func _beeeg (_aefbb *_ae .PdfObjectDictionary ,_cdbge *fontCommon ,_bggad _ddd .TextEncoder )(*pdfFontSimple ,error ){_fgdec :=_dgfg (_cdbge );_fgdec ._fbac =_bggad ;if _bggad ==nil {_fbdc :=_aefbb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _fbdc ==nil {_fbdc =_ae .MakeInteger (0);};_fgdec .FirstChar =_fbdc ;_abac ,_ggcc :=_ae .GetIntVal (_fbdc );if !_ggcc {_fgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fbdc );
return nil ,_ae .ErrTypeError ;};_bgcg :=_ddd .CharCode (_abac );_fbdc =_aefbb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fbdc ==nil {_fbdc =_ae .MakeInteger (255);};_fgdec .LastChar =_fbdc ;_abac ,_ggcc =_ae .GetIntVal (_fbdc );if !_ggcc {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fbdc );
return nil ,_ae .ErrTypeError ;};_ggfg :=_ddd .CharCode (_abac );_fgdec ._feefe =make (map[_ddd .CharCode ]float64 );_fbdc =_aefbb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fbdc !=nil {_fgdec .Widths =_fbdc ;_efdb ,_fdecb :=_ae .GetArray (_fbdc );
if !_fdecb {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fbdc );return nil ,_ae .ErrTypeError ;
};_eaeg ,_dfcc :=_efdb .ToFloat64Array ();if _dfcc !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dfcc ;};if len (_eaeg )!=int (_ggfg -_bgcg +1){_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ggfg -_bgcg +1,len (_eaeg ));
return nil ,_ae .ErrRangeError ;};for _cbbgf ,_fbag :=range _eaeg {_fgdec ._feefe [_bgcg +_ddd .CharCode (_cbbgf )]=_fbag ;};};};_fgdec .Encoding =_ae .TraceToDirectObject (_aefbb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _fgdec ,nil ;
};

// SetLocation sets the `Location` field of the signature.
func (_ageab *PdfSignature )SetLocation (location string ){_ageab .Location =_ae .MakeString (location )};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_dabc :=&PdfShadingPatternType2 {};_dabc .Matrix =_ae .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_dabc .PdfPattern =&PdfPattern {};_dabc .PdfPattern .PatternType =int64 (*_ae .MakeInteger (2));
_dabc .PdfPattern ._adgf =_dabc ;_dabc .PdfPattern ._ccdf =_ae .MakeIndirectObject (_ae .MakeDict ());return _dabc ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_baegb *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _baegb ._gacdb ==nil {_baegb .GetAnnotations ();};_baegb ._gacdb =append (_baegb ._gacdb ,annot );};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_gaebc :=PdfPage {};_gaebc ._efdff =_ae .MakeDict ();_gaebc .Resources =NewPdfPageResources ();_bcaf :=_ae .PdfIndirectObject {};_bcaf .PdfObject =_gaebc ._efdff ;_gaebc ._dfgbfb =&_bcaf ;_gaebc ._gdddbf =*_gaebc ._efdff ;return &_gaebc ;
};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_deaef *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_aagbb *PdfSignature ,_gfedd Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_ecbba *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_fgbbae *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_abbbg *PdfSignature ,_acaad Hasher )error ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _ae .PdfObject ;RichMediaContent _ae .PdfObject ;};var (_bgafe _g .Mutex ;_gcecg ="";_dddac _db .Time ;_gdgcc ="";_ebcee ="";_dcece _db .Time ;_aafeg ="";_fcbef ="";_eaebfb ="";);

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_bcbb :=NewPdfOutline ();_bcbb ._gfbb =&_bcbb ;return _bcbb };func (_fbe *PdfReader )newPdfAnnotationWidgetFromDict (_dcdd *_ae .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_fcff :=PdfAnnotationWidget {};_fcff .H =_dcdd .Get ("\u0048");
_fcff .MK =_dcdd .Get ("\u004d\u004b");_fcff .A =_dcdd .Get ("\u0041");_fcff .AA =_dcdd .Get ("\u0041\u0041");_fcff .BS =_dcdd .Get ("\u0042\u0053");_fcff .Parent =_dcdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_fcff ,nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cgbda *PdfWriter )SetNamedDestinations (dests _ae .PdfObject )error {if dests ==nil {return nil ;};_fgb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_cgbda ._gefce .Set ("\u0044\u0065\u0073t\u0073",dests );return _cgbda .addObjects (dests );};func (_gfaec *PdfFunctionType0 )processSamples ()error {_ceccf :=_dag .ResampleBytes (_gfaec ._eabeb ,_gfaec .BitsPerSample );_gfaec ._fafff =_ceccf ;return nil ;
};

// GetCIDToGIDMapObject get the underlying CIDToGIDMap object if the font type is CIDFontType2.
func (_cebc *PdfFont )GetCIDToGIDMapObject ()_ae .PdfObject {_badc ,_ccgb :=_cebc ._efgfa .(*pdfCIDFontType2 );if _ccgb {return _badc .CIDToGIDMap ;};return nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_eccaa DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// CustomKeys returns all custom info keys as list.
func (_gfbfe *PdfInfo )CustomKeys ()[]string {if _gfbfe ._degd ==nil {return nil ;};_ebgb :=make ([]string ,len (_gfbfe ._degd .Keys ()));for _ ,_aeccg :=range _gfbfe ._degd .Keys (){_ebgb =append (_ebgb ,_aeccg .String ());};return _ebgb ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_adcb :=&PdfColorspaceCalGray {};_adcb .BlackPoint =[]float64 {0.0,0.0,0.0};_adcb .Gamma =1;return _adcb ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_cbdg *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_cbdg ._gdebb =colorspace ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ae .PdfObject ;IC _ae .PdfObject ;BE _ae .PdfObject ;RD _ae .PdfObject ;};func _bacbe (_fceff *_ae .PdfObjectDictionary )(*PdfShadingType7 ,error ){_feafec :=PdfShadingType7 {};_cefe :=_fceff .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cefe ==nil {_fgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bdbea ,_agcag :=_cefe .(*_ae .PdfObjectInteger );if !_agcag {_fgb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cefe );
return nil ,_ae .ErrTypeError ;};_feafec .BitsPerCoordinate =_bdbea ;_cefe =_fceff .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cefe ==nil {_fgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bdbea ,_agcag =_cefe .(*_ae .PdfObjectInteger );if !_agcag {_fgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cefe );
return nil ,_ae .ErrTypeError ;};_feafec .BitsPerComponent =_bdbea ;_cefe =_fceff .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cefe ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bdbea ,_agcag =_cefe .(*_ae .PdfObjectInteger );if !_agcag {_fgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cefe );
return nil ,_ae .ErrTypeError ;};_feafec .BitsPerComponent =_bdbea ;_cefe =_fceff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cefe ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ebfcg ,_agcag :=_cefe .(*_ae .PdfObjectArray );if !_agcag {_fgb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cefe );
return nil ,_ae .ErrTypeError ;};_feafec .Decode =_ebfcg ;if _aeeaf :=_fceff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_aeeaf !=nil {_feafec .Function =[]PdfFunction {};if _dcagg ,_ggeec :=_aeeaf .(*_ae .PdfObjectArray );_ggeec {for _ ,_egefd :=range _dcagg .Elements (){_bbaa ,_beedb :=_bcgbg (_egefd );
if _beedb !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beedb );return nil ,_beedb ;};_feafec .Function =append (_feafec .Function ,_bbaa );
};}else {_dfeff ,_cgeba :=_bcgbg (_aeeaf );if _cgeba !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgeba );return nil ,_cgeba ;
};_feafec .Function =append (_feafec .Function ,_dfeff );};};return &_feafec ,nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_aabe *PdfOutlineTreeNode )GetContext ()PdfModel {if _bcfd ,_bdda :=_aabe ._gfbb .(*PdfOutline );_bdda {return _bcfd ;};if _bbdgc ,_fade :=_aabe ._gfbb .(*PdfOutlineItem );_fade {return _bbdgc ;};_fgb .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};func (_bddfd *pdfFontType0 )baseFields ()*fontCommon {return &_bddfd .fontCommon };

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_ae .PdfIndirectObject )*PdfOutlineItem {_ddada :=PdfOutlineItem {};_ddada ._gfbb =&_ddada ;_ddada .Title =_ae .MakeString (title );_ebage :=_ae .MakeArray ();_ebage .Append (page );_ebage .Append (_ae .MakeName ("\u0046\u0069\u0074"));
_ddada .Dest =_ebage ;return &_ddada ;};func _fbfa (_fcbe _ae .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_aefce :=NewPdfColorspaceSpecialIndexed ();if _bdfdg ,_efdc :=_fcbe .(*_ae .PdfIndirectObject );_efdc {_aefce ._beea =_bdfdg ;};_fcbe =_ae .TraceToDirectObject (_fcbe );
_cfbfg ,_fdfd :=_fcbe .(*_ae .PdfObjectArray );if !_fdfd {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfbfg .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_fcbe =_cfbfg .Get (0);_aeae ,_fdfd :=_fcbe .(*_ae .PdfObjectName );if !_fdfd {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_aeae !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_fcbe =_cfbfg .Get (1);_eccc ,_eedac :=DetermineColorspaceNameFromPdfObject (_fcbe );if _eedac !=nil {return nil ,_eedac ;};if _eccc =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_eccc =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fgb .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_eccc );
return nil ,_agaa ;};_ggaab ,_eedac :=NewPdfColorspaceFromPdfObject (_fcbe );if _eedac !=nil {return nil ,_eedac ;};_aefce .Base =_ggaab ;_fcbe =_cfbfg .Get (2);_caab ,_eedac :=_ae .GetNumberAsInt64 (_fcbe );if _eedac !=nil {return nil ,_eedac ;};if _caab > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_aefce .HiVal =int (_caab );_fcbe =_cfbfg .Get (3);_aefce .Lookup =_fcbe ;_fcbe =_ae .TraceToDirectObject (_fcbe );var _dgee []byte ;if _bfedb ,_bbaf :=_fcbe .(*_ae .PdfObjectString );_bbaf {_dgee =_bfedb .Bytes ();_fgb .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_dgee );
}else if _cce ,_cgec :=_fcbe .(*_ae .PdfObjectStream );_cgec {_fgb .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_fcbe .String ());_fgb .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_cce .Stream ),_cce .Stream );
_dbge ,_fbfe :=_ae .DecodeStream (_cce );if _fbfe !=nil {return nil ,_fbfe ;};_fgb .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_dbge ),_dbge );_dgee =_dbge ;}else {_fgb .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fcbe );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_dgee )< _aefce .Base .GetNumComponents ()*(_aefce .HiVal +1){_fgb .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_fgb .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_dgee ),_aefce .Base .GetNumComponents (),_aefce .HiVal );
}else {_dgee =_dgee [:_aefce .Base .GetNumComponents ()*(_aefce .HiVal +1)];};_aefce ._cagcg =_dgee ;return _aefce ,nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _ae .PdfObjectName ;};func _bcagf (_gcac *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ffaf ,_bfdd :=_ae .GetDict (_gcac .AP );if !_bfdd {return nil ,nil ,_ed .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _ffaf ==nil {return nil ,nil ,nil ;};_egcg ,_bfdd :=_ae .GetArray (_gcac .Rect );if !_bfdd ||_egcg .Len ()!=4{return nil ,nil ,_ed .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_afee ,_gacbe :=NewPdfRectangle (*_egcg );
if _gacbe !=nil {return nil ,nil ,_gacbe ;};_dbaf :=_ae .TraceToDirectObject (_ffaf .Get ("\u004e"));switch _deedf :=_dbaf .(type ){case *_ae .PdfObjectStream :_bgadab :=_deedf ;_eagb ,_agaca :=NewXObjectFormFromStream (_bgadab );return _eagb ,_afee ,_agaca ;
case *_ae .PdfObjectDictionary :_aage :=_deedf ;if _aage ==nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0067e\u0074\u0020\u0061\u0070\u0070\u0065\u0061r\u0061\u006e\u0063\u0065\u002e\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
return nil ,nil ,nil ;};var _ecaae _ae .PdfObject ;_bdee ,_dbda :=_ae .GetName (_gcac .AS );if _dbda {_ecaae =_aage .Get (*_bdee );}else {_cfgfcb :=_gcac ._gggg .PdfObject .(*_ae .PdfObjectDictionary );if _cfgfcb ==nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u0067\u0065\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u0076\u0061\u006c\u0075\u0065\u002e");
return nil ,nil ,nil ;};if _bbcg :=_cfgfcb .Get ("\u0056");_bbcg !=nil {_ecaae =_aage .Get (_ae .PdfObjectName (_bbcg .String ()));};};if _ecaae ==nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_deef ,_dbda :=_ae .GetStream (_ecaae );if !_dbda {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_bdee );
return nil ,nil ,_ed .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_cdeg ,_aaae :=NewXObjectFormFromStream (_deef );return _cdeg ,_afee ,_aaae ;};_fgb .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_dbaf );
return nil ,nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToPdfObject implements interface PdfModel.
func (_bb *PdfActionTrans )ToPdfObject ()_ae .PdfObject {_bb .PdfAction .ToPdfObject ();_ggg :=_bb ._bac ;_fdd :=_ggg .PdfObject .(*_ae .PdfObjectDictionary );_fdd .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeTrans )));_fdd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bb .Trans );
return _ggg ;};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_egefe :_ae .MakeIndirectObject (_ae .MakeDict ())};};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _ae .PdfObject ;Name _ae .PdfObject ;State _ae .PdfObject ;StateModel _ae .PdfObject ;};func (_cfefb *Image )samplesTrimPadding (_dfee []uint32 )[]uint32 {_aaeb :=_cfefb .ColorComponents *int (_cfefb .Width )*int (_cfefb .Height );
if len (_dfee )==_aaeb {return _dfee ;};_gcece :=make ([]uint32 ,_aaeb );_edcdg :=int (_cfefb .Width )*_cfefb .ColorComponents ;var _ceff ,_dcbc ,_gfac ,_dcedf int ;_aadc :=_fae .BytesPerLine (int (_cfefb .Width ),int (_cfefb .BitsPerComponent ),_cfefb .ColorComponents );
for _ceff =0;_ceff < int (_cfefb .Height );_ceff ++{_dcbc =_ceff *int (_cfefb .Width );_gfac =_ceff *_aadc ;for _dcedf =0;_dcedf < _edcdg ;_dcedf ++{_gcece [_dcbc +_dcedf ]=_dfee [_gfac +_dcedf ];};};return _gcece ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_ae .PdfObjectInteger ;BitsPerComponent *_ae .PdfObjectInteger ;BitsPerFlag *_ae .PdfObjectInteger ;Decode *_ae .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_bdb :=NewPdfAnnotation ();_gaab :=&PdfAnnotationTrapNet {};_gaab .PdfAnnotation =_bdb ;_bdb .SetContext (_gaab );return _gaab ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_gadbe *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};type pdfFontType3 struct{fontCommon ;_aebdg *_ae .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _ae .PdfObject ;Encoding _ae .PdfObject ;FontBBox _ae .PdfObject ;FontMatrix _ae .PdfObject ;FirstChar _ae .PdfObject ;LastChar _ae .PdfObject ;Widths _ae .PdfObject ;Resources _ae .PdfObject ;_cbdec map[_ddd .CharCode ]float64 ;_bbfgd _ddd .TextEncoder ;
};func _eedc (_deceg *_ae .PdfObjectDictionary ,_ffebc *fontCommon )(*pdfCIDFontType0 ,error ){if _ffebc ._aacd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_fgb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ffebc );
return nil ,_ae .ErrRangeError ;};_fdcf :=_fgdgg (_ffebc );_egef ,_cfbdg :=_ae .GetDict (_deceg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cfbdg {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ffebc );
return nil ,ErrRequiredAttributeMissing ;};_fdcf .CIDSystemInfo =_egef ;_fdcf .DW =_deceg .Get ("\u0044\u0057");_fdcf .W =_deceg .Get ("\u0057");_fdcf .DW2 =_deceg .Get ("\u0044\u0057\u0032");_fdcf .W2 =_deceg .Get ("\u0057\u0032");_fdcf ._fffd =1000.0;
if _gfcfd ,_dbgd :=_ae .GetNumberAsFloat (_fdcf .DW );_dbgd ==nil {_fdcf ._fffd =_gfcfd ;};_gefa ,_ggeef :=_feage (_fdcf .W );if _ggeef !=nil {return nil ,_ggeef ;};if _gefa ==nil {_gefa =map[_ddd .CharCode ]float64 {};};_fdcf ._edgd =_gefa ;return _fdcf ,nil ;
};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_bgafe .Lock ();defer _bgafe .Unlock ();_eaebfb =title };

// RemovePage removes a page by number.
func (_dddf *PdfAppender )RemovePage (pageNum int ){_facb :=pageNum -1;_dddf ._gbgb =append (_dddf ._gbgb [0:_facb ],_dddf ._gbgb [pageNum :]...);};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_ecebd *LTV )EnableAll (extraCerts []*_ddc .Certificate )error {_abage :=_ecebd ._gbbfd ._bdac .AcroForm ;for _ ,_gbcb :=range _abage .AllFields (){_fdeda ,_ :=_gbcb .GetContext ().(*PdfFieldSignature );if _fdeda ==nil {continue ;};_dgeeb :=_fdeda .V ;
if _ceccg :=_ecebd .validateSig (_dgeeb );_ceccg !=nil {_fgb .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_ceccg );
};if _aafc :=_ecebd .Enable (_dgeeb ,extraCerts );_aafc !=nil {return _aafc ;};};return nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_dbba *PdfPageResources )GetExtGState (keyName _ae .PdfObjectName )(_ae .PdfObject ,bool ){if _dbba .ExtGState ==nil {return nil ,false ;};_dgcdf ,_dbfbc :=_ae .TraceToDirectObject (_dbba .ExtGState ).(*_ae .PdfObjectDictionary );if !_dbfbc {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbba .ExtGState );
return nil ,false ;};if _gffg :=_dgcdf .Get (keyName );_gffg !=nil {return _gffg ,true ;};return nil ,false ;};var _aaege =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// WriteToFile writes the Appender output to file specified by path.
func (_gfag *PdfAppender )WriteToFile (outputPath string )error {_edaf ,_ccdgc :=_b .Create (outputPath );if _ccdgc !=nil {return _ccdgc ;};defer _edaf .Close ();return _gfag .Write (_edaf );};

// ImageToRGB convert an indexed image to RGB.
func (_fbgb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fbgb .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_eeea :=_fae .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._cgde ,img ._dgegd );_dfgd :=_dag .NewReader (img .getBase ());_dbcb :=_dag .NewWriter (_eeea );var (_bdeaf uint32 ;_gfdf int ;_bcbg error ;);for {_bdeaf ,_bcbg =_dfgd .ReadSample ();
if _bcbg ==_fgg .EOF {break ;}else if _bcbg !=nil {return img ,_bcbg ;};_gfdf =int (_bdeaf );_fgb .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_gfdf ,N ,len (_fbgb ._cagcg ));
if (_gfdf +1)*N > len (_fbgb ._cagcg ){_gfdf =len (_fbgb ._cagcg )/N -1;_fgb .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_gfdf );if _gfdf < 0{_fgb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _egdb :=_gfdf *N ;_egdb < (_gfdf +1)*N ;_egdb ++{if _bcbg =_dbcb .WriteSample (uint32 (_fbgb ._cagcg [_egdb ]));_bcbg !=nil {return img ,_bcbg ;};};};return _fbgb .Base .ImageToRGB (_acgba (&_eeea ));};

// ToPdfObject implements interface PdfModel.
func (_beec *PdfAnnotationMovie )ToPdfObject ()_ae .PdfObject {_beec .PdfAnnotation .ToPdfObject ();_ffae :=_beec ._gggg ;_afcd :=_ffae .PdfObject .(*_ae .PdfObjectDictionary );_afcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u004d\u006f\u0076i\u0065"));
_afcd .SetIfNotNil ("\u0054",_beec .T );_afcd .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_beec .Movie );_afcd .SetIfNotNil ("\u0041",_beec .A );return _ffae ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_afdfb *PdfPage )GetAllContentStreams ()(string ,error ){_deefc ,_fefaa :=_afdfb .GetContentStreams ();if _fefaa !=nil {return "",_fefaa ;};return _ga .Join (_deefc ,"\u0020"),nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcgf *PdfAnnotationWidget )ToPdfObject ()_ae .PdfObject {_bcgf .PdfAnnotation .ToPdfObject ();_effg :=_bcgf ._gggg ;_eefea :=_effg .PdfObject .(*_ae .PdfObjectDictionary );if _bcgf ._age {return _effg ;};_bcgf ._age =true ;_eefea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_eefea .SetIfNotNil ("\u0048",_bcgf .H );_eefea .SetIfNotNil ("\u004d\u004b",_bcgf .MK );_eefea .SetIfNotNil ("\u0041",_bcgf .A );_eefea .SetIfNotNil ("\u0041\u0041",_bcgf .AA );_eefea .SetIfNotNil ("\u0042\u0053",_bcgf .BS );_cfe :=_bcgf .Parent ;if _bcgf ._gaf !=nil {if _bcgf ._gaf ._fcfc ==_bcgf ._gggg {_bcgf ._gaf .ToPdfObject ();
};_cfe =_bcgf ._gaf .GetContainingPdfObject ();};if _cfe !=_effg {_eefea .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cfe );};_bcgf ._age =false ;return _effg ;};func (_cebcfe *PdfWriter )writeString (_efdaa string ){if _cebcfe ._begbb !=nil {return ;
};_gaegd ,_gaegb :=_cebcfe ._abcf .WriteString (_efdaa );_cebcfe ._caddb +=int64 (_gaegd );_cebcfe ._begbb =_gaegb ;};func (_adcd *Names )addEmbeddedFile (_gafb *EmbeddedFile )error {if _adcd .EmbeddedFiles ==nil {_adcd .EmbeddedFiles =_ae .MakeDict ();
_adcd .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_ae .MakeArray ());};_ddbeg :=NewPdfFileSpecFromEmbeddedFile (_gafb );_dgfdb :=_adcd .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_gadcb ,_edgce :=_dgfdb .(*_ae .PdfObjectArray );if !_edgce {return _ed .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_gcfe string ;_feagb *PdfFilespec ;};_dddfc :=[]FileSpecMap {};for _eaaac :=0;_eaaac < len (_gadcb .Elements ());_eaaac +=2{if _eaaac %2==0{_dgdcb :=_gadcb .Get (_eaaac );if _dgdcb !=nil {_bdfe :=_dgdcb .(*_ae .PdfObjectString );
_eaffg :=_gadcb .Get (_eaaac +1);_gbeba ,_acebb :=NewPdfFilespecFromObj (_eaffg );if _acebb !=nil {return _acebb ;};_dddfc =append (_dddfc ,FileSpecMap {_gcfe :_bdfe .String (),_feagb :_gbeba });};};};_dddfc =append (_dddfc ,FileSpecMap {_gcfe :_gafb .Name ,_feagb :_ddbeg });
_ee .Slice (_dddfc ,func (_gagag ,_ebdbg int )bool {return _dddfc [_gagag ]._gcfe < _dddfc [_ebdbg ]._gcfe });_gadcb =_ae .MakeArray ();for _ ,_aadd :=range _dddfc {_gadcb .Append (_ae .MakeString (_aadd ._gcfe ));_gadcb .Append (_aadd ._feagb .ToPdfObject ());
};_adcd .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_gadcb );return nil ;};func (_ccfe *pdfCIDFontType0 )baseFields ()*fontCommon {return &_ccfe .fontCommon };

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_dgbcbf *PdfReader )GetIndirectObjectByNumber (number int )(_ae .PdfObject ,error ){_dgdbd ,_bffbe :=_dgbcbf ._dgadd .LookupByNumber (number );return _dgdbd ,_bffbe ;};var _dbcbe =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_dbfe DefaultImageHandler )NewImageFromGoImage (goimg _da .Image )(*Image ,error ){_adeae ,_caefbc :=_fae .FromGoImage (goimg );if _caefbc !=nil {return nil ,_caefbc ;};_ddcfb :=_acgba (_adeae .Base ());return &_ddcfb ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_ae .PdfObjectInteger ;BitsPerComponent *_ae .PdfObjectInteger ;BitsPerFlag *_ae .PdfObjectInteger ;Decode *_ae .PdfObjectArray ;Function []PdfFunction ;};func (_egae *PdfAppender )mergeResources (_cbbf ,_eefd _ae .PdfObject ,_baeba map[_ae .PdfObjectName ]_ae .PdfObjectName )_ae .PdfObject {if _eefd ==nil &&_cbbf ==nil {return nil ;
};if _eefd ==nil {return _cbbf ;};_dcgf ,_cge :=_ae .GetDict (_eefd );if !_cge {return _cbbf ;};if _cbbf ==nil {_dgfc :=_ae .MakeDict ();_dgfc .Merge (_dcgf );return _eefd ;};_eagd ,_cge :=_ae .GetDict (_cbbf );if !_cge {_fgb .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_eagd =_ae .MakeDict ();};for _ ,_befa :=range _dcgf .Keys (){if _eafa ,_eegde :=_baeba [_befa ];_eegde {_eagd .Set (_eafa ,_dcgf .Get (_befa ));}else {_eagd .Set (_befa ,_dcgf .Get (_befa ));};};return _eagd ;};

// GetFillImage get attached model.Image in push button.
func (_feef *PdfFieldButton )GetFillImage ()*Image {if _feef .IsPush (){return _feef ._face ;};return nil ;};func (_efdecc *PdfWriter )optimizeDocument ()error {if _efdecc ._ddegg ==nil {return nil ;};_efaaf ,_geebe :=_ae .GetDict (_efdecc ._efeee );if !_geebe {return _ed .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_adec :=_de .Document {ID :[2]string {_efdecc ._bbaae ,_efdecc ._aacg },Version :_efdecc ._beabf ,Objects :_efdecc ._eabcbc ,Info :_efaaf ,Crypt :_efdecc ._acgbb ,UseHashBasedID :_efdecc ._eaggcb };if _bgadg :=_efdecc ._ddegg .ApplyStandard (&_adec );
_bgadg !=nil {return _bgadg ;};_efdecc ._bbaae ,_efdecc ._aacg =_adec .ID [0],_adec .ID [1];_efdecc ._beabf =_adec .Version ;_efdecc ._eabcbc =_adec .Objects ;_efdecc ._efeee .PdfObject =_adec .Info ;_efdecc ._eaggcb =_adec .UseHashBasedID ;_efdecc ._acgbb =_adec .Crypt ;
_facbeb :=make (map[_ae .PdfObject ]struct{},len (_efdecc ._eabcbc ));for _ ,_abfdc :=range _efdecc ._eabcbc {_facbeb [_abfdc ]=struct{}{};};_efdecc ._dgefc =_facbeb ;return nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _ae .PdfObject ;Q _ae .PdfObject ;RC _ae .PdfObject ;DS _ae .PdfObject ;CL _ae .PdfObject ;IT _ae .PdfObject ;BE _ae .PdfObject ;RD _ae .PdfObject ;BS _ae .PdfObject ;LE _ae .PdfObject ;
};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_gced *PdfColorCalRGB )GetNumComponents ()int {return 3};func (_fcefb *PdfWriter )mapObjectStreams (_gdbfg bool )(map[_ae .PdfObject ]bool ,bool ){_fgfce :=make (map[_ae .PdfObject ]bool );for _ ,_cfacfa :=range _fcefb ._eabcbc {if _cgffa ,_ffcbb :=_cfacfa .(*_ae .PdfObjectStreams );
_ffcbb {_gdbfg =true ;for _ ,_gdcae :=range _cgffa .Elements (){_fgfce [_gdcae ]=true ;if _abddd ,_efgbe :=_gdcae .(*_ae .PdfIndirectObject );_efgbe {_fgfce [_abddd .PdfObject ]=true ;};};};};return _fgfce ,_gdbfg ;};func _fgaaa (_caafd []*_ae .PdfObjectStream )*_ae .PdfObjectArray {if len (_caafd )==0{return nil ;
};_cdbged :=make ([]_ae .PdfObject ,0,len (_caafd ));for _ ,_dfedbf :=range _caafd {_cdbged =append (_cdbged ,_dfedbf );};return _ae .MakeArray (_cdbged ...);};

// K returns the value of the key component of the color.
func (_cfab *PdfColorDeviceCMYK )K ()float64 {return _cfab [3]};

// String returns a human readable description of `fontfile`.
func (_beed *fontFile )String ()string {_agead :="\u005b\u004e\u006f\u006e\u0065\u005d";if _beed ._ecde !=nil {_agead =_beed ._ecde .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_beed ._edgbf ,_agead );
};

// GetNumComponents returns the number of color components (3 for Lab).
func (_daea *PdfColorLab )GetNumComponents ()int {return 3};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_ffgg *PdfField )GetContext ()PdfModel {return _ffgg ._cccf };func (_ccddf *PdfReader )newPdfSignatureReferenceFromDict (_cdgf *_ae .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _caffe ,_ebace :=_ccddf ._cffgf .GetModelFromPrimitive (_cdgf ).(*PdfSignatureReference );
_ebace {return _caffe ,nil ;};_efeg :=&PdfSignatureReference {_cadeg :_cdgf ,Data :_cdgf .Get ("\u0044\u0061\u0074\u0061")};var _bcfcf bool ;_efeg .Type ,_ =_ae .GetName (_cdgf .Get ("\u0054\u0079\u0070\u0065"));_efeg .TransformMethod ,_bcfcf =_ae .GetName (_cdgf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_bcfcf {_fgb .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_efeg .TransformParams ,_ =_ae .GetDict (_cdgf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_efeg .DigestMethod ,_ =_ae .GetName (_cdgf .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _efeg ,nil ;};func (_gabbb *PdfWriter )seekByName (_aagbg _ae .PdfObject ,_gggad []string ,_aebga string )([]_ae .PdfObject ,error ){_fgb .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_aagbg );
var _fefg []_ae .PdfObject ;if _bgefeb ,_bbac :=_aagbg .(*_ae .PdfIndirectObject );_bbac {return _gabbb .seekByName (_bgefeb .PdfObject ,_gggad ,_aebga );};if _eceee ,_fbbda :=_aagbg .(*_ae .PdfObjectStream );_fbbda {return _gabbb .seekByName (_eceee .PdfObjectDictionary ,_gggad ,_aebga );
};if _aefga ,_bacab :=_aagbg .(*_ae .PdfObjectDictionary );_bacab {_fgb .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_defee :=range _aefga .Keys (){_aedba :=_aefga .Get (_defee );if string (_defee )==_aebga {_fefg =append (_fefg ,_aedba );};for _ ,_adgdb :=range _gggad {if string (_defee )==_adgdb {_fgb .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_adgdb );
_dfece ,_bgce :=_gabbb .seekByName (_aedba ,_gggad ,_aebga );if _bgce !=nil {return _fefg ,_bgce ;};_fefg =append (_fefg ,_dfece ...);break ;};};};return _fefg ,nil ;};return _fefg ,nil ;};func (_gde *PdfReader )newPdfActionGotoRFromDict (_aeb *_ae .PdfObjectDictionary )(*PdfActionGoToR ,error ){_dagdd ,_deab :=_eeg (_aeb .Get ("\u0046"));
if _deab !=nil {return nil ,_deab ;};return &PdfActionGoToR {D :_aeb .Get ("\u0044"),NewWindow :_aeb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dagdd },nil ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_becc *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_bcdgg :=NewPdfWriter ();_bcdgg .SetFileName (_becc ._gccde );if opts ==nil {opts =&ReaderToWriterOpts {};};_gbffb ,_debag :=_becc .GetNumPages ();if _debag !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_debag );
return nil ,_debag ;};for _degdda :=1;_degdda <=_gbffb ;_degdda ++{_dfaag ,_cddd :=_becc .GetPage (_degdda );if _cddd !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cddd );return nil ,_cddd ;};if opts .PageProcessCallback !=nil {_cddd =opts .PageProcessCallback (_degdda ,_dfaag );
if _cddd !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cddd );return nil ,_cddd ;};}else if opts .PageCallback !=nil {opts .PageCallback (_degdda ,_dfaag );};_cddd =_bcdgg .AddPage (_dfaag );if _cddd !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cddd );
return nil ,_cddd ;};};_bcdgg ._beabf =_becc .PdfVersion ();if !opts .SkipInfo {_acfg ,_abaea :=_becc .GetPdfInfo ();if _abaea !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abaea );}else {_bcdgg ._efeee .PdfObject =_acfg .ToPdfObject ();
};};if !opts .SkipMetadata {if _ffefd :=_becc ._eedde .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ffefd !=nil {if _ebdca :=_bcdgg .SetCatalogMetadata (_ffefd );_ebdca !=nil {return nil ,_ebdca ;};};};if !opts .SkipMarkInfo {if _ceeeb ,_agggc :=_becc .GetCatalogMarkInfo ();
_agggc {if _dadec :=_bcdgg .SetCatalogMarkInfo (_ceeeb );_dadec !=nil {return nil ,_dadec ;};};};if !opts .SkipAcroForm {_dadb :=_bcdgg .SetForms (_becc .AcroForm );if _dadb !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dadb );
return nil ,_dadb ;};};if !opts .SkipViewerPreferences {if _bcbba ,_ebacf :=_becc .GetCatalogViewerPreferences ();_ebacf {if _dbcd :=_bcdgg .SetCatalogViewerPreferences (_bcbba );_dbcd !=nil {return nil ,_dbcd ;};};};if !opts .SkipLanguage {if _fdbde ,_gefffb :=_becc .GetCatalogLanguage ();
_gefffb {if _edbde :=_bcdgg .SetCatalogLanguage (_fdbde );_edbde !=nil {return nil ,_edbde ;};};};if !opts .SkipOutlines {_bcdgg .AddOutlineTree (_becc .GetOutlineTree ());};if !opts .SkipOCProperties {_ddebc ,_cgdgc :=_becc .GetOCProperties ();if _cgdgc !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgdgc );
}else {_cgdgc =_bcdgg .SetOCProperties (_ddebc );if _cgdgc !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgdgc );};};};if !opts .SkipPageLabels {_cadfe ,_afagg :=_becc .GetPageLabels ();if _afagg !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afagg );
}else {_afagg =_bcdgg .SetPageLabels (_cadfe );if _afagg !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afagg );};};};if !opts .SkipNamedDests {_bdcda ,_bebdf :=_becc .GetNamedDestinations ();if _bebdf !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bebdf );
}else {_bebdf =_bcdgg .SetNamedDestinations (_bdcda );if _bebdf !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bebdf );};};};if !opts .SkipNameDictionary {_accec ,_dcfcc :=_becc .GetNameDictionary ();if _dcfcc !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcfcc );
}else {_dcfcc =_bcdgg .SetNameDictionary (_accec );if _dcfcc !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcfcc );};};};_adbab ,_afbc :=_becc .GetCatalogStructTreeRoot ();if _afbc {_dcabag :=_bcdgg .SetCatalogStructTreeRoot (_adbab );
if _dcabag !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcabag );};};if !opts .SkipRotation &&_becc .Rotate !=nil {if _gcagb :=_bcdgg .SetRotation (*_becc .Rotate );_gcagb !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcagb );
};};return &_bcdgg ,nil ;};func (_agab *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_bgdce *PdfReader )GetCatalogMetadata ()(_ae .PdfObject ,bool ){if _bgdce ._eedde ==nil {return nil ,false ;};_cgace :=_bgdce ._eedde .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _cgace ,_cgace !=nil ;};

// R returns the value of the red component of the color.
func (_gdcf *PdfColorDeviceRGB )R ()float64 {return _gdcf [0]};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_ebac :=NewPdfAnnotation ();_bcba :=&PdfAnnotationHighlight {};_bcba .PdfAnnotation =_ebac ;_bcba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebac .SetContext (_bcba );return _bcba ;};func (_dca *PdfReader )loadAction (_dafd _ae .PdfObject )(*PdfAction ,error ){if _cgab ,_fcab :=_ae .GetIndirect (_dafd );
_fcab {_fgde ,_acb :=_dca .newPdfActionFromIndirectObject (_cgab );if _acb !=nil {return nil ,_acb ;};return _fgde ,nil ;}else if !_ae .IsNullObject (_dafd ){return nil ,_ed .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ae .PdfObject ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_egcag *Outline )ToPdfObject ()_ae .PdfObject {return _egcag .ToPdfOutline ().ToPdfObject ()};

// SetName sets the `Name` field of the signature.
func (_ddfafc *PdfSignature )SetName (name string ){_ddfafc .Name =_ae .MakeEncodedString (name ,true )};

// SetDate sets the `M` field of the signature.
func (_bagdd *PdfSignature )SetDate (date _db .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_bagdd .M =_ae .MakeString (date .Format (format ));
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ecfe pdfFontType0 )GetCharMetrics (code _ddd .CharCode )(_dde .CharMetrics ,bool ){if _ecfe .DescendantFont ==nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ecfe );
return _dde .CharMetrics {},false ;};return _ecfe .DescendantFont .GetCharMetrics (code );};func (_adfdae *PdfWriter )hasObject (_ccddg _ae .PdfObject )bool {_ ,_dagca :=_adfdae ._dgefc [_ccddg ];return _dagca ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ffgde *PdfWriter )AddPage (page *PdfPage )error {const _efbb ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_edbac (page );_fgdbb :=page .ToPdfObject ();_fgb .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_fgb .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_fgdbb );_beaad ,_adfe :=_ae .GetIndirect (_fgdbb );if !_adfe {return _ed .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fgb .Log .Trace ("\u0025\u0073",_beaad );_fgb .Log .Trace ("\u0025\u0073",_beaad .PdfObject );_fdged ,_adfe :=_ae .GetDict (_beaad .PdfObject );if !_adfe {return _ed .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_baddca ,_adfe :=_ae .GetName (_fdged .Get ("\u0054\u0079\u0070\u0065"));if !_adfe {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_fdged .Get ("\u0054\u0079\u0070\u0065"));
};if _baddca .String ()!="\u0050\u0061\u0067\u0065"{return _ed .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_fceeg :=[]_ae .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_dfdfb ,_gcaab :=_ae .GetIndirect (_fdged .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fgb .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_fdged .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gcaab );
for _gcaab {_fgb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dfdfb );_aadgbf ,_afffb :=_ae .GetDict (_dfdfb .PdfObject );if !_afffb {return _ed .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_efgcd :=range _fceeg {_fgb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_efgcd );if _fdged .Get (_efgcd )!=nil {_fgb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _ecaccg :=_aadgbf .Get (_efgcd );_ecaccg !=nil {_fgb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_efgcd );_fdged .Set (_efgcd ,_ecaccg );};};_dfdfb ,_gcaab =_ae .GetIndirect (_aadgbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_fgb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aadgbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fgb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_fdged .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffgde ._bdcg );_beaad .PdfObject =_fdged ;_bedfb ,_adfe :=_ae .GetDict (_ffgde ._bdcg .PdfObject );if !_adfe {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_egfbb ,_adfe :=_ae .GetArray (_bedfb .Get ("\u004b\u0069\u0064\u0073"));if !_adfe {return _ed .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_egfbb .Append (_beaad );_ffgde ._bebb [_fdged ]=struct{}{};_fcae ,_adfe :=_ae .GetInt (_bedfb .Get ("\u0043\u006f\u0075n\u0074"));if !_adfe {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_fcae =*_fcae +1;if page ._fadgc ==nil {_fcgcba :=_be .Track (_ffgde ._abdcb ,_efbb ,_ffgde ._gecgg );if _fcgcba !=nil {return _fcgcba ;};}else {_bggd :=_be .Track (page ._fadgc ._gecc ,_efbb ,page ._fadgc ._gccde );if _bggd !=nil {return _bggd ;};};
_ffgde .addObject (_beaad );_aacc :=_ffgde .addObjects (_fdged );if _aacc !=nil {return _aacc ;};return nil ;};func _aabdg (_cceeb *_ae .PdfObjectStream )(*PdfFunctionType0 ,error ){_bcbfd :=&PdfFunctionType0 {};_bcbfd ._aefcg =_cceeb ;_eddgf :=_cceeb .PdfObjectDictionary ;
_bafc ,_dafg :=_ae .TraceToDirectObject (_eddgf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ae .PdfObjectArray );if !_dafg {_fgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bafc .Len ()< 0||_bafc .Len ()%2!=0{_fgb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_bcbfd .NumInputs =_bafc .Len ()/2;_abdgdc ,_cfeee :=_bafc .ToFloat64Array ();if _cfeee !=nil {return nil ,_cfeee ;};_bcbfd .Domain =_abdgdc ;_bafc ,_dafg =_ae .TraceToDirectObject (_eddgf .Get ("\u0052\u0061\u006eg\u0065")).(*_ae .PdfObjectArray );if !_dafg {_fgb .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bafc .Len ()< 0||_bafc .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bcbfd .NumOutputs =_bafc .Len ()/2;_dffa ,_cfeee :=_bafc .ToFloat64Array ();if _cfeee !=nil {return nil ,_cfeee ;};_bcbfd .Range =_dffa ;_bafc ,_dafg =_ae .TraceToDirectObject (_eddgf .Get ("\u0053\u0069\u007a\u0065")).(*_ae .PdfObjectArray );if !_dafg {_fgb .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eccag ,_cfeee :=_bafc .ToIntegerArray ();
if _cfeee !=nil {return nil ,_cfeee ;};if len (_eccag )!=_bcbfd .NumInputs {_fgb .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbfd .Size =_eccag ;_bffc ,_dafg :=_ae .TraceToDirectObject (_eddgf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_ae .PdfObjectInteger );
if !_dafg {_fgb .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_bffc !=1&&*_bffc !=2&&*_bffc !=4&&*_bffc !=8&&*_bffc !=12&&*_bffc !=16&&*_bffc !=24&&*_bffc !=32{_fgb .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_bffc );
return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbfd .BitsPerSample =int (*_bffc );_bcbfd .Order =1;_cggg ,_dafg :=_ae .TraceToDirectObject (_eddgf .Get ("\u004f\u0072\u0064e\u0072")).(*_ae .PdfObjectInteger );
if _dafg {if *_cggg !=1&&*_cggg !=3{_fgb .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_cggg );return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbfd .Order =int (*_cggg );
};_bafc ,_dafg =_ae .TraceToDirectObject (_eddgf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ae .PdfObjectArray );if _dafg {_aageg ,_egeg :=_bafc .ToFloat64Array ();if _egeg !=nil {return nil ,_egeg ;};_bcbfd .Encode =_aageg ;};_bafc ,_dafg =_ae .TraceToDirectObject (_eddgf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_ae .PdfObjectArray );
if _dafg {_cbbea ,_bafdc :=_bafc .ToFloat64Array ();if _bafdc !=nil {return nil ,_bafdc ;};_bcbfd .Decode =_cbbea ;};_bedad ,_cfeee :=_ae .DecodeStream (_cceeb );if _cfeee !=nil {return nil ,_cfeee ;};_bcbfd ._eabeb =_bedad ;return _bcbfd ,nil ;};func _fgcdc ()string {return _fgb .Version };


// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_eade *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_dega :=0.3*_eade .R ()+0.59*_eade .G ()+0.11*_eade .B ();_dega =_ce .Min (_ce .Max (_dega ,0.0),1.0);return NewPdfColorDeviceGray (_dega );};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_eaaec :=&PdfPageResources {};_eaaec ._beeegd =_ae .MakeDict ();return _eaaec ;};func _ggdfe ()string {_bgafe .Lock ();defer _bgafe .Unlock ();return _eaebfb };func _geab (_bafe _ae .PdfObject )(*_ae .PdfObjectDictionary ,*fontCommon ,error ){_gdafff :=&fontCommon {};
if _edabe ,_ffbga :=_bafe .(*_ae .PdfIndirectObject );_ffbga {_gdafff ._fcfcg =_edabe .ObjectNumber ;};_gccfb ,_gfgge :=_ae .GetDict (_bafe );if !_gfgge {_fgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bafe );
return nil ,nil ,ErrFontNotSupported ;};_agcad ,_gfgge :=_ae .GetNameVal (_gccfb .Get ("\u0054\u0079\u0070\u0065"));if !_gfgge {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _agcad !="\u0046\u006f\u006e\u0074"{_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_agcad ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_ae .ErrTypeError ;};_cbaf ,_gfgge :=_ae .GetNameVal (_gccfb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gfgge {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_gdafff ._aacd =_cbaf ;_degdg ,_gfgge :=_ae .GetNameVal (_gccfb .Get ("\u004e\u0061\u006d\u0065"));if _gfgge {_gdafff ._ccgc =_degdg ;};_cgafc :=_gccfb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");
if _cgafc !=nil {_gdafff ._afda =_ae .TraceToDirectObject (_cgafc );_dbfdd ,_babgg :=_feed (_gdafff ._afda ,_gdafff );if _babgg !=nil {return _gccfb ,_gdafff ,_babgg ;};_gdafff ._babge =_dbfdd ;}else if _cbaf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_cbaf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gaabg ,_aeaf :=_fe .NewCIDSystemInfo (_gccfb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _aeaf !=nil {return _gccfb ,_gdafff ,_aeaf ;};_daae :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gaabg .Registry ,_gaabg .Ordering );if _fe .IsPredefinedCMap (_daae ){_gdafff ._babge ,_aeaf =_fe .LoadPredefinedCMap (_daae );
if _aeaf !=nil {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_daae ,_aeaf );
};};};_fcfef :=_gccfb .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _fcfef !=nil {_caggf ,_aaaag :=_cdeea (_fcfef );if _aaaag !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aaaag );
return _gccfb ,_gdafff ,_aaaag ;};_gdafff ._cdge =_caggf ;};if _cbaf !="\u0054\u0079\u0070e\u0033"{_dbdf ,_fbgbb :=_ae .GetNameVal (_gccfb .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fbgbb {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _gccfb ,_gdafff ,ErrRequiredAttributeMissing ;};_gdafff ._bfeb =_dbdf ;};return _gccfb ,_gdafff ,nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_effe :=PdfColorLab {l ,a ,b };return &_effe };

// ToPdfObject implements interface PdfModel.
func (_bfa *PdfActionImportData )ToPdfObject ()_ae .PdfObject {_bfa .PdfAction .ToPdfObject ();_ace :=_bfa ._bac ;_gdg :=_ace .PdfObject .(*_ae .PdfObjectDictionary );_gdg .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeImportData )));if _bfa .F !=nil {_gdg .Set ("\u0046",_bfa .F .ToPdfObject ());
};return _ace ;};func _gdgca (_dabdf _dde .StdFont )pdfFontSimple {_ccbg :=_dabdf .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_aacd :"\u0054\u0079\u0070e\u0031",_bfeb :_dabdf .Name ()},_ffgba :_dabdf .GetMetricsTable (),_gfdb :&PdfFontDescriptor {FontName :_ae .MakeName (string (_ccbg .Name )),FontFamily :_ae .MakeName (_ccbg .Family ),FontWeight :_ae .MakeFloat (float64 (_ccbg .Weight )),Flags :_ae .MakeInteger (int64 (_ccbg .Flags )),FontBBox :_ae .MakeArrayFromFloats (_ccbg .BBox [:]),ItalicAngle :_ae .MakeFloat (_ccbg .ItalicAngle ),Ascent :_ae .MakeFloat (_ccbg .Ascent ),Descent :_ae .MakeFloat (_ccbg .Descent ),CapHeight :_ae .MakeFloat (_ccbg .CapHeight ),XHeight :_ae .MakeFloat (_ccbg .XHeight ),StemV :_ae .MakeFloat (_ccbg .StemV ),StemH :_ae .MakeFloat (_ccbg .StemH )},_fbac :_dabdf .Encoder ()};
};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_fab :=NewPdfAction ();_egd :=&PdfActionResetForm {};_egd .PdfAction =_fab ;_fab .SetContext (_egd );return _egd ;};func _fgdfa (_gdbba *_ae .PdfObjectDictionary )(*PdfShadingType3 ,error ){_bfbdg :=PdfShadingType3 {};
_feaaa :=_gdbba .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _feaaa ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_gecea ,_ffage :=_feaaa .(*_ae .PdfObjectArray );if !_ffage {_fgb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_feaaa );
return nil ,_ae .ErrTypeError ;};if _gecea .Len ()!=6{_fgb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gecea .Len ());return nil ,ErrInvalidAttribute ;
};_bfbdg .Coords =_gecea ;if _fabb :=_gdbba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fabb !=nil {_fabb =_ae .TraceToDirectObject (_fabb );_fdcba ,_acad :=_fabb .(*_ae .PdfObjectArray );if !_acad {_fgb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fabb );
return nil ,_ae .ErrTypeError ;};_bfbdg .Domain =_fdcba ;};_feaaa =_gdbba .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _feaaa ==nil {_fgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bfbdg .Function =[]PdfFunction {};if _cfag ,_cffce :=_feaaa .(*_ae .PdfObjectArray );_cffce {for _ ,_cfgdf :=range _cfag .Elements (){_fcdcc ,_aebgd :=_bcgbg (_cfgdf );if _aebgd !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aebgd );
return nil ,_aebgd ;};_bfbdg .Function =append (_bfbdg .Function ,_fcdcc );};}else {_aaeff ,_efdfe :=_bcgbg (_feaaa );if _efdfe !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efdfe );
return nil ,_efdfe ;};_bfbdg .Function =append (_bfbdg .Function ,_aaeff );};if _eaedf :=_gdbba .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eaedf !=nil {_eaedf =_ae .TraceToDirectObject (_eaedf );_fcfa ,_eaedfb :=_eaedf .(*_ae .PdfObjectArray );if !_eaedfb {_fgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eaedf );
return nil ,_ae .ErrTypeError ;};if _fcfa .Len ()!=2{_fgb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fcfa .Len ());return nil ,ErrInvalidAttribute ;
};_bfbdg .Extend =_fcfa ;};return &_bfbdg ,nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func _adbbc (_cdcgf _ae .PdfObject )(*PdfFunctionType3 ,error ){_ddbd :=&PdfFunctionType3 {};var _aebda *_ae .PdfObjectDictionary ;if _acabb ,_fdag :=_cdcgf .(*_ae .PdfIndirectObject );_fdag {_ffbbe ,_efdfa :=_acabb .PdfObject .(*_ae .PdfObjectDictionary );
if !_efdfa {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ddbd ._eaeea =_acabb ;_aebda =_ffbbe ;}else if _aceab ,_ecccd :=_cdcgf .(*_ae .PdfObjectDictionary );_ecccd {_aebda =_aceab ;
}else {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cgaee ,_ffbbec :=_ae .TraceToDirectObject (_aebda .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ae .PdfObjectArray );if !_ffbbec {_fgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cgaee .Len ()!=2{_fgb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bggef ,_cgeac :=_cgaee .ToFloat64Array ();if _cgeac !=nil {return nil ,_cgeac ;};_ddbd .Domain =_bggef ;_cgaee ,_ffbbec =_ae .TraceToDirectObject (_aebda .Get ("\u0052\u0061\u006eg\u0065")).(*_ae .PdfObjectArray );
if _ffbbec {if _cgaee .Len ()< 0||_cgaee .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fafdb ,_effdf :=_cgaee .ToFloat64Array ();if _effdf !=nil {return nil ,_effdf ;};_ddbd .Range =_fafdb ;
};_cgaee ,_ffbbec =_ae .TraceToDirectObject (_aebda .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_ae .PdfObjectArray );if !_ffbbec {_fgb .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ddbd .Functions =[]PdfFunction {};
for _ ,_debd :=range _cgaee .Elements (){_gfcda ,_ceebc :=_bcgbg (_debd );if _ceebc !=nil {return nil ,_ceebc ;};_ddbd .Functions =append (_ddbd .Functions ,_gfcda );};_cgaee ,_ffbbec =_ae .TraceToDirectObject (_aebda .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_ae .PdfObjectArray );
if !_ffbbec {_fgb .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_addc ,_cgeac :=_cgaee .ToFloat64Array ();if _cgeac !=nil {return nil ,_cgeac ;};_ddbd .Bounds =_addc ;if len (_ddbd .Bounds )!=len (_ddbd .Functions )-1{_fgb .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ddbd .Bounds ),len (_ddbd .Functions ));
return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgaee ,_ffbbec =_ae .TraceToDirectObject (_aebda .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ae .PdfObjectArray );if !_ffbbec {_fgb .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_egbag ,_cgeac :=_cgaee .ToFloat64Array ();
if _cgeac !=nil {return nil ,_cgeac ;};_ddbd .Encode =_egbag ;if len (_ddbd .Encode )!=2*len (_ddbd .Functions ){_fgb .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ddbd .Encode ),len (_ddbd .Functions ));
return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ddbd ,nil ;};

// SetVersion sets the PDF version of the output file.
func (_ccefc *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_ccefc ._beabf .Major =majorVersion ;_ccefc ._beabf .Minor =minorVersion ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _ae .PdfObject ;Flags _ae .PdfObject ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _ae .PdfObject ;ColorSpace _ae .PdfObject ;Pattern _ae .PdfObject ;Shading _ae .PdfObject ;XObject _ae .PdfObject ;Font _ae .PdfObject ;ProcSet _ae .PdfObject ;Properties _ae .PdfObject ;_beeegd *_ae .PdfObjectDictionary ;
_gdebb *PdfPageResourcesColorspaces ;};

// ToPdfObject implements interface PdfModel.
func (_baefa *PdfAnnotationTrapNet )ToPdfObject ()_ae .PdfObject {_baefa .PdfAnnotation .ToPdfObject ();_ddegc :=_baefa ._gggg ;_dcad :=_ddegc .PdfObject .(*_ae .PdfObjectDictionary );_dcad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ddegc ;};

// GetContentStreams returns the content stream as an array of strings.
func (_afcef *PdfPage )GetContentStreams ()([]string ,error ){_bagbc :=_afcef .GetContentStreamObjs ();var _dgdcd []string ;for _ ,_gdbbbe :=range _bagbc {_bdgb ,_eaggfg :=_efgb (_gdbbbe );if _eaggfg !=nil {return nil ,_eaggfg ;};_dgdcd =append (_dgdcd ,_bdgb );
};return _dgdcd ,nil ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_geecc *PdfReader )GetCatalogMarkInfo ()(_ae .PdfObject ,bool ){if _geecc ._eedde ==nil {return nil ,false ;};_cddad :=_geecc ._eedde .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _cddad ,_cddad !=nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdbe *PdfAnnotationFreeText )ToPdfObject ()_ae .PdfObject {_cdbe .PdfAnnotation .ToPdfObject ();_egfc :=_cdbe ._gggg ;_afac :=_egfc .PdfObject .(*_ae .PdfObjectDictionary );_cdbe .PdfAnnotationMarkup .appendToPdfDictionary (_afac );_afac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_afac .SetIfNotNil ("\u0044\u0041",_cdbe .DA );_afac .SetIfNotNil ("\u0051",_cdbe .Q );_afac .SetIfNotNil ("\u0052\u0043",_cdbe .RC );_afac .SetIfNotNil ("\u0044\u0053",_cdbe .DS );_afac .SetIfNotNil ("\u0043\u004c",_cdbe .CL );_afac .SetIfNotNil ("\u0049\u0054",_cdbe .IT );
_afac .SetIfNotNil ("\u0042\u0045",_cdbe .BE );_afac .SetIfNotNil ("\u0052\u0044",_cdbe .RD );_afac .SetIfNotNil ("\u0042\u0053",_cdbe .BS );_afac .SetIfNotNil ("\u004c\u0045",_cdbe .LE );return _egfc ;};

// ToPdfObject implements interface PdfModel.
func (_edea *PdfAnnotationPolygon )ToPdfObject ()_ae .PdfObject {_edea .PdfAnnotation .ToPdfObject ();_ebdg :=_edea ._gggg ;_dgge :=_ebdg .PdfObject .(*_ae .PdfObjectDictionary );_edea .PdfAnnotationMarkup .appendToPdfDictionary (_dgge );_dgge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_dgge .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_edea .Vertices );_dgge .SetIfNotNil ("\u004c\u0045",_edea .LE );_dgge .SetIfNotNil ("\u0042\u0053",_edea .BS );_dgge .SetIfNotNil ("\u0049\u0043",_edea .IC );_dgge .SetIfNotNil ("\u0042\u0045",_edea .BE );
_dgge .SetIfNotNil ("\u0049\u0054",_edea .IT );_dgge .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_edea .Measure );return _ebdg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fcded *PdfAnnotation )GetContainingPdfObject ()_ae .PdfObject {return _fcded ._gggg };

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_caa :=NewPdfAction ();_ecga :=&PdfActionMovie {};_ecga .PdfAction =_caa ;_caa .SetContext (_ecga );return _ecga ;};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_cbbe :=_dea .Detect (content );_dcaf :=_dd .Sum (content );_faefb :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_cbbe .String (),Hash :_cac .EncodeToString (_dcaf [:])};
return _faefb ,nil ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_ffda *PdfReader )GetCatalogStructTreeRoot ()(_ae .PdfObject ,bool ){_gbaac :=_ae .ResolveReference (_ffda ._eedde .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074"));if _gbaac ==nil {return nil ,false ;};if !_ffda ._fedag {_aaec :=_ffda .traverseObjectData (_gbaac );
if _aaec !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065\u0064\u0020t\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u0025\u0073\u0029",_aaec );
return nil ,false ;};};return _gbaac ,true ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fdaae *PdfReader )GetNameDictionary ()(_ae .PdfObject ,error ){_dafff :=_ae .ResolveReference (_fdaae ._eedde .Get ("\u004e\u0061\u006de\u0073"));if _dafff ==nil {return nil ,nil ;};if !_fdaae ._fedag {_affa :=_fdaae .traverseObjectData (_dafff );
if _affa !=nil {return nil ,_affa ;};};return _dafff ,nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_ae .PdfObject ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_edfb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_baedfd :=NewPdfOutlineItem ();_baedfd .Title =_ae .MakeEncodedString (_edfb .Title ,true );_baedfd .Dest =_edfb .Dest .ToPdfObject ();var _agag []*PdfOutlineItem ;var _acddg int64 ;
var _fbdce *PdfOutlineItem ;for _ ,_abacb :=range _edfb .Entries {_cbbb ,_eegb :=_abacb .ToPdfOutlineItem ();_cbbb .Parent =&_baedfd .PdfOutlineTreeNode ;if _fbdce !=nil {_fbdce .Next =&_cbbb .PdfOutlineTreeNode ;_cbbb .Prev =&_fbdce .PdfOutlineTreeNode ;
};_agag =append (_agag ,_cbbb );_acddg +=_eegb ;_fbdce =_cbbb ;};_eefga :=len (_agag );_acddg +=int64 (_eefga );if _eefga > 0{_baedfd .First =&_agag [0].PdfOutlineTreeNode ;_baedfd .Last =&_agag [_eefga -1].PdfOutlineTreeNode ;_baedfd .Count =&_acddg ;
};return _baedfd ,_acddg ;};

// IsSimple returns true if `font` is a simple font.
func (_acdda *PdfFont )IsSimple ()bool {_ ,_ccccd :=_acdda ._efgfa .(*pdfFontSimple );return _ccccd };

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_bccdc *PdfPageResources )HasPatternByName (keyName _ae .PdfObjectName )bool {_ ,_ecfgc :=_bccdc .GetPatternByName (keyName );return _ecfgc ;};

// SetForms sets the Acroform for a PDF file.
func (_cadcc *PdfWriter )SetForms (form *PdfAcroForm )error {_cadcc ._ggce =form ;return nil };

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_ae .PdfObjectName ;P *_ae .PdfObjectInteger ;V *_ae .PdfObjectName ;};func (_efccc *pdfFontSimple )getFontEncoding ()(_dacg string ,_fffgd map[_ddd .CharCode ]_ddd .GlyphName ,_bfgd error ){_dacg ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _gdagd ,_egbb :=_aaege [_efccc ._bfeb ];_egbb {_dacg =_gdagd ;}else if _efccc .fontFlags ()&_bgcad !=0{for _cadbd ,_ecdgb :=range _aaege {if _ga .Contains (_efccc ._bfeb ,_cadbd ){_dacg =_ecdgb ;break ;};};};if _efccc .Encoding ==nil {return _dacg ,nil ,nil ;
};switch _ccee :=_efccc .Encoding .(type ){case *_ae .PdfObjectName :return string (*_ccee ),nil ,nil ;case *_ae .PdfObjectDictionary :_egafg ,_gdcd :=_ae .GetName (_ccee .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _gdcd {_dacg =_egafg .String ();
};if _fccd :=_ccee .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fccd !=nil {_fbefc ,_adcfg :=_ae .GetArray (_fccd );if !_adcfg {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_ccee ,_ccee .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_ae .ErrTypeError ;};_fffgd ,_bfgd =_ddd .FromFontDifferences (_fbefc );};return _dacg ,_fffgd ,_bfgd ;default:_fgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_efccc .Encoding ,_efccc .Encoding );
return "",nil ,_ae .ErrTypeError ;};};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_feafe :=appender .Reader .DSS ;if _feafe ==nil {_feafe =NewDSS ();};if _cggga :=_feafe .GenerateHashMaps ();_cggga !=nil {return nil ,_cggga ;};return &LTV {CertClient :_cec .NewCertClient (),OCSPClient :_cec .NewOCSPClient (),CRLClient :_cec .NewCRLClient (),SkipExisting :true ,_gbbfd :appender ,_febag :_feafe },nil ;
};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_dead *PdfColorspaceDeviceN )GetNumComponents ()int {return _dead .ColorantNames .Len ()};func (_aafaa *PdfWriter )checkPendingObjects (){for _fffba ,_dfeaf :=range _aafaa ._agacb {if !_aafaa .hasObject (_fffba ){_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_fffba ,_fffba ,_fffba );
for _ ,_dgbef :=range _dfeaf {for _ ,_gaaad :=range _dgbef .Keys (){_cbda :=_dgbef .Get (_gaaad );if _cbda ==_fffba {_fgb .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_dgbef .Set (_gaaad ,_ae .MakeNull ());break ;};};};};};};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bgdcd *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bgdcd ._gacdb !=nil {return _bgdcd ._gacdb ,nil ;};if _bgdcd .Annots ==nil {_bgdcd ._gacdb =[]*PdfAnnotation {};return nil ,nil ;};if _bgdcd ._fadgc ==nil {_bgdcd ._gacdb =[]*PdfAnnotation {};
return nil ,nil ;};_cgdg ,_ebdbe :=_bgdcd ._fadgc .loadAnnotations (_bgdcd .Annots );if _ebdbe !=nil {return nil ,_ebdbe ;};if _cgdg ==nil {_bgdcd ._gacdb =[]*PdfAnnotation {};};_bgdcd ._gacdb =_cgdg ;return _bgdcd ._gacdb ,nil ;};func (_gbba *PdfReader )loadAnnotations (_ddbad _ae .PdfObject )([]*PdfAnnotation ,error ){_adbac ,_aefdb :=_ae .GetArray (_ddbad );
if !_aefdb {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _defba []*PdfAnnotation ;for _ ,_bfcfc :=range _adbac .Elements (){_bfcfc =_ae .ResolveReference (_bfcfc );
if _ ,_efccg :=_bfcfc .(*_ae .PdfObjectNull );_efccg {continue ;};_efda ,_egcfd :=_bfcfc .(*_ae .PdfObjectDictionary );_ecbab ,_bgaad :=_bfcfc .(*_ae .PdfIndirectObject );if _egcfd {_ecbab =&_ae .PdfIndirectObject {};_ecbab .PdfObject =_efda ;}else {if !_bgaad {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_ffcca ,_ceaf :=_gbba .newPdfAnnotationFromIndirectObject (_ecbab );if _ceaf !=nil {return nil ,_ceaf ;};switch _fdedf :=_ffcca .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_eaeda :=range _gbba .AcroForm .AllFields (){if _eaeda ._fcfc ==_fdedf .Parent {_fdedf ._gaf =_eaeda ;
break ;};};};if _ffcca !=nil {_defba =append (_defba ,_ffcca );};};return _defba ,nil ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_baddbe *PdfWriter )SetOptimizer (optimizer Optimizer ){_baddbe ._dacde =optimizer };func (_eccd *PdfReader )newPdfAnnotationInkFromDict (_dee *_ae .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_bdbd :=PdfAnnotationInk {};_fdab ,_ddegf :=_eccd .newPdfAnnotationMarkupFromDict (_dee );
if _ddegf !=nil {return nil ,_ddegf ;};_bdbd .PdfAnnotationMarkup =_fdab ;_bdbd .InkList =_dee .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_bdbd .BS =_dee .Get ("\u0042\u0053");return &_bdbd ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_dgae *_ae .PdfObjectDictionary ;_aadg *_ae .PdfIndirectObject ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_fgcfc *_ae .PdfIndirectObject ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_ae .PdfObjectStream )(*XObjectImage ,error ){_gccad :=&XObjectImage {};_gccad ._facff =stream ;_cdbacb :=*(stream .PdfObjectDictionary );_gaaf ,_feacd :=_ae .NewEncoderFromStream (stream );if _feacd !=nil {return nil ,_feacd ;
};_gccad .Filter =_gaaf ;if _edgabf :=_ae .TraceToDirectObject (_cdbacb .Get ("\u0057\u0069\u0064t\u0068"));_edgabf !=nil {_ffbfg ,_efccgd :=_edgabf .(*_ae .PdfObjectInteger );if !_efccgd {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_aacef :=int64 (*_ffbfg );_gccad .Width =&_aacef ;}else {return nil ,_ed .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _aeabb :=_ae .TraceToDirectObject (_cdbacb .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_aeabb !=nil {_egfeb ,_cfdga :=_aeabb .(*_ae .PdfObjectInteger );if !_cfdga {return nil ,_ed .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bffd :=int64 (*_egfeb );
_gccad .Height =&_bffd ;}else {return nil ,_ed .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _cedgc :=_ae .TraceToDirectObject (_cdbacb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_cedgc !=nil {_fcbad ,_egff :=NewPdfColorspaceFromPdfObject (_cedgc );if _egff !=nil {return nil ,_egff ;};_gccad .ColorSpace =_fcbad ;}else {_fgb .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_gccad .ColorSpace =NewPdfColorspaceDeviceGray ();};if _ggdcc :=_ae .TraceToDirectObject (_cdbacb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_ggdcc !=nil {_aeadd ,_fcaec :=_ggdcc .(*_ae .PdfObjectInteger );
if !_fcaec {return nil ,_ed .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gdafd :=int64 (*_aeadd );_gccad .BitsPerComponent =&_gdafd ;};_gccad .Intent =_cdbacb .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_gccad .ImageMask =_cdbacb .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_gccad .Mask =_cdbacb .Get ("\u004d\u0061\u0073\u006b");_gccad .Decode =_cdbacb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_gccad .Interpolate =_cdbacb .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_gccad .Alternatives =_cdbacb .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_gccad .SMask =_cdbacb .Get ("\u0053\u004d\u0061s\u006b");_gccad .SMaskInData =_cdbacb .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_gccad .Matte =_cdbacb .Get ("\u004d\u0061\u0074t\u0065");_gccad .Name =_cdbacb .Get ("\u004e\u0061\u006d\u0065");_gccad .StructParent =_cdbacb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gccad .ID =_cdbacb .Get ("\u0049\u0044");
_gccad .OPI =_cdbacb .Get ("\u004f\u0050\u0049");_gccad .Metadata =_cdbacb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gccad .OC =_cdbacb .Get ("\u004f\u0043");_gccad .Stream =stream .Stream ;return _gccad ,nil ;};func _cbfed (_efcfd _ae .PdfObject ,_bcec *PdfReader )(*OutlineDest ,error ){_cdfcg ,_gggaf :=_ae .GetArray (_efcfd );
if !_gggaf {return nil ,_ed .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_eagc :=_cdfcg .Len ();if _eagc < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_eagc );
};_fbbaa :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_beaba :=_cdfcg .Get (0);if _ddgfe ,_ageca :=_ae .GetIndirect (_beaba );_ageca {if _ ,_fcbc ,_fffbc :=_bcec .PageFromIndirectObject (_ddgfe );_fffbc ==nil {_fbbaa .Page =int64 (_fcbc -1);}else {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ddgfe );
};_fbbaa .PageObj =_ddgfe ;}else if _acdeg ,_afaa :=_ae .GetIntVal (_beaba );_afaa {if _acdeg >=0&&_acdeg < len (_bcec .PageList ){_fbbaa .PageObj =_bcec .PageList [_acdeg ].GetPageAsIndirectObject ();}else {_fgb .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_acdeg );
};_fbbaa .Page =int64 (_acdeg );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_beaba );};_bddcb ,_gggaf :=_ae .GetNameVal (_cdfcg .Get (1));
if !_gggaf {_fgb .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cdfcg .Get (1));
return _fbbaa ,nil ;};switch _bddcb {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _eagc > 2{_fbbaa .Y ,_ =_ae .GetNumberAsFloat (_ae .TraceToDirectObject (_cdfcg .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _eagc > 2{_fbbaa .X ,_ =_ae .GetNumberAsFloat (_ae .TraceToDirectObject (_cdfcg .Get (2)));
};case "\u0058\u0059\u005a":if _eagc > 4{_fbbaa .X ,_ =_ae .GetNumberAsFloat (_ae .TraceToDirectObject (_cdfcg .Get (2)));_fbbaa .Y ,_ =_ae .GetNumberAsFloat (_ae .TraceToDirectObject (_cdfcg .Get (3)));_fbbaa .Zoom ,_ =_ae .GetNumberAsFloat (_ae .TraceToDirectObject (_cdfcg .Get (4)));
};default:_bddcb ="\u0046\u0069\u0074";};_fbbaa .Mode =_bddcb ;return _fbbaa ,nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ag .Permissions ;Algorithm EncryptionAlgorithm ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_gfbb interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_add *PdfActionURI )ToPdfObject ()_ae .PdfObject {_add .PdfAction .ToPdfObject ();_gbb :=_add ._bac ;_ced :=_gbb .PdfObject .(*_ae .PdfObjectDictionary );_ced .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeURI )));_ced .SetIfNotNil ("\u0055\u0052\u0049",_add .URI );
_ced .SetIfNotNil ("\u0049\u0073\u004da\u0070",_add .IsMap );return _gbb ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_gdef *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _dfbec []_ddd .TextEncoder ;var _ggfcc _ddd .CMapEncoder ;if _debed :=_gdef .baseFields ()._babge ;_debed !=nil {_ggfcc =_ddd .NewCMapEncoder ("",nil ,_debed );};_gfaag :=_gdef .Encoder ();
if _gfaag !=nil {switch _gdba :=_gfaag .(type ){case _ddd .SimpleEncoder :_fced :=_gdba .BaseName ();if _ ,_abaed :=_cacdc [_fced ];_abaed {_dfbec =append (_dfbec ,_gfaag );};};};if len (_dfbec )==0{if _gdef .baseFields ()._babge !=nil {_dfbec =append (_dfbec ,_ggfcc );
};if _gfaag !=nil {_dfbec =append (_dfbec ,_gfaag );};};var _cffg _fga .Buffer ;var _bdcea int ;for _ ,_bbfd :=range data {var _eaab bool ;for _ ,_acccf :=range _dfbec {if _bceag :=_acccf .Encode (string (_bbfd ));len (_bceag )> 0{_cffg .Write (_bceag );
_eaab =true ;break ;};};if !_eaab {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_bbfd );
_bdcea ++;};};if _bdcea !=0{_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_bdcea ,_gdef ,_dfbec );
};return _cffg .Bytes (),_bdcea ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ddec *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ed .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_gbdd ,_edbd :=_fae .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cgde ,img ._dgegd );if _edbd !=nil {return img ,_edbd ;};_acbb ,_edbd :=_fae .GrayConverter .Convert (_gbdd );if _edbd !=nil {return img ,_edbd ;
};return _acgba (_acbb .Base ()),nil ;};func _eabed (_fbcg _ae .PdfObject )(*PdfFunctionType2 ,error ){_eega :=&PdfFunctionType2 {};var _dffgf *_ae .PdfObjectDictionary ;if _egbdf ,_dceab :=_fbcg .(*_ae .PdfIndirectObject );_dceab {_eaega ,_ggag :=_egbdf .PdfObject .(*_ae .PdfObjectDictionary );
if !_ggag {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eega ._cbff =_egbdf ;_dffgf =_eaega ;}else if _bgegea ,_ccef :=_fbcg .(*_ae .PdfObjectDictionary );_ccef {_dffgf =_bgegea ;}else {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fgb .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_dffgf .String ());_edgaf ,_bddc :=_ae .TraceToDirectObject (_dffgf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ae .PdfObjectArray );if !_bddc {_fgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _edgaf .Len ()< 0||_edgaf .Len ()%2!=0{_fgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_eadgf ,_eggf :=_edgaf .ToFloat64Array ();if _eggf !=nil {return nil ,_eggf ;};_eega .Domain =_eadgf ;_edgaf ,_bddc =_ae .TraceToDirectObject (_dffgf .Get ("\u0052\u0061\u006eg\u0065")).(*_ae .PdfObjectArray );
if _bddc {if _edgaf .Len ()< 0||_edgaf .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_edgfe ,_ddfbf :=_edgaf .ToFloat64Array ();if _ddfbf !=nil {return nil ,_ddfbf ;};_eega .Range =_edgfe ;
};_edgaf ,_bddc =_ae .TraceToDirectObject (_dffgf .Get ("\u0043\u0030")).(*_ae .PdfObjectArray );if _bddc {_edfec ,_baff :=_edgaf .ToFloat64Array ();if _baff !=nil {return nil ,_baff ;};_eega .C0 =_edfec ;};_edgaf ,_bddc =_ae .TraceToDirectObject (_dffgf .Get ("\u0043\u0031")).(*_ae .PdfObjectArray );
if _bddc {_addb ,_aebabg :=_edgaf .ToFloat64Array ();if _aebabg !=nil {return nil ,_aebabg ;};_eega .C1 =_addb ;};if len (_eega .C0 )!=len (_eega .C1 ){_fgb .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_ae .ErrRangeError ;};N ,_eggf :=_ae .GetNumberAsFloat (_ae .TraceToDirectObject (_dffgf .Get ("\u004e")));if _eggf !=nil {_fgb .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_dffgf .String ());
return nil ,_eggf ;};_eega .N =N ;return _eega ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_efcd *Image )AlphaMap (mapFunc AlphaMapFunc ){for _bafdf ,_dgcd :=range _efcd ._cgde {_efcd ._cgde [_bafdf ]=mapFunc (_dgcd );};};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_fgfb *PdfFieldChoice )ToPdfObject ()_ae .PdfObject {_fgfb .PdfField .ToPdfObject ();_debe :=_fgfb ._fcfc ;_gbdg :=_debe .PdfObject .(*_ae .PdfObjectDictionary );_gbdg .Set ("\u0046\u0054",_ae .MakeName ("\u0043\u0068"));if _fgfb .Opt !=nil {_gbdg .Set ("\u004f\u0070\u0074",_fgfb .Opt );
};if _fgfb .TI !=nil {_gbdg .Set ("\u0054\u0049",_fgfb .TI );};if _fgfb .I !=nil {_gbdg .Set ("\u0049",_fgfb .I );};return _debe ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_cgd *PdfAppender )UpdatePage (page *PdfPage ){_cgd .updateObjectsDeep (page .ToPdfObject (),nil )};func (_ffcf *PdfAcroForm )fill (_gccaf FieldValueProvider ,_eceaf FieldAppearanceGenerator )error {if _ffcf ==nil {return nil ;};_dafdab ,_babd :=_gccaf .FieldValues ();
if _babd !=nil {return _babd ;};for _ ,_ffcg :=range _ffcf .AllFields (){_fggce :=_ffcg .PartialName ();_gccc ,_bcggd :=_dafdab [_fggce ];if !_bcggd {if _febe ,_aeaa :=_ffcg .FullName ();_aeaa ==nil {_gccc ,_bcggd =_dafdab [_febe ];};};if !_bcggd {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_fggce );
continue ;};if _bbbg :=_ffaab (_ffcg ,_gccc );_bbbg !=nil {return _bbbg ;};if _eceaf ==nil {continue ;};for _ ,_fbbdf :=range _ffcg .Annotations {_debb ,_cecde :=_eceaf .GenerateAppearanceDict (_ffcf ,_ffcg ,_fbbdf );if _cecde !=nil {return _cecde ;};_fbbdf .AP =_debb ;
_fbbdf .ToPdfObject ();};};return nil ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_ffbbg *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_ffbbg .ToPdfOutline ().PdfOutlineTreeNode ;};func _dgfg (_ecbb *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_ecbb }};func (_aefed *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_aefed ._beabf .Major ,_aefed ._beabf .Minor );
};func (_afbfad *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _afbfad ._dgadd .GetCrypter ()!=nil &&!_afbfad ._dgadd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_addde :=_afbfad ._eedde ;_bfeab :=_addde .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _bfeab ==nil {return nil ,nil ;};_fgb .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_fbeab :=_ae .ResolveReference (_bfeab );
_fgb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_fbeab );if _abdbe :=_ae .IsNullObject (_fbeab );_abdbe {_fgb .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_gacdc ,_fafed :=_fbeab .(*_ae .PdfIndirectObject );if !_fafed {if _ ,_gaaaf :=_ae .GetDict (_fbeab );!_gaaaf {_fgb .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_fgb .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_gacdc =_ae .MakeIndirectObject (_fbeab );};_dabdd ,_fafed :=_gacdc .PdfObject .(*_ae .PdfObjectDictionary );if !_fafed {return nil ,_ed .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_fgb .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_dabdd );_ecfea ,_ ,_dgaf :=_afbfad .buildOutlineTree (_gacdc ,nil ,nil ,nil );if _dgaf !=nil {return nil ,_dgaf ;};_fgb .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ecfea );
return _ecfea ,nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_ceedb *PdfAcroForm )AllFields ()[]*PdfField {if _ceedb ==nil {return nil ;};var _abge []*PdfField ;if _ceedb .Fields !=nil {for _ ,_fagcb :=range *_ceedb .Fields {_abge =append (_abge ,_egba (_fagcb )...);};};return _abge ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_bbfc *Image )SetSamples (samples []uint32 ){if _bbfc .BitsPerComponent < 8{samples =_bbfc .samplesAddPadding (samples );};_dbdda :=_dag .ResampleUint32 (samples ,int (_bbfc .BitsPerComponent ),8);_eddcg :=make ([]byte ,len (_dbdda ));for _baec ,_eddd :=range _dbdda {_eddcg [_baec ]=byte (_eddd );
};_bbfc .Data =_eddcg ;};

// Height returns the height of `rect`.
func (_bddaa *PdfRectangle )Height ()float64 {return _ce .Abs (_bddaa .Ury -_bddaa .Lly )};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_cfcg *PdfField )IsTerminal ()bool {return len (_cfcg .Kids )==0};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_fcefc *PdfReader )Decrypt (password []byte )(bool ,error ){_ebaed ,_efeec :=_fcefc ._dgadd .Decrypt (password );if _efeec !=nil {return false ,_efeec ;};if !_ebaed {return false ,nil ;};_efeec =_fcefc .loadStructure ();if _efeec !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_efeec );
return false ,_efeec ;};return true ,nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dafcd ,_bfga :=_b .Open (filePath );if _bfga !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bfga );
return nil ,_bfga ;};defer _dafcd .Close ();return NewCompositePdfFontFromTTF (_dafcd );};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_ggbg *PdfPage )GetPageAsIndirectObject ()*_ae .PdfIndirectObject {return _ggbg ._dfgbfb };func _effeb (_befe string )map[string ]string {_abca :=_adgga .Split (_befe ,-1);_bfbf :=map[string ]string {};for _ ,_bbga :=range _abca {_fdcbb :=_ddadb .FindStringSubmatch (_bbga );
if _fdcbb ==nil {continue ;};_bdbec ,_ebcg :=_fdcbb [1],_fdcbb [2];_bfbf [_bdbec ]=_ebcg ;};return _bfbf ;};

// ToPdfObject implements interface PdfModel.
func (_eefaa *PdfSignature )ToPdfObject ()_ae .PdfObject {_beagf :=_eefaa ._ddddf ;var _cceae *_ae .PdfObjectDictionary ;if _efag ,_bbebd :=_beagf .PdfObject .(*pdfSignDictionary );_bbebd {_cceae =_efag .PdfObjectDictionary ;}else {_cceae =_beagf .PdfObject .(*_ae .PdfObjectDictionary );
};_cceae .SetIfNotNil ("\u0054\u0079\u0070\u0065",_eefaa .Type );_cceae .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_eefaa .Filter );_cceae .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_eefaa .SubFilter );_cceae .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_eefaa .ByteRange );
_cceae .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_eefaa .Contents );_cceae .SetIfNotNil ("\u0043\u0065\u0072\u0074",_eefaa .Cert );_cceae .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eefaa .Name );_cceae .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_eefaa .Reason );
_cceae .SetIfNotNil ("\u004d",_eefaa .M );_cceae .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_eefaa .Reference );_cceae .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_eefaa .Changes );_cceae .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_eefaa .ContactInfo );
return _beagf ;};var (_decda =_daf .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_ddadb =_daf .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_dgbae =_daf .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_bffgb ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_fcgaf ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_fdfa ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_edbg PdfModel ;Rect _ae .PdfObject ;Contents _ae .PdfObject ;P _ae .PdfObject ;NM _ae .PdfObject ;M _ae .PdfObject ;F _ae .PdfObject ;AP _ae .PdfObject ;AS _ae .PdfObject ;Border _ae .PdfObject ;C _ae .PdfObject ;StructParent _ae .PdfObject ;
OC _ae .PdfObject ;_gggg *_ae .PdfIndirectObject ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// NewPdfFileSpecFromEmbeddedFile construct a new PdfFileSpec that contains an embedded file.
func NewPdfFileSpecFromEmbeddedFile (file *EmbeddedFile )*PdfFilespec {_efgg :=&PdfFilespec {};_efgg ._acaa =_ae .MakeIndirectObject (_ae .MakeDict ());_efgg .Desc =_ae .MakeString (file .Description );_efgg .EF =file .ToPdfObject ();_efgg .F =_ae .MakeString (file .Name );
_efgg .UF =_ae .MakeEncodedString (file .Name ,true );_cdbcf :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch file .Relationship {case RelationshipSource :_cdbcf ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_cdbcf ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_cdbcf ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_cdbcf ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_efgg .AFRelationship =_ae .MakeName (_cdbcf );return _efgg ;
};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_agaf *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_aadb ,_aadf :=color .(*PdfColorDeviceCMYK );if !_aadf {_fgb .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_beaf :=_aadb .C ();_ebca :=_aadb .M ();_cfdfe :=_aadb .Y ();_gcdc :=_aadb .K ();_beaf =_beaf *(1-_gcdc )+_gcdc ;_ebca =_ebca *(1-_gcdc )+_gcdc ;
_cfdfe =_cfdfe *(1-_gcdc )+_gcdc ;_eabcd :=1-_beaf ;_cgda :=1-_ebca ;_bbee :=1-_cfdfe ;return NewPdfColorDeviceRGB (_eabcd ,_cgda ,_bbee ),nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_bfcdc *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _bfcdc ._adgf .(*PdfShadingPattern );};func _acgba (_baeg *_fae .ImageBase )(_gdeb Image ){_gdeb .Width =int64 (_baeg .Width );_gdeb .Height =int64 (_baeg .Height );_gdeb .BitsPerComponent =int64 (_baeg .BitsPerComponent );
_gdeb .ColorComponents =_baeg .ColorComponents ;_gdeb .Data =_baeg .Data ;_gdeb ._dgegd =_baeg .Decode ;_gdeb ._cgde =_baeg .Alpha ;return _gdeb ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_ae .PdfObjectInteger ;BitsPerComponent *_ae .PdfObjectInteger ;VerticesPerRow *_ae .PdfObjectInteger ;Decode *_ae .PdfObjectArray ;Function []PdfFunction ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );


// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_gdcbc :=&PdfSignature {Type :_ae .MakeName ("\u0053\u0069\u0067"),Handler :handler };_adbg :=&pdfSignDictionary {PdfObjectDictionary :_ae .MakeDict (),_gfggb :&handler ,_fcagc :_gdcbc };_gdcbc ._ddddf =_ae .MakeIndirectObject (_adbg );
return _gdcbc ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_ggacg *Image )Resample (targetBitsPerComponent int64 ){if _ggacg .BitsPerComponent ==targetBitsPerComponent {return ;};_agge :=_ggacg .GetSamples ();if targetBitsPerComponent < _ggacg .BitsPerComponent {_cfded :=_ggacg .BitsPerComponent -targetBitsPerComponent ;
for _ffebdb :=range _agge {_agge [_ffebdb ]>>=uint (_cfded );};}else if targetBitsPerComponent > _ggacg .BitsPerComponent {_abagb :=targetBitsPerComponent -_ggacg .BitsPerComponent ;for _acdag :=range _agge {_agge [_acdag ]<<=uint (_abagb );};};_ggacg .BitsPerComponent =targetBitsPerComponent ;
if _ggacg .BitsPerComponent < 8{_ggacg .resampleLowBits (_agge );return ;};_dfafb :=_fae .BytesPerLine (int (_ggacg .Width ),int (_ggacg .BitsPerComponent ),_ggacg .ColorComponents );_bebeb :=make ([]byte ,_dfafb *int (_ggacg .Height ));var (_caafg ,_gggff ,_eafd ,_baada int ;
_eegg uint32 ;);for _eafd =0;_eafd < int (_ggacg .Height );_eafd ++{_caafg =_eafd *_dfafb ;_gggff =(_eafd +1)*_dfafb -1;_afdde :=_dag .ResampleUint32 (_agge [_caafg :_gggff ],int (targetBitsPerComponent ),8);for _baada ,_eegg =range _afdde {_bebeb [_baada +_caafg ]=byte (_eegg );
};};_ggacg .Data =_bebeb ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_aafd *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _ae .GetNumberAsFloat (_aafd .XHeight );};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_eab :=NewPdfAction ();_fda :=&PdfActionTrans {};_fda .PdfAction =_eab ;_eab .SetContext (_fda );return _fda ;};

// SetCatalogLanguage sets the catalog language.
func (_cffaf *PdfWriter )SetCatalogStructTreeRoot (tree _ae .PdfObject )error {if tree ==nil {_cffaf ._gefce .Remove ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return nil ;};_cffaf ._gefce .Set ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074",tree );
return _cffaf .addObjects (tree );};

// ToGoTime returns the date in time.Time format.
func (_adeb PdfDate )ToGoTime ()_db .Time {_aegce :=int (_adeb ._agfdd *60*60+_adeb ._adbce *60);switch _adeb ._begc {case '-':_aegce =-_aegce ;case 'Z':_aegce =0;};_cdfag :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_adeb ._begc ,_adeb ._agfdd ,_adeb ._adbce );
_eafcb :=_db .FixedZone (_cdfag ,_aegce );return _db .Date (int (_adeb ._ebdcc ),_db .Month (_adeb ._cbebe ),int (_adeb ._dfdf ),int (_adeb ._adeac ),int (_adeb ._faeeb ),int (_adeb ._accdd ),0,_eafcb );};

// GetAttachedFiles retrieves all the attached files info and content.
func (_ebced *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_ddga :=[]*EmbeddedFile {};_afcdd ,_cebf :=_ebced .GetNameDictionary ();if _cebf !=nil {return nil ,_cebf ;};if _afcdd ==nil {return _ddga ,nil ;};_gcdccg :=_ffbbee (_afcdd );if _gcdccg .EmbeddedFiles ==nil {return nil ,nil ;
};_fega :=_gcdccg .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_ccgfg ,_befeg :=_fega .(*_ae .PdfObjectArray );if !_befeg {return nil ,_ed .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};for _aaggf :=1;_aaggf < len (_ccgfg .Elements ());_aaggf +=2{if _aaggf %2!=0{_bccaa :=_ccgfg .Get (_aaggf );_gbecb ,_dbbdg :=NewPdfFilespecFromObj (_bccaa );if _dbbdg !=nil {return nil ,_dbbdg ;};_dbfabe ,_dbbdg :=NewEmbeddedFileFromObject (_gbecb .EF );
if _dbbdg !=nil {return nil ,_dbbdg ;};_gaba ,_dbac :=_gbecb .F .(*_ae .PdfObjectString );if _dbac {_dbfabe .Name =_gaba .Str ();};_dbfabe .Description =_gbecb .Desc .WriteString ();_dbfabe .Relationship =RelationshipUnspecified ;if _gbecb .AFRelationship !=nil {switch _gbecb .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_dbfabe .Relationship =RelationshipSource ;
case "\u0044\u0061\u0074\u0061":_dbfabe .Relationship =RelationshipData ;case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_dbfabe .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_dbfabe .Relationship =RelationshipSupplement ;
default:_dbfabe .Relationship =RelationshipUnspecified ;};};_ddga =append (_ddga ,_dbfabe );};};return _ddga ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gdbd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gdbd .Alternate ==nil {_fgb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gdbd .N ==1{_fgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bcgg :=NewPdfColorspaceDeviceGray ();return _bcgg .ColorToRGB (color );}else if _gdbd .N ==3{_fgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _gdbd .N ==4{_fgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bdbcf :=NewPdfColorspaceDeviceCMYK ();return _bdbcf .ColorToRGB (color );}else {return nil ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fgb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gdbd );
return _gdbd .Alternate .ColorToRGB (color );};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _ae .PdfObject ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_ae .PdfObjectStream )(*XObjectForm ,error ){_edcgd :=&XObjectForm {};_edcgd ._ffcgb =stream ;_badbe :=*(stream .PdfObjectDictionary );_dfgge ,_edbgc :=_ae .NewEncoderFromStream (stream );if _edbgc !=nil {return nil ,_edbgc ;
};_edcgd .Filter =_dfgge ;if _cdaeb :=_badbe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cdaeb !=nil {_daca ,_geaee :=_cdaeb .(*_ae .PdfObjectName );if !_geaee {return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_daca !="\u0046\u006f\u0072\u006d"{_fgb .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _ebfcgd :=_badbe .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_ebfcgd !=nil {_edcgd .FormType =_ebfcgd ;};if _bbabc :=_badbe .Get ("\u0042\u0042\u006f\u0078");_bbabc !=nil {_edcgd .BBox =_bbabc ;};if _bebdfd :=_badbe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_bebdfd !=nil {_edcgd .Matrix =_bebdfd ;};if _ceffc :=_badbe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ceffc !=nil {_ceffc =_ae .TraceToDirectObject (_ceffc );_abdca ,_agbgc :=_ceffc .(*_ae .PdfObjectDictionary );if !_agbgc {_fgb .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ae .ErrTypeError ;};_cgbagf ,_dfcfe :=NewPdfPageResourcesFromDict (_abdca );if _dfcfe !=nil {_fgb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_dfcfe ;};_edcgd .Resources =_cgbagf ;_fgb .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_edcgd .Resources );};_edcgd .Group =_badbe .Get ("\u0047\u0072\u006fu\u0070");
_edcgd .Ref =_badbe .Get ("\u0052\u0065\u0066");_edcgd .MetaData =_badbe .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_edcgd .PieceInfo =_badbe .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_edcgd .LastModified =_badbe .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_edcgd .StructParent =_badbe .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_edcgd .StructParents =_badbe .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_edcgd .OPI =_badbe .Get ("\u004f\u0050\u0049");
_edcgd .OC =_badbe .Get ("\u004f\u0043");_edcgd .Name =_badbe .Get ("\u004e\u0061\u006d\u0065");_edcgd .Stream =stream .Stream ;return _edcgd ,nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ae .PdfObject ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_bbeaf *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_cabae :=_bbeaf .GetContentStreamObjs ();wrapContents =wrapContents &&len (_cabae )> 0;_bfgda :=_ae .NewFlateEncoder ();_cfad :=_ae .MakeArray ();if wrapContents {_dccab ,_fggbc :=_ae .MakeStream ([]byte ("\u0071\u000a"),_bfgda );
if _fggbc !=nil {return _fggbc ;};_cfad .Append (_dccab );};_cfad .Append (_cabae ...);if wrapContents {_bfeeg ,_eeceb :=_ae .MakeStream ([]byte ("\u000a\u0051\u000a"),_bfgda );if _eeceb !=nil {return _eeceb ;};_cfad .Append (_bfeeg );};_gcedd ,_cbeb :=_ae .MakeStream (cs ,_bfgda );
if _cbeb !=nil {return _cbeb ;};_cfad .Append (_gcedd );_bbeaf .Contents =_cfad ;return nil ;};func (_ebg *PdfReader )newPdfActionImportDataFromDict (_ccba *_ae .PdfObjectDictionary )(*PdfActionImportData ,error ){_abd ,_fgbg :=_eeg (_ccba .Get ("\u0046"));
if _fgbg !=nil {return nil ,_fgbg ;};return &PdfActionImportData {F :_abd },nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_cdab *_ae .PdfIndirectObject ;};

// A returns the value of the A component of the color.
func (_ffgf *PdfColorCalRGB )A ()float64 {return _ffgf [0]};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_fdgc :=PdfColorCalGray (grayVal );return &_fdgc ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_bcfgc *PdfReader )GetTrailer ()(*_ae .PdfObjectDictionary ,error ){_cfdfef :=_bcfgc ._dgadd .GetTrailer ();if _cfdfef ==nil {return nil ,_ed .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _cfdfef ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_geabf *PdfTransformParamsDocMDP )ToPdfObject ()_ae .PdfObject {_ccabe :=_ae .MakeDict ();_ccabe .SetIfNotNil ("\u0054\u0079\u0070\u0065",_geabf .Type );_ccabe .SetIfNotNil ("\u0056",_geabf .V );_ccabe .SetIfNotNil ("\u0050",_geabf .P );return _ccabe ;
};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_ae .PdfObjectArray ;Domain *_ae .PdfObjectArray ;Function []PdfFunction ;Extend *_ae .PdfObjectArray ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_dccb *PdfColorspaceSpecialIndexed )ToPdfObject ()_ae .PdfObject {_effd :=_ae .MakeArray (_ae .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_effd .Append (_dccb .Base .ToPdfObject ());_effd .Append (_ae .MakeInteger (int64 (_dccb .HiVal )));
_effd .Append (_dccb .Lookup );if _dccb ._beea !=nil {_dccb ._beea .PdfObject =_effd ;return _dccb ._beea ;};return _effd ;};

// ToPdfObject implements interface PdfModel.
func (_aecc *PdfAnnotation3D )ToPdfObject ()_ae .PdfObject {_aecc .PdfAnnotation .ToPdfObject ();_dbgg :=_aecc ._gggg ;_deg :=_dbgg .PdfObject .(*_ae .PdfObjectDictionary );_deg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0033\u0044"));
_deg .SetIfNotNil ("\u0033\u0044\u0044",_aecc .T3DD );_deg .SetIfNotNil ("\u0033\u0044\u0056",_aecc .T3DV );_deg .SetIfNotNil ("\u0033\u0044\u0041",_aecc .T3DA );_deg .SetIfNotNil ("\u0033\u0044\u0049",_aecc .T3DI );_deg .SetIfNotNil ("\u0033\u0044\u0042",_aecc .T3DB );
return _dbgg ;};

// ToPdfObject implements interface PdfModel.
func (_ebag *PdfAnnotationInk )ToPdfObject ()_ae .PdfObject {_ebag .PdfAnnotation .ToPdfObject ();_acbd :=_ebag ._gggg ;_agbcc :=_acbd .PdfObject .(*_ae .PdfObjectDictionary );_ebag .PdfAnnotationMarkup .appendToPdfDictionary (_agbcc );_agbcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0049\u006e\u006b"));
_agbcc .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_ebag .InkList );_agbcc .SetIfNotNil ("\u0042\u0053",_ebag .BS );return _acbd ;};

// ToPdfObject returns the PDF representation of the function.
func (_becdc *PdfFunctionType3 )ToPdfObject ()_ae .PdfObject {_bafa :=_ae .MakeDict ();_bafa .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ae .MakeInteger (3));_ebbc :=&_ae .PdfObjectArray {};for _ ,_ddcef :=range _becdc .Domain {_ebbc .Append (_ae .MakeFloat (_ddcef ));
};_bafa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ebbc );if _becdc .Range !=nil {_ccfca :=&_ae .PdfObjectArray {};for _ ,_gcdce :=range _becdc .Range {_ccfca .Append (_ae .MakeFloat (_gcdce ));};_bafa .Set ("\u0052\u0061\u006eg\u0065",_ccfca );};if _becdc .Functions !=nil {_ffgce :=&_ae .PdfObjectArray {};
for _ ,_affcd :=range _becdc .Functions {_ffgce .Append (_affcd .ToPdfObject ());};_bafa .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_ffgce );};if _becdc .Bounds !=nil {_ccbab :=&_ae .PdfObjectArray {};for _ ,_cfgd :=range _becdc .Bounds {_ccbab .Append (_ae .MakeFloat (_cfgd ));
};_bafa .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_ccbab );};if _becdc .Encode !=nil {_ddafde :=&_ae .PdfObjectArray {};for _ ,_feabf :=range _becdc .Encode {_ddafde .Append (_ae .MakeFloat (_feabf ));};_bafa .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_ddafde );
};if _becdc ._eaeea !=nil {_becdc ._eaeea .PdfObject =_bafa ;return _becdc ._eaeea ;};return _bafa ;};

// AddOutlineTree adds outlines to a PDF file.
func (_bfdaa *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_bfdaa ._bdggf =outlineTree };

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_ddddf *_ae .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_ae .PdfObjectName ;Filter *_ae .PdfObjectName ;SubFilter *_ae .PdfObjectName ;Contents *_ae .PdfObjectString ;Cert _ae .PdfObject ;ByteRange *_ae .PdfObjectArray ;Reference *_ae .PdfObjectArray ;Changes *_ae .PdfObjectArray ;Name *_ae .PdfObjectString ;
M *_ae .PdfObjectString ;Location *_ae .PdfObjectString ;Reason *_ae .PdfObjectString ;ContactInfo *_ae .PdfObjectString ;R *_ae .PdfObjectInteger ;V *_ae .PdfObjectInteger ;PropBuild *_ae .PdfObjectDictionary ;PropAuthTime *_ae .PdfObjectInteger ;PropAuthType *_ae .PdfObjectName ;
};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_dggaf FieldFlag )Has (fl FieldFlag )bool {return (_dggaf .Mask ()&fl .Mask ())> 0};func (_ddcd *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_abcd :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_abcd ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_adeed *PdfColorspaceICCBased )ToPdfObject ()_ae .PdfObject {_aega :=&_ae .PdfObjectArray {};_aega .Append (_ae .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ddba *_ae .PdfObjectStream ;if _adeed ._acac !=nil {_ddba =_adeed ._acac ;
}else {_ddba =&_ae .PdfObjectStream {};};_gceg :=_ae .MakeDict ();_gceg .Set ("\u004e",_ae .MakeInteger (int64 (_adeed .N )));if _adeed .Alternate !=nil {_gceg .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_adeed .Alternate .ToPdfObject ());};if _adeed .Metadata !=nil {_gceg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_adeed .Metadata );
};if _adeed .Range !=nil {var _faff []_ae .PdfObject ;for _ ,_fgggg :=range _adeed .Range {_faff =append (_faff ,_ae .MakeFloat (_fgggg ));};_gceg .Set ("\u0052\u0061\u006eg\u0065",_ae .MakeArray (_faff ...));};_gceg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ae .MakeInteger (int64 (len (_adeed .Data ))));
_ddba .Stream =_adeed .Data ;_ddba .PdfObjectDictionary =_gceg ;_aega .Append (_ddba );if _adeed ._aedgc !=nil {_adeed ._aedgc .PdfObject =_aega ;return _adeed ._aedgc ;};return _aega ;};func _gaffa (_cdbgg rune )string {for _ggca ,_fecc :=range _ac .Categories {if len (_ggca )==2&&_ac .Is (_fecc ,_cdbgg ){return _ggca ;
};};return "\u0043\u006e";};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_ae .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_ae .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_ae .PdfObjectBool ;_gcge PdfModel ;_dgbdcg _ae .PdfObject ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_edgbb *PdfPage )GetRotate ()(int64 ,error ){if _edgbb .Rotate !=nil {return *_edgbb .Rotate ,nil ;};_fbeg :=_edgbb .Parent ;for _fbeg !=nil {_edece ,_caccg :=_ae .GetDict (_fbeg );if !_caccg {return 0,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _cdda :=_edece .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_cdda !=nil {_gdafc ,_cdgb :=_ae .GetInt (_cdda );if !_cdgb {return 0,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _gdafc !=nil {return int64 (*_gdafc ),nil ;
};return 0,_ed .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_fbeg =_edece .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_ed .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_gcbba *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ed .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_abgd ,_dfae :=_fae .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cgde ,img ._dgegd );if _dfae !=nil {return img ,_dfae ;};_fbgd ,_dfae :=_fae .NRGBAConverter .Convert (_abgd );if _dfae !=nil {return img ,_dfae ;
};_bgga :=_acgba (_fbgd .Base ());_fgb .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_fgb .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_fgb .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_bgga .Data );
_fgb .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_bgga );return _bgga ,nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_cgde []byte ;_dgegd []float64 ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gdggg *PdfPage )ToPdfObject ()_ae .PdfObject {_fcddb :=_gdggg ._dfgbfb ;_gdggg .GetPageDict ();return _fcddb ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ToInteger convert to an integer format.
func (_eabgb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_eeag :=_ce .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_eeag *_eabgb .C ()),uint32 (_eeag *_eabgb .M ()),uint32 (_eeag *_eabgb .Y ()),uint32 (_eeag *_eabgb .K ())};};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_ae .PdfObjectName ;Colorants _ae .PdfObject ;Process _ae .PdfObject ;MixingHints _ae .PdfObject ;_cabe *_ae .PdfIndirectObject ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_dfedd *PdfReader )GetObjectNums ()[]int {return _dfedd ._dgadd .GetObjectNums ()};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _ae .PdfObject ;NewWindow _ae .PdfObject ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_gbcab *PdfPage )AddExtGState (name _ae .PdfObjectName ,egs *_ae .PdfObjectDictionary )error {if _gbcab .Resources ==nil {_gbcab .Resources =NewPdfPageResources ();};if _gbcab .Resources .ExtGState ==nil {_gbcab .Resources .ExtGState =_ae .MakeDict ();
};_fcfbb ,_beebb :=_ae .TraceToDirectObject (_gbcab .Resources .ExtGState ).(*_ae .PdfObjectDictionary );if !_beebb {_fgb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ae .TraceToDirectObject (_gbcab .Resources .ExtGState ));
return _ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcfbb .Set (name ,egs );return nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_eddag *PdfReader )GetPageLabels ()(_ae .PdfObject ,error ){_efabc :=_ae .ResolveReference (_eddag ._eedde .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _efabc ==nil {return nil ,nil ;};if !_eddag ._fedag {_dfcadd :=_eddag .traverseObjectData (_efabc );
if _dfcadd !=nil {return nil ,_dfcadd ;};};return _efabc ,nil ;};func (_agdc *LTV )buildCertChain (_gdbde ,_dbcgg []*_ddc .Certificate )([]*_ddc .Certificate ,map[string ]*_ddc .Certificate ,error ){_fegg :=map[string ]*_ddc .Certificate {};for _ ,_ccaga :=range _gdbde {_fegg [_ccaga .Subject .CommonName ]=_ccaga ;
};_aeccb :=_gdbde ;for _ ,_adafe :=range _dbcgg {_cfefe :=_adafe .Subject .CommonName ;if _ ,_afbd :=_fegg [_cfefe ];_afbd {continue ;};_fegg [_cfefe ]=_adafe ;_aeccb =append (_aeccb ,_adafe );};if len (_aeccb )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _bggcd error ;for _gefff :=_aeccb [0];_gefff !=nil &&!_agdc .CertClient .IsCA (_gefff );{_egfaf ,_ggebc :=_fegg [_gefff .Issuer .CommonName ];if !_ggebc {if _egfaf ,_bggcd =_agdc .CertClient .GetIssuer (_gefff );_bggcd !=nil {_fgb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_bggcd );
break ;};_fegg [_gefff .Issuer .CommonName ]=_egfaf ;_aeccb =append (_aeccb ,_egfaf );};_gefff =_egfaf ;};return _aeccb ,_fegg ,nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _ae .PdfObject ;IsMap _ae .PdfObject ;};

// SetContext set the sub annotation (context).
func (_baccc *PdfShading )SetContext (ctx PdfModel ){_baccc ._gcge =ctx };func _fdcgg (_eedae ,_dccgb string )string {if _ga .Contains (_eedae ,"\u002b"){_fbdf :=_ga .Split (_eedae ,"\u002b");if len (_fbdf )==2{_eedae =_fbdf [1];};};return _dccgb +"\u002b"+_eedae ;
};

// GetFontDescriptor returns the font descriptor for `font`.
func (_bdaa PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _bdaa ._efgfa .getFontDescriptor (),nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcce *PdfActionThread )ToPdfObject ()_ae .PdfObject {_fcce .PdfAction .ToPdfObject ();_bcc :=_fcce ._bac ;_cca :=_bcc .PdfObject .(*_ae .PdfObjectDictionary );_cca .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeThread )));if _fcce .F !=nil {_cca .Set ("\u0046",_fcce .F .ToPdfObject ());
};_cca .SetIfNotNil ("\u0044",_fcce .D );_cca .SetIfNotNil ("\u0042",_fcce .B );return _bcc ;};

// ToPdfObject implements interface PdfModel.
func (_fca *PdfActionResetForm )ToPdfObject ()_ae .PdfObject {_fca .PdfAction .ToPdfObject ();_gga :=_fca ._bac ;_bgcd :=_gga .PdfObject .(*_ae .PdfObjectDictionary );_bgcd .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeResetForm )));_bgcd .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fca .Fields );
_bgcd .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fca .Flags );return _gga ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_gac :=NewPdfAnnotation ();_aef :=&PdfAnnotationUnderline {};_aef .PdfAnnotation =_gac ;_aef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gac .SetContext (_aef );return _aef ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gb :=NewPdfAction ();_cace :=&PdfActionGoToE {};_cace .PdfAction =_gb ;_gb .SetContext (_cace );return _cace ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_ebaga FieldFlag )Mask ()uint32 {return uint32 (_ebaga )};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_aecbe *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _gbafc []*PdfField ;if _aecbe .AcroForm !=nil {_gbafc =_aecbe .AcroForm .AllFields ();};_ecgbg :=make (map[*PdfField ]struct{},len (_gbafc ));for _ ,_cdbbf :=range _gbafc {_ecgbg [_cdbbf ]=struct{}{};
};for _ ,_eccad :=range _aecbe .PageList {_accda ,_fcfcge :=_eccad .GetAnnotations ();if _fcfcge !=nil {return false ,_fcfcge ;};for _ ,_ggaaa :=range _accda {_fbgg ,_cbaab :=_ggaaa .GetContext ().(*PdfAnnotationWidget );if !_cbaab {continue ;};_gcgg :=_fbgg .Field ();
if _gcgg ==nil {return true ,nil ;};if _ ,_eggfa :=_ecgbg [_gcgg ];!_eggfa {return true ,nil ;};};};return false ,nil ;};

// String returns a string describing the font descriptor.
func (_ddedb *PdfFontDescriptor )String ()string {var _addg []string ;if _ddedb .FontName !=nil {_addg =append (_addg ,_ddedb .FontName .String ());};if _ddedb .FontFamily !=nil {_addg =append (_addg ,_ddedb .FontFamily .String ());};if _ddedb .fontFile !=nil {_addg =append (_addg ,_ddedb .fontFile .String ());
};if _ddedb ._cefa !=nil {_addg =append (_addg ,_ddedb ._cefa .String ());};_addg =append (_addg ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_ddedb .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ga .Join (_addg ,"\u002c\u0020"));
};func _afafe (_dfebg *_ae .PdfObjectDictionary ,_abdd *fontCommon )(*pdfFontType3 ,error ){_dcef :=_bfbe (_abdd );_fdcfd :=_dfebg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _fdcfd ==nil {_fdcfd =_ae .MakeInteger (0);};_dcef .FirstChar =_fdcfd ;
_ebba ,_cbegb :=_ae .GetIntVal (_fdcfd );if !_cbegb {_fgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fdcfd );
return nil ,_ae .ErrTypeError ;};_debeb :=_ddd .CharCode (_ebba );_fdcfd =_dfebg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fdcfd ==nil {_fdcfd =_ae .MakeInteger (255);};_dcef .LastChar =_fdcfd ;_ebba ,_cbegb =_ae .GetIntVal (_fdcfd );
if !_cbegb {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fdcfd );return nil ,_ae .ErrTypeError ;
};_gbdc :=_ddd .CharCode (_ebba );_fdcfd =_dfebg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fdcfd !=nil {_dcef .Resources =_fdcfd ;};_fdcfd =_dfebg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _fdcfd ==nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_fdcfd );
return nil ,_ae .ErrNotSupported ;};_dcef .CharProcs =_fdcfd ;_fdcfd =_dfebg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _fdcfd ==nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_fdcfd );
return nil ,_ae .ErrNotSupported ;};_dcef .FontMatrix =_fdcfd ;_dcef ._cbdec =make (map[_ddd .CharCode ]float64 );_fdcfd =_dfebg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fdcfd !=nil {_dcef .Widths =_fdcfd ;_bfgb ,_eeec :=_ae .GetArray (_fdcfd );
if !_eeec {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fdcfd );return nil ,_ae .ErrTypeError ;
};_dcfd ,_aeda :=_bfgb .ToFloat64Array ();if _aeda !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_aeda ;};if len (_dcfd )!=int (_gbdc -_debeb +1){_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gbdc -_debeb +1,len (_dcfd ));
return nil ,_ae .ErrRangeError ;};_cebdab ,_eeec :=_ae .GetArray (_dcef .FontMatrix );if !_eeec {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cebdab );
return nil ,_aeda ;};_bgdg ,_aeda :=_cebdab .ToFloat64Array ();if _aeda !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_aeda ;};_aedb :=_fc .NewMatrix (_bgdg [0],_bgdg [1],_bgdg [2],_bgdg [3],_bgdg [4],_bgdg [5]);for _dabf ,_feabb :=range _dcfd {_eafe ,_ :=_aedb .Transform (_feabb ,_feabb );_dcef ._cbdec [_debeb +_ddd .CharCode (_dabf )]=_eafe ;};};_dcef .Encoding =_ae .TraceToDirectObject (_dfebg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_cbge :=_dfebg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cbge !=nil {_dcef ._afda =_ae .TraceToDirectObject (_cbge );_gceef ,_fgeb :=_feed (_dcef ._afda ,&_dcef .fontCommon );if _fgeb !=nil {return nil ,_fgeb ;};_dcef ._babge =_gceef ;};
if _bfcfd :=_dcef ._babge ;_bfcfd !=nil {_dcef ._bbfgd =_ddd .NewCMapEncoder ("",nil ,_bfcfd );}else {_dcef ._bbfgd =_ddd .NewPdfDocEncoder ();};return _dcef ,nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_ebdge *PdfTilingPattern )ToPdfObject ()_ae .PdfObject {_ebdge .PdfPattern .ToPdfObject ();_fbegb :=_ebdge .getDict ();if _ebdge .PaintType !=nil {_fbegb .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_ebdge .PaintType );};if _ebdge .TilingType !=nil {_fbegb .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_ebdge .TilingType );
};if _ebdge .BBox !=nil {_fbegb .Set ("\u0042\u0042\u006f\u0078",_ebdge .BBox .ToPdfObject ());};if _ebdge .XStep !=nil {_fbegb .Set ("\u0058\u0053\u0074e\u0070",_ebdge .XStep );};if _ebdge .YStep !=nil {_fbegb .Set ("\u0059\u0053\u0074e\u0070",_ebdge .YStep );
};if _ebdge .Resources !=nil {_fbegb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ebdge .Resources .ToPdfObject ());};if _ebdge .Matrix !=nil {_fbegb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ebdge .Matrix );};return _ebdge ._ccdf ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_gcfbge *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func _fecgc (_ggfba *_ae .PdfObjectDictionary )(*PdfFieldButton ,error ){_gafg :=&PdfFieldButton {};_gafg .PdfField =NewPdfField ();_gafg .PdfField .SetContext (_gafg );_gafg .Opt ,_ =_ae .GetArray (_ggfba .Get ("\u004f\u0070\u0074"));
_ccafd :=NewPdfAnnotationWidget ();_ccafd .A ,_ =_ae .GetDict (_ggfba .Get ("\u0041"));_ccafd .AP ,_ =_ae .GetDict (_ggfba .Get ("\u0041\u0050"));_ccafd .SetContext (_gafg );_gafg .PdfField .Annotations =append (_gafg .PdfField .Annotations ,_ccafd );return _gafg ,nil ;
};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_gbga *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _dfded []float64 ;for _cfbad :=0;_cfbad < _gbga .GetNumComponents ();_cfbad ++{_dfded =append (_dfded ,0.0,1.0);};return _dfded ;};

// SetDecode sets the decode image float slice.
func (_eaabe *Image )SetDecode (decode []float64 ){_eaabe ._dgegd =decode };

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_dbc :=NewPdfAnnotation ();_ffbg :=&PdfAnnotationScreen {};_ffbg .PdfAnnotation =_dbc ;_dbc .SetContext (_ffbg );return _ffbg ;};func (_aeg *PdfReader )newPdfAnnotationTrapNetFromDict (_ebcd *_ae .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_agbca :=PdfAnnotationTrapNet {};
return &_agbca ,nil ;};func (_cafade *PdfReader )resolveReference (_fecda *_ae .PdfObjectReference )(_ae .PdfObject ,bool ,error ){_dcdee ,_eecee :=_cafade ._dgadd .ObjCache [int (_fecda .ObjectNumber )];if !_eecee {_fgb .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_fecda );
_eefef ,_aegb :=_cafade ._dgadd .LookupByReference (*_fecda );if _aegb !=nil {return nil ,false ,_aegb ;};_cafade ._dgadd .ObjCache [int (_fecda .ObjectNumber )]=_eefef ;return _eefef ,false ,nil ;};return _dcdee ,true ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bfabe *Image )ToJBIG2Image ()(*_ae .JBIG2Image ,error ){_fgeae ,_fdee :=_bfabe .ToGoImage ();if _fdee !=nil {return nil ,_fdee ;};return _ae .GoImageToJBIG2 (_fgeae ,_ae .JB2ImageAutoThreshold );};

// SetCatalogViewerPreferences sets the catalog ViewerPreferences dictionary.
func (_aaefb *PdfWriter )SetCatalogViewerPreferences (pref _ae .PdfObject )error {if pref ==nil {_aaefb ._gefce .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};if _eddaga ,_afeec :=pref .(*_ae .PdfObjectReference );
_afeec {pref =_eddaga .Resolve ();if pref ==nil {_aaefb ._gefce .Remove ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073");return nil ;};};_aaefb .addObject (pref );_aaefb ._gefce .Set ("\u0056\u0069\u0065\u0077\u0065\u0072\u0050\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073",pref );
return nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gcdaf PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_ae .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_aggfd []_ae .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bbbd []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_cgacc :=&PdfOutlineItem {_bgefe :_ae .MakeIndirectObject (_ae .MakeDict ())};_cgacc ._gfbb =_cgacc ;return _cgacc ;};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;

// GetContainingPdfObject implements interface PdfModel.
func (_fbggc *PdfSignature )GetContainingPdfObject ()_ae .PdfObject {return _fbggc ._ddddf };

// GetAction returns the PDF action for the annotation link.
func (_cdg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _cdg ._dfc !=nil {return _cdg ._dfc ,nil ;};if _cdg .A ==nil {return nil ,nil ;};if _cdg ._cfd ==nil {return nil ,nil ;};_cbe ,_cdbc :=_cdg ._cfd .loadAction (_cdg .A );if _cdbc !=nil {return nil ,_cdbc ;
};_cdg ._dfc =_cbe ;return _cdg ._dfc ,nil ;};

// AddCerts adds certificates to DSS.
func (_ccdeg *DSS )AddCerts (certs [][]byte )([]*_ae .PdfObjectStream ,error ){return _ccdeg .add (&_ccdeg .Certs ,_ccdeg ._ccceg ,certs );};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_ggecc *PdfFont )ToPdfObject ()_ae .PdfObject {if _ggecc ._efgfa ==nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _ae .MakeNull ();
};return _ggecc ._efgfa .ToPdfObject ();};

// B returns the value of the B component of the color.
func (_cacb *PdfColorCalRGB )B ()float64 {return _cacb [1]};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ddd .SimpleEncoder ,error ){_fefcc ,_gdbcb :=_gfee (basefont );if _gdbcb !=nil {return nil ,nil ,_gdbcb ;};_cgbba ,_gfdab :=_fefcc .Encoder ().(_ddd .SimpleEncoder );
if !_gfdab {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_fefcc .Encoder ());
};_fccg :=make (map[rune ]_ddd .GlyphName );for _egcbf :=range alphabet {if _ ,_cbce :=_cgbba .RuneToCharcode (_egcbf );!_cbce {_ ,_bedf :=_fefcc ._ffgba .Read (_egcbf );if !_bedf {_fgb .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_egcbf ,_egcbf );
continue ;};_dbfde ,_bedf :=_ddd .RuneToGlyph (_egcbf );if !_bedf {_fgb .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_egcbf ,_egcbf );continue ;};if len (_fccg )>=255{return nil ,nil ,_ed .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_fccg [_egcbf ]=_dbfde ;};};var (_abff []_ddd .CharCode ;_edca []_ddd .CharCode ;);for _daffc :=_ddd .CharCode (1);_daffc <=0xff;_daffc ++{_aafec ,_afgd :=_cgbba .CharcodeToRune (_daffc );if !_afgd {_abff =append (_abff ,_daffc );continue ;};if _ ,_afgd =alphabet [_aafec ];
!_afgd {_edca =append (_edca ,_daffc );};};_ggcg :=append (_abff ,_edca ...);if len (_ggcg )< len (_fccg ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_fccg ),len (_ggcg ));
};_adbf :=make ([]rune ,0,len (_fccg ));for _ebfe :=range _fccg {_adbf =append (_adbf ,_ebfe );};_ee .Slice (_adbf ,func (_bagb ,_fabg int )bool {return _adbf [_bagb ]< _adbf [_fabg ]});_decgb :=make (map[_ddd .CharCode ]_ddd .GlyphName ,len (_adbf ));
for _ ,_gaac :=range _adbf {_edcdd :=_ggcg [0];_ggcg =_ggcg [1:];_decgb [_edcdd ]=_fccg [_gaac ];};_cgbba =_ddd .ApplyDifferences (_cgbba ,_decgb );_fefcc .SetEncoder (_cgbba );return &PdfFont {_efgfa :&_fefcc },_cgbba ,nil ;};

// String implements interface PdfObject.
func (_cf *PdfAction )String ()string {_ebd ,_fb :=_cf .ToPdfObject ().(*_ae .PdfIndirectObject );if _fb {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cf ._aee ,_ebd .PdfObject .String ());};return "";};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eedfa *PdfShadingType2 )ToPdfObject ()_ae .PdfObject {_eedfa .PdfShading .ToPdfObject ();_effef ,_cfaffd :=_eedfa .getShadingDict ();if _cfaffd !=nil {_fgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _effef ==nil {_fgb .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _eedfa .Coords !=nil {_effef .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_eedfa .Coords );
};if _eedfa .Domain !=nil {_effef .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eedfa .Domain );};if _eedfa .Function !=nil {if len (_eedfa .Function )==1{_effef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eedfa .Function [0].ToPdfObject ());
}else {_fcfcb :=_ae .MakeArray ();for _ ,_gbgd :=range _eedfa .Function {_fcfcb .Append (_gbgd .ToPdfObject ());};_effef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcfcb );};};if _eedfa .Extend !=nil {_effef .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_eedfa .Extend );
};return _eedfa ._dgbdcg ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_dgac *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_caea :=range pages {_caea =_caea .Duplicate ();_edbac (_caea );_dgac ._gbgb =append (_dgac ._gbgb ,_caea );};};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_adccea *PdfReader )GetOutlines ()(*Outline ,error ){if _adccea ==nil {return nil ,_ed .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_edgcd :=_adccea .GetOutlineTree ();if _edgcd ==nil {return nil ,_ed .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _cbebf func (_dbcba *PdfOutlineTreeNode ,_faddc *[]*OutlineItem );_cbebf =func (_bbcfg *PdfOutlineTreeNode ,_dfefe *[]*OutlineItem ){if _bbcfg ==nil {return ;};if _bbcfg ._gfbb ==nil {_fgb .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _gbdag *OutlineItem ;if _bafag ,_bfce :=_bbcfg ._gfbb .(*PdfOutlineItem );_bfce {_bbbc :=_bafag .Dest ;if (_bbbc ==nil ||_ae .IsNullObject (_bbbc ))&&_bafag .A !=nil {if _cdgg ,_ccdbge :=_ae .GetDict (_bafag .A );_ccdbge {if _bdbdg ,_addfc :=_ae .GetArray (_cdgg .Get ("\u0044"));
_addfc {_bbbc =_bdbdg ;}else {_ccgebf ,_badb :=_ae .GetString (_cdgg .Get ("\u0044"));if !_badb {return ;};_ffdff ,_badb :=_adccea ._eedde .Get ("\u004e\u0061\u006de\u0073").(*_ae .PdfObjectReference );if !_badb {return ;};_aceaa ,_fgfd :=_adccea ._dgadd .LookupByReference (*_ffdff );
if _fgfd !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_fgfd .Error ());
return ;};_egfad ,_badb :=_aceaa .(*_ae .PdfIndirectObject );if !_badb {return ;};_gfagd :=map[_ae .PdfObject ]struct{}{};_fgfd =_adccea .buildNameNodes (_egfad ,_gfagd );if _fgfd !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_fgfd .Error ());
return ;};for _degad :=range _gfagd {_cbcbd ,_ebgf :=_ae .GetDict (_degad );if !_ebgf {continue ;};_deefa ,_ebgf :=_ae .GetArray (_cbcbd .Get ("\u004e\u0061\u006de\u0073"));if !_ebgf {continue ;};for _abbbf ,_ddgc :=range _deefa .Elements (){switch _ddgc .(type ){case *_ae .PdfObjectString :if _ddgc .String ()==_ccgebf .String (){if _cced :=_deefa .Get (_abbbf +1);
_cced !=nil {if _ffagf ,_bcfbfc :=_ae .GetDict (_cced );_bcfbfc {_bbbc =_ffagf .Get ("\u0044");break ;};};};};};};};};};var _fecd OutlineDest ;if _bbbc !=nil &&!_ae .IsNullObject (_bbbc ){if _fdabg ,_dgaef :=_cbfed (_bbbc ,_adccea );_dgaef ==nil {_fecd =*_fdabg ;
}else {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_bbbc ,_dgaef );
};};_gbdag =NewOutlineItem (_bafag .Title .Decoded (),_fecd );*_dfefe =append (*_dfefe ,_gbdag );if _bafag .Next !=nil {_cbebf (_bafag .Next ,_dfefe );};};if _bbcfg .First !=nil {if _gbdag !=nil {_dfefe =&_gbdag .Entries ;};_cbebf (_bbcfg .First ,_dfefe );
};};_acgd :=NewOutline ();_cbebf (_edgcd ,&_acgd .Entries );return _acgd ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_acfdg *OutlineItem )Insert (index uint ,item *OutlineItem ){_adef :=uint (len (_acfdg .Entries ));if index > _adef {index =_adef ;};_acfdg .Entries =append (_acfdg .Entries [:index ],append ([]*OutlineItem {item },_acfdg .Entries [index :]...)...);
};

// Add appends a top level outline item to the outline.
func (_agadg *Outline )Add (item *OutlineItem ){_agadg .Entries =append (_agadg .Entries ,item )};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_gebb *PdfSignature ,_cdcgc Hasher ,_cddba SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};func _ecgea (_ebeg *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_ebeg }};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_baaa *_ae .PdfIndirectObject ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_fefc :=NewPdfAnnotation ();_agbe :=&PdfAnnotationFileAttachment {};_agbe .PdfAnnotation =_fefc ;_agbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fefc .SetContext (_agbe );return _agbe ;
};

// ToPdfObject implements interface PdfModel.
func (_fbfb *PdfAnnotationProjection )ToPdfObject ()_ae .PdfObject {_fbfb .PdfAnnotation .ToPdfObject ();_cagf :=_fbfb ._gggg ;_eadc :=_cagf .PdfObject .(*_ae .PdfObjectDictionary );_fbfb .PdfAnnotationMarkup .appendToPdfDictionary (_eadc );return _cagf ;
};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_cfeed *PdfPage )AppendContentStream (contentStr string )error {_dgaa ,_agaad :=_cfeed .GetContentStreams ();if _agaad !=nil {return _agaad ;};if len (_dgaa )==0{_dgaa =[]string {contentStr };return _cfeed .SetContentStreams (_dgaa ,_ae .NewFlateEncoder ());
};var _gaecd _fga .Buffer ;_gaecd .WriteString (_dgaa [len (_dgaa )-1]);_gaecd .WriteString ("\u000a");_gaecd .WriteString (contentStr );_dgaa [len (_dgaa )-1]=_gaecd .String ();return _cfeed .SetContentStreams (_dgaa ,_ae .NewFlateEncoder ());};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_fabge *PdfPageResources )GetXObjectImageByName (keyName _ae .PdfObjectName )(*XObjectImage ,error ){_bfgfe ,_aabee :=_fabge .GetXObjectByName (keyName );if _bfgfe ==nil {return nil ,nil ;};if _aabee !=XObjectTypeImage {return nil ,_ed .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_agfff ,_aecdb :=NewXObjectImageFromStream (_bfgfe );if _aecdb !=nil {return nil ,_aecdb ;};return _agfff ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ToPdfObject returns the PDF representation of the page resources.
func (_fbgce *PdfPageResources )ToPdfObject ()_ae .PdfObject {_edcfc :=_fbgce ._beeegd ;_edcfc .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_fbgce .ExtGState );if _fbgce ._gdebb !=nil {_fbgce .ColorSpace =_fbgce ._gdebb .ToPdfObject ();
};_edcfc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fbgce .ColorSpace );_edcfc .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_fbgce .Pattern );_edcfc .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_fbgce .Shading );
_edcfc .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_fbgce .XObject );_edcfc .SetIfNotNil ("\u0046\u006f\u006e\u0074",_fbgce .Font );_edcfc .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_fbgce .ProcSet );_edcfc .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_fbgce .Properties );
return _edcfc ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_ae .PdfObjectInteger ;BitsPerComponent *_ae .PdfObjectInteger ;BitsPerFlag *_ae .PdfObjectInteger ;Decode *_ae .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_cg :=NewPdfAction ();_ebc :=&PdfActionNamed {};_ebc .PdfAction =_cg ;_cg .SetContext (_ebc );return _ebc ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gfggf *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gfggf .RunesToCharcodeBytes ([]rune (str ));};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_bdd :=NewPdfAnnotation ();_ccfc :=&PdfAnnotationPolyLine {};_ccfc .PdfAnnotation =_bdd ;_ccfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdd .SetContext (_ccfc );return _ccfc ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_dcggf *XObjectForm )GetContainingPdfObject ()_ae .PdfObject {return _dcggf ._ffcgb };

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};func _dfed (_ecge *_ae .PdfObjectDictionary )*VRI {_fded ,_ :=_ae .GetString (_ecge .Get ("\u0054\u0055"));_ddafd ,_ :=_ae .GetString (_ecge .Get ("\u0054\u0053"));return &VRI {Cert :_dfaabd (_ecge .Get ("\u0043\u0065\u0072\u0074")),OCSP :_dfaabd (_ecge .Get ("\u004f\u0043\u0053\u0050")),CRL :_dfaabd (_ecge .Get ("\u0043\u0052\u004c")),TU :_fded ,TS :_ddafd };
};

// ToPdfObject converts rectangle to a PDF object.
func (_cgedb *PdfRectangle )ToPdfObject ()_ae .PdfObject {return _ae .MakeArray (_ae .MakeFloat (_cgedb .Llx ),_ae .MakeFloat (_cgedb .Lly ),_ae .MakeFloat (_cgedb .Urx ),_ae .MakeFloat (_cgedb .Ury ));};

// SetOCProperties sets the optional content properties.
func (_cddcd *PdfWriter )SetOCProperties (ocProperties _ae .PdfObject )error {_ccebg :=_cddcd ._gefce ;if ocProperties !=nil {_fgb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_ccebg .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cddcd .addObjects (ocProperties );};return nil ;};

// Val returns the color value.
func (_dbbg *PdfColorDeviceGray )Val ()float64 {return float64 (*_dbbg )};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_deaea :=&PdfFieldSignature {};_deaea .PdfField =NewPdfField ();_deaea .PdfField .SetContext (_deaea );_deaea .PdfAnnotationWidget =NewPdfAnnotationWidget ();_deaea .PdfAnnotationWidget .SetContext (_deaea );
_deaea .PdfAnnotationWidget ._gggg =_deaea .PdfField ._fcfc ;_deaea .T =_ae .MakeString ("");_deaea .F =_ae .MakeInteger (132);_deaea .V =signature ;return _deaea ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func _gbbbf (_cgag _ae .PdfObject )(*PdfColorspaceICCBased ,error ){_gbea :=&PdfColorspaceICCBased {};if _acab ,_fccc :=_cgag .(*_ae .PdfIndirectObject );_fccc {_gbea ._aedgc =_acab ;};_cgag =_ae .TraceToDirectObject (_cgag );
_dbcfga ,_acacf :=_cgag .(*_ae .PdfObjectArray );if !_acacf {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbcfga .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_cgag =_ae .TraceToDirectObject (_dbcfga .Get (0));_ggeb ,_acacf :=_cgag .(*_ae .PdfObjectName );if !_acacf {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ggeb !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_cgag =_dbcfga .Get (1);
_fcgb ,_acacf :=_ae .GetStream (_cgag );if !_acacf {_fgb .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_cgag );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cgabc :=_fcgb .PdfObjectDictionary ;_bdfdc ,_acacf :=_cgabc .Get ("\u004e").(*_ae .PdfObjectInteger );
if !_acacf {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_bdfdc !=1&&*_bdfdc !=3&&*_bdfdc !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_gbea .N =int (*_bdfdc );if _agcb :=_cgabc .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_agcb !=nil {_ebcec ,_bced :=NewPdfColorspaceFromPdfObject (_agcb );if _bced !=nil {return nil ,_bced ;};_gbea .Alternate =_ebcec ;};if _cgabf :=_cgabc .Get ("\u0052\u0061\u006eg\u0065");
_cgabf !=nil {_cgabf =_ae .TraceToDirectObject (_cgabf );_eadg ,_bcef :=_cgabf .(*_ae .PdfObjectArray );if !_bcef {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _eadg .Len ()!=2*_gbea .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_cccb ,_faadd :=_eadg .GetAsFloat64Slice ();if _faadd !=nil {return nil ,_faadd ;};_gbea .Range =_cccb ;}else {_gbea .Range =make ([]float64 ,2*_gbea .N );for _fedd :=0;_fedd < _gbea .N ;_fedd ++{_gbea .Range [2*_fedd ]=0.0;_gbea .Range [2*_fedd +1]=1.0;
};};if _dfde :=_cgabc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dfde !=nil {_ebgd ,_fabe :=_dfde .(*_ae .PdfObjectStream );if !_fabe {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_gbea .Metadata =_ebgd ;};_adae ,_gdae :=_ae .DecodeStream (_fcgb );if _gdae !=nil {return nil ,_gdae ;};_gbea .Data =_adae ;_gbea ._acac =_fcgb ;return _gbea ,nil ;};func (_dggc *PdfWriter )setDocumentIDs (_gcdbg ,_affdd string ){_dggc ._cfaba =_ae .MakeArray (_ae .MakeHexString (_gcdbg ),_ae .MakeHexString (_affdd ));
};func (_adg *PdfReader )newPdfAnnotationFreeTextFromDict (_abc *_ae .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_edce :=PdfAnnotationFreeText {};_afdf ,_baed :=_adg .newPdfAnnotationMarkupFromDict (_abc );if _baed !=nil {return nil ,_baed ;
};_edce .PdfAnnotationMarkup =_afdf ;_edce .DA =_abc .Get ("\u0044\u0041");_edce .Q =_abc .Get ("\u0051");_edce .RC =_abc .Get ("\u0052\u0043");_edce .DS =_abc .Get ("\u0044\u0053");_edce .CL =_abc .Get ("\u0043\u004c");_edce .IT =_abc .Get ("\u0049\u0054");
_edce .BE =_abc .Get ("\u0042\u0045");_edce .RD =_abc .Get ("\u0052\u0044");_edce .BS =_abc .Get ("\u0042\u0053");_edce .LE =_abc .Get ("\u004c\u0045");return &_edce ,nil ;};func (_feg *PdfReader )newPdfActionGoTo3DViewFromDict (_deb *_ae .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_deb .Get ("\u0054\u0041"),V :_deb .Get ("\u0056")},nil ;
};func (_cgf *PdfReader )newPdfAnnotationCircleFromDict (_aec *_ae .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_aae :=PdfAnnotationCircle {};_ddfg ,_deae :=_cgf .newPdfAnnotationMarkupFromDict (_aec );if _deae !=nil {return nil ,_deae ;};_aae .PdfAnnotationMarkup =_ddfg ;
_aae .BS =_aec .Get ("\u0042\u0053");_aae .IC =_aec .Get ("\u0049\u0043");_aae .BE =_aec .Get ("\u0042\u0045");_aae .RD =_aec .Get ("\u0052\u0044");return &_aae ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_dccba *XObjectImage )ToImage ()(*Image ,error ){_gcdcb :=&Image {};if _dccba .Height ==nil {return nil ,_ed .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gcdcb .Height =*_dccba .Height ;if _dccba .Width ==nil {return nil ,_ed .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gcdcb .Width =*_dccba .Width ;if _dccba .BitsPerComponent ==nil {switch _dccba .Filter .(type ){case *_ae .CCITTFaxEncoder ,*_ae .JBIG2Encoder :_gcdcb .BitsPerComponent =1;
case *_ae .LZWEncoder ,*_ae .RunLengthEncoder :_gcdcb .BitsPerComponent =8;default:return nil ,_ed .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_gcdcb .BitsPerComponent =*_dccba .BitsPerComponent ;};_gcdcb .ColorComponents =_dccba .ColorSpace .GetNumComponents ();_dccba ._facff .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ae .MakeInteger (int64 (_gcdcb .ColorComponents )));
_bgace ,_gdgee :=_ae .DecodeStream (_dccba ._facff );if _gdgee !=nil {return nil ,_gdgee ;};_gcdcb .Data =_bgace ;if _dccba .Decode !=nil {_edgdce ,_bfeabd :=_dccba .Decode .(*_ae .PdfObjectArray );if !_bfeabd {_fgb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ed .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_eedge ,_ebfec :=_edgdce .ToFloat64Array ();if _ebfec !=nil {return nil ,_ebfec ;};switch _dccba .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_cgaaa :=_dccba .ColorSpace .DecodeArray ();
if _cgaaa [0]==_eedge [0]&&_cgaaa [1]==_eedge [1]&&_cgaaa [2]==_eedge [2]&&_cgaaa [3]==_eedge [3]{_gcdcb ._dgegd =_eedge ;};default:_gcdcb ._dgegd =_eedge ;};};return _gcdcb ,nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _ae .PdfObject ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_bcac :_ae .MakeIndirectObject (_ae .MakeDict ()),VRI :map[string ]*VRI {}};};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_dccfc *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_gbbgf :=_dccfc .fill (provider ,appGen );if _gbbgf !=nil {return _gbbgf ;};if _ ,_gaeg :=provider .(FieldImageProvider );_gaeg {_gbbgf =_dccfc .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _gbbgf ;};

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_cadea *PdfPageResources )SetXObjectImageByNameLazy (keyName _ae .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_cabf :=ximg .ToPdfObject ().(*_ae .PdfObjectStream );if lazy {_cabf .MakeLazy ();};_dgfbg :=_cadea .SetXObjectByName (keyName ,_cabf );
return _dgfbg ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_dfe :=NewPdfAnnotation ();_gfa :=&PdfAnnotationFreeText {};_gfa .PdfAnnotation =_dfe ;_gfa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfe .SetContext (_gfa );return _gfa ;};

// M returns the value of the magenta component of the color.
func (_fgef *PdfColorDeviceCMYK )M ()float64 {return _fgef [1]};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_agca *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfagc ,_cbba :=_ae .GetNumbersAsFloat (objects );
if _cbba !=nil {return nil ,_cbba ;};return _agca .ColorFromFloats (_gfagc );};

// SetContext sets the sub action (context).
func (_fd *PdfAction )SetContext (ctx PdfModel ){_fd ._aee =ctx };

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _ae .PdfObject )(*PdfOutputIntent ,error ){_aggda :=&PdfOutputIntent {};if _ggbf :=_aggda .ParsePdfObject (object );_ggbf !=nil {return nil ,_ggbf ;};return _aggda ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_ceccb FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_ceccb .Mask ()&^fl .Mask ())};func _feeeag (_efcdg string )(string ,error ){var _cfdd _fga .Buffer ;_cfdd .WriteString (_efcdg );_gffcg :=make ([]byte ,8+16);_efcbg :=_db .Now ().UTC ().UnixNano ();
_dg .BigEndian .PutUint64 (_gffcg ,uint64 (_efcbg ));_ ,_ecacc :=_fg .Read (_gffcg [8:]);if _ecacc !=nil {return "",_ecacc ;};_cfdd .WriteString (_cac .EncodeToString (_gffcg ));return _cfdd .String (),nil ;};func _dcbac (_bffb _ae .PdfObject )(*PdfBorderStyle ,error ){_gagg :=&PdfBorderStyle {};
_gagg ._gfge =_bffb ;var _dcbbb *_ae .PdfObjectDictionary ;_bffb =_ae .TraceToDirectObject (_bffb );_dcbbb ,_cfa :=_bffb .(*_ae .PdfObjectDictionary );if !_cfa {return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _cbca :=_dcbbb .Get ("\u0054\u0079\u0070\u0065");
_cbca !=nil {_bffbc ,_fbab :=_cbca .(*_ae .PdfObjectName );if !_fbab {_fgb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_cbca );
}else {if *_bffbc !="\u0042\u006f\u0072\u0064\u0065\u0072"{_fgb .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bffbc );};};};if _ebge :=_dcbbb .Get ("\u0057");
_ebge !=nil {_faag ,_gbfb :=_ae .GetNumberAsFloat (_ebge );if _gbfb !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gbfb );return nil ,_gbfb ;};_gagg .W =&_faag ;
};if _bdba :=_dcbbb .Get ("\u0053");_bdba !=nil {_ccc ,_bcag :=_bdba .(*_ae .PdfObjectName );if !_bcag {return nil ,_ed .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dgbc BorderStyle ;switch *_ccc {case "\u0053":_dgbc =BorderStyleSolid ;case "\u0044":_dgbc =BorderStyleDashed ;case "\u0042":_dgbc =BorderStyleBeveled ;case "\u0049":_dgbc =BorderStyleInset ;case "\u0055":_dgbc =BorderStyleUnderline ;default:_fgb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ccc );
return nil ,_ed .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_gagg .S =&_dgbc ;};if _feab :=_dcbbb .Get ("\u0044");_feab !=nil {_fbce ,_ade :=_feab .(*_ae .PdfObjectArray );
if !_ade {_fgb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_feab );return nil ,_ed .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_gdee ,_dcde :=_fbce .ToIntegerArray ();if _dcde !=nil {_fgb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dcde );
return nil ,_dcde ;};_gagg .D =&_gdee ;};return _gagg ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _ae .PdfObject ;FS _ae .PdfObject ;F _ae .PdfObject ;UF _ae .PdfObject ;DOS _ae .PdfObject ;Mac _ae .PdfObject ;Unix _ae .PdfObject ;ID _ae .PdfObject ;V _ae .PdfObject ;EF _ae .PdfObject ;RF _ae .PdfObject ;Desc _ae .PdfObject ;
CI _ae .PdfObject ;AFRelationship _ae .PdfObject ;_acaa _ae .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cb *PdfActionHide )ToPdfObject ()_ae .PdfObject {_cb .PdfAction .ToPdfObject ();_fafd :=_cb ._bac ;_bae :=_fafd .PdfObject .(*_ae .PdfObjectDictionary );_bae .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeHide )));_bae .SetIfNotNil ("\u0054",_cb .T );
_bae .SetIfNotNil ("\u0048",_cb .H );return _fafd ;};func (_cecff *PdfReader )newPdfSignatureFromIndirect (_ffdbc *_ae .PdfIndirectObject )(*PdfSignature ,error ){_ebgfd ,_bgcfa :=_ffdbc .PdfObject .(*_ae .PdfObjectDictionary );if !_bgcfa {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _ecbce ,_abfeaf :=_cecff ._cffgf .GetModelFromPrimitive (_ffdbc ).(*PdfSignature );_abfeaf {return _ecbce ,nil ;};_cgceb :=&PdfSignature {};_cgceb ._ddddf =_ffdbc ;_cgceb .Type ,_ =_ae .GetName (_ebgfd .Get ("\u0054\u0079\u0070\u0065"));
_cgceb .Filter ,_bgcfa =_ae .GetName (_ebgfd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_bgcfa {_fgb .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cgceb .SubFilter ,_ =_ae .GetName (_ebgfd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_cgceb .Contents ,_bgcfa =_ae .GetString (_ebgfd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_bgcfa {_fgb .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _cbfba ,_ggbc :=_ae .GetArray (_ebgfd .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_ggbc {_cgceb .Reference =_ae .MakeArray ();for _ ,_aefcda :=range _cbfba .Elements (){_cbdgb ,_cefgfe :=_ae .GetDict (_aefcda );
if !_cefgfe {_fgb .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_fbdfe ,_ffadd :=_cecff .newPdfSignatureReferenceFromDict (_cbdgb );if _ffadd !=nil {return nil ,_ffadd ;};_cgceb .Reference .Append (_fbdfe .ToPdfObject ());};};_cgceb .Cert =_ebgfd .Get ("\u0043\u0065\u0072\u0074");_cgceb .ByteRange ,_ =_ae .GetArray (_ebgfd .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_cgceb .Changes ,_ =_ae .GetArray (_ebgfd .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_cgceb .Name ,_ =_ae .GetString (_ebgfd .Get ("\u004e\u0061\u006d\u0065"));_cgceb .M ,_ =_ae .GetString (_ebgfd .Get ("\u004d"));_cgceb .Location ,_ =_ae .GetString (_ebgfd .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_cgceb .Reason ,_ =_ae .GetString (_ebgfd .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_cgceb .ContactInfo ,_ =_ae .GetString (_ebgfd .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_cgceb .R ,_ =_ae .GetInt (_ebgfd .Get ("\u0052"));
_cgceb .V ,_ =_ae .GetInt (_ebgfd .Get ("\u0056"));_cgceb .PropBuild ,_ =_ae .GetDict (_ebgfd .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_cgceb .PropAuthTime ,_ =_ae .GetInt (_ebgfd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_cgceb .PropAuthType ,_ =_ae .GetName (_ebgfd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_cecff ._cffgf .Register (_ffdbc ,_cgceb );return _cgceb ,nil ;};func (_aafee *PdfWriter )copyObject (_gcadd _ae .PdfObject ,_beedbd map[_ae .PdfObject ]_ae .PdfObject ,_edabg map[_ae .PdfObject ]struct{},_fbbgb bool )_ae .PdfObject {_gbbfe :=!_aafee ._edcfb &&_edabg !=nil ;
if _gdcaf ,_gcege :=_beedbd [_gcadd ];_gcege {if _gbbfe &&!_fbbgb {delete (_edabg ,_gcadd );};return _gdcaf ;};if _gcadd ==nil {_fbega :=_ae .MakeNull ();return _fbega ;};_fbbgbf :=_gcadd ;switch _debbc :=_gcadd .(type ){case *_ae .PdfObjectArray :_dfdd :=_ae .MakeArray ();
_fbbgbf =_dfdd ;_beedbd [_gcadd ]=_fbbgbf ;for _ ,_aeddb :=range _debbc .Elements (){_dfdd .Append (_aafee .copyObject (_aeddb ,_beedbd ,_edabg ,_fbbgb ));};case *_ae .PdfObjectStreams :_ddddc :=&_ae .PdfObjectStreams {PdfObjectReference :_debbc .PdfObjectReference };
_fbbgbf =_ddddc ;_beedbd [_gcadd ]=_fbbgbf ;for _ ,_aaggbc :=range _debbc .Elements (){_ddddc .Append (_aafee .copyObject (_aaggbc ,_beedbd ,_edabg ,_fbbgb ));};case *_ae .PdfObjectStream :_fabdgg :=&_ae .PdfObjectStream {Stream :_debbc .Stream ,PdfObjectReference :_debbc .PdfObjectReference ,Lazy :_debbc .Lazy ,TempFile :_debbc .TempFile };
_fbbgbf =_fabdgg ;_beedbd [_gcadd ]=_fbbgbf ;_fabdgg .PdfObjectDictionary =_aafee .copyObject (_debbc .PdfObjectDictionary ,_beedbd ,_edabg ,_fbbgb ).(*_ae .PdfObjectDictionary );case *_ae .PdfObjectDictionary :var _aafb bool ;if _gbbfe &&!_fbbgb {if _cgfbe ,_ :=_ae .GetNameVal (_debbc .Get ("\u0054\u0079\u0070\u0065"));
_cgfbe =="\u0050\u0061\u0067\u0065"{_ ,_bcbbg :=_aafee ._bebb [_debbc ];_fbbgb =!_bcbbg ;_aafb =_fbbgb ;};};_edacd :=_ae .MakeDict ();_fbbgbf =_edacd ;_beedbd [_gcadd ]=_fbbgbf ;for _ ,_aedgca :=range _debbc .Keys (){_edacd .Set (_aedgca ,_aafee .copyObject (_debbc .Get (_aedgca ),_beedbd ,_edabg ,_fbbgb ));
};if _aafb {_fbbgbf =_ae .MakeNull ();_fbbgb =false ;};case *_ae .PdfIndirectObject :_fdeg :=&_ae .PdfIndirectObject {PdfObjectReference :_debbc .PdfObjectReference };_fbbgbf =_fdeg ;_beedbd [_gcadd ]=_fbbgbf ;_fdeg .PdfObject =_aafee .copyObject (_debbc .PdfObject ,_beedbd ,_edabg ,_fbbgb );
case *_ae .PdfObjectString :_cffff :=*_debbc ;_fbbgbf =&_cffff ;_beedbd [_gcadd ]=_fbbgbf ;case *_ae .PdfObjectName :_fbacc :=*_debbc ;_fbbgbf =&_fbacc ;_beedbd [_gcadd ]=_fbbgbf ;case *_ae .PdfObjectNull :_fbbgbf =_ae .MakeNull ();_beedbd [_gcadd ]=_fbbgbf ;
case *_ae .PdfObjectInteger :_eacga :=*_debbc ;_fbbgbf =&_eacga ;_beedbd [_gcadd ]=_fbbgbf ;case *_ae .PdfObjectReference :_edaca :=*_debbc ;_fbbgbf =&_edaca ;_beedbd [_gcadd ]=_fbbgbf ;case *_ae .PdfObjectFloat :_bbffd :=*_debbc ;_fbbgbf =&_bbffd ;_beedbd [_gcadd ]=_fbbgbf ;
case *_ae .PdfObjectBool :_ffdbf :=*_debbc ;_fbbgbf =&_ffdbf ;_beedbd [_gcadd ]=_fbbgbf ;case *pdfSignDictionary :_faaed :=&pdfSignDictionary {PdfObjectDictionary :_ae .MakeDict (),_gfggb :_debbc ._gfggb ,_fcagc :_debbc ._fcagc };_fbbgbf =_faaed ;_beedbd [_gcadd ]=_fbbgbf ;
for _ ,_edegb :=range _debbc .Keys (){_faaed .Set (_edegb ,_aafee .copyObject (_debbc .Get (_edegb ),_beedbd ,_edabg ,_fbbgb ));};default:_fgb .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gcadd );
};if _gbbfe &&_fbbgb {_edabg [_gcadd ]=struct{}{};};return _fbbgbf ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_ae .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_gcba *_ae .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_cbeed *Permissions )ToPdfObject ()_ae .PdfObject {return _cbeed ._gegdb };func (_cbee *LTV )validateSig (_eaae *PdfSignature )error {if _eaae ==nil ||_eaae .Contents ==nil ||len (_eaae .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_eaae );
};return nil ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_ae .PdfObjectArray ;ExtGState _ae .PdfObject ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_geb *PdfAnnotationWidget )Field ()*PdfField {return _geb ._gaf };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fgfe *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdcfd ,_ffeef :=_ae .GetNumbersAsFloat (objects );
if _ffeef !=nil {return nil ,_ffeef ;};return _fgfe .ColorFromFloats (_gdcfd );};func (_cedd *PdfReader )newPdfAnnotationProjectionFromDict (_fdbd *_ae .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_afcg :=&PdfAnnotationProjection {};_baef ,_bcf :=_cedd .newPdfAnnotationMarkupFromDict (_fdbd );
if _bcf !=nil {return nil ,_bcf ;};_afcg .PdfAnnotationMarkup =_baef ;return _afcg ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_fddbc DefaultImageHandler )NewGrayImageFromGoImage (goimg _da .Image )(*Image ,error ){_cdecb :=goimg .Bounds ();_cacff :=&Image {Width :int64 (_cdecb .Dx ()),Height :int64 (_cdecb .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _bcagc :=goimg .(type ){case *_da .Gray :if len (_bcagc .Pix )!=_cdecb .Dx ()*_cdecb .Dy (){_gcgf ,_dbgggf :=_fae .GrayConverter .Convert (goimg );
if _dbgggf !=nil {return nil ,_dbgggf ;};_cacff .Data =_gcgf .Pix ();}else {_cacff .Data =_bcagc .Pix ;};case *_da .Gray16 :_cacff .BitsPerComponent =16;if len (_bcagc .Pix )!=_cdecb .Dx ()*_cdecb .Dy ()*2{_dagfaf ,_dced :=_fae .Gray16Converter .Convert (goimg );
if _dced !=nil {return nil ,_dced ;};_cacff .Data =_dagfaf .Pix ();}else {_cacff .Data =_bcagc .Pix ;};case _fae .Image :_cdbgc :=_bcagc .Base ();if _cdbgc .ColorComponents ==1{_cacff .BitsPerComponent =int64 (_cdbgc .BitsPerComponent );_cacff .Data =_cdbgc .Data ;
return _cacff ,nil ;};_edcce ,_adcce :=_fae .GrayConverter .Convert (goimg );if _adcce !=nil {return nil ,_adcce ;};_cacff .Data =_edcce .Pix ();default:_edae ,_gcdad :=_fae .GrayConverter .Convert (goimg );if _gcdad !=nil {return nil ,_gcdad ;};_cacff .Data =_edae .Pix ();
};return _cacff ,nil ;};func _eaaa (_fgcdd map[_dde .GID ]int ,_dbab uint16 )*_ae .PdfObjectArray {_agba :=&_ae .PdfObjectArray {};_fcebc :=_dde .GID (_dbab );for _accce :=_dde .GID (0);_accce < _fcebc ;{_edagb ,_fbfc :=_fgcdd [_accce ];if !_fbfc {_accce ++;
continue ;};_fffg :=_accce ;for _cfcd :=_fffg +1;_cfcd < _fcebc ;_cfcd ++{if _degdf ,_eeaac :=_fgcdd [_cfcd ];!_eeaac ||_edagb !=_degdf {break ;};_fffg =_cfcd ;};_agba .Append (_ae .MakeInteger (int64 (_accce )));_agba .Append (_ae .MakeInteger (int64 (_fffg )));
_agba .Append (_ae .MakeInteger (int64 (_edagb )));_accce =_fffg +1;};return _agba ;};func _bcgbg (_cbcb _ae .PdfObject )(PdfFunction ,error ){_cbcb =_ae .ResolveReference (_cbcb );if _efdge ,_egfdc :=_cbcb .(*_ae .PdfObjectStream );_egfdc {_acfb :=_efdge .PdfObjectDictionary ;
_bccac ,_cgcde :=_acfb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ae .PdfObjectInteger );if !_cgcde {_fgb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bccac ==0{return _aabdg (_efdge );}else if *_bccac ==4{return _fcffa (_efdge );
}else {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dcaba ,_dbaa :=_cbcb .(*_ae .PdfIndirectObject );_dbaa {_febaf ,_cffga :=_dcaba .PdfObject .(*_ae .PdfObjectDictionary );
if !_cffga {_fgb .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_feac ,_cffga :=_febaf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ae .PdfObjectInteger );
if !_cffga {_fgb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_feac ==2{return _eabed (_dcaba );}else if *_feac ==3{return _adbbc (_dcaba );}else {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _beef ,_egca :=_cbcb .(*_ae .PdfObjectDictionary );
_egca {_gbgae ,_fbca :=_beef .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ae .PdfObjectInteger );if !_fbca {_fgb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gbgae ==2{return _eabed (_beef );}else if *_gbgae ==3{return _adbbc (_beef );
}else {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_fgb .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_cbcb );
return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fag :=&PdfAction {};_fag ._bac =_ae .MakeIndirectObject (_ae .MakeDict ());return _fag ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_cea :=NewPdfAnnotation ();_gef :=&PdfAnnotationCircle {};_gef .PdfAnnotation =_cea ;_gef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cea .SetContext (_gef );return _gef ;};func (_edeag *PdfAppender )replaceObject (_beaef ,_bbfe _ae .PdfObject ){switch _bcdb :=_beaef .(type ){case *_ae .PdfIndirectObject :_edeag ._beeca [_bbfe ]=_bcdb .ObjectNumber ;
case *_ae .PdfObjectStream :_edeag ._beeca [_bbfe ]=_bcdb .ObjectNumber ;};};func _affea (_abecg *_ae .PdfObjectDictionary )(*PdfShadingPattern ,error ){_baddb :=&PdfShadingPattern {};_caefc :=_abecg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _caefc ==nil {_fgb .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cadda ,_gdab :=_gdgcd (_caefc );if _gdab !=nil {_fgb .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_gdab );return nil ,_gdab ;
};_baddb .Shading =_cadda ;if _cbgdg :=_abecg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cbgdg !=nil {_gfgdf ,_aegdf :=_cbgdg .(*_ae .PdfObjectArray );if !_aegdf {_fgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbgdg );
return nil ,_ae .ErrTypeError ;};_baddb .Matrix =_gfgdf ;};if _cbdbb :=_abecg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cbdbb !=nil {_baddb .ExtGState =_cbdbb ;};return _baddb ,nil ;};func (_dece *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_ea :=NewPdfAction ();_cc :=&PdfActionSetOCGState {};_cc .PdfAction =_ea ;_ea .SetContext (_cc );return _cc ;};func (_ccbad *PdfReader )traverseObjectData (_aaaee _ae .PdfObject )error {return _ae .ResolveReferencesDeep (_aaaee ,_ccbad ._ccfad );
};func (_cfdge *PdfWriter )flushWriter ()error {if _cfdge ._begbb ==nil {_cfdge ._begbb =_cfdge ._abcf .Flush ();};return _cfdge ._begbb ;};

// StdFontName represents name of a standard font.
type StdFontName =_dde .StdFontName ;

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_ae .PdfObjectDictionary )(*PdfPageResources ,error ){_ffad :=NewPdfPageResources ();if _cgaga :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cgaga !=nil {_ffad .ExtGState =_cgaga ;};if _gfbe :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_gfbe !=nil &&!_ae .IsNullObject (_gfbe ){_ffad .ColorSpace =_gfbe ;};if _cbedd :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_cbedd !=nil {_ffad .Pattern =_cbedd ;};if _bcggf :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_bcggf !=nil {_ffad .Shading =_bcggf ;
};if _fcaad :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_fcaad !=nil {_ffad .XObject =_fcaad ;};if _fefde :=_ae .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fefde !=nil {_ffad .Font =_fefde ;};if _ddcae :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_ddcae !=nil {_ffad .ProcSet =_ddcae ;};if _cbgeg :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cbgeg !=nil {_ffad .Properties =_cbgeg ;};return _ffad ,nil ;};func (_caegf *PdfWriter )setHashIDs (_bafdd _d .Hash )error {_cgbg :=_bafdd .Sum (nil );
if _caegf ._bbaae ==""{_caegf ._bbaae =_cac .EncodeToString (_cgbg [:8]);};_caegf .setDocumentIDs (_caegf ._bbaae ,_cac .EncodeToString (_cgbg [8:]));return nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _ae .StreamEncoder ;FormType _ae .PdfObject ;BBox _ae .PdfObject ;Matrix _ae .PdfObject ;Resources *PdfPageResources ;Group _ae .PdfObject ;Ref _ae .PdfObject ;MetaData _ae .PdfObject ;PieceInfo _ae .PdfObject ;LastModified _ae .PdfObject ;
StructParent _ae .PdfObject ;StructParents _ae .PdfObject ;OPI _ae .PdfObject ;OC _ae .PdfObject ;Name _ae .PdfObject ;

// Stream data.
Stream []byte ;_ffcgb *_ae .PdfObjectStream ;};

// C returns the value of the cyan component of the color.
func (_acbde *PdfColorDeviceCMYK )C ()float64 {return _acbde [0]};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _ae .PdfObject ;T3DV _ae .PdfObject ;T3DA _ae .PdfObject ;T3DI _ae .PdfObject ;T3DB _ae .PdfObject ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_egbea *PdfPageResources )SetShadingByName (keyName _ae .PdfObjectName ,shadingObj _ae .PdfObject )error {if _egbea .Shading ==nil {_egbea .Shading =_ae .MakeDict ();};_abebd ,_adgee :=_ae .GetDict (_egbea .Shading );if !_adgee {return _ae .ErrTypeError ;
};_abebd .Set (keyName ,shadingObj );return nil ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _dga .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_ae .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_ae .MakeInteger (int64 (permission )),V :_ae .MakeName ("\u0031\u002e\u0032")};
};func (_bdfaa *PdfWriter )adjustXRefAffectedVersion (_efdde bool ){if _efdde &&_bdfaa ._beabf .Major ==1&&_bdfaa ._beabf .Minor < 5{_bdfaa ._beabf .Minor =5;};};type pdfFont interface{_dde .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_ae .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_febc *PdfPageResources )SetColorspaceByName (keyName _ae .PdfObjectName ,cs PdfColorspace )error {_cegge ,_gfbad :=_febc .GetColorspaces ();if _gfbad !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gfbad );
return _gfbad ;};if _cegge ==nil {_cegge =NewPdfPageResourcesColorspaces ();_febc .SetColorSpace (_cegge );};_cegge .Set (keyName ,cs );return nil ;};type pdfFontType0 struct{fontCommon ;_daecc *_ae .PdfIndirectObject ;_abgde _ddd .TextEncoder ;Encoding _ae .PdfObject ;
DescendantFont *PdfFont ;_dbfa *_fe .CMap ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ceaac *PdfShading )ToPdfObject ()_ae .PdfObject {_deabc :=_ceaac ._dgbdcg ;_cffb ,_fdac :=_ceaac .getShadingDict ();if _fdac !=nil {_fgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ceaac .ShadingType !=nil {_cffb .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_ceaac .ShadingType );};if _ceaac .ColorSpace !=nil {_cffb .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ceaac .ColorSpace .ToPdfObject ());
};if _ceaac .Background !=nil {_cffb .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_ceaac .Background );};if _ceaac .BBox !=nil {_cffb .Set ("\u0042\u0042\u006f\u0078",_ceaac .BBox .ToPdfObject ());};if _ceaac .AntiAlias !=nil {_cffb .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_ceaac .AntiAlias );
};return _deabc ;};

// AddFont adds a font dictionary to the Font resources.
func (_afbfa *PdfPage )AddFont (name _ae .PdfObjectName ,font _ae .PdfObject )error {if _afbfa .Resources ==nil {_afbfa .Resources =NewPdfPageResources ();};if _afbfa .Resources .Font ==nil {_afbfa .Resources .Font =_ae .MakeDict ();};_cbfgg ,_abcee :=_ae .TraceToDirectObject (_afbfa .Resources .Font ).(*_ae .PdfObjectDictionary );
if !_abcee {_fgb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_ae .TraceToDirectObject (_afbfa .Resources .Font ));
return _ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbfgg .Set (name ,font );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_eee *PdfActionJavaScript )ToPdfObject ()_ae .PdfObject {_eee .PdfAction .ToPdfObject ();_dbd :=_eee ._bac ;_gba :=_dbd .PdfObject .(*_ae .PdfObjectDictionary );_gba .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeJavaScript )));_gba .SetIfNotNil ("\u004a\u0053",_eee .JS );
return _dbd ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_acabbb *_ae .PdfIndirectObject ;_bdcg *_ae .PdfIndirectObject ;_bebb map[_ae .PdfObject ]struct{};_eabcbc []_ae .PdfObject ;_dgefc map[_ae .PdfObject ]struct{};_eagfe []*_ae .PdfIndirectObject ;_bdggf *PdfOutlineTreeNode ;_gefce *_ae .PdfObjectDictionary ;
_eaggfga []_ae .PdfObject ;_efeee *_ae .PdfIndirectObject ;_abcf *_a .Writer ;_caddb int64 ;_begbb error ;_acgbb *_ae .PdfCrypt ;_baca *_ae .PdfObjectDictionary ;_bebbc *_ae .PdfIndirectObject ;_cfaba *_ae .PdfObjectArray ;_beabf _ae .Version ;_fggff *bool ;
_agacb map[_ae .PdfObject ][]*_ae .PdfObjectDictionary ;_ggce *PdfAcroForm ;_ddceg *Names ;_dacde Optimizer ;_ddegg StandardApplier ;_eddaf map[int ]crossReference ;_gege int64 ;ObjNumOffset int ;_edcfb bool ;_edge _ae .XrefTable ;_gcgee int64 ;_aagd int64 ;
_cddea map[_ae .PdfObject ]int64 ;_abbac map[_ae .PdfObject ]struct{};_abdcb string ;_gecgg string ;_gddfg []*PdfOutputIntent ;_eaggcb bool ;_bbaae ,_aacg string ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_bggcf *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _bggcf .MediaBox !=nil {return _bggcf .MediaBox ,nil ;};_bggcdd :=_bggcf .Parent ;for _bggcdd !=nil {_eecab ,_fgbeb :=_ae .GetDict (_bggcdd );if !_fgbeb {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _gffdd :=_eecab .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_gffdd !=nil {_cdadd ,_dfcdf :=_ae .GetArray (_gffdd );if !_dfcdf {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_bbca ,_fbda :=NewPdfRectangle (*_cdadd );if _fbda !=nil {return nil ,_fbda ;};return _bbca ,nil ;};_bggcdd =_eecab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ed .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_adac ,_gffac :=_bf .ParsePdfTime (dateStr );if _gffac !=nil {return PdfDate {},_gffac ;};return NewPdfDateFromTime (_adac );};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_fafbf *PdfPageResources )HasFontByName (keyName _ae .PdfObjectName )bool {_ ,_feaea :=_fafbf .GetFontByName (keyName );return _feaea ;};func (_bccbg *PdfSignature )extractChainFromPKCS7 ()([]*_ddc .Certificate ,error ){_bcga ,_baegd :=_ec .Parse (_bccbg .Contents .Bytes ());
if _baegd !=nil {return nil ,_baegd ;};return _bcga .Certificates ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_becb *PdfAnnotationPrinterMark )ToPdfObject ()_ae .PdfObject {_becb .PdfAnnotation .ToPdfObject ();_ccgg :=_becb ._gggg ;_ebacg :=_ccgg .PdfObject .(*_ae .PdfObjectDictionary );_ebacg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_ebacg .SetIfNotNil ("\u004d\u004e",_becb .MN );return _ccgg ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_beecc :=&PdfColorspaceLab {};_beecc .BlackPoint =[]float64 {0.0,0.0,0.0};_beecc .Range =[]float64 {-100,100,-100,100};return _beecc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bbfa *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggga ,_ecbe :=_ae .GetNumbersAsFloat (objects );
if _ecbe !=nil {return nil ,_ecbe ;};return _bbfa .ColorFromFloats (_ggga );};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_ae .PdfObjectBool ;SigFlags *_ae .PdfObjectInteger ;CO *_ae .PdfObjectArray ;DR *PdfPageResources ;DA *_ae .PdfObjectString ;Q *_ae .PdfObjectInteger ;XFA _ae .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _ae .PdfObject ;_egefe *_ae .PdfIndirectObject ;_afega bool ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_bgaa *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func _egfgb (_eadede *XObjectImage )error {if _eadede .SMask ==nil {return nil ;};_ceeed ,_ccccf :=_eadede .SMask .(*_ae .PdfObjectStream );if !_ccccf {_fgb .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _ae .ErrTypeError ;};_dggec :=_ceeed .PdfObjectDictionary ;_cdgfe :=_dggec .Get ("\u004d\u0061\u0074t\u0065");if _cdgfe ==nil {return nil ;};_dagecg ,_ecgee :=_bgfdg (_cdgfe .(*_ae .PdfObjectArray ));if _ecgee !=nil {return _ecgee ;};_cgfg :=_ae .MakeArrayFromFloats ([]float64 {_dagecg });
_dggec .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_cgfg );return nil ;};

// Val returns the value of the color.
func (_cefg *PdfColorCalGray )Val ()float64 {return float64 (*_cefg )};

// Initialize initializes the PdfSignature.
func (_dagec *PdfSignature )Initialize ()error {if _dagec .Handler ==nil {return _ed .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _dagec .Handler .InitSignature (_dagec );};func (_dggdf *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _dggdf ._cdge };

// MergePageWith appends page content to source Pdf file page content.
func (_fcfg *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_cff :=pageNum -1;var _gdc *PdfPage ;for _dabe ,_ddbb :=range _fcfg ._gbgb {if _dabe ==_cff {_gdc =_ddbb ;};};if _gdc ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _gdc ._dfgbfb !=nil &&_gdc ._dfgbfb .GetParser ()==_fcfg ._bdac ._dgadd {_gdc =_gdc .Duplicate ();_fcfg ._gbgb [_cff ]=_gdc ;};page =page .Duplicate ();_edbac (page );_gbad :=_bcff (_gdc );_gcbb :=_bcff (page );_bdbe :=make (map[_ae .PdfObjectName ]_ae .PdfObjectName );
for _dbbf :=range _gcbb {if _ ,_adga :=_gbad [_dbbf ];_adga {for _dda :=1;true ;_dda ++{_egaa :=_ae .PdfObjectName (string (_dbbf )+_gd .Itoa (_dda ));if _ ,_cab :=_gbad [_egaa ];!_cab {_bdbe [_dbbf ]=_egaa ;break ;};};};};_abgcf ,_eedd :=page .GetContentStreams ();
if _eedd !=nil {return _eedd ;};_bcdc ,_eedd :=_gdc .GetContentStreams ();if _eedd !=nil {return _eedd ;};for _gbda ,_gcfg :=range _abgcf {for _gcbbc ,_dafbd :=range _bdbe {_gcfg =_ga .Replace (_gcfg ,"\u002f"+string (_gcbbc ),"\u002f"+string (_dafbd ),-1);
};_abgcf [_gbda ]=_gcfg ;};_bcdc =append (_bcdc ,_abgcf ...);if _aefe :=_gdc .SetContentStreams (_bcdc ,_ae .NewFlateEncoder ());_aefe !=nil {return _aefe ;};_gdc ._gacdb =append (_gdc ._gacdb ,page ._gacdb ...);if _gdc .Resources ==nil {_gdc .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_gdc .Resources .Font =_fcfg .mergeResources (_gdc .Resources .Font ,page .Resources .Font ,_bdbe );_gdc .Resources .XObject =_fcfg .mergeResources (_gdc .Resources .XObject ,page .Resources .XObject ,_bdbe );_gdc .Resources .Properties =_fcfg .mergeResources (_gdc .Resources .Properties ,page .Resources .Properties ,_bdbe );
if _gdc .Resources .ProcSet ==nil {_gdc .Resources .ProcSet =page .Resources .ProcSet ;};_gdc .Resources .Shading =_fcfg .mergeResources (_gdc .Resources .Shading ,page .Resources .Shading ,_bdbe );_gdc .Resources .ExtGState =_fcfg .mergeResources (_gdc .Resources .ExtGState ,page .Resources .ExtGState ,_bdbe );
};_bbce ,_eedd :=_gdc .GetMediaBox ();if _eedd !=nil {return _eedd ;};_bgde ,_eedd :=page .GetMediaBox ();if _eedd !=nil {return _eedd ;};var _gebg bool ;if _bbce .Llx > _bgde .Llx {_bbce .Llx =_bgde .Llx ;_gebg =true ;};if _bbce .Lly > _bgde .Lly {_bbce .Lly =_bgde .Lly ;
_gebg =true ;};if _bbce .Urx < _bgde .Urx {_bbce .Urx =_bgde .Urx ;_gebg =true ;};if _bbce .Ury < _bgde .Ury {_bbce .Ury =_bgde .Ury ;_gebg =true ;};if _gebg {_gdc .MediaBox =_bbce ;};return nil ;};

// SetBorderWidth sets the style's border width.
func (_afdg *PdfBorderStyle )SetBorderWidth (width float64 ){_afdg .W =&width };func (_bfed *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func _deffd (_bdcc *[]*PdfField ,_cdce FieldFilterFunc ,_fbefd bool )[]*PdfField {if _bdcc ==nil {return nil ;
};_gbaad :=*_bdcc ;if len (*_bdcc )==0{return nil ;};_gbebg :=_gbaad [:0];if _cdce ==nil {_cdce =func (*PdfField )bool {return true };};var _eadcc []*PdfField ;for _ ,_eecf :=range _gbaad {_dgcfc :=_cdce (_eecf );if _dgcfc {_eadcc =append (_eadcc ,_eecf );
if len (_eecf .Kids )> 0{_eadcc =append (_eadcc ,_deffd (&_eecf .Kids ,_cdce ,_fbefd )...);};};if !_fbefd ||!_dgcfc ||len (_eecf .Kids )> 0{_gbebg =append (_gbebg ,_eecf );};};*_bdcc =_gbebg ;return _eadcc ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cddec *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fgb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ed .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _db .Time )(PdfDate ,error ){_bgdd :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_fadac ,_ :=_gd .ParseInt (_bgdd [1:3],10,32);_ddaag ,_ :=_gd .ParseInt (_bgdd [4:6],10,32);return PdfDate {_ebdcc :int64 (timeObj .Year ()),_cbebe :int64 (timeObj .Month ()),_dfdf :int64 (timeObj .Day ()),_adeac :int64 (timeObj .Hour ()),_faeeb :int64 (timeObj .Minute ()),_accdd :int64 (timeObj .Second ()),_begc :_bgdd [0],_agfdd :_fadac ,_adbce :_ddaag },nil ;
};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_efabg *PdfPattern )GetContext ()PdfModel {return _efabg ._adgf };

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;var _cacdc =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// A returns the value of the A component of the color.
func (_cgg *PdfColorLab )A ()float64 {return _cgg [1]};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_bdceb *PdfPageResources )GenerateXObjectName ()_ae .PdfObjectName {_fcfbe :=1;for {_ccede :=_ae .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_fcfbe ));if !_bdceb .HasXObjectByName (*_ccede ){return *_ccede ;};_fcfbe ++;};};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _ae .PdfObject ;Mac _ae .PdfObject ;Unix _ae .PdfObject ;NewWindow _ae .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gddd pdfCIDFontType0 )GetRuneMetrics (r rune )(_dde .CharMetrics ,bool ){return _dde .CharMetrics {Wx :_gddd ._fffd },true ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_bacdd :=NewPdfAnnotation ();_eadd :=&PdfAnnotationWatermark {};_eadd .PdfAnnotation =_bacdd ;_bacdd .SetContext (_eadd );return _eadd ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_ae .PdfObjectString ;Q *_ae .PdfObjectInteger ;DS *_ae .PdfObjectString ;RV _ae .PdfObject ;};func _bcff (_dfaf *PdfPage )map[_ae .PdfObjectName ]_ae .PdfObject {_deaeb :=make (map[_ae .PdfObjectName ]_ae .PdfObject );if _dfaf .Resources ==nil {return _deaeb ;
};if _dfaf .Resources .Font !=nil {if _fcdd ,_gae :=_ae .GetDict (_dfaf .Resources .Font );_gae {for _ ,_dbbe :=range _fcdd .Keys (){_deaeb [_dbbe ]=_fcdd .Get (_dbbe );};};};if _dfaf .Resources .ExtGState !=nil {if _feaa ,_aecf :=_ae .GetDict (_dfaf .Resources .ExtGState );
_aecf {for _ ,_gacbf :=range _feaa .Keys (){_deaeb [_gacbf ]=_feaa .Get (_gacbf );};};};if _dfaf .Resources .XObject !=nil {if _abeae ,_dcdg :=_ae .GetDict (_dfaf .Resources .XObject );_dcdg {for _ ,_cadf :=range _abeae .Keys (){_deaeb [_cadf ]=_abeae .Get (_cadf );
};};};if _dfaf .Resources .Pattern !=nil {if _bcaea ,_dfcf :=_ae .GetDict (_dfaf .Resources .Pattern );_dfcf {for _ ,_dfca :=range _bcaea .Keys (){_deaeb [_dfca ]=_bcaea .Get (_dfca );};};};if _dfaf .Resources .Shading !=nil {if _fcaa ,_dcgg :=_ae .GetDict (_dfaf .Resources .Shading );
_dcgg {for _ ,_ffdg :=range _fcaa .Keys (){_deaeb [_ffdg ]=_fcaa .Get (_ffdg );};};};if _dfaf .Resources .ProcSet !=nil {if _gggd ,_bfcf :=_ae .GetDict (_dfaf .Resources .ProcSet );_bfcf {for _ ,_becd :=range _gggd .Keys (){_deaeb [_becd ]=_gggd .Get (_becd );
};};};if _dfaf .Resources .Properties !=nil {if _dcbf ,_bgfd :=_ae .GetDict (_dfaf .Resources .Properties );_bgfd {for _ ,_egfgf :=range _dcbf .Keys (){_deaeb [_egfgf ]=_dcbf .Get (_egfgf );};};};return _deaeb ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_efbe :=&PdfColorspaceDeviceN {};return _efbe };

// GetContainingPdfObject implements interface PdfModel.
func (_cacd *PdfAction )GetContainingPdfObject ()_ae .PdfObject {return _cacd ._bac };type fontCommon struct{_bfeb string ;_aacd string ;_ccgc string ;_afda _ae .PdfObject ;_babge *_fe .CMap ;_cdge *PdfFontDescriptor ;_fcfcg int64 ;};func _fgdgg (_cfccb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cfccb }};
func (_bcagg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _db .Time ){_bgafe .Lock ();defer _bgafe .Unlock ();_dcece =modifiedDate ;};func (_bcbf *DSS )generateHashMap (_efca []*_ae .PdfObjectStream )(map[string ]*_ae .PdfObjectStream ,error ){_ceg :=map[string ]*_ae .PdfObjectStream {};
for _ ,_afcab :=range _efca {_cega ,_gcea :=_ae .DecodeStream (_afcab );if _gcea !=nil {return nil ,_gcea ;};_edfg ,_gcea :=_aaaagg (_cega );if _gcea !=nil {return nil ,_gcea ;};_ceg [string (_edfg )]=_afcab ;};return _ceg ,nil ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_fafbe *PdfOutputIntent )ParsePdfObject (object _ae .PdfObject )error {_edcbb ,_aagg :=_ae .GetDict (object );if !_aagg {_fgb .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ed .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_fafbe ._feddg =_edcbb ;_fafbe .Type ,_ =_edcbb .GetString ("\u0054\u0079\u0070\u0065");_ccggf ,_aagg :=_edcbb .GetString ("\u0053");if _aagg {switch _ccggf {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_fafbe .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_fafbe .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_fafbe .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_fafbe .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_fafbe .S =PdfOutputIntentTypeX ;
};};_fafbe .OutputCondition ,_ =_edcbb .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_fafbe .OutputConditionIdentifier ,_ =_edcbb .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_fafbe .RegistryName ,_ =_edcbb .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_fafbe .Info ,_ =_edcbb .GetString ("\u0049\u006e\u0066\u006f");if _cgcb ,_egda :=_ae .GetStream (_edcbb .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_egda {_fafbe .ColorComponents ,_ =_ae .GetIntVal (_cgcb .Get ("\u004e"));_beecb ,_aedgce :=_ae .DecodeStream (_cgcb );if _aedgce !=nil {return _aedgce ;};_fafbe .DestOutputProfile =_beecb ;};return nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _ae .PdfObject ;Open _ae .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdcf *PdfShadingType6 )ToPdfObject ()_ae .PdfObject {_bdcf .PdfShading .ToPdfObject ();_fgaa ,_ggaad :=_bdcf .getShadingDict ();if _ggaad !=nil {_fgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bdcf .BitsPerCoordinate !=nil {_fgaa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bdcf .BitsPerCoordinate );};if _bdcf .BitsPerComponent !=nil {_fgaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bdcf .BitsPerComponent );
};if _bdcf .BitsPerFlag !=nil {_fgaa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bdcf .BitsPerFlag );};if _bdcf .Decode !=nil {_fgaa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bdcf .Decode );};if _bdcf .Function !=nil {if len (_bdcf .Function )==1{_fgaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdcf .Function [0].ToPdfObject ());
}else {_ddgbf :=_ae .MakeArray ();for _ ,_bgdgb :=range _bdcf .Function {_ddgbf .Append (_bgdgb .ToPdfObject ());};_fgaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddgbf );};};return _bdcf ._dgbdcg ;};

// PdfVersion returns version of the PDF file.
func (_gdadd *PdfReader )PdfVersion ()_ae .Version {return _gdadd ._dgadd .PdfVersion ()};

// Encrypt encrypts the output file with a specified user/owner password.
func (_gabcf *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_dddgca :=RC4_128bit ;if options !=nil {_dddgca =options .Algorithm ;};_ebff :=_ag .PermOwner ;if options !=nil {_ebff =options .Permissions ;};var _gcbcb _fa .Filter ;
switch _dddgca {case RC4_128bit :_gcbcb =_fa .NewFilterV2 (16);case AES_128bit :_gcbcb =_fa .NewFilterAESV2 ();case AES_256bit :_gcbcb =_fa .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_abdcd ,_dcbge ,_eefcf :=_ae .PdfCryptNewEncrypt (_gcbcb ,userPass ,ownerPass ,_ebff );if _eefcf !=nil {return _eefcf ;};_gabcf ._acgbb =_abdcd ;if _dcbge .Major !=0{_gabcf .SetVersion (_dcbge .Major ,_dcbge .Minor );};_gabcf ._baca =_dcbge .Encrypt ;
_gabcf ._bbaae ,_gabcf ._aacg =_dcbge .ID0 ,_dcbge .ID1 ;_bbgaa :=_ae .MakeIndirectObject (_dcbge .Encrypt );_gabcf ._bebbc =_bbgaa ;_gabcf .addObject (_bbgaa );return nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cggd *PdfReader )IsEncrypted ()(bool ,error ){return _cggd ._dgadd .IsEncrypted ()};func (_dafad *PdfReader )loadPerms ()(*Permissions ,error ){if _fgddg :=_dafad ._eedde .Get ("\u0050\u0065\u0072m\u0073");_fgddg !=nil {if _dedeg ,_cdef :=_ae .GetDict (_fgddg );
_cdef {_egfcg :=_dedeg .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _egfcg ==nil {return nil ,nil ;};if _bdabg ,_ecbea :=_ae .GetIndirect (_egfcg );_ecbea {_ccbgd ,_aeebe :=_dafad .newPdfSignatureFromIndirect (_bdabg );if _aeebe !=nil {return nil ,_aeebe ;
};return NewPermissions (_ccbgd ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_eceaa *PdfOutputIntent )ToPdfObject ()_ae .PdfObject {if _eceaa ._feddg ==nil {_eceaa ._feddg =_ae .MakeDict ();};_gaeea :=_eceaa ._feddg ;if _eceaa .Type !=""{_gaeea .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName (_eceaa .Type ));};_gaeea .Set ("\u0053",_ae .MakeName (_eceaa .S .String ()));
if _eceaa .OutputCondition !=""{_gaeea .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_ae .MakeString (_eceaa .OutputCondition ));};_gaeea .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_ae .MakeString (_eceaa .OutputConditionIdentifier ));
_gaeea .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_ae .MakeString (_eceaa .RegistryName ));if _eceaa .Info !=""{_gaeea .Set ("\u0049\u006e\u0066\u006f",_ae .MakeString (_eceaa .Info ));};if len (_eceaa .DestOutputProfile )!=0{_caeg ,_eaggf :=_ae .MakeStream (_eceaa .DestOutputProfile ,_ae .NewFlateEncoder ());
if _eaggf !=nil {_fgb .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eaggf );
};_caeg .PdfObjectDictionary .Set ("\u004e",_ae .MakeInteger (int64 (_eceaa .ColorComponents )));_gbgeb :=make ([]float64 ,_eceaa .ColorComponents *2);for _eeddg :=0;_eeddg < _eceaa .ColorComponents *2;_eeddg ++{_bddaf :=0.0;if _eeddg %2!=0{_bddaf =1.0;
};_gbgeb [_eeddg ]=_bddaf ;};_caeg .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_ae .MakeArrayFromFloats (_gbgeb ));_gaeea .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_caeg );};return _gaeea ;
};func (_bafg *PdfReader )flattenFieldsWithOpts (_cedge bool ,_aaaaf FieldAppearanceGenerator ,_gaag *FieldFlattenOpts )error {if _gaag ==nil {_gaag =&FieldFlattenOpts {};};var _ceefg bool ;_dggb :=map[*PdfAnnotation ]bool {};{var _bbfb []*PdfField ;_aegfb :=_bafg .AcroForm ;
if _aegfb !=nil {if _gaag .FilterFunc !=nil {_bbfb =_aegfb .filteredFields (_gaag .FilterFunc ,true );_ceefg =_aegfb .Fields !=nil &&len (*_aegfb .Fields )> 0;}else {_bbfb =_aegfb .AllFields ();};};for _ ,_caefa :=range _bbfb {if len (_caefa .Annotations )< 1{_fgb .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_caefa .PartialName ());
for _bcgb ,_begec :=range _caefa .Kids {for _ ,_cbfgc :=range _begec .Annotations {_dggb [_cbfgc .PdfAnnotation ]=_caefa .V !=nil ;if _begec .V ==nil {_begec .V =_caefa .V ;};if _begec .T ==nil {_begec .T =_ae .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_caefa .PartialName (),_bcgb ));
};if _aaaaf !=nil {_cebe ,_cgfb :=_aaaaf .GenerateAppearanceDict (_aegfb ,_begec ,_cbfgc );if _cgfb !=nil {return _cgfb ;};_cbfgc .AP =_cebe ;};};};};for _ ,_adfd :=range _caefa .Annotations {_dggb [_adfd .PdfAnnotation ]=_caefa .V !=nil ;if _aaaaf !=nil {_accba ,_cffef :=_aaaaf .GenerateAppearanceDict (_aegfb ,_caefa ,_adfd );
if _cffef !=nil {return _cffef ;};_adfd .AP =_accba ;};};};};if _cedge {for _ ,_fagbcc :=range _bafg .PageList {_ffccg ,_aecb :=_fagbcc .GetAnnotations ();if _aecb !=nil {return _aecb ;};for _ ,_eddf :=range _ffccg {_dggb [_eddf ]=true ;};};};for _ ,_ddbc :=range _bafg .PageList {_daed :=_ddbc .flattenFieldsWithOpts (_aaaaf ,_gaag ,_dggb );
if _daed !=nil {return _daed ;};};if !_ceefg {_bafg .AcroForm =nil ;};return nil ;};

// Encoder returns the font's text encoder.
func (_bebca pdfFontType3 )Encoder ()_ddd .TextEncoder {return _bebca ._bbfgd };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _ae .PdfObject ;NewWindow _ae .PdfObject ;T _ae .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_eaa *PdfColorspaceLab )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egaae ,_eacgg :=_ae .GetNumbersAsFloat (objects );
if _eacgg !=nil {return nil ,_eacgg ;};return _eaa .ColorFromFloats (_egaae );};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_ebecc PdfOutputIntentType )String ()string {switch _ebecc {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// ToPdfObject implements interface PdfModel.
func (_fbggd *PdfSignatureReference )ToPdfObject ()_ae .PdfObject {_fdabgg :=_ae .MakeDict ();_fdabgg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fbggd .Type );_fdabgg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_fbggd .TransformMethod );
_fdabgg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_fbggd .TransformParams );_fdabgg .SetIfNotNil ("\u0044\u0061\u0074\u0061",_fbggd .Data );_fdabgg .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_fbggd .DigestMethod );
return _fdabgg ;};func (_faa *PdfReader )newPdfAnnotationPolygonFromDict (_gcg *_ae .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_bcaa :=PdfAnnotationPolygon {};_cgaa ,_ecb :=_faa .newPdfAnnotationMarkupFromDict (_gcg );if _ecb !=nil {return nil ,_ecb ;
};_bcaa .PdfAnnotationMarkup =_cgaa ;_bcaa .Vertices =_gcg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bcaa .LE =_gcg .Get ("\u004c\u0045");_bcaa .BS =_gcg .Get ("\u0042\u0053");_bcaa .IC =_gcg .Get ("\u0049\u0043");_bcaa .BE =_gcg .Get ("\u0042\u0045");
_bcaa .IT =_gcg .Get ("\u0049\u0054");_bcaa .Measure =_gcg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bcaa ,nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_ae .PdfIndirectObject ;SV *_ae .PdfIndirectObject ;};

// Register registers (caches) a model to primitive object relationship.
func (_bdddf *modelManager )Register (primitive _ae .PdfObject ,model PdfModel ){_bdddf ._abgb [model ]=primitive ;_bdddf ._bdbb [primitive ]=model ;};func (_dbbd *PdfReader )newPdfActionSoundFromDict (_ceb *_ae .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_ceb .Get ("\u0053\u006f\u0075n\u0064"),Volume :_ceb .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_ceb .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_ceb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_ceb .Get ("\u004d\u0069\u0078")},nil ;
};func (_fgbc fontCommon )isCIDFont ()bool {if _fgbc ._aacd ==""{_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fgbc );
};_aeed :=false ;switch _fgbc ._aacd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_aeed =true ;};_fgb .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_aeed ,_fgbc );
return _aeed ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_bgafe .Lock ();defer _bgafe .Unlock ();_gdgcc =creator };

// ToPdfObject implements interface PdfModel.
func (_abfcd *PdfAnnotationSound )ToPdfObject ()_ae .PdfObject {_abfcd .PdfAnnotation .ToPdfObject ();_dac :=_abfcd ._gggg ;_badd :=_dac .PdfObject .(*_ae .PdfObjectDictionary );_abfcd .PdfAnnotationMarkup .appendToPdfDictionary (_badd );_badd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0053\u006f\u0075n\u0064"));
_badd .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_abfcd .Sound );_badd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abfcd .Name );return _dac ;};func (_eadccb *PdfWriter )writeTrailer (_gcfgd int ){_eadccb .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _ecgca :=0;_ecgca <=_gcfgd ;{for ;_ecgca <=_gcfgd ;_ecgca ++{_ebeeb ,_eegbc :=_eadccb ._eddaf [_ecgca ];if _eegbc &&(!_eadccb ._edcfb ||_eadccb ._edcfb &&(_ebeeb .Type ==1&&_ebeeb .Offset >=_eadccb ._aagd ||_ebeeb .Type ==0)){break ;};};var _bggec int ;
for _bggec =_ecgca +1;_bggec <=_gcfgd ;_bggec ++{_gegga ,_adccd :=_eadccb ._eddaf [_bggec ];if _adccd &&(!_eadccb ._edcfb ||_eadccb ._edcfb &&(_gegga .Type ==1&&_gegga .Offset > _eadccb ._aagd )){continue ;};break ;};_cefdf :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_ecgca ,_bggec -_ecgca );
_eadccb .writeString (_cefdf );for _ffafb :=_ecgca ;_ffafb < _bggec ;_ffafb ++{_deabcc :=_eadccb ._eddaf [_ffafb ];switch _deabcc .Type {case 0:_cefdf =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_eadccb .writeString (_cefdf );case 1:_cefdf =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_deabcc .Offset ,0);_eadccb .writeString (_cefdf );};};_ecgca =_bggec +1;};_dafdf :=_ae .MakeDict ();_dafdf .Set ("\u0049\u006e\u0066\u006f",_eadccb ._efeee );
_dafdf .Set ("\u0052\u006f\u006f\u0074",_eadccb ._acabbb );_dafdf .Set ("\u0053\u0069\u007a\u0065",_ae .MakeInteger (int64 (_gcfgd +1)));if _eadccb ._edcfb &&_eadccb ._gcgee > 0{_dafdf .Set ("\u0050\u0072\u0065\u0076",_ae .MakeInteger (_eadccb ._gcgee ));
};if _eadccb ._acgbb !=nil {_dafdf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_eadccb ._bebbc );};if _eadccb ._cfaba ==nil &&_eadccb ._bbaae !=""&&_eadccb ._aacg !=""{_eadccb ._cfaba =_ae .MakeArray (_ae .MakeHexString (_eadccb ._bbaae ),_ae .MakeHexString (_eadccb ._aacg ));
};if _eadccb ._cfaba !=nil {_dafdf .Set ("\u0049\u0044",_eadccb ._cfaba );_fgb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_eadccb ._cfaba );};_eadccb .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_eadccb .writeString (_dafdf .WriteString ());
_eadccb .writeString ("\u000a");};func _fcffa (_bfdbc *_ae .PdfObjectStream )(*PdfFunctionType4 ,error ){_afcdf :=&PdfFunctionType4 {};_afcdf ._fbaeb =_bfdbc ;_aeacf :=_bfdbc .PdfObjectDictionary ;_efcccd ,_dfbcc :=_ae .TraceToDirectObject (_aeacf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ae .PdfObjectArray );
if !_dfbcc {_fgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _efcccd .Len ()%2!=0{_fgb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_badfg ,_acgea :=_efcccd .ToFloat64Array ();
if _acgea !=nil {return nil ,_acgea ;};_afcdf .Domain =_badfg ;_efcccd ,_dfbcc =_ae .TraceToDirectObject (_aeacf .Get ("\u0052\u0061\u006eg\u0065")).(*_ae .PdfObjectArray );if _dfbcc {if _efcccd .Len ()< 0||_efcccd .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ceca ,_edac :=_efcccd .ToFloat64Array ();if _edac !=nil {return nil ,_edac ;};_afcdf .Range =_ceca ;};_cbcaf ,_acgea :=_ae .DecodeStream (_bfdbc );if _acgea !=nil {return nil ,_acgea ;};_afcdf ._ccacd =_cbcaf ;_cdcdb :=_fgd .NewPSParser (_cbcaf );_ffccd ,_acgea :=_cdcdb .Parse ();
if _acgea !=nil {return nil ,_acgea ;};_afcdf .Program =_ffccd ;return _afcdf ,nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_efbd *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ddd .CharCode )(_gbeb []rune ,_ecfc ,_bfgg int ){_dfeb ,_ecfc ,_bfgg :=_efbd .CharcodesToStrings (charcodes ,"");return []rune (_ga .Join (_dfeb ,"")),_ecfc ,_bfgg ;};func _cbfd (_bgcc *_ae .PdfIndirectObject ,_cggae *_ae .PdfObjectDictionary )(*DSS ,error ){if _bgcc ==nil {_bgcc =_ae .MakeIndirectObject (nil );
};_bgcc .PdfObject =_ae .MakeDict ();_fbcc :=map[string ]*VRI {};if _acceb ,_dgfdc :=_ae .GetDict (_cggae .Get ("\u0056\u0052\u0049"));_dgfdc {for _ ,_bfcbc :=range _acceb .Keys (){if _fgac ,_aedff :=_ae .GetDict (_acceb .Get (_bfcbc ));_aedff {_fbcc [_ga .ToUpper (_bfcbc .String ())]=_dfed (_fgac );
};};};return &DSS {Certs :_dfaabd (_cggae .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_dfaabd (_cggae .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_dfaabd (_cggae .Get ("\u0043\u0052\u004c\u0073")),VRI :_fbcc ,_bcac :_bgcc },nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_cccf PdfModel ;_fcfc *_ae .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_ae .PdfObjectName ;T *_ae .PdfObjectString ;TU *_ae .PdfObjectString ;TM *_ae .PdfObjectString ;Ff *_ae .PdfObjectInteger ;
V _ae .PdfObject ;DV _ae .PdfObject ;AA _ae .PdfObject ;VariableText *VariableText ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// SetFlag sets the flag for the field.
func (_bgfdc *PdfField )SetFlag (flag FieldFlag ){_bgfdc .Ff =_ae .MakeInteger (int64 (flag ))};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_afcf *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_afcf .updateObjectsDeep (dss .ToPdfObject (),nil );};_afcf ._dgbd =dss ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_cbdb *PdfPattern )SetContext (ctx PdfModel ){_cbdb ._adgf =ctx };

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_fcfc :_ae .MakeIndirectObject (_ae .MakeDict ())}};

// ToPdfObject implements interface PdfModel.
func (_af *PdfActionGoToE )ToPdfObject ()_ae .PdfObject {_af .PdfAction .ToPdfObject ();_dec :=_af ._bac ;_gcc :=_dec .PdfObject .(*_ae .PdfObjectDictionary );_gcc .SetIfNotNil ("\u0053",_ae .MakeName (string (ActionTypeGoToE )));if _af .F !=nil {_gcc .Set ("\u0046",_af .F .ToPdfObject ());
};_gcc .SetIfNotNil ("\u0044",_af .D );_gcc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_af .NewWindow );_gcc .SetIfNotNil ("\u0054",_af .T );return _dec ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_abfe *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgce :=vals [0];if _fgce < 0.0||_fgce > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgce );
return nil ,ErrColorOutOfRange ;};_bbdg :=NewPdfColorCalGray (_fgce );return _bbdg ,nil ;};func (_fdedg *PdfShading )getShadingDict ()(*_ae .PdfObjectDictionary ,error ){_gcdda :=_fdedg ._dgbdcg ;if _ggef ,_ccae :=_gcdda .(*_ae .PdfIndirectObject );_ccae {_gbcbd ,_fcgbg :=_ggef .PdfObject .(*_ae .PdfObjectDictionary );
if !_fcgbg {return nil ,_ae .ErrTypeError ;};return _gbcbd ,nil ;}else if _gbeag ,_bedecd :=_gcdda .(*_ae .PdfObjectStream );_bedecd {return _gbeag .PdfObjectDictionary ,nil ;}else if _cbace ,_cegea :=_gcdda .(*_ae .PdfObjectDictionary );_cegea {return _cbace ,nil ;
}else {_fgb .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_ae .ErrTypeError ;};};func (_ddfcc *pdfFontSimple )updateStandard14Font (){_cbdeb ,_addd :=_ddfcc .Encoder ().(_ddd .SimpleEncoder );
if !_addd {_fgb .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_ddfcc .Encoder (),_ddfcc );return ;};
_gaff :=_cbdeb .Charcodes ();_ddfcc ._feefe =make (map[_ddd .CharCode ]float64 ,len (_gaff ));for _ ,_ccfdb :=range _gaff {_gbcca ,_ :=_cbdeb .CharcodeToRune (_ccfdb );_dacce ,_ :=_ddfcc ._ffgba .Read (_gbcca );_ddfcc ._feefe [_ccfdb ]=_dacce .Wx ;};};


// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_fbace *PdfPageResources )HasShadingByName (keyName _ae .PdfObjectName )bool {_ ,_abdec :=_fbace .GetShadingByName (keyName );return _abdec ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adccf pdfFontSimple )GetRuneMetrics (r rune )(_dde .CharMetrics ,bool ){if _adccf ._ffgba !=nil {_bgdb ,_gfdfb :=_adccf ._ffgba .Read (r );if _gfdfb {return _bgdb ,true ;};};_faaf :=_adccf .Encoder ();if _faaf ==nil {_fgb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_adccf );
return _dde .CharMetrics {},false ;};_agdf ,_cbbfa :=_faaf .RuneToCharcode (r );if !_cbbfa {if r !=' '{_fgb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_adccf );
};return _dde .CharMetrics {},false ;};_ebfce ,_dgbcb :=_adccf .GetCharMetrics (_agdf );return _ebfce ,_dgbcb ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ccfad :map[_ae .PdfObject ]struct{}{},_cffgf :_gabee (),_dgadd :_ae .NewParserFromString (txt )};};func _gegb (_debc *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_debc }};
func (_cgff *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _cgff ._cdge };

// ColorToRGB converts an Indexed color to an RGB color.
func (_becbe *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _becbe .Base ==nil {return nil ,_ed .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _becbe .Base .ColorToRGB (color );};func (_cggaeg *PdfReader )newPdfFieldFromIndirectObject (_bgege *_ae .PdfIndirectObject ,_bggc *PdfField )(*PdfField ,error ){if _befac ,_bgadc :=_cggaeg ._cffgf .GetModelFromPrimitive (_bgege ).(*PdfField );
_bgadc {return _befac ,nil ;};_edabb ,_ggea :=_ae .GetDict (_bgege );if !_ggea {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_efcb :=NewPdfField ();_efcb ._fcfc =_bgege ;_efcb ._fcfc .PdfObject =_edabb ;if _agbd ,_bbda :=_ae .GetName (_edabb .Get ("\u0046\u0054"));_bbda {_efcb .FT =_agbd ;};if _bggc !=nil {_efcb .Parent =_bggc ;};_efcb .T ,_ =_edabb .Get ("\u0054").(*_ae .PdfObjectString );
_efcb .TU ,_ =_edabb .Get ("\u0054\u0055").(*_ae .PdfObjectString );_efcb .TM ,_ =_edabb .Get ("\u0054\u004d").(*_ae .PdfObjectString );_efcb .Ff ,_ =_edabb .Get ("\u0046\u0066").(*_ae .PdfObjectInteger );_efcb .V =_edabb .Get ("\u0056");_efcb .DV =_edabb .Get ("\u0044\u0056");
_efcb .AA =_edabb .Get ("\u0041\u0041");if DA :=_edabb .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_ae .GetString (DA );_efcb .VariableText =&VariableText {DA :DA };Q ,_ :=_edabb .Get ("\u0051").(*_ae .PdfObjectInteger );DS ,_ :=_edabb .Get ("\u0044\u0053").(*_ae .PdfObjectString );
RV :=_edabb .Get ("\u0052\u0056");_efcb .VariableText .Q =Q ;_efcb .VariableText .DS =DS ;_efcb .VariableText .RV =RV ;};_gbddg :=_efcb .FT ;if _gbddg ==nil &&_bggc !=nil {_gbddg =_bggc .FT ;};if _gbddg !=nil {switch *_gbddg {case "\u0054\u0078":_ebbe ,_baa :=_dcagc (_edabb );
if _baa !=nil {return nil ,_baa ;};_ebbe .PdfField =_efcb ;_efcb ._cccf =_ebbe ;case "\u0043\u0068":_fcegc ,_fdbdg :=_dede (_edabb );if _fdbdg !=nil {return nil ,_fdbdg ;};_fcegc .PdfField =_efcb ;_efcb ._cccf =_fcegc ;case "\u0042\u0074\u006e":_abbg ,_acdbc :=_fecgc (_edabb );
if _acdbc !=nil {return nil ,_acdbc ;};_abbg .PdfField =_efcb ;_efcb ._cccf =_abbg ;case "\u0053\u0069\u0067":_bfgc ,_feee :=_cggaeg .newPdfFieldSignatureFromDict (_edabb );if _feee !=nil {return nil ,_feee ;};_bfgc .PdfField =_efcb ;_efcb ._cccf =_bfgc ;
default:_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_efcb .FT );return nil ,_ed .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _feba ,_gbbg :=_ae .GetName (_edabb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_gbbg {if *_feba =="\u0057\u0069\u0064\u0067\u0065\u0074"{_ccfdc ,_gdaea :=_cggaeg .newPdfAnnotationFromIndirectObject (_bgege );if _gdaea !=nil {return nil ,_gdaea ;
};_fgcd ,_cecf :=_ccfdc .GetContext ().(*PdfAnnotationWidget );if !_cecf {return nil ,_ed .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_fgcd ._gaf =_efcb ;_fgcd .Parent =_efcb ._fcfc ;
_efcb .Annotations =append (_efcb .Annotations ,_fgcd );return _efcb ,nil ;};};_cgbd :=true ;if _ggaff ,_cefde :=_ae .GetArray (_edabb .Get ("\u004b\u0069\u0064\u0073"));_cefde {_cdba :=make ([]*_ae .PdfIndirectObject ,0,_ggaff .Len ());for _ ,_bbdd :=range _ggaff .Elements (){_fgbb ,_cacf :=_ae .GetIndirect (_bbdd );
if !_cacf {_caffc ,_caead :=_ae .GetStream (_bbdd );if _caead &&_caffc .PdfObjectDictionary !=nil {_fabdg ,_bacg :=_ae .GetNameVal (_caffc .Get ("\u0054\u0079\u0070\u0065"));if _bacg &&_fabdg =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_fgb .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ed .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_cagcgc ,_egfeec :=_ae .GetDict (_fgbb );
if !_egfeec {return nil ,ErrTypeCheck ;};if _cgbd {_cgbd =!_ecca (_cagcgc );};_cdba =append (_cdba ,_fgbb );};for _ ,_edabf :=range _cdba {if _cgbd {_cdcg ,_dbeec :=_cggaeg .newPdfAnnotationFromIndirectObject (_edabf );if _dbeec !=nil {_fgb .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dbeec );
return nil ,_dbeec ;};_ccbbf ,_dgfad :=_cdcg ._edbg .(*PdfAnnotationWidget );if !_dgfad {return nil ,ErrTypeCheck ;};_ccbbf ._gaf =_efcb ;_efcb .Annotations =append (_efcb .Annotations ,_ccbbf );}else {_cddg ,_cfgfb :=_cggaeg .newPdfFieldFromIndirectObject (_edabf ,_efcb );
if _cfgfb !=nil {_fgb .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cfgfb );return nil ,_cfgfb ;};_efcb .Kids =append (_efcb .Kids ,_cddg );
};};};return _efcb ,nil ;};func (_gcfga *pdfFontSimple )baseFields ()*fontCommon {return &_gcfga .fontCommon };

// String returns a string that describes `font`.
func (_fbbe *PdfFont )String ()string {_ebcdf :="";if _fbbe ._efgfa .Encoder ()!=nil {_ebcdf =_fbbe ._efgfa .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_fbbe ._efgfa ,_fbbe .baseFields ().coreString (),_ebcdf );
};func (_deea *PdfWriter )writeOutputIntents ()error {if len (_deea ._gddfg )==0{return nil ;};_caaeg :=make ([]_ae .PdfObject ,len (_deea ._gddfg ));for _geecad ,_cddfbf :=range _deea ._gddfg {_ggdaf :=_cddfbf .ToPdfObject ();_caaeg [_geecad ]=_ae .MakeIndirectObject (_ggdaf );
};_dbebg :=_ae .MakeIndirectObject (_ae .MakeArray (_caaeg ...));_deea ._gefce .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_dbebg );if _egafe :=_deea .addObjects (_dbebg );_egafe !=nil {return _egafe ;};return nil ;
};type pdfSignDictionary struct{*_ae .PdfObjectDictionary ;_gfggb *SignatureHandler ;_fcagc *PdfSignature ;_badfc int64 ;_cceab int ;_ccced int ;_dbcffd int ;_aeegab int ;};func (_dfbgc *PdfWriter )checkCrossReferenceStream ()bool {_abaae :=_dfbgc ._beabf .Major > 1||(_dfbgc ._beabf .Major ==1&&_dfbgc ._beabf .Minor > 4);
if _dfbgc ._fggff !=nil {_abaae =*_dfbgc ._fggff ;};return _abaae ;};

// SetCatalogLanguage sets the catalog language.
func (_dfeag *PdfWriter )SetCatalogLanguage (lang _ae .PdfObject )error {if lang ==nil {_dfeag ._gefce .Remove ("\u004c\u0061\u006e\u0067");return nil ;};_dfeag .addObject (lang );_dfeag ._gefce .Set ("\u004c\u0061\u006e\u0067",lang );return nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gffcd *PdfReader )GetNamedDestinations ()(_ae .PdfObject ,error ){_dcggb :=_ae .ResolveReference (_gffcd ._eedde .Get ("\u0044\u0065\u0073t\u0073"));if _dcggb ==nil {return nil ,nil ;};if !_gffcd ._fedag {_gbgag :=_gffcd .traverseObjectData (_dcggb );
if _gbgag !=nil {return nil ,_gbgag ;};};return _dcggb ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_ggfc *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_facf ,_ggfe :=_ae .GetNumbersAsFloat (objects );
if _ggfe !=nil {return nil ,_ggfe ;};return _ggfc .ColorFromFloats (_facf );};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_bdddd *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_bdafd :=map[*PdfAnnotation ]bool {};_adce ,_fdba :=_bdddd .GetAnnotations ();if _fdba !=nil {return _fdba ;};_cedgd :=false ;for _ ,_gfce :=range _adce {if opts .AnnotFilterFunc !=nil {_bdafd [_gfce ]=opts .AnnotFilterFunc (_gfce );
}else {_bdafd [_gfce ]=true ;};if _bdafd [_gfce ]{_cedgd =true ;};};if !_cedgd {return nil ;};return _bdddd .flattenFieldsWithOpts (appgen ,opts ,_bdafd );};

// SetImage updates XObject Image with new image data.
func (_gdafcg *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gdafcg .Filter .UpdateParams (img .GetParamsDict ());_fdfae ,_fcbf :=_gdafcg .Filter .EncodeBytes (img .Data );if _fcbf !=nil {return _fcbf ;};_gdafcg .Stream =_fdfae ;_ebfee :=img .Width ;
_gdafcg .Width =&_ebfee ;_cabba :=img .Height ;_gdafcg .Height =&_cabba ;_bage :=img .BitsPerComponent ;_gdafcg .BitsPerComponent =&_bage ;if cs ==nil {if img .ColorComponents ==1{_gdafcg .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gdafcg .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_gdafcg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ed .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gdafcg .ColorSpace =cs ;};return nil ;
};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_eddbb *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _eddbb ._ebbgc ==nil {_eddbb ._ebbgc =_fgd .NewPSExecutor (_eddbb .Program );};var _cfgeb []_fgd .PSObject ;for _ ,_bcbe :=range xVec {_cfgeb =append (_cfgeb ,_fgd .MakeReal (_bcbe ));
};_efggc ,_bffgbe :=_eddbb ._ebbgc .Execute (_cfgeb );if _bffgbe !=nil {return nil ,_bffgbe ;};_dgedb ,_bffgbe :=_fgd .PSObjectArrayToFloat64Array (_efggc );if _bffgbe !=nil {return nil ,_bffgbe ;};return _dgedb ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_gccdb *pdfFontType0 )ToPdfObject ()_ae .PdfObject {if _gccdb ._daecc ==nil {_gccdb ._daecc =&_ae .PdfIndirectObject {};};_fbbdd :=_gccdb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_gccdb ._daecc .PdfObject =_fbbdd ;if _gccdb .Encoding !=nil {_fbbdd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gccdb .Encoding );
}else if _gccdb ._abgde !=nil {_fbbdd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gccdb ._abgde .ToPdfObject ());};if _gccdb .DescendantFont !=nil {_fbbdd .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_ae .MakeArray (_gccdb .DescendantFont .ToPdfObject ()));
};return _gccdb ._daecc ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _ae .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _dbdge error ;encoder ,_dbdge =img .getSuitableEncoder ();if _dbdge !=nil {_fgb .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dbdge );
encoder =_ae .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_ccefcg ,_gdadc :=encoder .EncodeBytes (img .Data );if _gdadc !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gdadc );
return nil ,_gdadc ;};_ebdcae :=NewXObjectImage ();_egaea :=img .Width ;_dfdfg :=img .Height ;_ebdcae .Width =&_egaea ;_ebdcae .Height =&_dfdfg ;_dbca :=img .BitsPerComponent ;_ebdcae .BitsPerComponent =&_dbca ;_ebdcae .Filter =encoder ;_ebdcae .Stream =_ccefcg ;
if cs ==nil {if img .ColorComponents ==1{_ebdcae .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_ae .DCTEncoder :_ebdcae .ColorSpace =NewPdfColorspaceDeviceRGB ();_dbca =8;_ebdcae .BitsPerComponent =&_dbca ;
};};}else if img .ColorComponents ==3{_ebdcae .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_ae .DCTEncoder :_ebdcae .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_ebdcae .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_ed .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_ebdcae .ColorSpace =cs ;};if len (img ._cgde )!=0{_bcfbe :=NewXObjectImage ();_bcfbe .Filter =encoder ;_dgbec ,_aeaeb :=encoder .EncodeBytes (img ._cgde );
if _aeaeb !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_aeaeb );return nil ,_aeaeb ;};_bcfbe .Stream =_dgbec ;_bcfbe .BitsPerComponent =_ebdcae .BitsPerComponent ;
_bcfbe .Width =&img .Width ;_bcfbe .Height =&img .Height ;_bcfbe .ColorSpace =NewPdfColorspaceDeviceGray ();_ebdcae .SMask =_bcfbe .ToPdfObject ();}else {_ebdcae .SMask =xobjIn .SMask ;_ebdcae .ImageMask =xobjIn .ImageMask ;if _ebdcae .ColorSpace .GetNumComponents ()==1{_egfgb (_ebdcae );
};};return _ebdcae ,nil ;};func (_baad fontCommon )asPdfObjectDictionary (_aedgcb string )*_ae .PdfObjectDictionary {if _aedgcb !=""&&_baad ._aacd !=""&&_aedgcb !=_baad ._aacd {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_aedgcb ,_baad );
}else if _aedgcb ==""&&_baad ._aacd ==""{_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_baad );
}else if _baad ._aacd ==""{_baad ._aacd =_aedgcb ;};_bgfac :=_ae .MakeDict ();_bgfac .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0046\u006f\u006e\u0074"));_bgfac .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ae .MakeName (_baad ._bfeb ));
_bgfac .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName (_baad ._aacd ));if _baad ._cdge !=nil {_bgfac .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_baad ._cdge .ToPdfObject ());};if _baad ._afda !=nil {_bgfac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_baad ._afda );
}else if _baad ._babge !=nil {_cdffc ,_dgdb :=_baad ._babge .Stream ();if _dgdb !=nil {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_dgdb );
}else {_bgfac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cdffc );};};return _bgfac ;};

// GetPdfInfo returns the PDF info dictionary.
func (_cecab *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_cgddf ,_ffefc :=_cecab .GetTrailer ();if _ffefc !=nil {return nil ,_ffefc ;};var _feeaf *_ae .PdfObjectDictionary ;_bfgdb :=_cgddf .Get ("\u0049\u006e\u0066\u006f");switch _cdgec :=_bfgdb .(type ){case *_ae .PdfObjectReference :_cacfg :=_cdgec ;
_bfgdb ,_ffefc =_cecab .GetIndirectObjectByNumber (int (_cacfg .ObjectNumber ));_bfgdb =_ae .TraceToDirectObject (_bfgdb );if _ffefc !=nil {return nil ,_ffefc ;};_feeaf ,_ =_bfgdb .(*_ae .PdfObjectDictionary );case *_ae .PdfObjectDictionary :_feeaf =_cdgec ;
};if _feeaf ==nil {return nil ,_ed .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_edfef ,_ffefc :=NewPdfInfoFromObject (_feeaf );if _ffefc !=nil {return nil ,_ffefc ;
};return _edfef ,nil ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_ae .PdfParser ;DiffPolicy _dga .DiffPolicy ;};func (_ffba *PdfReader )newPdfPageFromDict (_fefd *_ae .PdfObjectDictionary )(*PdfPage ,error ){_geef :=NewPdfPage ();_geef ._efdff =_fefd ;_geef ._gdddbf =*_fefd ;
_cfacd :=*_fefd ;_bcfbd ,_begfa :=_cfacd .Get ("\u0054\u0079\u0070\u0065").(*_ae .PdfObjectName );if !_begfa {return nil ,_ed .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_bcfbd !="\u0050\u0061\u0067\u0065"{return nil ,_ed .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _gcfeg :=_cfacd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_gcfeg !=nil {_geef .Parent =_gcfeg ;};if _gafgc :=_cfacd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_gafgc !=nil {_dcce ,_ddfea :=_ae .GetString (_gafgc );if !_ddfea {return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_dbddb ,_dcccc :=NewPdfDate (_dcce .Str ());if _dcccc !=nil {return nil ,_dcccc ;};_geef .LastModified =&_dbddb ;};if _ebega :=_cfacd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ebega !=nil &&!_ae .IsNullObject (_ebega ){_fccbd ,_agded :=_ae .GetDict (_ebega );
if !_agded {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ebega );};var _dfafa error ;_geef .Resources ,_dfafa =NewPdfPageResourcesFromDict (_fccbd );
if _dfafa !=nil {return nil ,_dfafa ;};}else {_ccdeb ,_ecaff :=_geef .getParentResources ();if _ecaff !=nil {return nil ,_ecaff ;};if _ccdeb ==nil {_ccdeb =NewPdfPageResources ();};_geef .Resources =_ccdeb ;};if _fagdd :=_cfacd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_fagdd !=nil {_agfgg ,_ceaa :=_ae .GetArray (_fagdd );if !_ceaa {return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _ggdgeg error ;
_geef .MediaBox ,_ggdgeg =NewPdfRectangle (*_agfgg );if _ggdgeg !=nil {return nil ,_ggdgeg ;};};if _dcffe :=_cfacd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_dcffe !=nil {_abbgac ,_cegaf :=_ae .GetArray (_dcffe );if !_cegaf {return nil ,_ed .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gagd error ;_geef .CropBox ,_gagd =NewPdfRectangle (*_abbgac );if _gagd !=nil {return nil ,_gagd ;};};if _dedcg :=_cfacd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dedcg !=nil {_ebecf ,_bgfba :=_ae .GetArray (_dedcg );if !_bgfba {return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _fccee error ;_geef .BleedBox ,_fccee =NewPdfRectangle (*_ebecf );if _fccee !=nil {return nil ,_fccee ;};};if _dgbg :=_cfacd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_dgbg !=nil {_cfegd ,_bceec :=_ae .GetArray (_dgbg );if !_bceec {return nil ,_ed .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _dcfc error ;_geef .TrimBox ,_dcfc =NewPdfRectangle (*_cfegd );if _dcfc !=nil {return nil ,_dcfc ;};};if _ecgde :=_cfacd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_ecgde !=nil {_bfgcc ,_gcffd :=_ae .GetArray (_ecgde );if !_gcffd {return nil ,_ed .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _babb error ;_geef .ArtBox ,_babb =NewPdfRectangle (*_bfgcc );if _babb !=nil {return nil ,_babb ;};};if _faee :=_cfacd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_faee !=nil {_geef .BoxColorInfo =_faee ;};if _abbbe :=_cfacd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_abbbe !=nil {_geef .Contents =_abbbe ;};if _fggcf :=_cfacd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_fggcf !=nil {_ebbda ,_bagd :=_ae .GetNumberAsInt64 (_fggcf );if _bagd !=nil {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_geef .Rotate =&_ebbda ;};if _gbceg :=_cfacd .Get ("\u0047\u0072\u006fu\u0070");_gbceg !=nil {_geef .Group =_gbceg ;};if _geacf :=_cfacd .Get ("\u0054\u0068\u0075m\u0062");_geacf !=nil {_geef .Thumb =_geacf ;};if _dgbff :=_cfacd .Get ("\u0042");_dgbff !=nil {_geef .B =_dgbff ;
};if _aace :=_cfacd .Get ("\u0044\u0075\u0072");_aace !=nil {_geef .Dur =_aace ;};if _bffgbb :=_cfacd .Get ("\u0054\u0072\u0061n\u0073");_bffgbb !=nil {_geef .Trans =_bffgbb ;};if _addf :=_cfacd .Get ("\u0041\u0041");_addf !=nil {_geef .AA =_addf ;};if _ddfdd :=_cfacd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_ddfdd !=nil {_geef .Metadata =_ddfdd ;};if _edec :=_cfacd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_edec !=nil {_geef .PieceInfo =_edec ;};if _gfdaf :=_cfacd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_gfdaf !=nil {_geef .StructParents =_gfdaf ;};if _bacbg :=_cfacd .Get ("\u0049\u0044");_bacbg !=nil {_geef .ID =_bacbg ;};if _bcgd :=_cfacd .Get ("\u0050\u005a");_bcgd !=nil {_geef .PZ =_bcgd ;};if _dcdde :=_cfacd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_dcdde !=nil {_geef .SeparationInfo =_dcdde ;};if _fcddf :=_cfacd .Get ("\u0054\u0061\u0062\u0073");_fcddf !=nil {_geef .Tabs =_fcddf ;};if _dffaf :=_cfacd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_dffaf !=nil {_geef .TemplateInstantiated =_dffaf ;};if _ffdfe :=_cfacd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_ffdfe !=nil {_geef .PresSteps =_ffdfe ;};if _ggdb :=_cfacd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ggdb !=nil {_geef .UserUnit =_ggdb ;
};if _ebegf :=_cfacd .Get ("\u0056\u0050");_ebegf !=nil {_geef .VP =_ebegf ;};if _faged :=_cfacd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_faged !=nil {_geef .Annots =_faged ;};_geef ._fadgc =_ffba ;return _geef ,nil ;};

// SetAlpha sets the alpha layer for the image.
func (_gbagf *Image )SetAlpha (alpha []byte ){_gbagf ._cgde =alpha };func (_dged *PdfReader )newPdfAnnotationRedactFromDict (_abdgb *_ae .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fbfg :=PdfAnnotationRedact {};_egaf ,_acfee :=_dged .newPdfAnnotationMarkupFromDict (_abdgb );
if _acfee !=nil {return nil ,_acfee ;};_fbfg .PdfAnnotationMarkup =_egaf ;_fbfg .QuadPoints =_abdgb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fbfg .IC =_abdgb .Get ("\u0049\u0043");_fbfg .RO =_abdgb .Get ("\u0052\u004f");_fbfg .OverlayText =_abdgb .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_fbfg .Repeat =_abdgb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fbfg .DA =_abdgb .Get ("\u0044\u0041");_fbfg .Q =_abdgb .Get ("\u0051");return &_fbfg ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_caabe []byte )(_cbcfb int ,_cefgb error );};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_eedba *CompliancePdfReader )error ;};func _dcagc (_ggdff *_ae .PdfObjectDictionary )(*PdfFieldText ,error ){_cgba :=&PdfFieldText {};_cgba .DA ,_ =_ae .GetString (_ggdff .Get ("\u0044\u0041"));_cgba .Q ,_ =_ae .GetInt (_ggdff .Get ("\u0051"));
_cgba .DS ,_ =_ae .GetString (_ggdff .Get ("\u0044\u0053"));_cgba .RV =_ggdff .Get ("\u0052\u0056");_cgba .MaxLen ,_ =_ae .GetInt (_ggdff .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _cgba ,nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_aagff *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _aagff ._dgadd .GetRevisionNumber ()==0{return nil ,_ed .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _dfdba ,_aeega :=_aagff ._gefcd [_aagff ];_aeega {return _dfdba ,nil ;};_cagge ,_cgddd :=_aagff ._dgadd .GetPreviousRevisionReadSeeker ();if _cgddd !=nil {return nil ,_cgddd ;};_gdbgf ,_cgddd :=_fcdda (_cagge ,_aagff ._cdaae ,_aagff ._abefc ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _cgddd !=nil {return nil ,_cgddd ;};_aagff ._cacfb [_aagff ._dgadd .GetRevisionNumber ()-1]=_gdbgf ;_aagff ._gefcd [_aagff ]=_gdbgf ;_gdbgf ._gefcd =_aagff ._gefcd ;return _gdbgf ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gcbbd *PdfFunctionType4 )ToPdfObject ()_ae .PdfObject {_bfbee :=_gcbbd ._fbaeb ;if _bfbee ==nil {_gcbbd ._fbaeb =&_ae .PdfObjectStream {};_bfbee =_gcbbd ._fbaeb ;};_adgc :=_ae .MakeDict ();_adgc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ae .MakeInteger (4));
_bdaae :=&_ae .PdfObjectArray {};for _ ,_cedeb :=range _gcbbd .Domain {_bdaae .Append (_ae .MakeFloat (_cedeb ));};_adgc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bdaae );_efbga :=&_ae .PdfObjectArray {};for _ ,_gabc :=range _gcbbd .Range {_efbga .Append (_ae .MakeFloat (_gabc ));
};_adgc .Set ("\u0052\u0061\u006eg\u0065",_efbga );if _gcbbd ._ccacd ==nil &&_gcbbd .Program !=nil {_gcbbd ._ccacd =[]byte (_gcbbd .Program .String ());};_adgc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ae .MakeInteger (int64 (len (_gcbbd ._ccacd ))));
_bfbee .Stream =_gcbbd ._ccacd ;_bfbee .PdfObjectDictionary =_adgc ;return _bfbee ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_cfbf :=NewPdfAnnotation ();_gff :=&PdfAnnotationPrinterMark {};_gff .PdfAnnotation =_cfbf ;_cfbf .SetContext (_gff );return _gff ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_cdde *PdfFontDescriptor )ToPdfObject ()_ae .PdfObject {_dcecde :=_ae .MakeDict ();if _cdde ._cdbac ==nil {_cdde ._cdbac =&_ae .PdfIndirectObject {};};_cdde ._cdbac .PdfObject =_dcecde ;_dcecde .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _cdde .FontName !=nil {_dcecde .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cdde .FontName );};if _cdde .FontFamily !=nil {_dcecde .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_cdde .FontFamily );};if _cdde .FontStretch !=nil {_dcecde .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_cdde .FontStretch );
};if _cdde .FontWeight !=nil {_dcecde .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_cdde .FontWeight );};if _cdde .Flags !=nil {_dcecde .Set ("\u0046\u006c\u0061g\u0073",_cdde .Flags );};if _cdde .FontBBox !=nil {_dcecde .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_cdde .FontBBox );
};if _cdde .ItalicAngle !=nil {_dcecde .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_cdde .ItalicAngle );};if _cdde .Ascent !=nil {_dcecde .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_cdde .Ascent );};if _cdde .Descent !=nil {_dcecde .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_cdde .Descent );
};if _cdde .Leading !=nil {_dcecde .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_cdde .Leading );};if _cdde .CapHeight !=nil {_dcecde .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_cdde .CapHeight );};if _cdde .XHeight !=nil {_dcecde .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_cdde .XHeight );
};if _cdde .StemV !=nil {_dcecde .Set ("\u0053\u0074\u0065m\u0056",_cdde .StemV );};if _cdde .StemH !=nil {_dcecde .Set ("\u0053\u0074\u0065m\u0048",_cdde .StemH );};if _cdde .AvgWidth !=nil {_dcecde .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_cdde .AvgWidth );
};if _cdde .MaxWidth !=nil {_dcecde .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_cdde .MaxWidth );};if _cdde .MissingWidth !=nil {_dcecde .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_cdde .MissingWidth );};if _cdde .FontFile !=nil {_dcecde .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_cdde .FontFile );
};if _cdde .FontFile2 !=nil {_dcecde .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_cdde .FontFile2 );};if _cdde .FontFile3 !=nil {_dcecde .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_cdde .FontFile3 );};if _cdde .CharSet !=nil {_dcecde .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_cdde .CharSet );
};if _cdde .Style !=nil {_dcecde .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cdde .FontName );};if _cdde .Lang !=nil {_dcecde .Set ("\u004c\u0061\u006e\u0067",_cdde .Lang );};if _cdde .FD !=nil {_dcecde .Set ("\u0046\u0044",_cdde .FD );};
if _cdde .CIDSet !=nil {_dcecde .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_cdde .CIDSet );};return _cdde ._cdbac ;};func (_fafae *PdfReader )loadDSS ()(*DSS ,error ){if _fafae ._dgadd .GetCrypter ()!=nil &&!_fafae ._dgadd .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_efbec :=_fafae ._eedde .Get ("\u0044\u0053\u0053");if _efbec ==nil {return nil ,nil ;};_abdge ,_ :=_ae .GetIndirect (_efbec );_efbec =_ae .TraceToDirectObject (_efbec );switch _abgaf :=_efbec .(type ){case *_ae .PdfObjectNull :return nil ,nil ;case *_ae .PdfObjectDictionary :return _cbfd (_abdge ,_abgaf );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_efbec );};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_cec .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_cec .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_cec .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_gbbfd *PdfAppender ;_febag *DSS ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_daba byte )byte ;func (_caaa *PdfReader )newPdfAnnotationFileAttachmentFromDict (_cdgdc *_ae .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_dgf :=PdfAnnotationFileAttachment {};_ddeb ,_fbba :=_caaa .newPdfAnnotationMarkupFromDict (_cdgdc );
if _fbba !=nil {return nil ,_fbba ;};_dgf .PdfAnnotationMarkup =_ddeb ;_dgf .FS =_cdgdc .Get ("\u0046\u0053");_dgf .Name =_cdgdc .Get ("\u004e\u0061\u006d\u0065");return &_dgf ,nil ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_geff *PdfColorCalGray )GetNumComponents ()int {return 1};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _ae .PdfObject ;_cagcg []byte ;_beea *_ae .PdfIndirectObject ;};

// SetFileName sets the pdf writer file name for metered usage tracker.
func (_gcbgd *PdfWriter )SetFileName (name string ){_gcbgd ._gecgg =name };func (_dagc *PdfReader )newPdfActionFromIndirectObject (_ged *_ae .PdfIndirectObject )(*PdfAction ,error ){_gfb ,_ebf :=_ged .PdfObject .(*_ae .PdfObjectDictionary );if !_ebf {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_dagc ._cffgf .GetModelFromPrimitive (_gfb );model !=nil {_bgg ,_eabe :=model .(*PdfAction );if !_eabe {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _bgg ,nil ;};_eabg :=&PdfAction {};_eabg ._bac =_ged ;_dagc ._cffgf .Register (_gfb ,_eabg );if _acfa :=_gfb .Get ("\u0054\u0079\u0070\u0065");_acfa !=nil {_dce ,_cdb :=_acfa .(*_ae .PdfObjectName );if !_cdb {_fgb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_acfa );
}else {if *_dce !="\u0041\u0063\u0074\u0069\u006f\u006e"{_fgb .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_dce );
};_eabg .Type =_dce ;};};if _gfg :=_gfb .Get ("\u004e\u0065\u0078\u0074");_gfg !=nil {_eabg .Next =_gfg ;};if _ccf :=_gfb .Get ("\u0053");_ccf !=nil {_eabg .S =_ccf ;};_eeb ,_aceb :=_eabg .S .(*_ae .PdfObjectName );if !_aceb {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eabg .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eabg .S );};_edc :=PdfActionType (_eeb .String ());
switch _edc {case ActionTypeGoTo :_gdb ,_decf :=_dagc .newPdfActionGotoFromDict (_gfb );if _decf !=nil {return nil ,_decf ;};_gdb .PdfAction =_eabg ;_eabg ._aee =_gdb ;return _eabg ,nil ;case ActionTypeGoToR :_cece ,_gab :=_dagc .newPdfActionGotoRFromDict (_gfb );
if _gab !=nil {return nil ,_gab ;};_cece .PdfAction =_eabg ;_eabg ._aee =_cece ;return _eabg ,nil ;case ActionTypeGoToE :_gcf ,_eda :=_dagc .newPdfActionGotoEFromDict (_gfb );if _eda !=nil {return nil ,_eda ;};_gcf .PdfAction =_eabg ;_eabg ._aee =_gcf ;
return _eabg ,nil ;case ActionTypeLaunch :_dgce ,_agf :=_dagc .newPdfActionLaunchFromDict (_gfb );if _agf !=nil {return nil ,_agf ;};_dgce .PdfAction =_eabg ;_eabg ._aee =_dgce ;return _eabg ,nil ;case ActionTypeThread :_abe ,_bffa :=_dagc .newPdfActionThreadFromDict (_gfb );
if _bffa !=nil {return nil ,_bffa ;};_abe .PdfAction =_eabg ;_eabg ._aee =_abe ;return _eabg ,nil ;case ActionTypeURI :_ff ,_fdb :=_dagc .newPdfActionURIFromDict (_gfb );if _fdb !=nil {return nil ,_fdb ;};_ff .PdfAction =_eabg ;_eabg ._aee =_ff ;return _eabg ,nil ;
case ActionTypeSound :_caca ,_cecg :=_dagc .newPdfActionSoundFromDict (_gfb );if _cecg !=nil {return nil ,_cecg ;};_caca .PdfAction =_eabg ;_eabg ._aee =_caca ;return _eabg ,nil ;case ActionTypeMovie :_ffa ,_cef :=_dagc .newPdfActionMovieFromDict (_gfb );
if _cef !=nil {return nil ,_cef ;};_ffa .PdfAction =_eabg ;_eabg ._aee =_ffa ;return _eabg ,nil ;case ActionTypeHide :_ddf ,_gda :=_dagc .newPdfActionHideFromDict (_gfb );if _gda !=nil {return nil ,_gda ;};_ddf .PdfAction =_eabg ;_eabg ._aee =_ddf ;return _eabg ,nil ;
case ActionTypeNamed :_agbg ,_cga :=_dagc .newPdfActionNamedFromDict (_gfb );if _cga !=nil {return nil ,_cga ;};_agbg .PdfAction =_eabg ;_eabg ._aee =_agbg ;return _eabg ,nil ;case ActionTypeSubmitForm :_ebce ,_fef :=_dagc .newPdfActionSubmitFormFromDict (_gfb );
if _fef !=nil {return nil ,_fef ;};_ebce .PdfAction =_eabg ;_eabg ._aee =_ebce ;return _eabg ,nil ;case ActionTypeResetForm :_dcb ,_dcea :=_dagc .newPdfActionResetFormFromDict (_gfb );if _dcea !=nil {return nil ,_dcea ;};_dcb .PdfAction =_eabg ;_eabg ._aee =_dcb ;
return _eabg ,nil ;case ActionTypeImportData :_ccb ,_ebda :=_dagc .newPdfActionImportDataFromDict (_gfb );if _ebda !=nil {return nil ,_ebda ;};_ccb .PdfAction =_eabg ;_eabg ._aee =_ccb ;return _eabg ,nil ;case ActionTypeSetOCGState :_gbf ,_bee :=_dagc .newPdfActionSetOCGStateFromDict (_gfb );
if _bee !=nil {return nil ,_bee ;};_gbf .PdfAction =_eabg ;_eabg ._aee =_gbf ;return _eabg ,nil ;case ActionTypeRendition :_cbf ,_bab :=_dagc .newPdfActionRenditionFromDict (_gfb );if _bab !=nil {return nil ,_bab ;};_cbf .PdfAction =_eabg ;_eabg ._aee =_cbf ;
return _eabg ,nil ;case ActionTypeTrans :_aca ,_ddfb :=_dagc .newPdfActionTransFromDict (_gfb );if _ddfb !=nil {return nil ,_ddfb ;};_aca .PdfAction =_eabg ;_eabg ._aee =_aca ;return _eabg ,nil ;case ActionTypeGoTo3DView :_cacc ,_bca :=_dagc .newPdfActionGoTo3DViewFromDict (_gfb );
if _bca !=nil {return nil ,_bca ;};_cacc .PdfAction =_eabg ;_eabg ._aee =_cacc ;return _eabg ,nil ;case ActionTypeJavaScript :_ggaa ,_fagb :=_dagc .newPdfActionJavaScriptFromDict (_gfb );if _fagb !=nil {return nil ,_fagb ;};_ggaa .PdfAction =_eabg ;_eabg ._aee =_ggaa ;
return _eabg ,nil ;};_fgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_edc );return nil ,nil ;};func (_gedede *PdfReader )buildNameNodes (_gcedc *_ae .PdfIndirectObject ,_eefc map[_ae .PdfObject ]struct{})error {if _gcedc ==nil {return nil ;
};if _ ,_fgcdb :=_eefc [_gcedc ];_fgcdb {_fgb .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gcedc .ObjectNumber );
return nil ;};_eefc [_gcedc ]=struct{}{};_bbcde ,_cegeg :=_gcedc .PdfObject .(*_ae .PdfObjectDictionary );if !_cegeg {return _ed .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _acfae ,_fecdc :=_ae .GetDict (_bbcde .Get ("\u0044\u0065\u0073t\u0073"));
_fecdc {_ddef ,_ggcdcf :=_ae .GetArray (_acfae .Get ("\u004b\u0069\u0064\u0073"));if !_ggcdcf {return _ed .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_fgb .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ddef );
for _bgbb ,_ggdeea :=range _ddef .Elements (){_efccfe ,_cegbc :=_ae .GetIndirect (_ggdeea );if !_cegbc {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_efccfe );
return _ed .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_ddef .Set (_bgbb ,_efccfe );_gacbc :=_gedede .buildNameNodes (_efccfe ,_eefc );if _gacbc !=nil {return _gacbc ;
};};};if _fdfe ,_bbfgb :=_ae .GetDict (_bbcde );_bbfgb {if !_ae .IsNullObject (_fdfe .Get ("\u004b\u0069\u0064\u0073")){if _bbcgc ,_acccb :=_ae .GetArray (_fdfe .Get ("\u004b\u0069\u0064\u0073"));_acccb {for _gegg ,_dfefb :=range _bbcgc .Elements (){if _aeacfe ,_bdde :=_ae .GetIndirect (_dfefb );
_bdde {_bbcgc .Set (_gegg ,_aeacfe );_ffcbf :=_gedede .buildNameNodes (_aeacfe ,_eefc );if _ffcbf !=nil {return _ffcbf ;};};};};};};return nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_acfd :=NewPdfAction ();_eg :=&PdfActionGoTo {};_eg .PdfAction =_acfd ;_acfd .SetContext (_eg );return _eg ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);
FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);
FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);
FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// ToPdfObject returns the PDF representation of the colorspace.
func (_ecae *PdfColorspaceDeviceCMYK )ToPdfObject ()_ae .PdfObject {return _ae .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_eabga :=NewPdfAnnotation ();_ead :=&PdfAnnotationLine {};_ead .PdfAnnotation =_eabga ;_ead .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eabga .SetContext (_ead );return _ead ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_b .File ,error ){const _fcebg ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_ffddd ,_bedec :=_b .Open (pdfFile );if _bedec !=nil {return nil ,nil ,_bedec ;};_ggedf ,_bedec :=_fcdda (_ffddd ,opts ,true ,_fcebg );if _bedec !=nil {_ffddd .Close ();return nil ,nil ,_bedec ;};_ggedf ._gccde =pdfFile ;return _ggedf ,_ffddd ,nil ;};

// Transform rectangle with the supplied matrix.
func (_gdcfb *PdfRectangle )Transform (transformMatrix _fc .Matrix ){_gdcfb .Llx ,_gdcfb .Lly =transformMatrix .Transform (_gdcfb .Llx ,_gdcfb .Lly );_gdcfb .Urx ,_gdcfb .Ury =transformMatrix .Transform (_gdcfb .Urx ,_gdcfb .Ury );_gdcfb .Normalize ();
};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_bcfbf *PdfPage )GetContainingPdfObject ()_ae .PdfObject {return _bcfbf ._dfgbfb };

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_bdfa *PdfColorspaceICCBased )GetContainingPdfObject ()_ae .PdfObject {return _bdfa ._acac };

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_gfaa :=&PdfColorPattern {};return _gfaa };

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_gegdb *_ae .PdfObjectDictionary ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_gfge _ae .PdfObject ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_fccgg *pdfFontSimple )ToPdfObject ()_ae .PdfObject {if _fccgg ._dfaa ==nil {_fccgg ._dfaa =&_ae .PdfIndirectObject {};};_dddagc :=_fccgg .baseFields ().asPdfObjectDictionary ("");_fccgg ._dfaa .PdfObject =_dddagc ;if _fccgg .FirstChar !=nil {_dddagc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fccgg .FirstChar );
};if _fccgg .LastChar !=nil {_dddagc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fccgg .LastChar );};if _fccgg .Widths !=nil {_dddagc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fccgg .Widths );};if _fccgg .Encoding !=nil {_dddagc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fccgg .Encoding );
}else if _fccgg ._beaea !=nil {_aggaa :=_fccgg ._beaea .ToPdfObject ();if _aggaa !=nil {_dddagc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aggaa );};};return _fccgg ._dfaa ;};func (_baeb *PdfReader )newPdfActionSubmitFormFromDict (_eef *_ae .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_dcc ,_bda :=_eeg (_eef .Get ("\u0046"));
if _bda !=nil {return nil ,_bda ;};return &PdfActionSubmitForm {F :_dcc ,Fields :_eef .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_eef .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func _eeg (_bccd _ae .PdfObject )(*PdfFilespec ,error ){if _bccd ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_bccd );};func (_dgcc Image )getBase ()_fae .ImageBase {return _fae .NewImageBase (int (_dgcc .Width ),int (_dgcc .Height ),int (_dgcc .BitsPerComponent ),_dgcc .ColorComponents ,_dgcc .Data ,_dgcc ._cgde ,_dgcc ._dgegd );
};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_dfbge ,_egagd :=_gfee (basefont );if _egagd !=nil {return nil ,_egagd ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_dfbge ._beaea =_ddd .NewWinAnsiEncoder ();};return &PdfFont {_efgfa :&_dfbge },nil ;
};func _bcfa ()string {_bgafe .Lock ();defer _bgafe .Unlock ();_fcdf :=_be .GetLicenseKey ();if len (_aafeg )> 0&&(_fcdf .IsLicensed ()||_dfbeb ){return _aafeg ;};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_fgcdc (),_fcdf .TypeToString ());
};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_ccdc *PdfPageResources )GetFontByName (keyName _ae .PdfObjectName )(_ae .PdfObject ,bool ){if _ccdc .Font ==nil {return nil ,false ;};_bbgf ,_eabf :=_ae .TraceToDirectObject (_ccdc .Font ).(*_ae .PdfObjectDictionary );if !_eabf {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ae .TraceToDirectObject (_ccdc .Font ));
return nil ,false ;};if _gbccg :=_bbgf .Get (keyName );_gbccg !=nil {return _gbccg ,true ;};return nil ,false ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _ae .PdfObject ;B _ae .PdfObject ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_cfcfa *PdfPageResources )HasColorspaceByName (keyName _ae .PdfObjectName )bool {_bgfgf ,_cbad :=_cfcfa .GetColorspaces ();if _cbad !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cbad );
return false ;};if _bgfgf ==nil {return false ;};_ ,_gfaee :=_bgfgf .Colorspaces [string (keyName )];return _gfaee ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_bff :=NewPdfAction ();_dagd :=&PdfActionURI {};_dagd .PdfAction =_bff ;_bff .SetContext (_dagd );return _dagd ;};var _adgga =_daf .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func (_edg *PdfReader )newPdfActionGotoFromDict (_fcd *_ae .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fcd .Get ("\u0044")},nil ;
};func (_fddb *PdfReader )newPdfAcroFormFromDict (_aggd *_ae .PdfIndirectObject ,_cdaec *_ae .PdfObjectDictionary )(*PdfAcroForm ,error ){_gbefc :=NewPdfAcroForm ();if _aggd !=nil {_gbefc ._egefe =_aggd ;_aggd .PdfObject =_ae .MakeDict ();};if _bdebf :=_cdaec .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");
_bdebf !=nil &&!_ae .IsNullObject (_bdebf ){_cbgd ,_edgdc :=_ae .GetArray (_bdebf );if !_edgdc {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_bdebf );
};var _efbed []*PdfField ;for _ ,_gdff :=range _cbgd .Elements (){_daeg ,_adeg :=_ae .GetIndirect (_gdff );if !_adeg {if _ ,_aefef :=_gdff .(*_ae .PdfObjectNull );_aefef {_fgb .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_fgb .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gdff );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ccfag ,_dafe :=_fddb .newPdfFieldFromIndirectObject (_daeg ,nil );
if _dafe !=nil {return nil ,_dafe ;};_fgb .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ccfag );_efbed =append (_efbed ,_ccfag );};_gbefc .Fields =&_efbed ;};if _dabb :=_cdaec .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_dabb !=nil {_gfga ,_gbbba :=_ae .GetBool (_dabb );if _gbbba {_gbefc .NeedAppearances =_gfga ;}else {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dabb );
};};if _bbdc :=_cdaec .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bbdc !=nil {_agbeb ,_dddgc :=_ae .GetInt (_bbdc );if _dddgc {_gbefc .SigFlags =_agbeb ;}else {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbdc );
};};if _dacdb :=_cdaec .Get ("\u0043\u004f");_dacdb !=nil {_efbge ,_egbg :=_ae .GetArray (_dacdb );if _egbg {_gbefc .CO =_efbge ;}else {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dacdb );
};};if _ccfaa :=_cdaec .Get ("\u0044\u0052");_ccfaa !=nil {if _eeafe ,_ccgaf :=_ae .GetDict (_ccfaa );_ccgaf {_egbf ,_bfbde :=NewPdfPageResourcesFromDict (_eeafe );if _bfbde !=nil {_fgb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_bfbde );
return nil ,_bfbde ;};_gbefc .DR =_egbf ;}else {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ccfaa );};};if _cefgf :=_cdaec .Get ("\u0044\u0041");
_cefgf !=nil {_efce ,_ffafe :=_ae .GetString (_cefgf );if _ffafe {_gbefc .DA =_efce ;}else {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cefgf );
};};if _gccfa :=_cdaec .Get ("\u0051");_gccfa !=nil {_dbdg ,_feca :=_ae .GetInt (_gccfa );if _feca {_gbefc .Q =_dbdg ;}else {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gccfa );
};};if _gcced :=_cdaec .Get ("\u0058\u0046\u0041");_gcced !=nil {_gbefc .XFA =_gcced ;};if _afcede :=_cdaec .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_afcede !=nil {_gbefc .ADBEEchoSign =_afcede ;};_gbefc .ToPdfObject ();
return _gbefc ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_ffddb *PdfField )Flags ()FieldFlag {var _fceg FieldFlag ;_fcccd ,_ceaef :=_ffddb .inherit (func (_gdede *PdfField )bool {if _gdede .Ff !=nil {_fceg =FieldFlag (*_gdede .Ff );return true ;};return false ;});if _ceaef !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ceaef );
};if !_fcccd {_fgb .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _fceg ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_bfbfd *PdfPageResources )GetXObjectFormByName (keyName _ae .PdfObjectName )(*XObjectForm ,error ){_bbead ,_bccacd :=_bfbfd .GetXObjectByName (keyName );if _bbead ==nil {return nil ,nil ;};if _bccacd !=XObjectTypeForm {return nil ,_ed .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_ddbac ,_efabb :=NewXObjectFormFromStream (_bbead );if _efabb !=nil {return nil ,_efabb ;};return _ddbac ,nil ;};func _fdef (_gccg *_ae .PdfObjectDictionary ,_dagcf *fontCommon )(*pdfCIDFontType2 ,error ){if _dagcf ._aacd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fgb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dagcf );
return nil ,_ae .ErrRangeError ;};_cgaef :=_ecgea (_dagcf );_fadd ,_dgdd :=_ae .GetDict (_gccg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dgdd {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dagcf );
return nil ,ErrRequiredAttributeMissing ;};_cgaef .CIDSystemInfo =_fadd ;_cgaef .DW =_gccg .Get ("\u0044\u0057");_cgaef .W =_gccg .Get ("\u0057");_cgaef .DW2 =_gccg .Get ("\u0044\u0057\u0032");_cgaef .W2 =_gccg .Get ("\u0057\u0032");_cgaef .CIDToGIDMap =_gccg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_cgaef ._addgb =1000.0;if _aaea ,_abdgd :=_ae .GetNumberAsFloat (_cgaef .DW );_abdgd ==nil {_cgaef ._addgb =_aaea ;};_fbad ,_gcdae :=_feage (_cgaef .W );if _gcdae !=nil {return nil ,_gcdae ;};if _fbad ==nil {_fbad =map[_ddd .CharCode ]float64 {};};_cgaef ._faegb =_fbad ;
return _cgaef ,nil ;};func (_gabe *PdfReader )newPdfAnnotationRichMediaFromDict (_dge *_ae .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_eecc :=&PdfAnnotationRichMedia {};_eecc .RichMediaSettings =_dge .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_eecc .RichMediaContent =_dge .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _eecc ,nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_fdad *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_efde ,_ ,_cbfde :=_fdad .CharcodesToUnicodeWithStats (_fdad .BytesToCharcodes (data ));_gfceg :=_ddd .ExpandLigatures (_efde );return _gfceg ,_cd .RuneCountInString (_gfceg ),_cbfde ;
};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_eddb *_ae .PdfIndirectObject ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_afggf *PdfPage )Size ()(float64 ,float64 ,error ){_ccfeb ,_cegd :=_afggf .GetMediaBox ();if _cegd !=nil {return 0,0,_cegd ;};_abfb ,_eceec :=_ccfeb .Width (),_ccfeb .Height ();_aggde ,_cegd :=_afggf .GetRotate ();if _cegd !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_cegd .Error ());
};if _bcdbe :=_aggde ;_bcdbe %360!=0&&_bcdbe %90==0{if _efcdf :=(360+_bcdbe %360)%360;_efcdf ==90||_efcdf ==270{_abfb ,_eceec =_eceec ,_abfb ;};};return _abfb ,_eceec ,nil ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// SetAnnotations sets the annotations list.
func (_gabb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gabb ._gacdb =annotations };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eadcce *PdfShadingType3 )ToPdfObject ()_ae .PdfObject {_eadcce .PdfShading .ToPdfObject ();_bbgab ,_dacfc :=_eadcce .getShadingDict ();if _dacfc !=nil {_fgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eadcce .Coords !=nil {_bbgab .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_eadcce .Coords );};if _eadcce .Domain !=nil {_bbgab .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eadcce .Domain );};if _eadcce .Function !=nil {if len (_eadcce .Function )==1{_bbgab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eadcce .Function [0].ToPdfObject ());
}else {_bcgdg :=_ae .MakeArray ();for _ ,_beebe :=range _eadcce .Function {_bcgdg .Append (_beebe .ToPdfObject ());};_bbgab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcgdg );};};if _eadcce .Extend !=nil {_bbgab .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_eadcce .Extend );
};return _eadcce ._dgbdcg ;};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _ae .PdfObject )(*EmbeddedFile ,error ){_cecdc :=_ae .TraceToDirectObject (obj );_eabcg ,_aafe :=_cecdc .(*_ae .PdfObjectDictionary );if !_aafe {return nil ,_ed .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_eccdb :=_ae .TraceToDirectObject (_eabcg .Get ("\u0046"));if _eccdb ==nil {return nil ,_ed .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_dfbg ,_aafe :=_eccdb .(*_ae .PdfObjectStream );
if !_aafe {return nil ,_ed .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_abec :=_dfbg .PdfObjectDictionary ;_gedb :=_abec .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _gedb ==nil {return nil ,_ed .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_gfbc ,_aafe :=_gedb .(*_ae .PdfObjectDictionary );if !_aafe {return nil ,_ed .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_gbdf :="";_bfcaa :=_gfbc .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _bfcaa !=nil {_gbdf =_bfcaa .(*_ae .PdfObjectString ).Str ();};_cbfg ,_gfgd :=_ae .DecodeStream (_dfbg );if _gfgd !=nil {return nil ,_gfgd ;};_dege :=&EmbeddedFile {Content :_cbfg ,Hash :_gbdf };return _dege ,nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_ae .PdfObject ,error );};func (_edbad *PdfReader )loadStructure ()error {if _edbad ._dgadd .GetCrypter ()!=nil &&!_edbad ._dgadd .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_accbaa :=_edbad ._dgadd .GetTrailer ();if _accbaa ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_aeegc ,_fgbd :=_accbaa .Get ("\u0052\u006f\u006f\u0074").(*_ae .PdfObjectReference );if !_fgbd {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_accbaa );
};_fdfag ,_fdddg :=_edbad ._dgadd .LookupByReference (*_aeegc );if _fdddg !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fdddg );
return _fdddg ;};_ccagd ,_fgbd :=_fdfag .(*_ae .PdfIndirectObject );if !_fgbd {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fdfag ,*_accbaa );
return _ed .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eebdf ,_fgbd :=(*_ccagd ).PdfObject .(*_ae .PdfObjectDictionary );if !_fgbd {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_ccagd .PdfObject );
return _ed .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fgb .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eebdf );_acgf ,_fgbd :=_eebdf .Get ("\u0050\u0061\u0067e\u0073").(*_ae .PdfObjectReference );
if !_fgbd {return _ed .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_abdb ,_fdddg :=_edbad ._dgadd .LookupByReference (*_acgf );
if _fdddg !=nil {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _fdddg ;};_fgggbe ,_fgbd :=_abdb .(*_ae .PdfIndirectObject );if !_fgbd {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_fgb .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fgggbe );return _ed .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gacfe ,_fgbd :=_fgggbe .PdfObject .(*_ae .PdfObjectDictionary );if !_fgbd {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fgggbe );
return _ed .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_fdbff ,_fgbd :=_ae .GetInt (_gacfe .Get ("\u0043\u006f\u0075n\u0074"));if !_fgbd {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ed .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_fgbd =_ae .GetName (_gacfe .Get ("\u0054\u0079\u0070\u0065"));!_fgbd {_fgb .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_gacfe .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0050\u0061\u0067e\u0073"));};if _eecec ,_egdea :=_ae .GetInt (_gacfe .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_egdea {_bdcec :=int64 (*_eecec );_edbad .Rotate =&_bdcec ;};_edbad ._aefg =_aeegc ;
_edbad ._eedde =_eebdf ;_edbad ._gefcg =_gacfe ;_edbad ._cada =_fgggbe ;_edbad ._bbbdc =int (*_fdbff );_edbad ._cafea =[]*_ae .PdfIndirectObject {};_fcbaf :=map[_ae .PdfObject ]struct{}{};_fdddg =_edbad .buildPageList (_fgggbe ,nil ,_fcbaf );if _fdddg !=nil {return _fdddg ;
};_fgb .Log .Trace ("\u002d\u002d\u002d");_fgb .Log .Trace ("\u0054\u004f\u0043");_fgb .Log .Trace ("\u0050\u0061\u0067e\u0073");_fgb .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_edbad ._cafea ),_edbad ._cafea );_edbad ._beeag ,_fdddg =_edbad .loadOutlines ();
if _fdddg !=nil {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_fdddg );
return _fdddg ;};_edbad .AcroForm ,_fdddg =_edbad .loadForms ();if _fdddg !=nil {return _fdddg ;};_edbad .DSS ,_fdddg =_edbad .loadDSS ();if _fdddg !=nil {return _fdddg ;};_edbad ._dagg ,_fdddg =_edbad .loadPerms ();if _fdddg !=nil {return _fdddg ;};return nil ;
};func _adceb ()string {_bgafe .Lock ();defer _bgafe .Unlock ();return _fcbef };

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dgeg *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_ae .PdfObjectString ;Q *_ae .PdfObjectInteger ;DS *_ae .PdfObjectString ;RV _ae .PdfObject ;MaxLen *_ae .PdfObjectInteger ;};func _agdd ()_db .Time {_bgafe .Lock ();defer _bgafe .Unlock ();return _dcece };func (_ffaae *PdfReader )newPdfOutlineItemFromIndirectObject (_eegag *_ae .PdfIndirectObject )(*PdfOutlineItem ,error ){_fgfbe ,_bdebg :=_eegag .PdfObject .(*_ae .PdfObjectDictionary );
if !_bdebg {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_babegd :=NewPdfOutlineItem ();_agebe :=_fgfbe .Get ("\u0054\u0069\u0074l\u0065");
if _agebe ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_afga ,_gefc :=_ae .GetString (_agebe );if !_gefc {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_agebe );};_babegd .Title =_afga ;if _cebdb :=_fgfbe .Get ("\u0043\u006f\u0075n\u0074");
_cebdb !=nil {_ccea ,_eeada :=_cebdb .(*_ae .PdfObjectInteger );if !_eeada {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_cebdb );};_dbgee :=int64 (*_ccea );
_babegd .Count =&_dbgee ;};if _dgeae :=_fgfbe .Get ("\u0044\u0065\u0073\u0074");_dgeae !=nil {_babegd .Dest =_ae .ResolveReference (_dgeae );if !_ffaae ._fedag {_ffgac :=_ffaae .traverseObjectData (_babegd .Dest );if _ffgac !=nil {return nil ,_ffgac ;};
};};if _efbdc :=_fgfbe .Get ("\u0041");_efbdc !=nil {_babegd .A =_ae .ResolveReference (_efbdc );if !_ffaae ._fedag {_gecd :=_ffaae .traverseObjectData (_babegd .A );if _gecd !=nil {return nil ,_gecd ;};};};if _cafa :=_fgfbe .Get ("\u0053\u0045");_cafa !=nil {_babegd .SE =nil ;
};if _edcb :=_fgfbe .Get ("\u0043");_edcb !=nil {_babegd .C =_ae .ResolveReference (_edcb );};if _fbagg :=_fgfbe .Get ("\u0046");_fbagg !=nil {_babegd .F =_ae .ResolveReference (_fbagg );};return _babegd ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _ae .PdfObject ;};var _dfbeb =false ;func (_efcc PdfFont )actualFont ()pdfFont {if _efcc ._efgfa ==nil {_fgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_efcc );
};return _efcc ._efgfa ;};

// ToPdfObject implements interface PdfModel.
func (_ded *PdfAnnotationSquiggly )ToPdfObject ()_ae .PdfObject {_ded .PdfAnnotation .ToPdfObject ();_eag :=_ded ._gggg ;_abfc :=_eag .PdfObject .(*_ae .PdfObjectDictionary );_ded .PdfAnnotationMarkup .appendToPdfDictionary (_abfc );_abfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_abfc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ded .QuadPoints );return _eag ;};

// C returns the value of the C component of the color.
func (_gfbd *PdfColorCalRGB )C ()float64 {return _gfbd [2]};

// ToPdfObject implements interface PdfModel.
func (_eabb *PdfAnnotationCircle )ToPdfObject ()_ae .PdfObject {_eabb .PdfAnnotation .ToPdfObject ();_bfd :=_eabb ._gggg ;_bebd :=_bfd .PdfObject .(*_ae .PdfObjectDictionary );_eabb .PdfAnnotationMarkup .appendToPdfDictionary (_bebd );_bebd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_bebd .SetIfNotNil ("\u0042\u0053",_eabb .BS );_bebd .SetIfNotNil ("\u0049\u0043",_eabb .IC );_bebd .SetIfNotNil ("\u0042\u0045",_eabb .BE );_bebd .SetIfNotNil ("\u0052\u0044",_eabb .RD );return _bfd ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_cadeg *_ae .PdfObjectDictionary ;Type *_ae .PdfObjectName ;TransformMethod *_ae .PdfObjectName ;TransformParams _ae .PdfObject ;Data _ae .PdfObject ;DigestMethod *_ae .PdfObjectName ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_acga ,_gdcde :=_b .Open (filePath );if _gdcde !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gdcde );
return nil ,_gdcde ;};defer _acga .Close ();return NewPdfFontFromTTF (_acga );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dfcad pdfCIDFontType0 )GetCharMetrics (code _ddd .CharCode )(_dde .CharMetrics ,bool ){_gedee :=_dfcad ._fffd ;if _feeff ,_aeedf :=_dfcad ._edgd [code ];_aeedf {_gedee =_feeff ;};return _dde .CharMetrics {Wx :_gedee },true ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_feddg :_ae .MakeDict ()};
};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_cfaad :=&XObjectForm {};_aggb :=&_ae .PdfObjectStream {};_aggb .PdfObjectDictionary =_ae .MakeDict ();_cfaad ._ffcgb =_aggb ;return _cfaad ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _ae .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _ae .PdfObject ;Contents _ae .PdfObject ;
Rotate *int64 ;Group _ae .PdfObject ;Thumb _ae .PdfObject ;B _ae .PdfObject ;Dur _ae .PdfObject ;Trans _ae .PdfObject ;AA _ae .PdfObject ;Metadata _ae .PdfObject ;PieceInfo _ae .PdfObject ;StructParents _ae .PdfObject ;ID _ae .PdfObject ;PZ _ae .PdfObject ;
SeparationInfo _ae .PdfObject ;Tabs _ae .PdfObject ;TemplateInstantiated _ae .PdfObject ;PresSteps _ae .PdfObject ;UserUnit _ae .PdfObject ;VP _ae .PdfObject ;Annots _ae .PdfObject ;_gacdb []*PdfAnnotation ;_efdff *_ae .PdfObjectDictionary ;_dfgbfb *_ae .PdfIndirectObject ;
_gdddbf _ae .PdfObjectDictionary ;_fadgc *PdfReader ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_eaede *PdfPageResources )GetXObjectByName (keyName _ae .PdfObjectName )(*_ae .PdfObjectStream ,XObjectType ){if _eaede .XObject ==nil {return nil ,XObjectTypeUndefined ;};_edbc ,_fadda :=_ae .TraceToDirectObject (_eaede .XObject ).(*_ae .PdfObjectDictionary );
if !_fadda {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ae .TraceToDirectObject (_eaede .XObject ));
return nil ,XObjectTypeUndefined ;};if _edebf :=_edbc .Get (keyName );_edebf !=nil {_fddab ,_dbcdd :=_ae .GetStream (_edebf );if !_dbcdd {_fgb .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_edebf );
return nil ,XObjectTypeUndefined ;};_bcgdd :=_fddab .PdfObjectDictionary ;_aegaf ,_dbcdd :=_ae .TraceToDirectObject (_bcgdd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_ae .PdfObjectName );if !_dbcdd {_fgb .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_bcgdd .String ());
return nil ,XObjectTypeUndefined ;};if *_aegaf =="\u0049\u006d\u0061g\u0065"{return _fddab ,XObjectTypeImage ;}else if *_aegaf =="\u0046\u006f\u0072\u006d"{return _fddab ,XObjectTypeForm ;}else if *_aegaf =="\u0050\u0053"{return _fddab ,XObjectTypePS ;
}else {_fgb .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_aegaf );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// ToPdfObject implements interface PdfModel.
func (_deeg *PdfAnnotationHighlight )ToPdfObject ()_ae .PdfObject {_deeg .PdfAnnotation .ToPdfObject ();_cfda :=_deeg ._gggg ;_cdf :=_cfda .PdfObject .(*_ae .PdfObjectDictionary );_deeg .PdfAnnotationMarkup .appendToPdfDictionary (_cdf );_cdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_cdf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_deeg .QuadPoints );return _cfda ;};func (_bgd *PdfReader )newPdfAnnotationSquigglyFromDict (_fagbc *_ae .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_eeff :=PdfAnnotationSquiggly {};
_dagf ,_abb :=_bgd .newPdfAnnotationMarkupFromDict (_fagbc );if _abb !=nil {return nil ,_abb ;};_eeff .PdfAnnotationMarkup =_dagf ;_eeff .QuadPoints =_fagbc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eeff ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_cfb :=NewPdfAction ();_edb :=&PdfActionGoToR {};_edb .PdfAction =_cfb ;_cfb .SetContext (_edb );return _edb ;};

// IsShading specifies if the pattern is a shading pattern.
func (_adedd *PdfPattern )IsShading ()bool {return _adedd .PatternType ==2};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func (_gbbcb fontCommon )coreString ()string {_fcfb :="";if _gbbcb ._cdge !=nil {_fcfb =_gbbcb ._cdge .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_gbbcb ._aacd ,_gbbcb ._bfeb ,_gbbcb ._ccgc ,_gbbcb ._fcfcg ,_gbbcb ._afda !=nil ,_gbbcb .fontFlags (),_fcfb );
};

// SetContentStream sets the pattern cell's content stream.
func (_acdg *PdfTilingPattern )SetContentStream (content []byte ,encoder _ae .StreamEncoder )error {_gcaea ,_edcbd :=_acdg ._ccdf .(*_ae .PdfObjectStream );if !_edcbd {_fgb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acdg ._ccdf );
return _ae .ErrTypeError ;};if encoder ==nil {encoder =_ae .NewRawEncoder ();};_cgfe :=_gcaea .PdfObjectDictionary ;_agbcg :=encoder .MakeStreamDict ();_cgfe .Merge (_agbcg );_cgffg ,_gcfgf :=encoder .EncodeBytes (content );if _gcfgf !=nil {return _gcfgf ;
};_cgfe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ae .MakeInteger (int64 (len (_cgffg ))));_gcaea .Stream =_cgffg ;return nil ;};func (_ccad *PdfReader )newPdfAnnotationHighlightFromDict (_ccbaf *_ae .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_efgf :=PdfAnnotationHighlight {};
_ccab ,_agd :=_ccad .newPdfAnnotationMarkupFromDict (_ccbaf );if _agd !=nil {return nil ,_agd ;};_efgf .PdfAnnotationMarkup =_ccab ;_efgf .QuadPoints =_ccbaf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_efgf ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_adcef *PdfPageResources )GetPatternByName (keyName _ae .PdfObjectName )(*PdfPattern ,bool ){if _adcef .Pattern ==nil {return nil ,false ;};_defeb ,_gcbbac :=_ae .TraceToDirectObject (_adcef .Pattern ).(*_ae .PdfObjectDictionary );if !_gcbbac {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adcef .Pattern );
return nil ,false ;};if _bffee :=_defeb .Get (keyName );_bffee !=nil {_gdabe ,_dabee :=_baddc (_bffee );if _dabee !=nil {_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dabee );
return nil ,false ;};return _gdabe ,true ;};return nil ,false ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_gaaba *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_ddgf ,_adcc :=color .(*PdfColorCalGray );if !_adcc {_fgb .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_ddgf .Val ();X :=_gaaba .WhitePoint [0]*_ce .Pow (ANorm ,_gaaba .Gamma );Y :=_gaaba .WhitePoint [1]*_ce .Pow (ANorm ,_gaaba .Gamma );
Z :=_gaaba .WhitePoint [2]*_ce .Pow (ANorm ,_gaaba .Gamma );_effc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ebaf :=-0.969256*X +1.875992*Y +0.041556*Z ;_gbbe :=0.055648*X +-0.204043*Y +1.057311*Z ;_effc =_ce .Min (_ce .Max (_effc ,0),1.0);_ebaf =_ce .Min (_ce .Max (_ebaf ,0),1.0);
_gbbe =_ce .Min (_ce .Max (_gbbe ,0),1.0);return NewPdfColorDeviceRGB (_effc ,_ebaf ,_gbbe ),nil ;};

// AddOCSPs adds OCSPs to DSS.
func (_dadd *DSS )AddOCSPs (ocsps [][]byte )([]*_ae .PdfObjectStream ,error ){return _dadd .add (&_dadd .OCSPs ,_dadd ._gefb ,ocsps );};func (_bbagb *PdfWriter )setCatalogVersion (){_bbagb ._gefce .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_ae .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_bbagb ._beabf .Major ,_bbagb ._beabf .Minor )));
};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _fgg .ReadSeeker )(*PdfFont ,error ){_gacf ,_effb :=_acf .ReadAll (r );if _effb !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_effb );
return nil ,_effb ;};_gbgbaf ,_effb :=_dde .TtfParse (_fga .NewReader (_gacf ));if _effb !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_effb );
return nil ,_effb ;};_dacdg :=&pdfCIDFontType2 {fontCommon :fontCommon {_aacd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_ae .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_gbgbaf .Widths )<=0{return nil ,_ed .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bfdbb :=1000.0/float64 (_gbgbaf .UnitsPerEm );_decba :=_bfdbb *float64 (_gbgbaf .Widths [0]);_efgab :=make (map[rune ]int );_dffe :=make (map[_dde .GID ]int );_cedc :=_dde .GID (len (_gbgbaf .Widths ));for _cbab ,_dedge :=range _gbgbaf .Chars {if _dedge > _cedc -1{continue ;
};_eggaa :=int (_bfdbb *float64 (_gbgbaf .Widths [_dedge ]));_efgab [_cbab ]=_eggaa ;_dffe [_dedge ]=_eggaa ;};_dacdg ._afced =_efgab ;_dacdg .DW =_ae .MakeInteger (int64 (_decba ));_aefdc :=_eaaa (_dffe ,uint16 (_cedc ));_dacdg .W =_ae .MakeIndirectObject (_aefdc );
_gceb :=_ae .MakeDict ();_gceb .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_ae .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gceb .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_ae .MakeString ("\u0041\u0064\u006fb\u0065"));
_gceb .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_ae .MakeInteger (0));_dacdg .CIDSystemInfo =_gceb ;_bcffg :=&PdfFontDescriptor {FontName :_ae .MakeName (_gbgbaf .PostScriptName ),Ascent :_ae .MakeFloat (_bfdbb *float64 (_gbgbaf .TypoAscender )),Descent :_ae .MakeFloat (_bfdbb *float64 (_gbgbaf .TypoDescender )),CapHeight :_ae .MakeFloat (_bfdbb *float64 (_gbgbaf .CapHeight )),FontBBox :_ae .MakeArrayFromFloats ([]float64 {_bfdbb *float64 (_gbgbaf .Xmin ),_bfdbb *float64 (_gbgbaf .Ymin ),_bfdbb *float64 (_gbgbaf .Xmax ),_bfdbb *float64 (_gbgbaf .Ymax )}),ItalicAngle :_ae .MakeFloat (_gbgbaf .ItalicAngle ),MissingWidth :_ae .MakeFloat (_decba )};
_ebgdc ,_effb :=_ae .MakeStream (_gacf ,_ae .NewFlateEncoder ());if _effb !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_effb );
return nil ,_effb ;};_ebgdc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ae .MakeInteger (int64 (len (_gacf ))));_bcffg .FontFile2 =_ebgdc ;if _gbgbaf .Bold {_bcffg .StemV =_ae .MakeInteger (120);}else {_bcffg .StemV =_ae .MakeInteger (70);
};_abcbca :=_bgcad ;if _gbgbaf .IsFixedPitch {_abcbca |=_cegg ;};if _gbgbaf .ItalicAngle !=0{_abcbca |=_cege ;};_bcffg .Flags =_ae .MakeInteger (int64 (_abcbca ));_dacdg ._bfeb =_gbgbaf .PostScriptName ;_dacdg ._cdge =_bcffg ;_decga :=pdfFontType0 {fontCommon :fontCommon {_aacd :"\u0054\u0079\u0070e\u0030",_bfeb :_gbgbaf .PostScriptName },DescendantFont :&PdfFont {_efgfa :_dacdg },Encoding :_ae .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_abgde :_gbgbaf .NewEncoder ()};
if len (_gbgbaf .Chars )> 0{_fcacb :=make (map[_fe .CharCode ]rune ,len (_gbgbaf .Chars ));for _aagf ,_bdadb :=range _gbgbaf .Chars {_eebe :=_fe .CharCode (_bdadb );if _fabdf ,_egbe :=_fcacb [_eebe ];!_egbe ||(_egbe &&_fabdf > _aagf ){_fcacb [_eebe ]=_aagf ;
};};_decga ._babge =_fe .NewToUnicodeCMap (_fcacb );};_aebg :=PdfFont {_efgfa :&_decga };return &_aebg ,nil ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func _cacgb (_bfdb *_ae .PdfObjectDictionary ,_edcc *fontCommon )(*pdfFontType0 ,error ){_aefd ,_aacda :=_ae .GetArray (_bfdb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_aacda {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_edcc );
return nil ,_ae .ErrRangeError ;};if _aefd .Len ()!=1{_fgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_aefd .Len ());return nil ,_ae .ErrRangeError ;
};_daaaa ,_ggdgd :=_baga (_aefd .Get (0),false );if _ggdgd !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_ggdgd ,_edcc );
return nil ,_ggdgd ;};_gdbaa :=_bfdb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_agfb :="";_aegdd :=_gegb (_edcc );_aegdd .DescendantFont =_daaaa ;switch _cbbga :=_gdbaa .(type ){case *_ae .PdfObjectName :_agfb ,_aacda =_ae .GetNameVal (_gdbaa );
if _aacda {if _agfb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_agfb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_aegdd ._abgde =_ddd .NewIdentityTextEncoder (_agfb );}else if _fe .IsPredefinedCMap (_agfb ){_aegdd ._dbfa ,_ggdgd =_fe .LoadPredefinedCMap (_agfb );
if _ggdgd !=nil {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_agfb ,_ggdgd );
};}else {_fgb .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_agfb );};};case *_ae .PdfObjectStream :if _aegdd ._afda ==nil {_gcec ,_cgge :=_fe .NewCIDSystemInfo (_cbbga .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _cgge !=nil {_fgb .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_cgge );};_abba :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gcec .Registry ,_gcec .Ordering );
if _fe .IsPredefinedCMap (_abba ){_aegdd ._dbfa ,_cgge =_fe .LoadPredefinedCMap (_abba );if _cgge !=nil {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_abba ,_cgge );
};}else {_abba =_cbbga .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_cefdb ,_dadc :=_ae .DecodeStream (_cbbga );if _dadc !=nil {_fgb .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_dadc );
return _aegdd ,_dadc ;};if _gbccf :=_abba =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_abba =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_gbccf {_aegdd ._dbfa ,_dadc =_fe .LoadCmapFromData (_cefdb ,_gbccf );
if _dadc !=nil {_fgb .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_dadc ,string (_cefdb ));
return _aegdd ,_dadc ;};_bdca :=make (map[_fe .CharCode ]rune ,256);for _agff :=0x00;_agff <=0xFF;_agff ++{_bdca [_fe .CharCode (_agff )]=rune (_agff );};_aegdd ._babge =_fe .NewToUnicodeCMap (_bdca );};};};};if _ebaca :=_daaaa .baseFields ()._babge ;_ebaca !=nil {if _edcea :=_ebaca .Name ();
_edcea =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_edcea =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_edcea =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_edcea =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_aegdd ._abgde =_ddd .NewCMapEncoder (_agfb ,_aegdd ._dbfa ,_ebaca );
};};return _aegdd ,nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ffddgb *pdfCIDFontType0 )ToPdfObject ()_ae .PdfObject {return _ae .MakeNull ()};func (_cdgfd *PdfWriter )writeXRefStreams (_abddb int ,_dffb int64 )error {_gadba :=_abddb +1;_cdgfd ._eddaf [_gadba ]=crossReference {Type :1,ObjectNumber :_gadba ,Offset :_dffb };
_ffde :=_fga .NewBuffer (nil );_gcab :=_ae .MakeArray ();for _fddfe :=0;_fddfe <=_abddb ;{for ;_fddfe <=_abddb ;_fddfe ++{_edabgb ,_gbabd :=_cdgfd ._eddaf [_fddfe ];if _gbabd &&(!_cdgfd ._edcfb ||_cdgfd ._edcfb &&(_edabgb .Type ==1&&_edabgb .Offset >=_cdgfd ._aagd ||_edabgb .Type ==0)){break ;
};};var _decad int ;for _decad =_fddfe +1;_decad <=_abddb ;_decad ++{_aaabc ,_cfdcd :=_cdgfd ._eddaf [_decad ];if _cfdcd &&(!_cdgfd ._edcfb ||_cdgfd ._edcfb &&(_aaabc .Type ==1&&_aaabc .Offset > _cdgfd ._aagd )){continue ;};break ;};_gcab .Append (_ae .MakeInteger (int64 (_fddfe )),_ae .MakeInteger (int64 (_decad -_fddfe )));
for _cegdb :=_fddfe ;_cegdb < _decad ;_cegdb ++{_afebc :=_cdgfd ._eddaf [_cegdb ];switch _afebc .Type {case 0:_dg .Write (_ffde ,_dg .BigEndian ,byte (0));_dg .Write (_ffde ,_dg .BigEndian ,uint32 (0));_dg .Write (_ffde ,_dg .BigEndian ,uint16 (0xFFFF));
case 1:_dg .Write (_ffde ,_dg .BigEndian ,byte (1));_dg .Write (_ffde ,_dg .BigEndian ,uint32 (_afebc .Offset ));_dg .Write (_ffde ,_dg .BigEndian ,uint16 (_afebc .Generation ));case 2:_dg .Write (_ffde ,_dg .BigEndian ,byte (2));_dg .Write (_ffde ,_dg .BigEndian ,uint32 (_afebc .ObjectNumber ));
_dg .Write (_ffde ,_dg .BigEndian ,uint16 (_afebc .Index ));};};_fddfe =_decad +1;};_egbeg ,_fbdcc :=_ae .MakeStream (_ffde .Bytes (),_ae .NewFlateEncoder ());if _fbdcc !=nil {return _fbdcc ;};_egbeg .ObjectNumber =int64 (_gadba );_egbeg .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0058\u0052\u0065\u0066"));
_egbeg .PdfObjectDictionary .Set ("\u0057",_ae .MakeArray (_ae .MakeInteger (1),_ae .MakeInteger (4),_ae .MakeInteger (2)));_egbeg .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_gcab );_egbeg .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_ae .MakeInteger (int64 (_gadba )));
_egbeg .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cdgfd ._efeee );_egbeg .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cdgfd ._acabbb );if _cdgfd ._edcfb &&_cdgfd ._gcgee > 0{_egbeg .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_ae .MakeInteger (_cdgfd ._gcgee ));
};if _cdgfd ._acgbb !=nil {_egbeg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cdgfd ._bebbc );};if _cdgfd ._cfaba ==nil &&_cdgfd ._bbaae !=""&&_cdgfd ._aacg !=""{_cdgfd ._cfaba =_ae .MakeArray (_ae .MakeHexString (_cdgfd ._bbaae ),_ae .MakeHexString (_cdgfd ._aacg ));
};if _cdgfd ._cfaba !=nil {_fgb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cdgfd ._cfaba );_egbeg .Set ("\u0049\u0044",_cdgfd ._cfaba );};_cdgfd .writeObject (int (_egbeg .ObjectNumber ),_egbeg );return nil ;};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_dfgbfd *Names )ToPdfObject ()_ae .PdfObject {_cbfec :=_dfgbfd ._ecdd ;_fgbe ,_ddbe :=_cbfec .PdfObject .(*_ae .PdfObjectDictionary );if !_ddbe {_fgb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
return _cbfec ;};if _dfgbfd .EmbeddedFiles !=nil {_fgbe .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_ae .MakeIndirectObject (_dfgbfd .EmbeddedFiles ));};return _cbfec ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_ggdag *XObjectImage )GetContainingPdfObject ()_ae .PdfObject {return _ggdag ._facff };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_gcede *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccgac :=vals [0];if _ccgac < 0.0||_ccgac > 100.0{_fgb .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ccgac );
return nil ,ErrColorOutOfRange ;};_ddad :=vals [1];_abad :=float64 (-100);_fdbg :=float64 (100);if len (_gcede .Range )> 1{_abad =_gcede .Range [0];_fdbg =_gcede .Range [1];};if _ddad < _abad ||_ddad > _fdbg {_fgb .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ddad ,_abad ,_fdbg );
return nil ,ErrColorOutOfRange ;};_aeef :=vals [2];_ggafa :=float64 (-100);_bdbc :=float64 (100);if len (_gcede .Range )> 3{_ggafa =_gcede .Range [2];_bdbc =_gcede .Range [3];};if _aeef < _ggafa ||_aeef > _bdbc {_fgb .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_aeef ,_ggafa ,_bdbc );
return nil ,ErrColorOutOfRange ;};_gfaed :=NewPdfColorLab (_ccgac ,_ddad ,_aeef );return _gfaed ,nil ;};func (_dcbdc *PdfWriter )addObjects (_aaafa _ae .PdfObject )error {_fgb .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _cfffc ,_gfgac :=_aaafa .(*_ae .PdfIndirectObject );_gfgac {_fgb .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_fgb .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_aaafa ,_cfffc );_fgb .Log .Trace ("\u002d\u0020\u0025\u0073",_cfffc .PdfObject );
if _dcbdc .addObject (_cfffc ){_gddb :=_dcbdc .addObjects (_cfffc .PdfObject );if _gddb !=nil {return _gddb ;};};return nil ;};if _bgdeb ,_dbcef :=_aaafa .(*_ae .PdfObjectStream );_dbcef {_fgb .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_fgb .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_aaafa ,_aaafa );
if _dcbdc .addObject (_bgdeb ){_ccfbc :=_dcbdc .addObjects (_bgdeb .PdfObjectDictionary );if _ccfbc !=nil {return _ccfbc ;};};return nil ;};if _ecegb ,_bbdf :=_aaafa .(*_ae .PdfObjectDictionary );_bbdf {_fgb .Log .Trace ("\u0044\u0069\u0063\u0074");_fgb .Log .Trace ("\u002d\u0020\u0025\u0073",_aaafa );
for _ ,_bdggg :=range _ecegb .Keys (){_cgegf :=_ecegb .Get (_bdggg );if _efcee ,_bccf :=_cgegf .(*_ae .PdfObjectReference );_bccf {_cgegf =_efcee .Resolve ();_ecegb .Set (_bdggg ,_cgegf );};if _bdggg !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bbefd :=_dcbdc .addObjects (_cgegf );
_bbefd !=nil {return _bbefd ;};}else {if _ ,_cbggg :=_cgegf .(*_ae .PdfObjectNull );_cbggg {continue ;};if _gddde :=_dcbdc .hasObject (_cgegf );!_gddde {_fgb .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_cgegf ,_cgegf ,_cgegf );
_dcbdc ._agacb [_cgegf ]=append (_dcbdc ._agacb [_cgegf ],_ecegb );};};};return nil ;};if _aefa ,_eddde :=_aaafa .(*_ae .PdfObjectArray );_eddde {_fgb .Log .Trace ("\u0041\u0072\u0072a\u0079");_fgb .Log .Trace ("\u002d\u0020\u0025\u0073",_aaafa );if _aefa ==nil {return _ed .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _faegd ,_cddfb :=range _aefa .Elements (){if _edgea ,_fcefa :=_cddfb .(*_ae .PdfObjectReference );_fcefa {_cddfb =_edgea .Resolve ();_aefa .Set (_faegd ,_cddfb );};if _bbfba :=_dcbdc .addObjects (_cddfb );_bbfba !=nil {return _bbfba ;};};return nil ;
};if _ ,_eecba :=_aaafa .(*_ae .PdfObjectReference );_eecba {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_aaafa );
return _ed .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_bcda *PdfSignature )GetDocMDPPermission ()(_dga .DocMDPPermission ,bool ){for _ ,_adfda :=range _bcda .Reference .Elements (){if _gdfb ,_ceccbc :=_ae .GetDict (_adfda );_ceccbc {if _bcafe ,_fafdda :=_ae .GetNameVal (_gdfb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_fafdda &&_bcafe =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _afbe ,_aaefe :=_ae .GetDict (_gdfb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_aaefe {if P ,_gceac :=_ae .GetIntVal (_afbe .Get ("\u0050"));_gceac {return _dga .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fgfa *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbeba ,_edeg :=_ae .GetNumbersAsFloat (objects );
if _edeg !=nil {return nil ,_edeg ;};return _fgfa .ColorFromFloats (_fbeba );};

// ToInteger convert to an integer format.
func (_adbbf *PdfColorLab )ToInteger (bits int )[3]uint32 {_aggfdb :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_aggfdb *_adbbf .L ()),uint32 (_aggfdb *_adbbf .A ()),uint32 (_aggfdb *_adbbf .B ())};};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_eedfb *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_eedfb .GetNumComponents (){return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcdfe ,_abced :=_eedfb .TintTransform .Evaluate (vals );
if _abced !=nil {return nil ,_abced ;};_gcee ,_abced :=_eedfb .AlternateSpace .ColorFromFloats (_bcdfe );if _abced !=nil {return nil ,_abced ;};return _gcee ,nil ;};func (_efae *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _dceca []*PdfFieldSignature ;
for _ ,_gedfe :=range _efae .AllFields (){switch _ddebd :=_gedfe .GetContext ().(type ){case *PdfFieldSignature :_dccc :=_ddebd ;_dceca =append (_dceca ,_dccc );};};return _dceca ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_gfgae *PdfPage )GetContentStreamObjs ()[]_ae .PdfObject {if _gfgae .Contents ==nil {return nil ;};_gcag :=_ae .TraceToDirectObject (_gfgae .Contents );if _aeecd ,_abgge :=_gcag .(*_ae .PdfObjectArray );_abgge {return _aeecd .Elements ();};return []_ae .PdfObject {_gcag };
};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_gabd :=&PdfShadingType3 {};_gabd .PdfShading =&PdfShading {};_gabd .PdfShading ._dgbdcg =_ae .MakeIndirectObject (_ae .MakeDict ());_gabd .PdfShading ._gcge =_gabd ;return _gabd ;};func _fegad (_ccfbf *_ae .PdfObjectDictionary )(*PdfShadingType4 ,error ){_gbafd :=PdfShadingType4 {};
_bbgg :=_ccfbf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bbgg ==nil {_fgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cgagac ,_ggefe :=_bbgg .(*_ae .PdfObjectInteger );if !_ggefe {_fgb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbgg );
return nil ,_ae .ErrTypeError ;};_gbafd .BitsPerCoordinate =_cgagac ;_bbgg =_ccfbf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bbgg ==nil {_fgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cgagac ,_ggefe =_bbgg .(*_ae .PdfObjectInteger );if !_ggefe {_fgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bbgg );
return nil ,_ae .ErrTypeError ;};_gbafd .BitsPerComponent =_cgagac ;_bbgg =_ccfbf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bbgg ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cgagac ,_ggefe =_bbgg .(*_ae .PdfObjectInteger );if !_ggefe {_fgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bbgg );
return nil ,_ae .ErrTypeError ;};_gbafd .BitsPerComponent =_cgagac ;_bbgg =_ccfbf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bbgg ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffacb ,_ggefe :=_bbgg .(*_ae .PdfObjectArray );if !_ggefe {_fgb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbgg );
return nil ,_ae .ErrTypeError ;};_gbafd .Decode =_ffacb ;_bbgg =_ccfbf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bbgg ==nil {_fgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gbafd .Function =[]PdfFunction {};if _efbgf ,_ffacg :=_bbgg .(*_ae .PdfObjectArray );_ffacg {for _ ,_ebcce :=range _efbgf .Elements (){_gbdff ,_gbdaf :=_bcgbg (_ebcce );if _gbdaf !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbdaf );
return nil ,_gbdaf ;};_gbafd .Function =append (_gbafd .Function ,_gbdff );};}else {_deadg ,_dgaefe :=_bcgbg (_bbgg );if _dgaefe !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgaefe );
return nil ,_dgaefe ;};_gbafd .Function =append (_gbafd .Function ,_deadg );};return &_gbafd ,nil ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_bbaeg *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgab ,_egec :=color .(*PdfColorDeviceRGB );if !_egec {_fgb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _dgab ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _ae .PdfObject ;Name _ae .PdfObject ;};

// String returns the name of the colorspace (DeviceN).
func (_acdf *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};func (_gdaf *PdfReader )newPdfAnnotationWatermarkFromDict (_dcbb *_ae .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_fdg :=PdfAnnotationWatermark {};
_fdg .FixedPrint =_dcbb .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_fdg ,nil ;};func (_febf *PdfWriter )writeAcroFormFields ()error {if _febf ._ggce ==nil {return nil ;};_fgb .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_cfcgc :=_febf ._ggce .ToPdfObject ();_fgb .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cfcgc );_febf ._gefce .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cfcgc );_fbegg :=_febf .addObjects (_cfcgc );
if _fbegg !=nil {return _fbegg ;};return nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_agbf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _ebgg []*PdfOutlineTreeNode ;var _fcea []string ;var _bfaff func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_bfaff =func (_dfdaa *PdfOutlineTreeNode ,_edda *[]*PdfOutlineTreeNode ,_afgcd *[]string ,_ecfeae int ){if _dfdaa ==nil {return ;
};if _dfdaa ._gfbb ==nil {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_aafce ,_afde :=_dfdaa ._gfbb .(*PdfOutlineItem );if _afde {*_edda =append (*_edda ,&_aafce .PdfOutlineTreeNode );
_fcage :=_ga .Repeat ("\u0020",_ecfeae *2)+_aafce .Title .Decoded ();*_afgcd =append (*_afgcd ,_fcage );};if _dfdaa .First !=nil {_cfacf :=_ga .Repeat ("\u0020",_ecfeae *2)+"\u002b";*_afgcd =append (*_afgcd ,_cfacf );_bfaff (_dfdaa .First ,_edda ,_afgcd ,_ecfeae +1);
};if _afde &&_aafce .Next !=nil {_bfaff (_aafce .Next ,_edda ,_afgcd ,_ecfeae );};};_bfaff (_agbf ._beeag ,&_ebgg ,&_fcea ,0);return _ebgg ,_fcea ,nil ;};func (_adfdb *PdfReader )lookupPageByObject (_eceed _ae .PdfObject )(*PdfPage ,error ){return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// ToPdfObject returns a stream object.
func (_fgeg *XObjectForm )ToPdfObject ()_ae .PdfObject {_cggda :=_fgeg ._ffcgb ;_bgaaf :=_cggda .PdfObjectDictionary ;if _fgeg .Filter !=nil {_bgaaf =_fgeg .Filter .MakeStreamDict ();_cggda .PdfObjectDictionary =_bgaaf ;};_bgaaf .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bgaaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0046\u006f\u0072\u006d"));_bgaaf .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_fgeg .FormType );_bgaaf .SetIfNotNil ("\u0042\u0042\u006f\u0078",_fgeg .BBox );_bgaaf .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_fgeg .Matrix );
if _fgeg .Resources !=nil {_bgaaf .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fgeg .Resources .ToPdfObject ());};_bgaaf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_fgeg .Group );_bgaaf .SetIfNotNil ("\u0052\u0065\u0066",_fgeg .Ref );_bgaaf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_fgeg .MetaData );
_bgaaf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_fgeg .PieceInfo );_bgaaf .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_fgeg .LastModified );_bgaaf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fgeg .StructParent );
_bgaaf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fgeg .StructParents );_bgaaf .SetIfNotNil ("\u004f\u0050\u0049",_fgeg .OPI );_bgaaf .SetIfNotNil ("\u004f\u0043",_fgeg .OC );_bgaaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fgeg .Name );
_bgaaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ae .MakeInteger (int64 (len (_fgeg .Stream ))));_cggda .Stream =_fgeg .Stream ;return _cggda ;};func (_ecgef *pdfFontType0 )bytesToCharcodes (_dagfg []byte )([]_ddd .CharCode ,bool ){if _ecgef ._dbfa ==nil {return nil ,false ;
};_debcb ,_caeb :=_ecgef ._dbfa .BytesToCharcodes (_dagfg );if !_caeb {return nil ,false ;};_cedef :=make ([]_ddd .CharCode ,len (_debcb ));for _ceac ,_bgccd :=range _debcb {_cedef [_ceac ]=_ddd .CharCode (_bgccd );};return _cedef ,true ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_becbg *_de .Document )error ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ffe :=NewPdfAnnotation ();_bdc :=&PdfAnnotationProjection {};_bdc .PdfAnnotation =_ffe ;_bdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffe .SetContext (_bdc );return _bdc ;};

// ToPdfObject implements interface PdfModel.
func (_bce *PdfAnnotationRichMedia )ToPdfObject ()_ae .PdfObject {_bce .PdfAnnotation .ToPdfObject ();_bfca :=_bce ._gggg ;_decb :=_bfca .PdfObject .(*_ae .PdfObjectDictionary );_decb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_decb .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bce .RichMediaSettings );_decb .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bce .RichMediaContent );
return _bfca ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_gagf *Outline )Insert (index uint ,item *OutlineItem ){_fagge :=uint (len (_gagf .Entries ));if index > _fagge {index =_fagge ;};_gagf .Entries =append (_gagf .Entries [:index ],append ([]*OutlineItem {item },_gagf .Entries [index :]...)...);};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _ae .StreamEncoder ;Intent _ae .PdfObject ;ImageMask _ae .PdfObject ;Mask _ae .PdfObject ;Matte _ae .PdfObject ;Decode _ae .PdfObject ;Interpolate _ae .PdfObject ;Alternatives _ae .PdfObject ;
SMask _ae .PdfObject ;SMaskInData _ae .PdfObject ;Name _ae .PdfObject ;StructParent _ae .PdfObject ;ID _ae .PdfObject ;OPI _ae .PdfObject ;Metadata _ae .PdfObject ;OC _ae .PdfObject ;Stream []byte ;_facff *_ae .PdfObjectStream ;_gdddg bool ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_ae .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _ae .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_bebee :=NewXObjectImage ();if lazy {_geacfg ,_eafab :=UpdateXObjectImageFromImage (_bebee ,img ,cs ,encoder );if _eafab !=nil {return nil ,_eafab ;
};_geacfg .ToPdfObject ();_eafab =_geacfg ._facff .MakeLazy ();if _eafab !=nil {return nil ,_eafab ;};_geacfg .Stream =nil ;return _geacfg ,nil ;};return UpdateXObjectImageFromImage (_bebee ,img ,cs ,encoder );};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _ae .PdfObject ;Volume _ae .PdfObject ;Synchronous _ae .PdfObject ;Repeat _ae .PdfObject ;Mix _ae .PdfObject ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _fgg .ReadSeeker )(*PdfReader ,error ){const _cfbdf ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _fcdda (rs ,&ReaderOpts {},false ,_cfbdf );};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ToInteger convert to an integer format.
func (_ccce *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_cbbg :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cbbg *_ccce .R ()),uint32 (_cbbg *_ccce .G ()),uint32 (_cbbg *_ccce .B ())};};

// GetVersion gets the document version.
func (_agaga *PdfWriter )GetVersion ()_ae .Version {return _agaga ._beabf };const (_cegg =0x00001;_acge =0x00002;_bgcad =0x00004;_dfedb =0x00008;_cbaed =0x00020;_cege =0x00040;_ffea =0x10000;_eabcgb =0x20000;_ffgd =0x40000;);func (_dfbe *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// ToPdfObject returns a PDF object representation of the outline item.
func (_fbgbg *OutlineItem )ToPdfObject ()_ae .PdfObject {_ababa ,_ :=_fbgbg .ToPdfOutlineItem ();return _ababa .ToPdfObject ();};func (_afcb *XObjectImage )getParamsDict ()*_ae .PdfObjectDictionary {_gbdgb :=_ae .MakeDict ();_gbdgb .Set ("\u0057\u0069\u0064t\u0068",_ae .MakeInteger (*_afcb .Width ));
_gbdgb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ae .MakeInteger (*_afcb .Height ));_gbdgb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ae .MakeInteger (int64 (_afcb .ColorSpace .GetNumComponents ())));_gbdgb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ae .MakeInteger (*_afcb .BitsPerComponent ));
return _gbdgb ;};func (_aaeffe *PdfWriter )setDocInfo (_feggd _ae .PdfObject ){if _aaeffe .hasObject (_aaeffe ._efeee ){delete (_aaeffe ._dgefc ,_aaeffe ._efeee );delete (_aaeffe ._abbac ,_aaeffe ._efeee );for _dcdeg ,_cdffb :=range _aaeffe ._eabcbc {if _cdffb ==_aaeffe ._efeee {copy (_aaeffe ._eabcbc [_dcdeg :],_aaeffe ._eabcbc [_dcdeg +1:]);
_aaeffe ._eabcbc [len (_aaeffe ._eabcbc )-1]=nil ;_aaeffe ._eabcbc =_aaeffe ._eabcbc [:len (_aaeffe ._eabcbc )-1];break ;};};};_dagge :=_ae .PdfIndirectObject {};_dagge .PdfObject =_feggd ;_aaeffe ._efeee =&_dagge ;_aaeffe .addObject (&_dagge );};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _ae .PdfObject ;V _ae .PdfObject ;};

// AddWatermarkImage adds a watermark to the page.
func (_gabg *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_gcdcc ,_bfec :=_gabg .GetMediaBox ();if _bfec !=nil {return _bfec ;};_cggfe :=_gcdcc .Urx -_gcdcc .Llx ;_edaa :=_gcdcc .Ury -_gcdcc .Lly ;_ggcdc :=float64 (*ximg .Width );
_afgdb :=(_cggfe -_ggcdc )/2;if opt .FitToWidth {_ggcdc =_cggfe ;_afgdb =0;};_ebacd :=_edaa ;_bgbgd :=float64 (0);if opt .PreserveAspectRatio {_ebacd =_ggcdc *float64 (*ximg .Height )/float64 (*ximg .Width );_bgbgd =(_edaa -_ebacd )/2;};if _gabg .Resources ==nil {_gabg .Resources =NewPdfPageResources ();
};_deca :=0;_abgg :=_ae .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_deca ));for _gabg .Resources .HasXObjectByName (_abgg ){_deca ++;_abgg =_ae .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_deca ));};_bfec =_gabg .AddImageResource (_abgg ,ximg );
if _bfec !=nil {return _bfec ;};_deca =0;_ebde :=_ae .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_deca ));for _gabg .HasExtGState (_ebde ){_deca ++;_ebde =_ae .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_deca ));};_ceee :=_ae .MakeDict ();
_ceee .Set ("\u0042\u004d",_ae .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_ceee .Set ("\u0043\u0041",_ae .MakeFloat (opt .Alpha ));_ceee .Set ("\u0063\u0061",_ae .MakeFloat (opt .Alpha ));_bfec =_gabg .AddExtGState (_ebde ,_ceee );if _bfec !=nil {return _bfec ;
};_gbegc :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ebde ,_ggcdc ,_ebacd ,_afgdb ,_bgbgd ,_abgg );
_gabg .AddContentStreamByString (_gbegc );return nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_ae .PdfObjectStream ;OCSP []*_ae .PdfObjectStream ;CRL []*_ae .PdfObjectStream ;TU *_ae .PdfObjectString ;TS *_ae .PdfObjectString ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_bgbc *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ToPdfObject returns a stream object.
func (_dbebe *XObjectImage )ToPdfObject ()_ae .PdfObject {_bccbc :=_dbebe ._facff ;if _dbebe ._gdddg {return _bccbc ;};_gcfa :=_bccbc .PdfObjectDictionary ;if _dbebe .Filter !=nil {_gcfa =_dbebe .Filter .MakeStreamDict ();_bccbc .PdfObjectDictionary =_gcfa ;
};_gcfa .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_gcfa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0049\u006d\u0061g\u0065"));_gcfa .Set ("\u0057\u0069\u0064t\u0068",_ae .MakeInteger (*(_dbebe .Width )));
_gcfa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ae .MakeInteger (*(_dbebe .Height )));if _dbebe .BitsPerComponent !=nil {_gcfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ae .MakeInteger (*(_dbebe .BitsPerComponent )));
};if _dbebe .ColorSpace !=nil {_gcfa .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dbebe .ColorSpace .ToPdfObject ());};_gcfa .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_dbebe .Intent );_gcfa .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_dbebe .ImageMask );
_gcfa .SetIfNotNil ("\u004d\u0061\u0073\u006b",_dbebe .Mask );_debgc :=_gcfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _dbebe .Decode ==nil &&_debgc {_gcfa .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _dbebe .Decode !=nil {_gcfa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dbebe .Decode );
};_gcfa .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_dbebe .Interpolate );_gcfa .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_dbebe .Alternatives );_gcfa .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_dbebe .SMask );
_gcfa .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_dbebe .SMaskInData );_gcfa .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dbebe .Matte );_gcfa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dbebe .Name );_gcfa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dbebe .StructParent );
_gcfa .SetIfNotNil ("\u0049\u0044",_dbebe .ID );_gcfa .SetIfNotNil ("\u004f\u0050\u0049",_dbebe .OPI );_gcfa .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dbebe .Metadata );_gcfa .SetIfNotNil ("\u004f\u0043",_dbebe .OC );_gcfa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ae .MakeInteger (int64 (len (_dbebe .Stream ))));
_bccbc .Stream =_dbebe .Stream ;_dbebe ._gdddg =true ;return _bccbc ;};func (_ceag *LTV )getOCSPs (_gfec []*_ddc .Certificate ,_dgded map[string ]*_ddc .Certificate )([][]byte ,error ){_gdge :=make ([][]byte ,0,len (_gfec ));for _ ,_gdbcg :=range _gfec {for _ ,_bbfca :=range _gdbcg .OCSPServer {if _ceag .CertClient .IsCA (_gdbcg ){continue ;
};_ffcccc ,_eafeg :=_dgded [_gdbcg .Issuer .CommonName ];if !_eafeg {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_egbee ,_fdgee :=_ceag .OCSPClient .MakeRequest (_bbfca ,_gdbcg ,_ffcccc );if _fdgee !=nil {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_fdgee );
continue ;};_gdge =append (_gdge ,_egbee );};};return _gdge ,nil ;};func (_bbdag *PdfReader )newPdfFieldSignatureFromDict (_ggac *_ae .PdfObjectDictionary )(*PdfFieldSignature ,error ){_ccdb :=&PdfFieldSignature {};_dfbc ,_adbba :=_ae .GetIndirect (_ggac .Get ("\u0056"));
if _adbba {var _ggabd error ;_ccdb .V ,_ggabd =_bbdag .newPdfSignatureFromIndirect (_dfbc );if _ggabd !=nil {return nil ,_ggabd ;};};_ccdb .Lock ,_ =_ae .GetIndirect (_ggac .Get ("\u004c\u006f\u0063\u006b"));_ccdb .SV ,_ =_ae .GetIndirect (_ggac .Get ("\u0053\u0056"));
return _ccdb ,nil ;};func (_bacd *PdfReader )newPdfActionSetOCGStateFromDict (_gggc *_ae .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_gggc .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_gggc .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_fddg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _ae .GetNumberAsFloat (_fddg .CapHeight );};

// GetContentStream returns the pattern cell's content stream
func (_caeee *PdfTilingPattern )GetContentStream ()([]byte ,error ){_cgce ,_ ,_defga :=_caeee .GetContentStreamWithEncoder ();return _cgce ,_defga ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_cdbd *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_egag ,_dgfd :=color .(*PdfColorDeviceGray );if !_dgfd {_fgb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_egag ),float64 (*_egag ),float64 (*_egag )),nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_abaf *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func _fgeag ()string {_bgafe .Lock ();defer _bgafe .Unlock ();return _ebcee };

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_bc :=NewPdfAction ();_bd :=&PdfActionThread {};_bd .PdfAction =_bc ;_bc .SetContext (_bd );return _bd ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_fcgcg *PdfPattern )IsTiling ()bool {return _fcgcg .PatternType ==1};

// ToPdfObject implements interface PdfModel.
func (_gfbf *PdfAnnotationRedact )ToPdfObject ()_ae .PdfObject {_gfbf .PdfAnnotation .ToPdfObject ();_dggd :=_gfbf ._gggg ;_afed :=_dggd .PdfObject .(*_ae .PdfObjectDictionary );_gfbf .PdfAnnotationMarkup .appendToPdfDictionary (_afed );_afed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_afed .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gfbf .QuadPoints );_afed .SetIfNotNil ("\u0049\u0043",_gfbf .IC );_afed .SetIfNotNil ("\u0052\u004f",_gfbf .RO );_afed .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gfbf .OverlayText );
_afed .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gfbf .Repeat );_afed .SetIfNotNil ("\u0044\u0041",_gfbf .DA );_afed .SetIfNotNil ("\u0051",_gfbf .Q );return _dggd ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_eefgg *DSS )GetContainingPdfObject ()_ae .PdfObject {return _eefgg ._bcac };

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _ae .PdfObject ;};func _dfaabd (_bdbbf _ae .PdfObject )[]*_ae .PdfObjectStream {if _bdbbf ==nil {return nil ;};_abccfa ,_adfgd :=_ae .GetArray (_bdbbf );if !_adfgd ||_abccfa .Len ()==0{return nil ;};_bcffbd :=make ([]*_ae .PdfObjectStream ,0,_abccfa .Len ());
for _ ,_cgcbe :=range _abccfa .Elements (){if _fdgf ,_bccbd :=_ae .GetStream (_cgcbe );_bccbd {_bcffbd =append (_bcffbd ,_fdgf );};};return _bcffbd ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bdab *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fgb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ddfa :=[]float64 {0.0};if _bdab .C0 !=nil {_ddfa =_bdab .C0 ;};_ecfda :=[]float64 {1.0};if _bdab .C1 !=nil {_ecfda =_bdab .C1 ;};var _cfef []float64 ;for _dfbde :=0;_dfbde < len (_ddfa );_dfbde ++{_baac :=_ddfa [_dfbde ]+_ce .Pow (x [0],_bdab .N )*(_ecfda [_dfbde ]-_ddfa [_dfbde ]);
_cfef =append (_cfef ,_baac );};return _cfef ,nil ;};

// Fill populates `form` with values provided by `provider`.
func (_dgfgd *PdfAcroForm )Fill (provider FieldValueProvider )error {return _dgfgd .fill (provider ,nil )};

// GetOCProperties returns the optional content properties PdfObject.
func (_eeecd *PdfReader )GetOCProperties ()(_ae .PdfObject ,error ){_cgcdab :=_eeecd ._eedde ;_abccf :=_cgcdab .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_abccf =_ae .ResolveReference (_abccf );if !_eeecd ._fedag {_ddfdc :=_eeecd .traverseObjectData (_abccf );
if _ddfdc !=nil {return nil ,_ddfdc ;};};return _abccf ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dfafge *PdfShadingPatternType3 )ToPdfObject ()_ae .PdfObject {_dfafge .PdfPattern .ToPdfObject ();_aafcb :=_dfafge .getDict ();if _dfafge .Shading !=nil {_aafcb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dfafge .Shading .ToPdfObject ());};if _dfafge .Matrix !=nil {_aafcb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfafge .Matrix );
};if _dfafge .ExtGState !=nil {_aafcb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dfafge .ExtGState );};return _dfafge ._ccdf ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_bcbaa *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _bcbaa .flattenFieldsWithOpts (allannots ,appgen ,nil );};func (_eccf *pdfFontType0 )subsetRegistered ()error {_dddfg ,_gacdg :=_eccf .DescendantFont ._efgfa .(*pdfCIDFontType2 );
if !_gacdg {_fgb .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_eccf .DescendantFont );return nil ;};if _dddfg ==nil {return nil ;
};if _dddfg ._cdge ==nil {_fgb .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _eccf ._abgde ==nil {_fgb .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_bgdcg ,_gacdg :=_ae .GetStream (_dddfg ._cdge .FontFile2 );if !_gacdg {_fgb .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ed .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bccag ,_dabg :=_ae .DecodeStream (_bgdcg );if _dabg !=nil {_fgb .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dabg );
return _dabg ;};_dcdgg ,_dabg :=_ba .Parse (_fga .NewReader (_bccag ));if _dabg !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_bgdcg .Stream ));
return _dabg ;};var _ecdg []rune ;var _fbaf *_ba .Font ;switch _ffeg :=_eccf ._abgde .(type ){case *_ddd .TrueTypeFontEncoder :_ecdg =_ffeg .RegisteredRunes ();_fbaf ,_dabg =_dcdgg .SubsetKeepRunes (_ecdg );if _dabg !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dabg );
return _dabg ;};_ffeg .SubsetRegistered ();case *_ddd .IdentityEncoder :_ecdg =_ffeg .RegisteredRunes ();_dacc :=make ([]_ba .GlyphIndex ,len (_ecdg ));for _feafa ,_deeffa :=range _ecdg {_dacc [_feafa ]=_ba .GlyphIndex (_deeffa );};_fbaf ,_dabg =_dcdgg .SubsetKeepIndices (_dacc );
if _dabg !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dabg );return _dabg ;};case _ddd .SimpleEncoder :_gcbbg :=_ffeg .Charcodes ();for _ ,_afgb :=range _gcbbg {_geed ,_bafbg :=_ffeg .CharcodeToRune (_afgb );if !_bafbg {_fgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_afgb );
continue ;};_ecdg =append (_ecdg ,_geed );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_eccf ._abgde );
};var _gacbd _fga .Buffer ;_dabg =_fbaf .Write (&_gacbd );if _dabg !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dabg );return _dabg ;};if _eccf ._babge !=nil {_defa :=make (map[_fe .CharCode ]rune ,len (_ecdg ));for _ ,_decd :=range _ecdg {_bgfe ,_fbaeg :=_eccf ._abgde .RuneToCharcode (_decd );
if !_fbaeg {continue ;};_defa [_fe .CharCode (_bgfe )]=_decd ;};_eccf ._babge =_fe .NewToUnicodeCMap (_defa );};_bgdcg ,_dabg =_ae .MakeStream (_gacbd .Bytes (),_ae .NewFlateEncoder ());if _dabg !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dabg );
return _dabg ;};_bgdcg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ae .MakeInteger (int64 (_gacbd .Len ())));if _aafae ,_ffce :=_ae .GetStream (_dddfg ._cdge .FontFile2 );_ffce {*_aafae =*_bgdcg ;}else {_dddfg ._cdge .FontFile2 =_bgdcg ;};_badea :=_daeaf ();
if len (_eccf ._bfeb )> 0{_eccf ._bfeb =_fdcgg (_eccf ._bfeb ,_badea );};if len (_dddfg ._bfeb )> 0{_dddfg ._bfeb =_fdcgg (_dddfg ._bfeb ,_badea );};if len (_eccf ._ccgc )> 0{_eccf ._ccgc =_fdcgg (_eccf ._ccgc ,_badea );};if _dddfg ._cdge !=nil {_geded ,_cfgb :=_ae .GetName (_dddfg ._cdge .FontName );
if _cfgb &&len (_geded .String ())> 0{_ddgg :=_fdcgg (_geded .String (),_badea );_dddfg ._cdge .FontName =_ae .MakeName (_ddgg );};};return nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_gdbbg *PdfReader )Inspect ()(map[string ]int ,error ){return _gdbbg ._dgadd .Inspect ()};

// IsCID returns true if the underlying font is CID.
func (_aaff *PdfFont )IsCID ()bool {return _aaff .baseFields ().isCIDFont ()};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_aadgb *Image )GetSamples ()[]uint32 {_edcef :=_dag .ResampleBytes (_aadgb .Data ,int (_aadgb .BitsPerComponent ));if _aadgb .BitsPerComponent < 8{_edcef =_aadgb .samplesTrimPadding (_edcef );};_acfdf :=int (_aadgb .Width )*int (_aadgb .Height )*_aadgb .ColorComponents ;
if len (_edcef )< _acfdf {_fgb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_edcef ),_acfdf );
return _edcef ;}else if len (_edcef )> _acfdf {_fgb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_edcef ),_acfdf );
_edcef =_edcef [:_acfdf ];};return _edcef ;};

// GetSubFilter returns SubFilter value or empty string.
func (_aaffd *pdfSignDictionary )GetSubFilter ()string {_decfde :=_aaffd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _decfde ==nil {return "";};if _aeggg ,_aecaf :=_ae .GetNameVal (_decfde );_aecaf {return _aeggg ;};return "";};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_bddf *PdfFont )ToUnicode ()string {if _bddf .baseFields ()._babge ==nil {return "";};return _bddf .baseFields ()._babge .Name ();};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_eagbg *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ed .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_eagbg .S =subtype ;return nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_acbcb *PdfPageResources )AddExtGState (gsName _ae .PdfObjectName ,gsDict _ae .PdfObject )error {if _acbcb .ExtGState ==nil {_acbcb .ExtGState =_ae .MakeDict ();};_daded :=_acbcb .ExtGState ;_ebfcb ,_dgfdce :=_ae .TraceToDirectObject (_daded ).(*_ae .PdfObjectDictionary );
if !_dgfdce {_fgb .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_daded ,_ae .TraceToDirectObject (_daded ));
return _ae .ErrTypeError ;};_ebfcb .Set (gsName ,gsDict );return nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _ae .PdfObject ;Sy _ae .PdfObject ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bfdf *LTV )EnableChain (chain []*_ddc .Certificate )error {return _bfdf .enable (nil ,chain ,"")};func (_efdfb *PdfAcroForm )filteredFields (_dbfab FieldFilterFunc ,_bfaa bool )[]*PdfField {if _efdfb ==nil {return nil ;};return _deffd (_efdfb .Fields ,_dbfab ,_bfaa );
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgbag *PdfShadingType5 )ToPdfObject ()_ae .PdfObject {_fgbag .PdfShading .ToPdfObject ();_deabb ,_dcecb :=_fgbag .getShadingDict ();if _dcecb !=nil {_fgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fgbag .BitsPerCoordinate !=nil {_deabb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fgbag .BitsPerCoordinate );};if _fgbag .BitsPerComponent !=nil {_deabb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fgbag .BitsPerComponent );
};if _fgbag .VerticesPerRow !=nil {_deabb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fgbag .VerticesPerRow );};if _fgbag .Decode !=nil {_deabb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fgbag .Decode );};
if _fgbag .Function !=nil {if len (_fgbag .Function )==1{_deabb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgbag .Function [0].ToPdfObject ());}else {_afge :=_ae .MakeArray ();for _ ,_egaga :=range _fgbag .Function {_afge .Append (_egaga .ToPdfObject ());
};_deabb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afge );};};return _fgbag ._dgbdcg ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_feddg *_ae .PdfObjectDictionary ;};

// ToPdfObject implements interface PdfModel.
func (_caedb *PdfAnnotationLine )ToPdfObject ()_ae .PdfObject {_caedb .PdfAnnotation .ToPdfObject ();_ccaf :=_caedb ._gggg ;_dcga :=_ccaf .PdfObject .(*_ae .PdfObjectDictionary );_caedb .PdfAnnotationMarkup .appendToPdfDictionary (_dcga );_dcga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u004c\u0069\u006e\u0065"));
_dcga .SetIfNotNil ("\u004c",_caedb .L );_dcga .SetIfNotNil ("\u0042\u0053",_caedb .BS );_dcga .SetIfNotNil ("\u004c\u0045",_caedb .LE );_dcga .SetIfNotNil ("\u0049\u0043",_caedb .IC );_dcga .SetIfNotNil ("\u004c\u004c",_caedb .LL );_dcga .SetIfNotNil ("\u004c\u004c\u0045",_caedb .LLE );
_dcga .SetIfNotNil ("\u0043\u0061\u0070",_caedb .Cap );_dcga .SetIfNotNil ("\u0049\u0054",_caedb .IT );_dcga .SetIfNotNil ("\u004c\u004c\u004f",_caedb .LLO );_dcga .SetIfNotNil ("\u0043\u0050",_caedb .CP );_dcga .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_caedb .Measure );
_dcga .SetIfNotNil ("\u0043\u004f",_caedb .CO );return _ccaf ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_adc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_cecee *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_ae .PdfObjectArray ;ExtGState _ae .PdfObject ;};func (_dafdc *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dacda :=_dafdc .Parent ;for _dacda !=nil {_fgcff ,_gcdg :=_ae .GetDict (_dacda );
if !_gcdg {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _cedbf :=_fgcff .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cedbf !=nil {_caeff ,_ebcfe :=_ae .GetDict (_cedbf );if !_ebcfe {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_bcggcd ,_ddaa :=NewPdfPageResourcesFromDict (_caeff );if _ddaa !=nil {return nil ,_ddaa ;};return _bcggcd ,nil ;};_dacda =_fgcff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_ae .PdfObjectArray ;Matrix *_ae .PdfObjectArray ;Function []PdfFunction ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_cadb :=NewPdfAnnotation ();_ddeg :=&PdfAnnotationStrikeOut {};_ddeg .PdfAnnotation =_cadb ;_ddeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cadb .SetContext (_ddeg );return _ddeg ;};

// GetBorderWidth returns the border style's width.
func (_efe *PdfBorderStyle )GetBorderWidth ()float64 {if _efe .W ==nil {return 1;};return *_efe .W ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_dbabd *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _dbabd ._gdebb !=nil {return _dbabd ._gdebb ,nil ;};if _dbabd .ColorSpace ==nil {return nil ,nil ;};_fabcg ,_ddbca :=_defe (_dbabd .ColorSpace );if _ddbca !=nil {return nil ,_ddbca ;
};_dbabd ._gdebb =_fabcg ;return _dbabd ._gdebb ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_gbagc *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_gbagc .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_gbagc ._becf =acroForm ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_effdc *PdfPageResources )SetXObjectImageByName (keyName _ae .PdfObjectName ,ximg *XObjectImage )error {_gcccb :=ximg .ToPdfObject ().(*_ae .PdfObjectStream );_cffgfb :=_effdc .SetXObjectByName (keyName ,_gcccb );return _cffgfb ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fba *PdfAnnotation )GetContext ()PdfModel {if _fba ==nil {return nil ;};return _fba ._edbg ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_cfabe :=&PdfShadingPatternType3 {};_cfabe .Matrix =_ae .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_cfabe .PdfPattern =&PdfPattern {};_cfabe .PdfPattern .PatternType =int64 (*_ae .MakeInteger (2));
_cfabe .PdfPattern ._adgf =_cfabe ;_cfabe .PdfPattern ._ccdf =_ae .MakeIndirectObject (_ae .MakeDict ());return _cfabe ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_fcac :=NewPdfAnnotation ();_cgac :=&PdfAnnotationSound {};_cgac .PdfAnnotation =_fcac ;_cgac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcac .SetContext (_cgac );return _cgac ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cfec *PdfShadingPattern )ToPdfObject ()_ae .PdfObject {_cfec .PdfPattern .ToPdfObject ();_cded :=_cfec .getDict ();if _cfec .Shading !=nil {_cded .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cfec .Shading .ToPdfObject ());};if _cfec .Matrix !=nil {_cded .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cfec .Matrix );
};if _cfec .ExtGState !=nil {_cded .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cfec .ExtGState );};return _cfec ._ccdf ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_dfafg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dade ,_cgcf :=_ae .GetNumbersAsFloat (objects );
if _cgcf !=nil {return nil ,_cgcf ;};return _dfafg .ColorFromFloats (_dade );};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_eb *PdfAction )GetContext ()PdfModel {if _eb ==nil {return nil ;};return _eb ._aee ;};

// AddCRLs adds CRLs to DSS.
func (_ceae *DSS )AddCRLs (crls [][]byte )([]*_ae .PdfObjectStream ,error ){return _ceae .add (&_ceae .CRLs ,_ceae ._fdafc ,crls );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_afdff *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_cadcg *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_cadcg .Type ,_cadcg .P ,_cadcg .V );};

// SetFillImage attach a model.Image to push button.
func (_caefb *PdfFieldButton )SetFillImage (image *Image ){if _caefb .IsPush (){_caefb ._face =image ;};};func _ecca (_fdbf *_ae .PdfObjectDictionary )bool {for _ ,_ddcb :=range _fdbf .Keys (){if _ ,_dfgb :=_dbcbe [_ddcb .String ()];_dfgb {return true ;
};};return false ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_dfbf *PdfWriter )addObject (_febde _ae .PdfObject )bool {_cdaca :=_dfbf .hasObject (_febde );if !_cdaca {_eabgbd :=_ae .ResolveReferencesDeep (_febde ,_dfbf ._abbac );if _eabgbd !=nil {_fgb .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_eabgbd );
};_dfbf ._eabcbc =append (_dfbf ._eabcbc ,_febde );_dfbf ._dgefc [_febde ]=struct{}{};return true ;};return false ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _fgg .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _fdabe ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _fcdda (rs ,opts ,true ,_fdabe );
};func (_cfdee *PdfWriter )copyObjects (){_eafcg :=make (map[_ae .PdfObject ]_ae .PdfObject );_befbc :=make ([]_ae .PdfObject ,0,len (_cfdee ._eabcbc ));_bfbafb :=make (map[_ae .PdfObject ]struct{},len (_cfdee ._eabcbc ));_dabed :=make (map[_ae .PdfObject ]struct{});
for _ ,_gbgef :=range _cfdee ._eabcbc {_bbbcb :=_cfdee .copyObject (_gbgef ,_eafcg ,_dabed ,false );if _ ,_gdfbd :=_dabed [_gbgef ];_gdfbd {continue ;};_befbc =append (_befbc ,_bbbcb );_bfbafb [_bbbcb ]=struct{}{};};_cfdee ._eabcbc =_befbc ;_cfdee ._dgefc =_bfbafb ;
_cfdee ._efeee =_cfdee .copyObject (_cfdee ._efeee ,_eafcg ,nil ,false ).(*_ae .PdfIndirectObject );_cfdee ._acabbb =_cfdee .copyObject (_cfdee ._acabbb ,_eafcg ,nil ,false ).(*_ae .PdfIndirectObject );if _cfdee ._bebbc !=nil {_cfdee ._bebbc =_cfdee .copyObject (_cfdee ._bebbc ,_eafcg ,nil ,false ).(*_ae .PdfIndirectObject );
};if _cfdee ._edcfb {_ggcda :=make (map[_ae .PdfObject ]int64 );for _gcegg ,_affd :=range _cfdee ._cddea {if _effag ,_feaca :=_eafcg [_gcegg ];_feaca {_ggcda [_effag ]=_affd ;}else {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_cfdee ._cddea =_ggcda ;};};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_cbff *_ae .PdfIndirectObject ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_bfbca *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_fcacca *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdae :=vals [0];if _cdae < 0.0||_cdae > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cdae );
return nil ,ErrColorOutOfRange ;};_aggga :=vals [1];if _aggga < 0.0||_aggga > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_aggga );return nil ,ErrColorOutOfRange ;
};_facg :=vals [2];if _facg < 0.0||_facg > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_facg );return nil ,ErrColorOutOfRange ;};_efdg :=vals [3];
if _efdg < 0.0||_efdg > 1.0{_fgb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_efdg );return nil ,ErrColorOutOfRange ;};_ddca :=NewPdfColorDeviceCMYK (_cdae ,_aggga ,_facg ,_efdg );
return _ddca ,nil ;};func (_efga *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_fed :=NewPdfAction ();_aga :=&PdfActionImportData {};_aga .PdfAction =_fed ;_fed .SetContext (_aga );return _aga ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_feeg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_ae .PdfObject )(PdfColor ,error ){if len (objects )!=_feeg .GetNumComponents (){return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbadc ,_edbgd :=_ae .GetNumbersAsFloat (objects );
if _edbgd !=nil {return nil ,_edbgd ;};return _feeg .ColorFromFloats (_bbadc );};func (_aafad *PdfWriter )updateObjectNumbers (){_egcaaf :=_aafad .ObjNumOffset ;_cdcdg :=0;for _ ,_aegec :=range _aafad ._eabcbc {_eabee :=int64 (_cdcdg +1+_egcaaf );_dbgae :=true ;
if _aafad ._edcfb {if _geabd ,_ecdca :=_aafad ._cddea [_aegec ];_ecdca {_eabee =_geabd ;_dbgae =false ;};};switch _deag :=_aegec .(type ){case *_ae .PdfIndirectObject :_deag .ObjectNumber =_eabee ;_deag .GenerationNumber =0;case *_ae .PdfObjectStream :_deag .ObjectNumber =_eabee ;
_deag .GenerationNumber =0;case *_ae .PdfObjectStreams :_deag .ObjectNumber =_eabee ;_deag .GenerationNumber =0;case *_ae .PdfObjectReference :_deag .ObjectNumber =_eabee ;_deag .GenerationNumber =0;case *_ae .PdfObjectDictionary ,*_ae .PdfObjectString :default:_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_deag );
continue ;};if _dbgae {_cdcdg ++;};};_dcge :=func (_caafc _ae .PdfObject )int64 {switch _ecffg :=_caafc .(type ){case *_ae .PdfIndirectObject :return _ecffg .ObjectNumber ;case *_ae .PdfObjectStream :return _ecffg .ObjectNumber ;case *_ae .PdfObjectStreams :return _ecffg .ObjectNumber ;
case *_ae .PdfObjectReference :return _ecffg .ObjectNumber ;};return 0;};_ee .SliceStable (_aafad ._eabcbc ,func (_bfag ,_eedbg int )bool {return _dcge (_aafad ._eabcbc [_bfag ])< _dcge (_aafad ._eabcbc [_eedbg ])});};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ae .PdfObject ;IC _ae .PdfObject ;RO _ae .PdfObject ;OverlayText _ae .PdfObject ;Repeat _ae .PdfObject ;DA _ae .PdfObject ;Q _ae .PdfObject ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_ae .PdfObjectArray ;_face *Image ;};

// ToInteger convert to an integer format.
func (_faada *PdfColorCalGray )ToInteger (bits int )uint32 {_fgddc :=_ce .Pow (2,float64 (bits ))-1;return uint32 (_fgddc *_faada .Val ());};func _gfcg (_acabc *_ae .PdfObjectDictionary )(*PdfShadingType5 ,error ){_eaggc :=PdfShadingType5 {};_fdae :=_acabc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fdae ==nil {_fgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddcgd ,_faec :=_fdae .(*_ae .PdfObjectInteger );if !_faec {_fgb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdae );
return nil ,_ae .ErrTypeError ;};_eaggc .BitsPerCoordinate =_ddcgd ;_fdae =_acabc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fdae ==nil {_fgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ddcgd ,_faec =_fdae .(*_ae .PdfObjectInteger );if !_faec {_fgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fdae );
return nil ,_ae .ErrTypeError ;};_eaggc .BitsPerComponent =_ddcgd ;_fdae =_acabc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _fdae ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_ddcgd ,_faec =_fdae .(*_ae .PdfObjectInteger );if !_faec {_fgb .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fdae );
return nil ,_ae .ErrTypeError ;};_eaggc .VerticesPerRow =_ddcgd ;_fdae =_acabc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fdae ==nil {_fgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffeaa ,_faec :=_fdae .(*_ae .PdfObjectArray );if !_faec {_fgb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fdae );
return nil ,_ae .ErrTypeError ;};_eaggc .Decode =_ffeaa ;if _fbfbc :=_acabc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fbfbc !=nil {_eaggc .Function =[]PdfFunction {};if _dgdee ,_cbeda :=_fbfbc .(*_ae .PdfObjectArray );_cbeda {for _ ,_fbdfg :=range _dgdee .Elements (){_dcbbd ,_gcaaf :=_bcgbg (_fbdfg );
if _gcaaf !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcaaf );return nil ,_gcaaf ;};_eaggc .Function =append (_eaggc .Function ,_dcbbd );
};}else {_bggb ,_bdabgd :=_bcgbg (_fbfbc );if _bdabgd !=nil {_fgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdabgd );return nil ,_bdabgd ;
};_eaggc .Function =append (_eaggc .Function ,_bggb );};};return &_eaggc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_abbga *EmbeddedFile )ToPdfObject ()_ae .PdfObject {_daga :=_ae .NewFlateEncoder ();_cbgg ,_fcbed :=_ae .MakeStream (_abbga .Content ,_daga );if _fcbed !=nil {_fgb .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fcbed );
return nil ;};_gbef :=_cbgg .PdfObjectDictionary ;_gbef .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_gbef .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_dgfde :=_ae .MakeDict ();_dgfde .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_ae .MakeString (_abbga .Hash [:]));_dgfde .Set ("\u0053\u0069\u007a\u0065",_ae .MakeInteger (int64 (len (_abbga .Content ))));_ecfb :=_abbga .CreationTime ;if _ecfb .IsZero (){_ecfb =_db .Now ();
};_afeaf :=_abbga .ModTime ;if _afeaf .IsZero (){_afeaf =_ecfb ;};_edgfb ,_fcbed :=NewPdfDateFromTime (_ecfb );if _fcbed !=nil {_fgb .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_fcbed );
return nil ;};_fdcc ,_fcbed :=NewPdfDateFromTime (_afeaf );if _fcbed !=nil {_fgb .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_fcbed );
return nil ;};_dgfde .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_edgfb .ToPdfObject ());_dgfde .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_fdcc .ToPdfObject ());_gbef .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_dgfde );
_dbag :=_ae .MakeDict ();_dbag .Set (*_ae .MakeName ("\u0046"),_cbgg );return _dbag ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_faeff *PdfPattern )getDict ()*_ae .PdfObjectDictionary {if _bgdfe ,_ageef :=_faeff ._ccdf .(*_ae .PdfIndirectObject );_ageef {_edegd ,_cgdc :=_bgdfe .PdfObject .(*_ae .PdfObjectDictionary );if !_cgdc {return nil ;};return _edegd ;
}else if _deac ,_dbbga :=_faeff ._ccdf .(*_ae .PdfObjectStream );_dbbga {return _deac .PdfObjectDictionary ;}else {_fgb .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_faeff ._ccdf );
return nil ;};};func _gfee (_ebab StdFontName )(pdfFontSimple ,error ){_efge ,_abaef :=_dde .NewStdFontByName (_ebab );if !_abaef {return pdfFontSimple {},ErrFontNotSupported ;};_bfdc :=_gdgca (_efge );return _bfdc ,nil ;};func (_acea *PdfReader )newPdfAnnotationCaretFromDict (_aeff *_ae .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_faae :=PdfAnnotationCaret {};
_dgced ,_ddda :=_acea .newPdfAnnotationMarkupFromDict (_aeff );if _ddda !=nil {return nil ,_ddda ;};_faae .PdfAnnotationMarkup =_dgced ;_faae .RD =_aeff .Get ("\u0052\u0044");_faae .Sy =_aeff .Get ("\u0053\u0079");return &_faae ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;
BorderEffectCloudy BorderEffect =iota ;);

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_ecfbf *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _ecfbf ._adgf .(*PdfTilingPattern );};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_dacac *XObjectImage )SetFilter (encoder _ae .StreamEncoder )error {_gcecb :=_dacac .Stream ;_gbgc ,_fdff :=_dacac .Filter .DecodeBytes (_gcecb );if _fdff !=nil {return _fdff ;};_dacac .Filter =encoder ;encoder .UpdateParams (_dacac .getParamsDict ());
_gcecb ,_fdff =encoder .EncodeBytes (_gbgc );if _fdff !=nil {return _fdff ;};_dacac .Stream =_gcecb ;return nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func _aaaagg (_dcdfe []byte )([]byte ,error ){_dcaa :=_ef .New ();if _ ,_fccea :=_fgg .Copy (_dcaa ,_fga .NewReader (_dcdfe ));_fccea !=nil {return nil ,_fccea ;
};return _dcaa .Sum (nil ),nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ValidateSignatures validates digital signatures in the document.
func (_dadbd *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _dadbd .AcroForm ==nil {return nil ,nil ;};if _dadbd .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_eccbe *PdfSignature ;
_efdec *PdfField ;_ddbef SignatureHandler ;};var _edfdf []*sigFieldPair ;for _ ,_abdce :=range _dadbd .AcroForm .AllFields (){if _abdce .V ==nil {continue ;};if _gggga ,_gdgd :=_ae .GetDict (_abdce .V );_gdgd {if _afdeg ,_ddfba :=_ae .GetNameVal (_gggga .Get ("\u0054\u0079\u0070\u0065"));
_ddfba &&(_afdeg =="\u0053\u0069\u0067"||_afdeg =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_ebaef ,_dcdda :=_ae .GetIndirect (_abdce .V );if !_dcdda {_fgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_aaged ,_beebed :=_dadbd .newPdfSignatureFromIndirect (_ebaef );if _beebed !=nil {return nil ,_beebed ;};var _bfead SignatureHandler ;for _ ,_bbbb :=range handlers {if _bbbb .IsApplicable (_aaged ){_bfead =_bbbb ;break ;};};
_edfdf =append (_edfdf ,&sigFieldPair {_eccbe :_aaged ,_efdec :_abdce ,_ddbef :_bfead });};};};var _fece []SignatureValidationResult ;for _ ,_gaecbd :=range _edfdf {_faacg :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gaecbd ._efdec }};
if _gaecbd ._ddbef ==nil {_faacg .Errors =append (_faacg .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_fece =append (_fece ,_faacg );continue ;};_cgagd ,_fddcf :=_gaecbd ._ddbef .NewDigest (_gaecbd ._eccbe );
if _fddcf !=nil {_faacg .Errors =append (_faacg .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fddcf .Error ());_fece =append (_fece ,_faacg );continue ;};_fedf :=_gaecbd ._eccbe .ByteRange ;if _fedf ==nil {_faacg .Errors =append (_faacg .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_fece =append (_fece ,_faacg );continue ;};for _efdd :=0;_efdd < _fedf .Len ();_efdd =_efdd +2{_feeea ,_ :=_ae .GetNumberAsInt64 (_fedf .Get (_efdd ));_acebf ,_ :=_ae .GetIntVal (_fedf .Get (_efdd +1));if _ ,_badaa :=_dadbd ._abcc .Seek (_feeea ,_fgg .SeekStart );
_badaa !=nil {return nil ,_badaa ;};_gdeef :=make ([]byte ,_acebf );if _ ,_dfag :=_dadbd ._abcc .Read (_gdeef );_dfag !=nil {return nil ,_dfag ;};_cgagd .Write (_gdeef );};var _bagae SignatureValidationResult ;if _cdeb ,_ddea :=_gaecbd ._ddbef .(SignatureHandlerDocMDP );
_ddea {_bagae ,_fddcf =_cdeb .ValidateWithOpts (_gaecbd ._eccbe ,_cgagd ,SignatureHandlerDocMDPParams {Parser :_dadbd ._dgadd });}else {_bagae ,_fddcf =_gaecbd ._ddbef .Validate (_gaecbd ._eccbe ,_cgagd );};if _fddcf !=nil {_fgb .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_fddcf ,_gaecbd ._ddbef );
_bagae .Errors =append (_bagae .Errors ,_fddcf .Error ());};_bagae .Name =_gaecbd ._eccbe .Name .Decoded ();_bagae .Reason =_gaecbd ._eccbe .Reason .Decoded ();if _gaecbd ._eccbe .M !=nil {_fgec ,_cgbag :=NewPdfDate (_gaecbd ._eccbe .M .String ());if _cgbag !=nil {_fgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbag );
_bagae .Errors =append (_bagae .Errors ,_cgbag .Error ());continue ;};_bagae .Date =_fgec ;};_bagae .ContactInfo =_gaecbd ._eccbe .ContactInfo .Decoded ();_bagae .Location =_gaecbd ._eccbe .Location .Decoded ();_bagae .Fields =_faacg .Fields ;_fece =append (_fece ,_bagae );
};return _fece ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ae .PdfObject ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_cfff *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_afefa :=func (_edeb float64 )float64 {if _edeb >=6.0/29{return _edeb *_edeb *_edeb ;};return 108.0/841*(_edeb -4.0/29.0);};_cccaa ,_fbbd :=color .(*PdfColorLab );if !_fbbd {_fgb .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_cccaa .L ();AStar :=_cccaa .A ();BStar :=_cccaa .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_cfff .WhitePoint [0]*_afefa (L );Y :=_cfff .WhitePoint [1]*_afefa (M );Z :=_cfff .WhitePoint [2]*_afefa (N );_edag :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dfggf :=-0.969256*X +1.875992*Y +0.041556*Z ;_cdec :=0.055648*X +-0.204043*Y +1.057311*Z ;_edag =_ce .Min (_ce .Max (_edag ,0),1.0);
_dfggf =_ce .Min (_ce .Max (_dfggf ,0),1.0);_cdec =_ce .Min (_ce .Max (_cdec ,0),1.0);return NewPdfColorDeviceRGB (_edag ,_dfggf ,_cdec ),nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _ae .PdfObject ;Movie _ae .PdfObject ;A _ae .PdfObject ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_ae .PdfObjectInteger ;TilingType *_ae .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_ae .PdfObjectFloat ;YStep *_ae .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_ae .PdfObjectArray ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_cegb *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_ae .StreamEncoder ,error ){_dfgdd ,_ccgf :=_cegb ._ccdf .(*_ae .PdfObjectStream );if !_ccgf {_fgb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cegb ._ccdf );
return nil ,nil ,_ae .ErrTypeError ;};_gbdac ,_fcba :=_ae .DecodeStream (_dfgdd );if _fcba !=nil {_fgb .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_fcba );
return nil ,nil ,_fcba ;};_eddga ,_fcba :=_ae .NewEncoderFromStream (_dfgdd );if _fcba !=nil {_fgb .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_fcba );
return nil ,nil ,_fcba ;};return _gbdac ,_eddga ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_dgcf *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_dgcf .HiVal )};};

// GetDescent returns the Descent of the font `descriptor`.
func (_fdgdg *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _ae .GetNumberAsFloat (_fdgdg .Descent );};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_deee *PdfWriter )SetOpenAction (dest _ae .PdfObject )error {if dest ==nil ||_ae .IsNullObject (dest ){return nil ;};_deee ._gefce .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _deee .addObjects (dest );};var (CourierName =_dde .CourierName ;
CourierBoldName =_dde .CourierBoldName ;CourierObliqueName =_dde .CourierObliqueName ;CourierBoldObliqueName =_dde .CourierBoldObliqueName ;HelveticaName =_dde .HelveticaName ;HelveticaBoldName =_dde .HelveticaBoldName ;HelveticaObliqueName =_dde .HelveticaObliqueName ;
HelveticaBoldObliqueName =_dde .HelveticaBoldObliqueName ;SymbolName =_dde .SymbolName ;ZapfDingbatsName =_dde .ZapfDingbatsName ;TimesRomanName =_dde .TimesRomanName ;TimesBoldName =_dde .TimesBoldName ;TimesItalicName =_dde .TimesItalicName ;TimesBoldItalicName =_dde .TimesBoldItalicName ;
);const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);

// ToPdfObject implements interface PdfModel.
func (_fcc *PdfAction )ToPdfObject ()_ae .PdfObject {_ad :=_fcc ._bac ;_gg :=_ad .PdfObject .(*_ae .PdfObjectDictionary );_gg .Clear ();_gg .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_gg .SetIfNotNil ("\u0053",_fcc .S );
_gg .SetIfNotNil ("\u004e\u0065\u0078\u0074",_fcc .Next );return _ad ;};

// GetStructRoot gets the StructTreeRoot object
func (_beeac *PdfPage )GetStructTreeRoot ()(*_ae .PdfObject ,bool ){_bfgae ,_fbfeb :=_beeac ._fadgc .GetCatalogStructTreeRoot ();return &_bfgae ,_fbfeb ;};

// ToPdfObject implements interface PdfModel.
func (_fcdg *PdfAnnotationSquare )ToPdfObject ()_ae .PdfObject {_fcdg .PdfAnnotation .ToPdfObject ();_ggcd :=_fcdg ._gggg ;_beda :=_ggcd .PdfObject .(*_ae .PdfObjectDictionary );if _fcdg .PdfAnnotationMarkup !=nil {_fcdg .PdfAnnotationMarkup .appendToPdfDictionary (_beda );
};_beda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_beda .SetIfNotNil ("\u0042\u0053",_fcdg .BS );_beda .SetIfNotNil ("\u0049\u0043",_fcdg .IC );_beda .SetIfNotNil ("\u0042\u0045",_fcdg .BE );
_beda .SetIfNotNil ("\u0052\u0044",_fcdg .RD );return _ggcd ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ab :=NewPdfAction ();_dbb :=&PdfActionLaunch {};_dbb .PdfAction =_ab ;_ab .SetContext (_dbb );return _dbb ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _ae .PdfObjectName ;};

// SetReason sets the `Reason` field of the signature.
func (_bgcfd *PdfSignature )SetReason (reason string ){_bgcfd .Reason =_ae .MakeEncodedString (reason ,true );};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_ada :=NewPdfAction ();_ega :=&PdfActionRendition {};_ega .PdfAction =_ada ;_ada .SetContext (_ega );return _ega ;};

// ToPdfObject implements interface PdfModel.
func (_gegf *PdfAnnotationWatermark )ToPdfObject ()_ae .PdfObject {_gegf .PdfAnnotation .ToPdfObject ();_fdeb :=_gegf ._gggg ;_eegc :=_fdeb .PdfObject .(*_ae .PdfObjectDictionary );_eegc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_eegc .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_gegf .FixedPrint );return _fdeb ;};

// GetCerts returns the signature certificate chain.
func (_eeeab *PdfSignature )GetCerts ()([]*_ddc .Certificate ,error ){var _gdcaa []func ()([]*_ddc .Certificate ,error );switch _afbac ,_ :=_ae .GetNameVal (_eeeab .SubFilter );_afbac {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_gdcaa =append (_gdcaa ,_eeeab .extractChainFromPKCS7 ,_eeeab .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_gdcaa =append (_gdcaa ,_eeeab .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_gdcaa =append (_gdcaa ,_eeeab .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_afbac );};for _ ,_aabed :=range _gdcaa {_eeggg ,_gffcc :=_aabed ();if _gffcc !=nil {return nil ,_gffcc ;
};if len (_eeggg )> 0{return _eeggg ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_agceeb *PdfShadingType1 )ToPdfObject ()_ae .PdfObject {_agceeb .PdfShading .ToPdfObject ();_gfcb ,_afbcd :=_agceeb .getShadingDict ();if _afbcd !=nil {_fgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _agceeb .Domain !=nil {_gfcb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_agceeb .Domain );};if _agceeb .Matrix !=nil {_gfcb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_agceeb .Matrix );};if _agceeb .Function !=nil {if len (_agceeb .Function )==1{_gfcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agceeb .Function [0].ToPdfObject ());
}else {_efaef :=_ae .MakeArray ();for _ ,_eada :=range _agceeb .Function {_efaef .Append (_eada .ToPdfObject ());};_gfcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efaef );};};return _agceeb ._dgbdcg ;};func (_fdfg *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _fdfg ._cdge };


// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_eabeb []byte ;_fafff []uint32 ;_aefcg *_ae .PdfObjectStream ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_efggd *PdfShadingPatternType2 )ToPdfObject ()_ae .PdfObject {_efggd .PdfPattern .ToPdfObject ();_fgcga :=_efggd .getDict ();if _efggd .Shading !=nil {_fgcga .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_efggd .Shading .ToPdfObject ());};if _efggd .Matrix !=nil {_fgcga .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_efggd .Matrix );
};if _efggd .ExtGState !=nil {_fgcga .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_efggd .ExtGState );};return _efggd ._ccdf ;};func (_ebfea *PdfAcroForm )fillImageWithAppearance (_cbcf FieldImageProvider ,_ebcc FieldAppearanceGenerator )error {if _ebfea ==nil {return nil ;
};_degee ,_gdbe :=_cbcf .FieldImageValues ();if _gdbe !=nil {return _gdbe ;};for _ ,_fdecf :=range _ebfea .AllFields (){_adagg :=_fdecf .PartialName ();_cgege ,_cdffca :=_degee [_adagg ];if !_cdffca {if _fcdec ,_bgcb :=_fdecf .FullName ();_bgcb ==nil {_cgege ,_cdffca =_degee [_fcdec ];
};};if !_cdffca {_fgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_adagg );
continue ;};switch _ggdee :=_fdecf .GetContext ().(type ){case *PdfFieldButton :if _ggdee .IsPush (){_ggdee .SetFillImage (_cgege );};};if _ebcc ==nil {continue ;};for _ ,_cbedg :=range _fdecf .Annotations {_cdcf ,_bcdee :=_ebcc .GenerateAppearanceDict (_ebfea ,_fdecf ,_cbedg );
if _bcdee !=nil {return _bcdee ;};_cbedg .AP =_cdcf ;_cbedg .ToPdfObject ();};};return nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_dafec :=&XObjectImage {};_bcfff :=&_ae .PdfObjectStream {};_bcfff .PdfObjectDictionary =_ae .MakeDict ();_dafec ._facff =_bcfff ;return _dafec ;};func (_dgef *Image )resampleLowBits (_dedc []uint32 ){_bgaeb :=_fae .BytesPerLine (int (_dgef .Width ),int (_dgef .BitsPerComponent ),_dgef .ColorComponents );
_cdbdb :=make ([]byte ,_dgef .ColorComponents *_bgaeb *int (_dgef .Height ));_acabf :=int (_dgef .BitsPerComponent )*_dgef .ColorComponents *int (_dgef .Width );_dfcaa :=uint8 (8);var (_bbff ,_bcfb int ;_edebb uint32 ;);for _egbaa :=0;_egbaa < int (_dgef .Height );
_egbaa ++{_bcfb =_egbaa *_bgaeb ;for _debg :=0;_debg < _acabf ;_debg ++{_edebb =_dedc [_bbff ];_dfcaa -=uint8 (_dgef .BitsPerComponent );_cdbdb [_bcfb ]|=byte (_edebb )<<_dfcaa ;if _dfcaa ==0{_dfcaa =8;_bcfb ++;};_bbff ++;};};_dgef .Data =_cdbdb ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _ae .PdfObject )(*PdfFilespec ,error ){_acdbg :=&PdfFilespec {};var _fagec *_ae .PdfObjectDictionary ;if _aeba ,_daee :=_ae .GetIndirect (obj );_daee {_acdbg ._acaa =_aeba ;_bfae ,_dfea :=_ae .GetDict (_aeba .PdfObject );
if !_dfea {_fgb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_ae .ErrTypeError ;};_fagec =_bfae ;}else if _fggfb ,_afag :=_ae .GetDict (obj );
_afag {_acdbg ._acaa =_fggfb ;_fagec =_fggfb ;}else {_fgb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_ae .ErrTypeError ;};if _fagec ==nil {_fgb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ed .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fdec :=_fagec .Get ("\u0054\u0079\u0070\u0065");_fdec !=nil {_gecf ,_accd :=_fdec .(*_ae .PdfObjectName );if !_accd {_fgb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fdec );
}else {if *_gecf !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_fgb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_gecf );
};};};if _befd :=_fagec .Get ("\u0046\u0053");_befd !=nil {_acdbg .FS =_befd ;};if _fgaf :=_fagec .Get ("\u0046");_fgaf !=nil {_acdbg .F =_fgaf ;};if _eded :=_fagec .Get ("\u0055\u0046");_eded !=nil {_acdbg .UF =_eded ;};if _fceb :=_fagec .Get ("\u0044\u004f\u0053");
_fceb !=nil {_acdbg .DOS =_fceb ;};if _dbfdf :=_fagec .Get ("\u004d\u0061\u0063");_dbfdf !=nil {_acdbg .Mac =_dbfdf ;};if _geac :=_fagec .Get ("\u0055\u006e\u0069\u0078");_geac !=nil {_acdbg .Unix =_geac ;};if _ddcbd :=_fagec .Get ("\u0049\u0044");_ddcbd !=nil {_acdbg .ID =_ddcbd ;
};if _aafa :=_fagec .Get ("\u0056");_aafa !=nil {_acdbg .V =_aafa ;};if _gcdeg :=_fagec .Get ("\u0045\u0046");_gcdeg !=nil {_acdbg .EF =_gcdeg ;};if _aaef :=_fagec .Get ("\u0052\u0046");_aaef !=nil {_acdbg .RF =_aaef ;};if _bgada :=_fagec .Get ("\u0044\u0065\u0073\u0063");
_bgada !=nil {_acdbg .Desc =_bgada ;};if _efeb :=_fagec .Get ("\u0043\u0049");_efeb !=nil {_acdbg .CI =_efeb ;};if _dcdf :=_fagec .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_dcdf !=nil {_acdbg .AFRelationship =_dcdf ;
};return _acdbg ,nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_agcadd *PdfPageResources )SetXObjectFormByName (keyName _ae .PdfObjectName ,xform *XObjectForm )error {_efgde :=xform .ToPdfObject ().(*_ae .PdfObjectStream );_gbae :=_agcadd .SetXObjectByName (keyName ,_efgde );return _gbae ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_dcbaa *PdfShading )GetContext ()PdfModel {return _dcbaa ._gcge };

// String returns a string representation of the field.
func (_beeaf *PdfField )String ()string {if _ddacf ,_ceedc :=_beeaf .ToPdfObject ().(*_ae .PdfIndirectObject );_ceedc {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_beeaf ._cccf ,_ddacf .PdfObject .String ());};return "";};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_afgaa *PdfRectangle )Normalize (){if _afgaa .Llx > _afgaa .Urx {_afgaa .Llx ,_afgaa .Urx =_afgaa .Urx ,_afgaa .Llx ;};if _afgaa .Lly > _afgaa .Ury {_afgaa .Lly ,_afgaa .Ury =_afgaa .Ury ,_afgaa .Lly ;};};func (_fbgc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};
func _gcdb (_ecaa _ae .PdfObject )(*PdfColorspaceLab ,error ){_adea :=NewPdfColorspaceLab ();if _gbbfa ,_dcabg :=_ecaa .(*_ae .PdfIndirectObject );_dcabg {_adea ._cdab =_gbbfa ;};_ecaa =_ae .TraceToDirectObject (_ecaa );_bcea ,_becdd :=_ecaa .(*_ae .PdfObjectArray );
if !_becdd {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcea .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_ecaa =_ae .TraceToDirectObject (_bcea .Get (0));_eadcd ,_becdd :=_ecaa .(*_ae .PdfObjectName );if !_becdd {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_eadcd !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_ecaa =_ae .TraceToDirectObject (_bcea .Get (1));_gbfca ,_becdd :=_ecaa .(*_ae .PdfObjectDictionary );
if !_becdd {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_ecaa =_gbfca .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ecaa =_ae .TraceToDirectObject (_ecaa );_decgg ,_becdd :=_ecaa .(*_ae .PdfObjectArray );if !_becdd {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _decgg .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gefgf ,_eafc :=_decgg .GetAsFloat64Slice ();
if _eafc !=nil {return nil ,_eafc ;};_adea .WhitePoint =_gefgf ;_ecaa =_gbfca .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ecaa !=nil {_ecaa =_ae .TraceToDirectObject (_ecaa );_abcb ,_cged :=_ecaa .(*_ae .PdfObjectArray );if !_cged {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");
};if _abcb .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gdad ,_edgb :=_abcb .GetAsFloat64Slice ();
if _edgb !=nil {return nil ,_edgb ;};_adea .BlackPoint =_gdad ;};_ecaa =_gbfca .Get ("\u0052\u0061\u006eg\u0065");if _ecaa !=nil {_ecaa =_ae .TraceToDirectObject (_ecaa );_ceefa ,_afffd :=_ecaa .(*_ae .PdfObjectArray );if !_afffd {_fgb .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ceefa .Len ()!=4{_fgb .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_cgeb ,_bgba :=_ceefa .GetAsFloat64Slice ();if _bgba !=nil {return nil ,_bgba ;};_adea .Range =_cgeb ;};return _adea ,nil ;};func (_gega *fontFile )parseASCIIPart (_afeef []byte )error {if len (_afeef )< 2||string (_afeef [:2])!="\u0025\u0021"{return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_caedf ,_gcefc ,_gedec :=_gfebf (_afeef );if _gedec !=nil {return _gedec ;};_gdbg :=_effeb (_caedf );_gega ._edgbf =_gdbg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gega ._edgbf ==""{_fgb .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _gcefc !=""{_gdbga ,_dacf :=_aeca (_gcefc );if _dacf !=nil {return _dacf ;};_cfaed ,_dacf :=_ddd .NewCustomSimpleTextEncoder (_gdbga ,nil );if _dacf !=nil {_fgb .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_dacf );
return nil ;};_gega ._ecde =_cfaed ;};return nil ;};

// Items returns all children outline items.
func (_bfaec *OutlineItem )Items ()[]*OutlineItem {return _bfaec .Entries };

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_bgafe .Lock ();defer _bgafe .Unlock ();_fcbef =subject };func (_cabga *Image )getSuitableEncoder ()(_ae .StreamEncoder ,error ){var (_daedd ,_cdfa =int (_cabga .Width ),int (_cabga .Height );_feaff =make (map[string ]bool );
_bddgd =true ;_fggdfc =false ;_baacb =func ()*_ae .DCTEncoder {return _ae .NewDCTEncoder ()};_cfbae =func ()*_ae .DCTEncoder {_acdc :=_ae .NewDCTEncoder ();_acdc .BitsPerComponent =16;return _acdc };);for _ebcgc :=0;_ebcgc < _cdfa ;_ebcgc ++{for _ebdcga :=0;
_ebdcga < _daedd ;_ebdcga ++{_agbed ,_fbdff :=_cabga .ColorAt (_ebdcga ,_ebcgc );if _fbdff !=nil {return nil ,_fbdff ;};_gdbbc ,_ecded ,_ccbegf ,_bgac :=_agbed .RGBA ();if _bddgd &&(_gdbbc !=_ecded ||_gdbbc !=_ccbegf ||_ecded !=_ccbegf ){_bddgd =false ;
};if !_fggdfc {switch _agbed .(type ){case _ca .NRGBA :_fggdfc =_bgac > 0;};};_feaff [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_gdbbc ,_ecded ,_ccbegf )]=true ;if len (_feaff )> 2&&_fggdfc {return _cfbae (),nil ;};};};if _fggdfc ||len (_cabga ._cgde )> 0{return _ae .NewFlateEncoder (),nil ;
};if len (_feaff )<=2{_ffaad :=_cabga .ConvertToBinary ();if _ffaad !=nil {return nil ,_ffaad ;};return _ae .NewJBIG2Encoder (),nil ;};if _bddgd {return _baacb (),nil ;};if _cabga .ColorComponents ==1{if _cabga .BitsPerComponent ==1{return _ae .NewJBIG2Encoder (),nil ;
}else if _cabga .BitsPerComponent ==8{_gbdcc :=_ae .NewDCTEncoder ();_gbdcc .ColorComponents =1;return _gbdcc ,nil ;};}else if _cabga .ColorComponents ==3{if _cabga .BitsPerComponent ==8{return _baacb (),nil ;}else if _cabga .BitsPerComponent ==16{return _cfbae (),nil ;
};}else if _cabga .ColorComponents ==4{_gcad :=_cfbae ();_gcad .ColorComponents =4;return _gcad ,nil ;};return _cfbae (),nil ;};